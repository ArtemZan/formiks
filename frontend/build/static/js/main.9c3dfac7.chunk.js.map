{"version":3,"sources":["components/Toast.tsx","utils/NavigationClient.tsx","components/WelcomeName.tsx","pages/Explorer.tsx","authConfig.tsx","utils/MsGraphApiCall.ts","pages/Profile.tsx","components/AllowCookies.tsx","components/Layout.tsx","components/CreateBookmark.tsx","components/ProjectCard.tsx","pages/Projects/Explorer.tsx","pages/Projects/Editor.tsx","components/projects/cerov.tsx","components/projects/ermv.tsx","components/projects/erov.tsx","components/projects/elmv.tsx","components/projects/elov.tsx","components/projects/por.tsx","pages/Projects/Viewer.tsx","pages/Submissions/Viewer.tsx","components/DatePicker/utils/deepmerge.ts","components/DatePicker/utils/pick.ts","components/DatePicker/context/StylesContext.tsx","components/DatePicker/components/ActionButton.tsx","components/DatePicker/components/CloseButton.tsx","components/DatePicker/phrases.ts","components/DatePicker/utils/formatters.ts","components/DatePicker/context/DatepickerContext.tsx","components/DatePicker/components/Day.tsx","components/DatePicker/utils/getStateStyle.ts","components/DatePicker/components/Input.tsx","components/DatePicker/components/Month.tsx","components/DatePicker/components/ResetDatesButton.tsx","components/DatePicker/components/SelectedDate.tsx","components/DatePicker/Datepicker.tsx","components/DatePicker/DateRangeInput.tsx","components/DatePicker/DateSingleInput.tsx","pages/Submissions/TableExplorer.tsx","utils/utils.ts","components/EditableTableCell.tsx","pages/Submissions/Vendors.tsx","components/DropdownCard.tsx","pages/Dropdowns/Explorer.tsx","pages/Submissions/Tables/ProjectInformation.tsx","pages/Submissions/Tables/PurchaseOrder.tsx","pages/Submissions/Tables/CostActuals.tsx","pages/Submissions/Tables/SalesActuals.tsx","pages/Submissions/Tables/EurActuals.tsx","pages/Submissions/Tables/CostGlPostings.tsx","pages/Submissions/Tables/IncomeGlPostings.tsx","pages/Submissions/SVendors.tsx","App.tsx","index.tsx","api/rest/index.tsx","pages/Dropdowns/Editor.tsx"],"names":["Toast","props","w","bg","useColorModeValue","shadow","rounded","overflow","justifyContent","alignItems","type","as","IoMdCheckmarkCircle","BsLightningFill","MdError","AiFillInfoCircle","color","boxSize","mx","py","px","span","fontWeight","fontSize","title","div","message","CustomNavigationClient","history","url","options","a","relativePath","replace","window","location","origin","noHistory","this","push","NavigationClient","WelcomeName","accounts","useMsal","account","useAccount","useState","name","setName","useEffect","console","log","split","Explorer","msalInstance","getActiveAccount","loginRequest","scopes","graphConfig","getAccountInfo","acquireTokenSilent","response","headers","Headers","bearer","accessToken","append","method","fetch","then","json","catch","error","getUserPhoto","Authorization","blob","photoBlob","URL","createObjectURL","ProfileContent","instance","inProgress","graphData","setGraphData","undefined","userPhoto","setUserPhoto","InteractionStatus","None","e","InteractionRequiredAuthError","acquireTokenRedirect","JSON","stringify","alt","src","Profile","authRequest","interactionType","InteractionType","Redirect","authenticationRequest","CookiePreference","position","bottom","left","right","width","p","boxShadow","ml","mr","mb","borderRadius","zIndex","direction","base","md","textAlign","maxW","variant","colorScheme","_hover","onClick","onAllow","localStorage","setItem","DesktopNav","useHistory","linkColor","linkHoverColor","popoverContentBgColor","isAuthenticated","useIsAuthenticated","spacing","NAV_ITEMS","GUEST_NAV_ITEMS","map","navItem","trigger","placement","href","textDecoration","label","children","border","minW","mt","child","DesktopSubNav","subLabel","role","display","align","transition","_groupHover","transform","opacity","justify","flex","h","ChevronRightIcon","MobileNav","closeMenu","MobileNavItem","useDisclosure","isOpen","onToggle","Link","ChevronDownIcon","in","animateOpacity","style","marginTop","pl","borderLeft","borderStyle","borderColor","Layout","cookieConsent","setCookieConsent","roles","setRoles","getItem","RestAPI","getRoles","data","sort","useColorMode","colorMode","toggleColorMode","minH","borderBottom","icon","Close","Hamburger","useBreakpointValue","fontFamily","cursor","Moon","Sun","size","hasArrow","join","marginLeft","m","sessionStorage","clear","setTimeout","loginRedirect","xl","CreateBookmark","matchingProjects","setMatchingProjects","availableTags","setAvailableTags","setTitle","selectedTags","setSelectedTags","tags","projects","project","tag","indexOf","some","item","includes","onClose","value","onChange","event","target","placeholder","styles","control","state","background","minHeight","option","isDisabled","isFocused","isSelected","backgroundColor","menu","multiValue","multiValueLabel","multiValueRemove","theme","colors","primary","isMulti","values","element","float","length","bookmarks","bookmark","createBookmark","addBookmark","ProjectCard","id","whiteSpace","textOverflow","description","author","moment","updated","format","toUpperCase","setProjects","setBookmarks","createBookmarkModal","setCreateBookMarkModal","getBookmarks","getProjects","old","lg","index","onContextMenu","preventDefault","deleteBookmark","filter","b","isAdmin","Add","Editor","isSubmitting","setIsSubmitting","created","Date","statuses","defaultStatus","components","code","setProject","create","match","params","getProject","goBack","prev","status","provided","singleValue","classNamePrefix","isClearable","rows","builder","basic","excelTable","advanced","file","premium","form","schema","isLoading","createProject","updateProject","toast","PH1","Companies","VendorsNames","CampaignChannel","TargetAudience","Budget","ExchangeRates","FiscalQuarter","Year","ProjectStartQuarter","Column","Table","HeaderCell","Cell","Cerov","country","requestorsCompanyName","setRequestorsCompanyName","localExchangeRate","setLocalExchangeRate","campaignName","setCampaignName","campaignDescription","setCampaignDescription","targetAudience","setTargetAudience","campaignChannel","setCampaignChannel","vendorName","setVendorName","year","setYear","projectStartQuarter","setProjectStartQuarter","projectNumber","setProjectNumber","requestorsName","setRequestorsName","projectApproval","setProjectApproval","fiscalQuarter","setFiscalQuarter","organizingCompany","setOrganizingCompany","startDate","setStartDate","endDate","setEndDate","budgetSource","setBudgetSource","budgetApprovedByVendor","setBudgetApprovedByVendor","exchangeRates","setExchangeRates","estimatedIncomeBudgetCurrency","setEstimatedIncomeBudgetCurrency","estimatedCostsBudgetCurrency","setEstimatedCostsBudgetCurrency","netProfitTargetBudgetCurrency","setNetProfitTargetBudgetCurrency","estimatedIncome","setEstimatedIncome","estimatedCosts","setEstimatedCosts","netProfitTarget","setNetProfitTarget","companiesParticipating","setCompaniesParticipating","comments","setComments","vendor","setVendor","costBreakdown","setCostBreakdown","totalcbShare","setTotalcbShare","totalcbContribution","setTotalcbContribution","totalcbCosts","setTotalcbCosts","totalEstimatedCostsLC","setTotalEstimatedCostsLC","dropdownsIds","Promise","all","di","getDropdownValues","responses","submission","companyCode","requestorsCountry","currency","localCurrency","manufacturersFiscalQuarter","campaignStartDate","campaignEndDate","campaignBudgetsCurrency","campaignEstimatedIncomeBudgetsCurrency","toString","campaignEstimatedIncomeEur","toFixed","campaignEstimatedCostsEur","campaignNetProfitTargetEur","campaignEstimatedCostsBudgetsCurrency","campaignNetProfitTargetBudgetsCurrency","parseFloat","find","rate","vs","s","group","projectManager","productionProjectManager","creditor","creditorNumber","debitor","debitorNumber","manufacturer","manufacturerNumber","bu","businessUnit","ph","budgetCurrency","budgetAmount","localBudget","eurBudget","share","estimatedCostsCC","estimatedIncomeCC","estimatedCostsLC","estimatedCostsEUR","netProfitTargetVC","netProfitTargetLC","netProfitTargetEUR","companyName","c","forEach","countryCodeEMEA","countriesEMEA","contactEmail","mirrorProjectNumber","countryShare","contribution","countryBudgetContributionCC","countryCostEstimationCC","displayName","fetchDropdowns","forceUpdate","useReducer","x","company","totalShare","totalContribution","totalCosts","temp","row","isEqual","kreditor","debitorischer","hersteller","slice","menuPortalTarget","document","body","ler","defaultValue","disabled","selected","maxLength","resize","Uploader","action","draggable","lineHeight","customInput","date","dateFormat","bgColor","menuPortal","shouldUpdateScroll","hover","autoHeight","rowHeight","resizable","dataKey","rowData","getSubmissions","parentSubmissions","parentId","isUnique","pn","found","newSuffix","parseInt","projectId","parent","projectName","projectApprover","campaignCurrency","additionalInformation","projectType","vendorBudgetCurrency","vendorAmount","isNaN","vendorShare","estimatedResultCC","estimatedIncomeEUR","estimatedResultEUR","estimatedResultBC","countryBudgetContributionEur","countryCostEstimationEur","createSubmissionWithChildren","Ermv","vendorsNames","setVendorsNames","vendors","setVendors","setTotalVendorBudgetInLC","setTotalVendorBudgetInEUR","v","marketingResponsible","er","vendorBudgetAmount","totalBudgetEur","totalBudgetLC","totalCostsCC","totalIncomeCC","totalCostsLC","totalCostsEur","eb","lb","totalVendorBudgetInLC","totalVendorBudgetInEUR","totalVendorShare","totalEstimatedIncomeInCC","totalEstimatedCostsInCC","totalEstimatedCostsInLC","totalEstimatedCostsInEUR","totalNetProfitTargetInCC","totalNetProfitTargetInLC","totalNetProfitTargetInEUR","vbEur","t","invalid","Erov","Elmv","Elov","sapCreditorNumber","setProjectName","serviceProvider","setServiceProvider","services","setServices","serviceType","netValueLC","netValuePO","poCurrencyCode","netValueEUR","externalPurchaseOrderNumber","portalId","purchaseOrderDate","orderingPerson","approvingPerson","contactPerson","contactDetails","subs","targetId","sub","updateSubmissionPartial","service","createSubmission","netValueOfServiceOrderedLC","netValuePOC","purchaseOrderCurrency","netValueEur","Viewer","predefinedProject","setPredefinedProject","setForm","pr","divider","onSubmit","formio","getSubmissionWithChildren","isObject","obj","Object","getPrototypeOf","prototype","call","merge","objects","reduce","result","current","keys","key","Array","isArray","from","Set","concat","pick","ret","emptyStylesObject","actionButton","arrowIcon","buttonsWrapper","closeButton","datepickerContainer","dateRangeInputContainer","dateRangeInputDivider","day","normal","rangeHover","first","firstOrLast","last","dayContainer","inputComponentIcon","active","inputComponentInput","inputComponentInputAddon","inputComponentInputGroup","monthContainer","monthDayGrid","monthMonthLabel","monthsWrapper","monthWeekdayLabel","resetDatesButton","selectDateContainer","selectDateDateText","selectDateText","datepickerFooter","StylesContext","createContext","overwriteDefaultStyles","StylesProvider","Provider","useStyleProps","inlineStyles","useContext","filteredStyles","ActionButton","IconComponent","ChevronLeftIcon","styleProps","ChevronUpIcon","CloseButton","top","datepickerPhrases","datepickerStartDatePlaceholder","datepickerStartDateLabel","datepickerEndDatePlaceholder","datepickerEndDateLabel","resetDates","close","dateRangeInputPhrases","startDateAriaLabel","endDateAriaLabel","startDatePlaceholder","endDatePlaceholder","dateSingleInputPhrases","dateAriaLabel","datePlaceholder","dayLabelFormatFn","defaultDisplayFormat","defaultBase","focusedInput","onDayRender","displayFormat","phrases","defaultFormatters","monthLabelFormat","monthLabelFormatFn","weekdayLabelFormat","weekdayLabelFormatFn","dayLabelFormat","datepickerContextDefaultValue","numberOfMonths","activeMonths","firstDayOfWeek","focusedDate","hoveredDate","goToDate","goToNextMonths","goToNextMonthsByOneMonth","goToNextYear","goToPreviousMonths","goToPreviousMonthsByOneMonth","goToPreviousYear","isDateBlocked","isDateFocused","isDateHovered","isDateSelected","isEndDate","isFirstOrLastSelectedDate","isStartDate","onDateFocus","onDateHover","onDateSelect","onResetDates","DatepickerContext","React","useDatepickerContext","DatepickerProvider","getColor","isWithinHoverRange","isFirst","isLast","Day","dayRef","useRef","dayProps","useDay","onKeyDown","onMouseEnter","tabIndex","isSelectedStartOrEnd","disabledDate","height","minWidth","textColor","borderRightRadius","borderLeftRadius","containerStyle","useMemo","buttonStyle","ref","toDateString","getStateStyle","isActive","Input","forwardRef","inputRef","disableAccessibility","iconComponent","CalendarIcon","showCalendarIcon","allowEditableInputs","inputProps","searchString","setSearchString","htmlFor","isReadOnly","autoComplete","onFocus","_e","dateValue","clearTimeout","parsedDate","parseDate","isValidDate","getDate","Month","month","rowGap","useMonth","days","weekdayLabels","monthLabel","columns","weekdayLabel","dayLabel","ResetDatesButton","text","Repeat","onMouseUp","currentTarget","blur","SelectedDate","paddingBottom","getInputValue","Datepicker","changeActiveMonthOnSelect","exactMinBookingDays","initialVisibleMonth","maxBookingDate","minBookingDate","minBookingDays","onDatesChange","showClose","showResetDates","showSelectedDates","customStyles","unavailableDates","dp","useDatepicker","useImperativeHandle","monthGridRef","scrollTopToMonthGrid","vertical","scrollTop","_goToNextMonths","_goToPreviousMonths","isMobile","my","pt","START_DATE","ArrowForward","END_DATE","isInline","padding","onMouseLeave","DateRangeInput","endDateProp","startDateProp","focusedInputProp","endShowCalendarIcon","showDivider","startShowCalendarIcon","onFocusChange","startIcon","startId","startName","startPlaceholder","startRef","endId","endName","endRef","endIcon","endPlaceholder","datepickerRef","datepickerWrapperRef","setFocusedInput","handleOnFocusChange","_focusedInput","onClickOutsideHandler","contains","handleInputChange","addEventListener","removeEventListener","alignSelf","DateSingleInput","dateProp","showDatepicker","showDatepickerProp","showResetDate","setDate","setShowDatepicker","show","ColumnGroup","filterTypes","textfield","textarea","number","select","datetime","TableExplorer","submissions","setSubmissions","filters","setFilters","displayedColumns","setDisplayedColumns","filteredSubmissions","setFilteredSubmissions","subm","reverse","filtered","valid","selectedValues","column","filterValue","exists","fv","TagPicker","cleanable","paddingTop","component","input","block","pb","valuesField","_","splice","tv","readOnly","charAt","headerHeight","isTree","defaultExpandAllRows","bordered","cellBordered","rowKey","onExpandChange","renderTreeToggle","header","verticalAlign","numberWithCommas","numRegex","EditableTableCell","cellValue","editing","prevProps","initialValue","setState","d","bold","className","readonly","autoFocus","execCommand","onKeyPress","keyCode","which","string","String","fromCharCode","test","defaultPrevented","onBlur","onUpdate","columnKey","Number","toDate","onCalendarClose","menuIsOpen","paddingLeft","outlineWidth","dv","loadOptions","isSearchable","cv","Component","ProjectType","styled","SapStatus","identifier","dropdown","DisplayedColumnsList","DisplayedColumnsListOptions","flat","VendorsTable","Map","sourceSubmissions","setSourceSubmissions","currentUser","setCurrentUser","totalCostAmount","setTotalCostAmount","totalCostAmountCostGL","setTotalCostAmountCostGL","totalCostAmountLC","setTotalCostAmountLC","totalCostAmountLCCostGL","setTotalCostAmountLCCostGL","totalIncomeAmount","setTotalIncomeAmount","totalIncomeAmountLCIncomeGL","setTotalIncomeAmountLCIncomeGL","totalIncomeAmountIncomeGL","setTotalIncomeAmountIncomeGL","totalIncomeAmountLC","setTotalIncomeAmountLC","totalCostsInTool","setTotalCostsInTool","totalIncomeInTool","setTotalIncomeInTool","totalCostsInToolEUR","setTotalCostsInToolEUR","totalIncomeInToolEUR","setTotalIncomeInToolEUR","tableWidth","setTableWidth","filteredCommunicationSubmissions","setFilteredCommunicationSubmissions","communicationSubmissions","setCommunicationSubmissions","onlyMine","setOnlyMine","scrollLeft","setScrollLeft","defaultColumnsWidth","onScroll","useCallback","args","totalRequests","setTotalRequests","ignored","tcit","tiit","tcite","tiite","tca","tcal","tcacgl","tia","tial","tcalcgl","tialigl","tiaigl","costAmountEUR","costAmountEURCostGL","costAmountLC","incomeAmountEURSI","incomeAmountLCSI","costAmountLCCostGL","incomeAmountLCIncomeGL","incomeAmountEurIncomeGL","filteredMap","cFilteredMap","filteredCommunication","f","parse","columnValue","columnLabel","get","endsWith","setHours","set","rowRenderer","cells","visibleIndices","offset","netOffsets","offsetSum","leftBound","rightBound","col","columnOffset","colIdx","getVisibleColumnIndices","startIndex","visibleCells","i","partialUpdate","path","shift","handleCellUpdate","submissionIndex","findIndex","handleCommunicationCellUpdate","datePath","deleteSubmission","submissionId","tbd","callSap","callSapSubmission","dangerouslySetInnerHTML","__html","handleResize","columnWidth","dw","sd","visibilityController","vSubs","ss","cSubs","totalIncomeLC","totalIncomeEUR","totalCostsEUR","totalCostsTool","totalIncomeTool","cs","incomeAmountEURIncomeGL","tableCells","frozen","FrozenDirection","LEFT","cellRenderer","hidden","rowIndex","cellData","open","headerRendererForTable","headerIndex","cell","cloneElement","init","ID","Parent","Group","Created","Title","Author","formattedData","doc","unshift","ws","XLSX","json_to_sheet","skipHeader","wch","wb","Sheets","SheetNames","excelBuffer","bookType","Blob","FileSaver","isLazy","onResize","onColumnResizeEnd","overscanRowCount","ignoreFunctionInColumnCompare","expandColumnKey","fixed","headerRenderer","headerClassName","frozenData","unflatten","statusLMD","mi","documentNumberSI","activityIdForPortalVendors","additionalInformationLMD","every","invoiceTypeLMD","trim","dunningStop","paymentMethodLMD","targetSubmissionIndex","is","ts","tsi","invoicingDateLMD","vendorLMD","materialNumberLMD","alsoMarketingProjectNumberLMD","invoiceTextLMD","amountLMD","documentCurrencyLMD","dunningStopLMD","sendToLMD","depositNumberLMD","today","overlayRenderer","CheckTreePicker","defaultExpandAll","DropdownCard","lastSync","fromNow","dropdowns","setDropdowns","getDropdowns","ProjectInformationTable","gprops","defaultExpandedRowKeys","PurchaseOrderTable","CostActualsTable","SalesActualsTable","EurActualsTable","CostGlPostingsTable","IncomeGlPostingsTable","SVendorsTable","selectedSubmission","setSelectedSubmission","ds","App","pca","navigationClient","setAdminRole","setNavigationClient","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","Slide","exact","render","Vendors","SVendors","GlobalStyles","css","PublicClientApplication","auth","clientId","redirectUri","postLogoutRedirectUri","getAllAccounts","setActiveAccount","addEventCallback","eventType","EventType","LOGIN_SUCCESS","payload","axios","interceptors","request","use","config","idToken","ReactDOM","extendTheme","global","mode","getElementById","baseUrl","usersUrl","projectsUrl","bookmarksUrl","submissionsUrl","dropdownsUrl","post","put","delete","URLSearchParams","columnsWidth","urlSegments","debug","setDebug","rawValues","setRawValues","processor","syncInterval","private","setDropdown","getDropdown","min","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","tabSize","enableSnippets","eval","createDropdown","updateDropdown"],"mappings":"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","file":"static/js/main.9c3dfac7.chunk.js","sourcesContent":["import { Box, chakra, Flex, Icon, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {\n  AiFillInfoCircle,\n  BsLightningFill,\n  IoMdCheckmarkCircle,\n  MdError,\n} from \"react-icons/all\";\n\nexport declare type ToastType = \"info\" | \"success\" | \"warning\" | \"error\";\n\ninterface Props {\n  title: string;\n  message: any;\n  type: ToastType;\n}\n\nconst Toast: React.FunctionComponent<Props> = (props) => {\n  return (\n    <Flex\n      w=\"350px\"\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      shadow=\"md\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n    >\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        w={12}\n        bg={\n          props.type === \"success\"\n            ? \"green.500\"\n            : props.type === \"error\"\n            ? \"red.500\"\n            : props.type === \"warning\"\n            ? \"yellow.500\"\n            : \"blue.500\"\n        }\n      >\n        <Icon\n          as={\n            props.type === \"success\"\n              ? IoMdCheckmarkCircle\n              : props.type === \"error\"\n              ? BsLightningFill\n              : props.type === \"warning\"\n              ? MdError\n              : AiFillInfoCircle\n          }\n          color=\"white\"\n          boxSize={6}\n        />\n      </Flex>\n\n      <Box mx={-3} py={2} px={4}>\n        <Box mx={3}>\n          <chakra.span\n            color={\n              props.type === \"success\"\n                ? \"green.500\"\n                : props.type === \"error\"\n                ? \"red.500\"\n                : props.type === \"warning\"\n                ? \"yellow.500\"\n                : \"blue.500\"\n            }\n            fontWeight=\"bold\"\n            fontSize=\"md\"\n          >\n            {props.title}\n          </chakra.span>\n          <chakra.div color={\"gray.600\"} fontSize=\"sm\">\n            {props.message}\n          </chakra.div>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Toast;\n","import { NavigationClient, NavigationOptions } from \"@azure/msal-browser\";\nimport { History } from \"history\";\n\n/**\n * This is an example for overriding the default function MSAL uses to navigate to other urls in your webpage\n */\nexport class CustomNavigationClient extends NavigationClient {\n  private history: History;\n\n  constructor(history: History) {\n    super();\n    this.history = history;\n  }\n\n  /**\n   * Navigates to other pages within the same web application\n   * You can use the useHistory hook provided by react-router-dom to take advantage of client-side routing\n   * @param url\n   * @param options\n   */\n  async navigateInternal(url: string, options: NavigationOptions) {\n    const relativePath = url.replace(window.location.origin, \"\");\n    if (options.noHistory) {\n      this.history.replace(relativePath);\n    } else {\n      this.history.push(relativePath);\n    }\n\n    return false;\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { useMsal, useAccount } from \"@azure/msal-react\";\n\nconst WelcomeName = () => {\n  const { accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    if (account && account.name) {\n      console.log(account);\n      setName(account.name.split(\" \")[0]);\n    } else {\n      setName(\"\");\n    }\n  }, [account]);\n\n  if (name) {\n    return <p>Welcome, {name}</p>;\n  } else {\n    return null;\n  }\n};\n\nexport default WelcomeName;\n","import { InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport WelcomeName from \"../components/WelcomeName\";\nimport { msalInstance } from \"../index\";\n\nexport function Explorer() {\n  console.log(msalInstance.getActiveAccount());\n  return (\n    <>\n      <AuthenticatedTemplate>\n        <WelcomeName />\n      </AuthenticatedTemplate>\n      <UnauthenticatedTemplate>unauthenticated</UnauthenticatedTemplate>\n    </>\n  );\n}\n\nexport default Explorer;\n","import { Configuration, LogLevel, PopupRequest } from \"@azure/msal-browser\";\n\n// Config object to be passed to Msal on creation\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: \"c6c34032-5419-4fdf-bbd4-a863814323b7\",\n    redirectUri: \"/\",\n    postLogoutRedirectUri: \"/\",\n  },\n};\n\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest: PopupRequest = {\n  scopes: [\"User.Read\"],\n};\n\n// Add here the endpoints for MS Graph API services you would like to use.\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n};\n","import { loginRequest, graphConfig } from \"../authConfig\";\nimport { msalInstance } from \"../index\";\n\nexport async function getAccountInfo() {\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    return;\n  }\n\n  const response = await msalInstance.acquireTokenSilent({\n    ...loginRequest,\n    account: account,\n  });\n\n  const headers = new Headers();\n  const bearer = `Bearer ${response.accessToken}`;\n\n  headers.append(\"Authorization\", bearer);\n\n  const options = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(graphConfig.graphMeEndpoint, options)\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n}\n\nexport async function getUserPhoto() {\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    return;\n  }\n\n  const response = await msalInstance.acquireTokenSilent({\n    ...loginRequest,\n    account: account,\n  });\n\n  var url = \"https://graph.microsoft.com/v1.0/me/photo/$value\";\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${response.accessToken}`,\n      \"Content-Type\": \"image/jpeg\",\n    },\n  })\n    .then((response) => response.blob())\n    .then((photoBlob) => URL.createObjectURL(photoBlob));\n}\n","import { useEffect, useState } from \"react\";\n\n// Msal imports\nimport { MsalAuthenticationTemplate, useMsal } from \"@azure/msal-react\";\nimport {\n  InteractionStatus,\n  InteractionType,\n  InteractionRequiredAuthError,\n  AccountInfo,\n} from \"@azure/msal-browser\";\nimport { loginRequest } from \"../authConfig\";\nimport { getAccountInfo, getUserPhoto } from \"../utils/MsGraphApiCall\";\n\nexport type GraphData = {\n  displayName: string;\n  jobTitle: string;\n  mail: string;\n  businessPhones: string[];\n  officeLocation: string;\n};\n\nconst ProfileContent = () => {\n  const { instance, inProgress } = useMsal();\n\n  const [graphData, setGraphData] = useState<null | GraphData>(null);\n  const [userPhoto, setUserPhoto] = useState<undefined | string>(undefined);\n\n  useEffect(() => {\n    if (!userPhoto && inProgress === InteractionStatus.None) {\n      getUserPhoto().then((response) => setUserPhoto(response));\n    }\n    if (!graphData && inProgress === InteractionStatus.None) {\n      getAccountInfo()\n        .then((response) => setGraphData(response))\n        .catch((e) => {\n          if (e instanceof InteractionRequiredAuthError) {\n            instance.acquireTokenRedirect({\n              ...loginRequest,\n              account: instance.getActiveAccount() as AccountInfo,\n            });\n          }\n        });\n    }\n  }, [inProgress, graphData, userPhoto, instance]);\n\n  return (\n    <div>\n      {JSON.stringify(graphData)} <img alt=\"\" src={userPhoto} />\n    </div>\n  );\n};\n\nexport function Profile() {\n  const authRequest = {\n    ...loginRequest,\n  };\n\n  return (\n    <MsalAuthenticationTemplate\n      interactionType={InteractionType.Redirect}\n      authenticationRequest={authRequest}\n      //   errorComponent={ErrorComponent}\n      //   loadingComponent={Loading}\n    >\n      <ProfileContent />\n    </MsalAuthenticationTemplate>\n  );\n}\n","import React from \"react\";\nimport { Stack, Text, Button } from \"@chakra-ui/react\";\n\nexport default function CookiePreference(props: any) {\n  return (\n    <Stack\n      position=\"fixed\"\n      bottom=\"0\"\n      left=\"0\"\n      right=\"0\"\n      width=\"90%\"\n      p=\"6\"\n      boxShadow=\"lg\"\n      bg=\"white\"\n      ml=\"auto\"\n      mr=\"auto\"\n      mb={\"3vh\"}\n      borderRadius=\"md\"\n      zIndex={10000}\n    >\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Text fontWeight=\"semibold\">Your Privary</Text>\n      </Stack>\n\n      <Stack\n        direction={{ base: \"column\", md: \"row\" }}\n        justifyContent=\"space-between\"\n      >\n        <Text fontSize={{ base: \"sm\" }} textAlign={\"left\"} maxW={\"6xl\"}>\n          We use cookies and similar technologies to help personalise content\n          and provide a better experience. By clicking OK or turning an option\n          on in Cookie Preferences, you agree to this, as outlined in our Cookie\n          Policy. To change preferences or withdraw consent, please update your\n          Cookie Preferences.\n        </Text>\n        <Stack direction={{ base: \"column\", md: \"row\" }}>\n          <Button variant=\"outline\" colorScheme=\"twitter\">\n            Cookie Preferences\n          </Button>\n          <Button\n            color={\"white\"}\n            bg={\"blue.400\"}\n            _hover={{\n              bg: \"blue.300\",\n            }}\n            onClick={() => {\n              props.onAllow();\n              localStorage.setItem(\"cookieConsent\", \"allowed\");\n            }}\n          >\n            Allow\n          </Button>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Link,\n  Avatar,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuGroup,\n  MenuItem,\n  MenuDivider,\n  HStack,\n  VStack,\n  useColorMode,\n  Center,\n  Tooltip,\n  PopoverArrow,\n} from \"@chakra-ui/react\";\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  MoonIcon,\n  SunIcon,\n} from \"@chakra-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useIsAuthenticated,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { FiChevronDown } from \"react-icons/all\";\nimport CookiePreference from \"./AllowCookies\";\nimport { msalInstance } from \"../index\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\nimport { getUserPhoto } from \"../utils/MsGraphApiCall\";\nimport { RestAPI } from \"../api/rest\";\nimport { loginRequest } from \"../authConfig\";\n\nfunction Layout(props: any) {\n  const { instance, inProgress } = useMsal();\n\n  const [userPhoto, setUserPhoto] = useState<undefined | string>(undefined);\n  const [cookieConsent, setCookieConsent] = useState(false);\n  const [roles, setRoles] = useState<string[]>([]);\n  const isAuthenticated = useIsAuthenticated();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cookieConsent\") === \"allowed\") {\n      setCookieConsent(true);\n    }\n    RestAPI.getRoles().then((response) => setRoles(response.data.sort()));\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    if (\n      isAuthenticated &&\n      !userPhoto &&\n      inProgress === InteractionStatus.None\n    ) {\n      getUserPhoto().then((response) => setUserPhoto(response));\n    }\n  }, [inProgress, userPhoto, instance, isAuthenticated]);\n\n  const { children } = props;\n  const { isOpen, onToggle } = useDisclosure();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Box minH=\"100vh\">\n      {!cookieConsent ? (\n        <CookiePreference\n          onAllow={() => {\n            setCookieConsent(true);\n            localStorage.setItem(\"cookieConsent\", \"allowed\");\n          }}\n        />\n      ) : null}\n\n      <Box>\n        <Flex\n          bg={useColorModeValue(\"white\", \"#21252A\")}\n          color={useColorModeValue(\"gray.600\", \"#ABB2BF\")}\n          minH={\"60px\"}\n          py={{ base: 2 }}\n          px={{ base: 4 }}\n          borderBottom={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n          align={\"center\"}\n        >\n          <Flex\n            flex={{ base: 1, md: \"auto\" }}\n            ml={{ base: -2 }}\n            display={{ base: \"flex\", md: \"none\" }}\n          >\n            <IconButton\n              onClick={onToggle}\n              icon={\n                isOpen ? (\n                  <CloseIcon w={3} h={3} />\n                ) : (\n                  <HamburgerIcon w={5} h={5} />\n                )\n              }\n              variant={\"ghost\"}\n              aria-label={\"Toggle Navigation\"}\n            />\n          </Flex>\n          <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n            <Text\n              mt={\"2px\"}\n              ml={{ base: \"0\", md: \"10px\" }}\n              textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\n              fontFamily={\"heading\"}\n              fontWeight=\"bold\"\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              cursor=\"pointer\"\n              onClick={() => {\n                history.push(\"/projects\");\n              }}\n              fontSize=\"lg\"\n            >\n              Formiks\n            </Text>\n\n            <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\n              <DesktopNav />\n            </Flex>\n          </Flex>\n\n          <Stack\n            flex={{ base: 1, md: 1 }}\n            justify={\"flex-end\"}\n            direction={\"row\"}\n            spacing={6}\n          >\n            <Button\n              display={{ base: \"none\", md: \"flex\" }}\n              variant=\"ghost\"\n              onClick={toggleColorMode}\n            >\n              {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n            </Button>\n            <AuthenticatedTemplate>\n              <Menu>\n                <MenuButton>\n                  <HStack>\n                    <Avatar src={userPhoto} mr={\"10px\"} size={\"sm\"} />\n                    <VStack\n                      display={{ base: \"none\", md: \"flex\" }}\n                      alignItems=\"flex-start\"\n                      spacing=\"1px\"\n                      ml={{ base: 0, md: \"2\" }}\n                    >\n                      <Text\n                        color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                        fontWeight={500}\n                        fontSize=\"sm\"\n                      >\n                        {msalInstance.getActiveAccount()?.name}\n                      </Text>\n\n                      <Text fontSize=\"xs\" color=\"gray.500\">\n                        <Tooltip hasArrow label=\"Search places\">\n                          {roles.join(\", \")}\n                        </Tooltip>\n                      </Text>\n                    </VStack>\n                    <Box display={{ base: \"none\", md: \"flex\" }}>\n                      <FiChevronDown style={{ marginLeft: \"5px\" }} />\n                    </Box>\n                  </HStack>\n                </MenuButton>\n\n                <MenuList\n                  // mt={4}\n                  m={0}\n                  mr={-3.0}\n                  bg={useColorModeValue(\"white\", \"#21252A\")}\n                  borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n                  boxShadow=\"none\"\n                  zIndex={2000000}\n                >\n                  <MenuGroup title=\"Profile\">\n                    <MenuItem onClick={() => {}}>My Account</MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuGroup title=\"Help\">\n                    <MenuItem onClick={() => {}}>Documentation</MenuItem>\n                    <MenuItem>Report a Bug</MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={async () => {\n                      // instance.logout();\n                      sessionStorage.clear();\n                      setTimeout(() => {\n                        window.location.href = \"/\";\n                      }, 1000);\n                    }}\n                  >\n                    Log Out\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            </AuthenticatedTemplate>\n            <UnauthenticatedTemplate>\n              <Button\n                fontSize={\"sm\"}\n                fontWeight={600}\n                color={\"white\"}\n                bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n                _hover={{\n                  bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n                }}\n                onClick={async () => {\n                  // history.push(\"/login\");\n                  await instance.loginRedirect();\n                  // await instance.acquireTokenPopup({\n                  //   ...loginRequest,\n                  //   account: instance.getActiveAccount()!,\n                  // });\n                  // await instance.loginPopup();\n                }}\n              >\n                Sign In\n              </Button>\n            </UnauthenticatedTemplate>\n          </Stack>\n        </Flex>\n\n        <Collapse in={isOpen} animateOpacity>\n          <MobileNav closeMenu={onToggle} />\n        </Collapse>\n      </Box>\n      <Box m={{ base: \"1em\", xl: \"5em\" }} mt={{ base: \"3em\", xl: \"5em\" }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const history = useHistory();\n  const linkColor = useColorModeValue(\"gray.600\", \"#ABB2BF\");\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n  const popoverContentBgColor = useColorModeValue(\"white\", \"#21252A\");\n  const isAuthenticated = useIsAuthenticated();\n\n  return (\n    <Stack direction={\"row\"} spacing={4}>\n      {(isAuthenticated ? NAV_ITEMS : GUEST_NAV_ITEMS).map((navItem) => {\n        return (\n          <Box key={navItem.label}>\n            <Popover trigger={\"hover\"} placement={\"bottom-start\"}>\n              <PopoverTrigger>\n                <Button\n                  variant=\"link\"\n                  p={2}\n                  onClick={() => {\n                    if (navItem.href) {\n                      history.push(navItem.href);\n                    }\n                  }}\n                  fontSize={\"sm\"}\n                  fontWeight={500}\n                  color={linkColor}\n                  _hover={{\n                    textDecoration: \"none\",\n                    color: linkHoverColor,\n                  }}\n                >\n                  {navItem.label}\n                </Button>\n              </PopoverTrigger>\n\n              {navItem.children && (\n                <PopoverContent\n                  border={0}\n                  boxShadow={\"xl\"}\n                  bg={popoverContentBgColor}\n                  p={4}\n                  rounded={\"xl\"}\n                  minW={\"sm\"}\n                  mt={\"20px\"}\n                >\n                  <Stack>\n                    {navItem.children.map((child) => (\n                      <DesktopSubNav key={child.label} {...child} />\n                    ))}\n                  </Stack>\n                </PopoverContent>\n              )}\n            </Popover>\n          </Box>\n        );\n      })}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n  const history = useHistory();\n  return (\n    <Link\n      onClick={() => {\n        if (href) {\n          history.push(href);\n        }\n      }}\n      role={\"group\"}\n      display={\"block\"}\n      p={2}\n      rounded={\"md\"}\n      _hover={{ bg: useColorModeValue(\"blue.50\", \"#1d2024\") }}\n    >\n      <Stack direction={\"row\"} align={\"center\"}>\n        <Box>\n          <Text\n            transition={\"all .3s ease\"}\n            _groupHover={{ color: useColorModeValue(\"blue.400\", \"#cacfd9\") }}\n            fontWeight={600}\n            fontSize=\"md\"\n            ml={2}\n          >\n            {label}\n          </Text>\n          <Text ml={2} fontSize={\"sm\"}>\n            {subLabel}\n          </Text>\n        </Box>\n        <Flex\n          transition={\"all .3s ease\"}\n          transform={\"translateX(-10px)\"}\n          opacity={0}\n          _groupHover={{ opacity: \"100%\", transform: \"translateX(0)\" }}\n          justify={\"flex-end\"}\n          align={\"center\"}\n          flex={1}\n        >\n          <Icon\n            color={useColorModeValue(\"blue.400\", \"#cacfd9\")}\n            w={5}\n            h={5}\n            as={ChevronRightIcon}\n          />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = (props: any) => {\n  const isAuthenticated = useIsAuthenticated();\n  return (\n    <Stack\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      p={4}\n      display={{ md: \"none\" }}\n    >\n      {(isAuthenticated ? NAV_ITEMS : GUEST_NAV_ITEMS).map((navItem) => (\n        <MobileNavItem\n          closeMenu={props.closeMenu}\n          key={navItem.label}\n          {...navItem}\n        />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href, closeMenu }: any) => {\n  const history = useHistory();\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        onClick={() => {\n          if (href) {\n            history.push(href);\n          }\n        }}\n        justify={\"space-between\"}\n        align={\"center\"}\n        _hover={{\n          textDecoration: \"none\",\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={\"all .25s ease-in-out\"}\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n          align={\"start\"}\n        >\n          {children &&\n            children.map((child: any) => (\n              <Link\n                key={child.label}\n                py={2}\n                onClick={() => {\n                  if (child.href) {\n                    history.push(child.href);\n                    closeMenu();\n                  }\n                }}\n              >\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Requests\",\n    children: [\n      {\n        label: \"Existing Requests\",\n        subLabel: \"Explore existing formiks requests\",\n        href: \"/projects\",\n      },\n      {\n        label: \"New Request\",\n        subLabel: \"Create new formiks request\",\n        href: \"/projects/create\",\n      },\n    ],\n  },\n\n  {\n    label: \"Projects\",\n    href: \"/vendors\",\n  },\n  {\n    label: \"Dropdowns\",\n    children: [\n      {\n        label: \"Existing Dropdowns\",\n        subLabel: \"Explore existing adaptive dropdown\",\n        href: \"/dropdowns\",\n      },\n      {\n        label: \"New Dropdown\",\n        subLabel: \"Create new adaptive dropdown\",\n        href: \"/dropdowns/create\",\n      },\n    ],\n  },\n  {\n    label: \"Pipelines\",\n    href: \"/pipelines\",\n  },\n];\nconst GUEST_NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Requests\",\n    href: \"/projects\",\n  },\n  {\n    label: \"Projects\",\n    href: \"/vendors\",\n  },\n  {\n    label: \"Documentation\",\n    href: \"/documentation\",\n  },\n];\n\nexport default Layout;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Project from \"../types/project\";\nimport { RestAPI } from \"../api/rest\";\nimport Bookmark from \"../types/bookmark\";\n\ninterface Props {\n  isOpen: boolean;\n  onClose: any;\n  addBookmark: any;\n  projects: Project[];\n  bookmarks: Bookmark[];\n}\n\nexport default function CreateBookmark(props: Props) {\n  const [matchingProjects, setMatchingProjects] = useState(0);\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n  const [title, setTitle] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  useEffect(() => {\n    var tags: string[] = [];\n    props.projects.map((project) => {\n      project.tags.map((tag) => {\n        if (tags.indexOf(tag) === -1) {\n          tags.push(tag);\n        }\n      });\n      setAvailableTags(tags);\n    });\n  }, [props.projects]);\n  useEffect(() => {\n    var matchingProjects = 0;\n    props.projects.map((project) => {\n      if (\n        project.tags &&\n        project.tags.some((item) => selectedTags.includes(item))\n      ) {\n        matchingProjects++;\n      }\n    });\n    setMatchingProjects(matchingProjects);\n  }, [selectedTags]);\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onClose={() => {\n        props.onClose();\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Create new bookmark</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <VStack spacing={4}>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Title</Text>\n              <Input\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                }}\n                bg={useColorModeValue(\"white\", \"#2C313C\")}\n                color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Tags</Text>\n              <CreatableSelect\n                placeholder=\"\"\n                styles={{\n                  control: (base, state) => ({\n                    ...base,\n                    background: useColorModeValue(\"white\", \"#2C313C\"),\n                    minHeight: 40,\n                    border: useColorModeValue(\n                      \"1px solid #E2E8F0\",\n                      \"1px solid #4E525C\"\n                    ),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      border: useColorModeValue(\n                        \"1px solid #CBD5E0\",\n                        \"1px solid #5E626B\"\n                      ),\n                    },\n                  }),\n                  option: (\n                    styles,\n                    { data, isDisabled, isFocused, isSelected }\n                  ) => {\n                    return {\n                      ...styles,\n                      backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                      color: useColorModeValue(\"#4A5667\", \"white\"),\n                      transition: \"0.3s\",\n                      \"&:hover\": {\n                        backgroundColor: useColorModeValue(\n                          \"#DEEBFF\",\n                          \"#343945\"\n                        ),\n                      },\n                    };\n                  },\n                  menu: (styles) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    background: useColorModeValue(\"white\", \"#2C313C\"),\n                  }),\n                  multiValue: (styles, { data }) => ({\n                    ...styles,\n                    color: \"white\",\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  }),\n                  multiValueLabel: (styles, { data }) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#464646\", \"white\"),\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  }),\n                  multiValueRemove: (styles, { data }) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                    \"&:hover\": {\n                      color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                      backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                    },\n                  }),\n                }}\n                theme={(theme) => ({\n                  ...theme,\n                  borderRadius: 6,\n                  colors: {\n                    ...theme.colors,\n                    primary: \"#3082CE\",\n                  },\n                })}\n                isMulti\n                value={selectedTags.map((tag) => {\n                  return { label: tag, value: tag };\n                })}\n                onChange={(values) => {\n                  var tags: string[] = [];\n                  values.map((element: any) => tags.push(element.value));\n                  setSelectedTags(tags);\n                }}\n                options={availableTags.map((tag) => {\n                  return {\n                    label: tag,\n                    value: tag,\n                  };\n                })}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text float=\"right\" color=\"gray.400\" mb=\"10px\">\n                Matching {matchingProjects} projects\n              </Text>\n            </Box>\n          </VStack>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            isDisabled={\n              title.length < 1 ||\n              (props.bookmarks &&\n                props.bookmarks.some((bookmark) => bookmark.title === title))\n            }\n            color={\"white\"}\n            bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              RestAPI.createBookmark({\n                title,\n                tags: selectedTags,\n              } as Bookmark).then((response) => {\n                props.addBookmark(response.data);\n                props.onClose();\n              });\n            }}\n          >\n            Create\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Text,\n  Image,\n  Stack,\n  Heading,\n  Avatar,\n  Badge,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Project from \"../types/project\";\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function ProjectCard(props: Props) {\n  return (\n    <Box\n      key={props.project.id}\n      onClick={() => {\n        props.history.push(`/projects/view/${props.project.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"433px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.project.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.project.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack mt={6} direction={\"row\"} spacing={4} align={\"center\"}>\n        <Avatar src={\"\"} alt={\"Author\"} />\n        <Stack direction={\"column\"} spacing={0} fontSize={\"sm\"}>\n          <Text fontWeight={600}>{props.project.author}</Text>\n          <Tooltip\n            bg={useColorModeValue(\"white\", \"#373c45\")}\n            color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n            p={4}\n            hasArrow\n            label={moment(props.project.updated).format(\"DD.MM.YYYY HH:mm\")}\n          >\n            <Text color={\"gray.500\"}>\n              {moment(props.project.updated).format(\"MMMM DD, YYYY\")}\n            </Text>\n          </Tooltip>\n        </Stack>\n      </Stack>\n      <Wrap\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        h={\"68px\"}\n        mt={6}\n        justify=\"center\"\n      >\n        {props.project.tags.map((tag) => {\n          return (\n            <WrapItem key={`${props.project.id}-tag-${tag}`}>\n              <Tag fontWeight={\"400\"} size=\"sm\" px={2} cursor=\"pointer\">\n                #{tag.toUpperCase()}\n              </Tag>\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport CreateBookmark from \"../../components/CreateBookmark\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [createBookmarkModal, setCreateBookMarkModal] = useState(false);\n\n  useEffect(() => {\n    RestAPI.getBookmarks().then((response) => setBookmarks(response.data));\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CreateBookmark\n        isOpen={createBookmarkModal}\n        addBookmark={(bookmark: Bookmark) => {\n          setBookmarks((old) => [...(old ? old : []), bookmark]);\n        }}\n        bookmarks={bookmarks}\n        onClose={() => {\n          setCreateBookMarkModal(false);\n        }}\n        projects={projects}\n      />\n      <Center mb={\"5em\"}>\n        <Wrap maxW={{ base: \"100%\", lg: \"50%\" }} justify=\"center\">\n          {bookmarks\n            ? bookmarks.map((bookmark, index) => {\n                return (\n                  <WrapItem key={`bookmark-${index}`}>\n                    <Tag\n                      fontWeight={\"400\"}\n                      size={\"lg\"}\n                      // colorScheme=\"cyan\"\n                      cursor=\"pointer\"\n                      key={bookmark.id}\n                      onContextMenu={(e) => {\n                        e.preventDefault();\n                        console.log(bookmark.id);\n                        if (bookmark.id) {\n                          RestAPI.deleteBookmark(bookmark.id);\n                          setBookmarks(\n                            bookmarks.filter((b) => b.id !== bookmark.id)\n                          );\n                        }\n                      }}\n                      onClick={() => {\n                        // FIXME: filter projects\n                        console.log(bookmark.tags);\n                      }}\n                    >\n                      {bookmark.title}\n                    </Tag>\n                  </WrapItem>\n                );\n              })\n            : null}\n\n          <WrapItem display={props.isAdmin ? \"grid\" : \"none\"}>\n            <Tag\n              onClick={() => {\n                setCreateBookMarkModal(true);\n              }}\n              colorScheme=\"cyan\"\n              fontWeight={\"400\"}\n              size={\"lg\"}\n              cursor=\"pointer\"\n            >\n              <AddIcon w={3} h={3} />\n            </Tag>\n          </WrapItem>\n        </Wrap>\n      </Center>\n      <Wrap\n        justify=\"center\"\n        spacing={{ base: \"40px\", lg: \"3em\" }}\n        mx={{ base: 0, \"2xl\": \"300px\" }}\n      >\n        {projects.map((project) => {\n          return (\n            <WrapItem key={`wrap-${project.id}`}>\n              <ProjectCard history={props.history} project={project} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { FormBuilder } from \"@formio/react\";\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2 } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [\n      \"New\",\n      \"In Progress\",\n      \"Completed\",\n      \"On Hold\",\n      \"Cancelled\",\n    ] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) =>\n        setProject(response.data)\n      );\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={project.title}\n              onChange={(event) => {\n                setProject((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Tags</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.tags.map((tag) => {\n                return { label: tag, value: tag };\n              })}\n              onChange={(values) => {\n                var tags: string[] = [];\n                values.map((element: any) => tags.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  tags,\n                }));\n              }}\n              options={[]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Roles</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.roles.map((role) => {\n                return { label: role, value: role };\n              })}\n              onChange={(values) => {\n                var roles: string[] = [];\n                values.map((element: any) => roles.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  roles,\n                }));\n              }}\n              options={[\n                { label: \"administrator\", value: \"administrator\" },\n                { label: \"user\", value: \"user\" },\n                { label: \"guest\", value: \"guest\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"66.5%\" }}>\n            <Text mb=\"8px\">Available Statuses</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n              onChange={(values) => {\n                var statuses: string[] = [];\n                values.map((element: any) => statuses.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  statuses,\n                }));\n              }}\n              options={[\n                { label: \"New\", value: \"New\" },\n                { label: \"In Progress\", value: \"In Progress\" },\n                { label: \"Completed\", value: \"Completed\" },\n                { label: \"On Hold\", value: \"On Hold\" },\n                { label: \"Cancelled\", value: \"Cancelled\" },\n              ]}\n            />\n          </Box>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Default Status</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label: project.defaultStatus,\n                value: project.defaultStatus,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  defaultStatus: value.label,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"defaultStatus\"\n              options={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Project Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label:\n                  project.type === \"formio\" ? \"GUI Builder\" : \"Code Builder\",\n                value: project.type,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"projectType\"\n              options={[\n                { label: \"GUI Builder\", value: \"formio\" },\n                { label: \"Code Builder\", value: \"code\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={project.description}\n            onChange={(event) => {\n              setProject((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      {project.type === \"formio\" ? (\n        <FormBuilder\n          options={{\n            builder: {\n              basic: {\n                components: {\n                  excelTable: true,\n                },\n              },\n              advanced: {\n                components: {\n                  file: true,\n                },\n              },\n              premium: false,\n            },\n          }}\n          form={{ display: \"form\", components: project.components }}\n          onChange={(schema: any) => {\n            console.log(schema);\n            setProject((prev) => ({\n              ...prev,\n              components: schema.components,\n            }));\n          }}\n        />\n      ) : null}\n      <HStack mb=\"40px\" spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createProject(project);\n              if (response.data.id) {\n                props.history.push(`/projects/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateProject(project)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={<div>Project has been successfully updated</div>}\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update project\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Cerov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [organizingCompany, setOrganizingCompany] = useState(\"\");\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0.00\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        props.submission.data.campaignEstimatedIncomeEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCosts(\n        props.submission.data.campaignEstimatedCostsEur.toFixed(2) || \"0.00\"\n      );\n      setNetProfitTarget(\n        props.submission.data.campaignNetProfitTargetEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        props.submission.data.totalEstimatedCostsLC.toFixed(2) || \"0.00\"\n      );\n\n      //\n\n      if (props.children && props.children.length > 0) {\n        var vs = props.children.find((s) => s.group === \"vendor\");\n        setVendorName({\n          label: vs.data.vendorName ?? \"\",\n          value: vs.data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: vs.data.vendorName ?? \"\",\n          projectManager: vs.data.productionProjectManager ?? \"\",\n          creditor: vs.data.creditorNumber ?? \"\",\n          debitor: vs.data.debitorNumber ?? \"\",\n          manufacturer: vs.data.manufacturerNumber ?? \"\",\n          bu: vs.data.businessUnit ?? \"\",\n          ph: {\n            label: vs.data.PH1 || \"1\",\n            value: vs.data.PH1 || \"1\",\n          },\n          budgetCurrency: {\n            label: vs.data.budgetCurrency || \"\",\n            value: vs.data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              console.log(s);\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var c: any[] = [];\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            console.log(s);\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.mirrorProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    console.log(responses[1].data);\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(2));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: \"\",\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendorName.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (organizingCompany === \"\" ? \"??\" : organizingCompany) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [\n    year,\n    organizingCompany,\n    campaignChannel,\n    projectStartQuarter,\n    requestorsCompanyName,\n  ]);\n\n  // useEffect(() => {\n  //   var totalBudgetEur = 0;\n  //   var totalBudgetLC = 0;\n  //   var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n  //   var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n  //   var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n  //   var totalCostsEur = parseFloat(estimatedCosts);\n\n  //   var temp = [...vendor];\n  //   temp.slice(0, -1).forEach((row: any) => {\n  //     row.eurBudget = (\n  //       parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n  //     ).toFixed(2);\n  //     row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n  //       2\n  //     );\n\n  //     var eb = parseFloat(row.eurBudget);\n  //     var lb = parseFloat(row.localBudget);\n\n  //     if (!isNaN(eb)) {\n  //       totalBudgetEur += eb;\n  //     }\n  //     if (!isNaN(lb)) {\n  //       totalBudgetLC += lb;\n  //     }\n  //   });\n  //   var totalVendorBudgetInLC = 0;\n  //   var totalVendorBudgetInEUR = 0;\n  //   var totalVendorShare = 0;\n  //   var totalEstimatedIncomeInCC = 0;\n  //   var totalEstimatedCostsInCC = 0;\n  //   var totalEstimatedCostsInLC = 0;\n  //   var totalEstimatedCostsInEUR = 0;\n  //   var totalNetProfitTargetInCC = 0;\n  //   var totalNetProfitTargetInLC = 0;\n  //   var totalNetProfitTargetInEUR = 0;\n  //   temp.slice(0, -1).forEach((row: any, index: number) => {\n  //     var vbEur = parseFloat(row.eurBudget);\n  //     var share = 0;\n  //     if (budgetSource.value === \"noBudget\") {\n  //       row.budgetAmount = \"0.00\";\n  //       row.localBudget = \"0.00\";\n  //       row.eurBudget = \"0.00\";\n  //       row.estimatedIncomeCC = \"0.00\";\n  //       share = parseFloat(row.share) * 0.01;\n\n  //       row.estimatedCostsCC = (\n  //         share * parseFloat(estimatedCostsBudgetCurrency)\n  //       ).toFixed(2);\n\n  //       row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n  //       row.estimatedCostsLC = (\n  //         parseFloat(row.estimatedCostsEUR) * localExchangeRate\n  //       ).toFixed(2);\n  //     } else {\n  //       share = vbEur / totalBudgetEur;\n  //       row.share = (share * 100).toFixed(2);\n  //       if (index === temp.length - 1) {\n  //         var totalShare = 0.0;\n  //         temp\n  //           .slice(0, temp.length - 2)\n  //           .forEach((t) => (totalShare += parseFloat(t.share)));\n  //         row.share = (100 - totalShare).toFixed(2);\n  //         share = (100 - totalShare) * 0.01;\n  //       }\n  //       if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n  //         if (!isNaN(totalCostsCC)) {\n  //           row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalIncomeCC)) {\n  //           row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalCostsLC)) {\n  //           row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalCostsEur)) {\n  //           row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n  //         }\n  //       }\n  //     }\n  //     row.netProfitTargetEUR =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (parseFloat(row.share) * 0.01 * parseFloat(netProfitTarget)).toFixed(2);\n\n  //     row.netProfitTargetLC =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (parseFloat(row.netProfitTargetEUR) * localExchangeRate).toFixed(2);\n  //     row.netProfitTargetVC =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n  //     totalVendorBudgetInLC += parseFloat(row.localBudget);\n  //     totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n  //     totalVendorShare += parseFloat(row.share);\n  //     totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n  //     totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n  //     totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n  //     totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n  //     totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n  //     totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n  //     totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n  //   });\n\n  //   temp[temp.length - 1] = {\n  //     vendor: \"TOTAL\",\n  //     projectManager: \"\",\n  //     creditor: \"\",\n  //     debitor: \"\",\n  //     manufacturer: \"\",\n  //     bu: \"\",\n  //     ph: { label: \"\", value: \"\" },\n  //     budgetCurrency: { label: \"\", value: \"\" },\n  //     budgetAmount: \"\",\n  //     localBudget: totalVendorBudgetInLC.toFixed(2),\n  //     eurBudget: totalVendorBudgetInEUR.toFixed(2),\n  //     share: totalVendorShare.toFixed(2),\n  //     estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n  //     estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n  //     estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n  //     estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n  //     netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n  //     netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n  //     netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n  //   };\n\n  //   setTotalVendorBudgetInEUR(totalBudgetEur);\n  //   setTotalVendorBudgetInLC(totalBudgetLC);\n  //   if (!isEqual(vendor, temp)) {\n  //     setVendor(temp);\n  //   }\n  // }, [\n  //   vendor,\n  //   estimatedCostsBudgetCurrency,\n  //   totalEstimatedCostsLC,\n  //   budgetSource,\n  // ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Organizing Company</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: organizingCompany,\n              value: organizingCompany,\n            }}\n            onChange={(selected: any) => {\n              setOrganizingCompany(selected.value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"organizingCompany\"\n            options={Companies.map((company) => {\n              return {\n                label: company.value.country,\n                value: company.value.country,\n              };\n            })}\n          />\n        </Box>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Target Audience</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setTargetAudience(value.label);\n            }}\n            classNamePrefix=\"select\"\n            value={{ label: targetAudience, value: targetAudience }}\n            isClearable={false}\n            name=\"targetAudience\"\n            options={TargetAudience}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={campaignChannel}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approver</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: projectApproval, value: projectApproval }}\n            onChange={(value) => {\n              setProjectApproval(value === null ? \"\" : value.label);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectApprover\"\n            options={[]}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approval (attachments)</Text>\n          <Uploader action=\"\" draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer`s Fiscal Period</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={fiscalQuarter}\n            onChange={(value) => {\n              setFiscalQuarter(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={FiscalQuarter}\n          />\n        </Box>\n\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (name and surname)</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={budgetApprovedByVendor}\n            onChange={(event) => {\n              setBudgetApprovedByVendor(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (attachments)</Text>\n          <Uploader\n            action=\"\"\n            disabled={budgetSource.value === \"noBudget\"}\n            draggable\n          >\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n        {/*  */}\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Marketing Manager</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.projectManager}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.projectManager = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.bu}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.bu = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"6246bc93fa2a446faadb8d9a\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency:\n                    parseFloat(estimatedIncomeBudgetCurrency) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur:\n                    parseFloat(estimatedIncome) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n\n                  projectType: \"European One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  productionProjectManager: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : vendor.budgetCurrency.label,\n                  vendorAmount:\n                    isNaN(parseFloat(vendor.localBudget)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(vendor.localBudget),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    mirrorProjectNumber: company.projectNumber,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Ermv(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorsNames(\n          props.children\n            .filter((s) => s.group === \"vendor\")\n            .map((s) => {\n              return { label: s.data.vendorName, value: s.data.vendorName };\n            })\n        );\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var v: any[] = [];\n        var c: any[] = [];\n\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.mirrorProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n\n        props.children\n          .filter((s) => s.group === \"vendor\")\n          .forEach((s) => {\n            v.push({\n              vendor: s.data.vendorName,\n              projectManager: s.data.marketingResponsible,\n              creditor: s.data.creditorNumber,\n              debitor: s.data.debitorNumber,\n              manufacturer: s.data.manufacturerNumber,\n              bu: s.data.businessUnit,\n              ph: { label: s.data.PH1, value: s.data.PH1 },\n              budgetCurrency: {\n                label: s.data.vendorBudgetCurrency,\n                value: (\n                  ExchangeRates.find(\n                    (er) => er.label === s.data.vendorBudgetCurrency\n                  ) || { value: \"\" }\n                ).value,\n              },\n              budgetAmount: (s.data.vendorBudgetAmount || 0).toFixed(2),\n              localBudget: (s.data.vendorAmount || 0).toFixed(2),\n              eurBudget: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n              share: s.data.vendorShare.toFixed(0) || \"0\",\n              estimatedCostsCC: (s.data.estimatedCostsCC || 0).toFixed(2),\n              estimatedIncomeCC: (s.data.estimatedIncomeCC || 0).toFixed(2),\n              estimatedCostsLC: \"0.00\",\n              estimatedCostsEUR: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              netProfitTargetVC: (s.data.estimatedResultCC || 0).toFixed(2),\n              netProfitTargetLC: (s.data.estimatedResultBC || 0).toFixed(2),\n              netProfitTargetEUR: (s.data.estimatedResultEUR || 0).toFixed(2),\n            });\n          });\n        v.push({\n          vendor: \"TOTAL\",\n          projectManager: \"\",\n          creditor: \"\",\n          debitor: \"\",\n          manufacturer: \"\",\n          bu: \"\",\n          ph: { label: \"\", value: \"\" },\n          budgetCurrency: { label: \"\", value: \"\" },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setVendors([...v]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: \"\",\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: vendor.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    data.push({\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: \"\",\n      eurBudget: \"\",\n      share: \"\",\n      estimatedCostsCC: \"\",\n      estimatedIncomeCC: \"\",\n      estimatedCostsLC: \"\",\n      estimatedCostsEUR: \"\",\n      netProfitTargetVC: \"\",\n      netProfitTargetLC: \"\",\n      netProfitTargetEUR: \"\",\n    });\n    setVendors(data);\n  }, [vendorsNames]);\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    // if (props.submission) {\n    //   return;\n    // }\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(0));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    // if (props.submission) {\n    //   return;\n    // }\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n\n    var temp = [...vendors];\n    temp.slice(0, -1).forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    var totalVendorBudgetInLC = 0;\n    var totalVendorBudgetInEUR = 0;\n    var totalVendorShare = 0;\n    var totalEstimatedIncomeInCC = 0;\n    var totalEstimatedCostsInCC = 0;\n    var totalEstimatedCostsInLC = 0;\n    var totalEstimatedCostsInEUR = 0;\n    var totalNetProfitTargetInCC = 0;\n    var totalNetProfitTargetInLC = 0;\n    var totalNetProfitTargetInEUR = 0;\n    temp.slice(0, -1).forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 2)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (parseFloat(row.share) * 0.01 * parseFloat(netProfitTarget)).toFixed(2);\n\n      row.netProfitTargetLC = (\n        parseFloat(row.netProfitTargetEUR) * localExchangeRate\n      ).toFixed(2);\n\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n      totalVendorBudgetInLC += parseFloat(row.localBudget);\n      totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n      totalVendorShare += parseFloat(row.share);\n      totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n      totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n      totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n      totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n      totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n      totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n      totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n    });\n\n    temp[temp.length - 1] = {\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: totalVendorBudgetInLC.toFixed(2),\n      eurBudget: totalVendorBudgetInEUR.toFixed(2),\n      share: totalVendorShare.toFixed(2),\n      estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n      estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n      estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n      estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n      netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n      netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n      netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n    };\n\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Target Audience</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setTargetAudience(value.label);\n            }}\n            value={{ label: targetAudience, value: targetAudience }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"targetAudience\"\n            options={TargetAudience}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approver</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: \"\", value: \"\" }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectApprover\"\n            options={[]}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approval (attachments)</Text>\n          <Uploader action=\"\" draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer`s Fiscal Period</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={fiscalQuarter}\n            onChange={(value) => {\n              setFiscalQuarter(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={FiscalQuarter}\n          />\n        </Box>\n\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (name and surname)</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={budgetApprovedByVendor}\n            onChange={(event) => {\n              setBudgetApprovedByVendor(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (attachments)</Text>\n          <Uploader\n            action=\"\"\n            disabled={budgetSource.value === \"noBudget\"}\n            draggable\n          >\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table hover={false} autoHeight rowHeight={65} data={vendors}>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>ALSO Marketing Manager</HeaderCell>\n              <Cell dataKey=\"projectManager\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectManager}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].projectManager = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    isDisabled\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.bu}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].bu = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    isDisabled={budgetSource.value === \"noBudget\"}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 10000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            // classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                invalid: totalcbShare === \"100\" ? false : true,\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    color={rowData.invalid && \"red\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"619515b754e61c8dd33daa52\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n                    estimatedIncomeBudgetCurrency\n                  ),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n                  projectType: \"European Multi Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              vendors.slice(0, -1).forEach((vendor: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    vendorName: vendor.vendor,\n                    marketingResponsible: vendor.projectManager,\n                    creditorNumber: vendor.creditor,\n                    debitorNumber: vendor.debitor,\n                    manufacturerNumber: vendor.manufacturer,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorBudgetCurrency:\n                      budgetSource.value === \"noBudget\"\n                        ? \"N/A\"\n                        : vendor.budgetCurrency.label,\n                    vendorAmount:\n                      isNaN(parseFloat(vendor.localBudget)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.localBudget),\n                    vendorBudgetAmount:\n                      isNaN(parseFloat(vendor.budgetAmount)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.budgetAmount),\n                    // cbbudgetEur: parseFloat(vendor.eurBudget),\n                    vendorShare: parseFloat(vendor.share),\n                    estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                    estimatedIncomeCC:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.estimatedIncomeCC),\n                    estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n                    // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.eurBudget),\n                    estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n                    estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n                    estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n                  },\n                });\n              });\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    mirrorProjectNumber: company.projectNumber,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Erov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0.00\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        props.submission.data.campaignEstimatedIncomeEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCosts(\n        props.submission.data.campaignEstimatedCostsEur.toFixed(2) || \"0.00\"\n      );\n      setNetProfitTarget(\n        props.submission.data.campaignNetProfitTargetEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        props.submission.data.totalEstimatedCostsLC.toFixed(2) || \"0.00\"\n      );\n\n      //\n\n      if (props.children && props.children.length > 0) {\n        var vs = props.children.find((s) => s.group === \"vendor\");\n        setVendorName({\n          label: vs.data.vendorName ?? \"\",\n          value: vs.data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: vs.data.vendorName ?? \"\",\n          projectManager: vs.data.productionProjectManager ?? \"\",\n          creditor: vs.data.creditorNumber ?? \"\",\n          debitor: vs.data.debitorNumber ?? \"\",\n          manufacturer: vs.data.manufacturerNumber ?? \"\",\n          bu: vs.data.businessUnit ?? \"\",\n          ph: {\n            label: vs.data.PH1 || \"1\",\n            value: vs.data.PH1 || \"1\",\n          },\n          budgetCurrency: {\n            label: vs.data.budgetCurrency || \"\",\n            value: vs.data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              console.log(s);\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var c: any[] = [];\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            console.log(s);\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.mirrorProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(2));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: \"\",\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendorName.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  // useEffect(() => {\n  //   var totalBudgetEur = 0;\n  //   var totalBudgetLC = 0;\n  //   var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n  //   var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n  //   var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n  //   var totalCostsEur = parseFloat(estimatedCosts);\n\n  //   var temp = [...vendor];\n  //   temp.slice(0, -1).forEach((row: any) => {\n  //     row.eurBudget = (\n  //       parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n  //     ).toFixed(2);\n  //     row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n  //       2\n  //     );\n\n  //     var eb = parseFloat(row.eurBudget);\n  //     var lb = parseFloat(row.localBudget);\n\n  //     if (!isNaN(eb)) {\n  //       totalBudgetEur += eb;\n  //     }\n  //     if (!isNaN(lb)) {\n  //       totalBudgetLC += lb;\n  //     }\n  //   });\n  //   var totalVendorBudgetInLC = 0;\n  //   var totalVendorBudgetInEUR = 0;\n  //   var totalVendorShare = 0;\n  //   var totalEstimatedIncomeInCC = 0;\n  //   var totalEstimatedCostsInCC = 0;\n  //   var totalEstimatedCostsInLC = 0;\n  //   var totalEstimatedCostsInEUR = 0;\n  //   var totalNetProfitTargetInCC = 0;\n  //   var totalNetProfitTargetInLC = 0;\n  //   var totalNetProfitTargetInEUR = 0;\n  //   temp.slice(0, -1).forEach((row: any, index: number) => {\n  //     var vbEur = parseFloat(row.eurBudget);\n  //     var share = 0;\n  //     if (budgetSource.value === \"noBudget\") {\n  //       row.budgetAmount = \"0.00\";\n  //       row.localBudget = \"0.00\";\n  //       row.eurBudget = \"0.00\";\n  //       row.estimatedIncomeCC = \"0.00\";\n  //       share = parseFloat(row.share) * 0.01;\n\n  //       row.estimatedCostsCC = (\n  //         share * parseFloat(estimatedCostsBudgetCurrency)\n  //       ).toFixed(2);\n\n  //       row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n  //       row.estimatedCostsLC = (\n  //         parseFloat(row.estimatedCostsEUR) * localExchangeRate\n  //       ).toFixed(2);\n  //     } else {\n  //       share = vbEur / totalBudgetEur;\n  //       row.share = (share * 100).toFixed(2);\n  //       if (index === temp.length - 1) {\n  //         var totalShare = 0.0;\n  //         temp\n  //           .slice(0, temp.length - 2)\n  //           .forEach((t) => (totalShare += parseFloat(t.share)));\n  //         row.share = (100 - totalShare).toFixed(2);\n  //         share = (100 - totalShare) * 0.01;\n  //       }\n  //       if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n  //         if (!isNaN(totalCostsCC)) {\n  //           row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalIncomeCC)) {\n  //           row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalCostsLC)) {\n  //           row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalCostsEur)) {\n  //           row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n  //         }\n  //       }\n  //     }\n  //     row.netProfitTargetEUR =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (parseFloat(row.share) * 0.01 * parseFloat(netProfitTarget)).toFixed(2);\n\n  //     row.netProfitTargetLC =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (parseFloat(row.netProfitTargetEUR) * localExchangeRate).toFixed(2);\n  //     row.netProfitTargetVC =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n  //     totalVendorBudgetInLC += parseFloat(row.localBudget);\n  //     totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n  //     totalVendorShare += parseFloat(row.share);\n  //     totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n  //     totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n  //     totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n  //     totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n  //     totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n  //     totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n  //     totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n  //   });\n\n  //   temp[temp.length - 1] = {\n  //     vendor: \"TOTAL\",\n  //     projectManager: \"\",\n  //     creditor: \"\",\n  //     debitor: \"\",\n  //     manufacturer: \"\",\n  //     bu: \"\",\n  //     ph: { label: \"\", value: \"\" },\n  //     budgetCurrency: { label: \"\", value: \"\" },\n  //     budgetAmount: \"\",\n  //     localBudget: totalVendorBudgetInLC.toFixed(2),\n  //     eurBudget: totalVendorBudgetInEUR.toFixed(2),\n  //     share: totalVendorShare.toFixed(2),\n  //     estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n  //     estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n  //     estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n  //     estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n  //     netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n  //     netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n  //     netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n  //   };\n\n  //   setTotalVendorBudgetInEUR(totalBudgetEur);\n  //   setTotalVendorBudgetInLC(totalBudgetLC);\n  //   if (!isEqual(vendor, temp)) {\n  //     setVendor(temp);\n  //   }\n  // }, [\n  //   vendor,\n  //   estimatedCostsBudgetCurrency,\n  //   totalEstimatedCostsLC,\n  //   budgetSource,\n  // ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Target Audience</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setTargetAudience(value.label);\n            }}\n            classNamePrefix=\"select\"\n            value={{ label: targetAudience, value: targetAudience }}\n            isClearable={false}\n            name=\"targetAudience\"\n            options={TargetAudience}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={campaignChannel}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approver</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: projectApproval, value: projectApproval }}\n            onChange={(value) => {\n              setProjectApproval(value === null ? \"\" : value.label);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectApprover\"\n            options={[]}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approval (attachments)</Text>\n          <Uploader action=\"\" draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer`s Fiscal Period</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={fiscalQuarter}\n            onChange={(value) => {\n              setFiscalQuarter(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={FiscalQuarter}\n          />\n        </Box>\n\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (name and surname)</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={budgetApprovedByVendor}\n            onChange={(event) => {\n              setBudgetApprovedByVendor(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (attachments)</Text>\n          <Uploader\n            action=\"\"\n            disabled={budgetSource.value === \"noBudget\"}\n            draggable\n          >\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n        {/*  */}\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Marketing Manager</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.projectManager}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.projectManager = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.bu}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.bu = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"6246bc93fa2a446faadb8d9a\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency:\n                    parseFloat(estimatedIncomeBudgetCurrency) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur:\n                    parseFloat(estimatedIncome) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n\n                  projectType: \"European One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  productionProjectManager: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : vendor.budgetCurrency.label,\n                  vendorAmount:\n                    isNaN(parseFloat(vendor.localBudget)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(vendor.localBudget),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    mirrorProjectNumber: company.projectNumber,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Elmv(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorsNames(\n          props.children\n            .filter((s) => s.group === \"vendor\")\n            .map((s) => {\n              return { label: s.data.vendorName, value: s.data.vendorName };\n            })\n        );\n\n        var v: any[] = [];\n\n        props.children\n          .filter((s) => s.group === \"vendor\")\n          .forEach((s) => {\n            v.push({\n              vendor: s.data.vendorName,\n              projectManager: s.data.marketingResponsible,\n              creditor: s.data.creditorNumber,\n              debitor: s.data.debitorNumber,\n              manufacturer: s.data.manufacturerNumber,\n              bu: s.data.businessUnit,\n              ph: { label: s.data.PH1, value: s.data.PH1 },\n              budgetCurrency: {\n                label: s.data.vendorBudgetCurrency,\n                value: (\n                  ExchangeRates.find(\n                    (er) => er.label === s.data.vendorBudgetCurrency\n                  ) || { value: \"\" }\n                ).value,\n              },\n              budgetAmount: (s.data.vendorBudgetAmount || 0).toFixed(2),\n              localBudget: (s.data.vendorAmount || 0).toFixed(2),\n              eurBudget: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n              share: s.data.vendorShare.toFixed(0) || \"0\",\n              estimatedCostsCC: (s.data.estimatedCostsCC || 0).toFixed(2),\n              estimatedIncomeCC: (s.data.estimatedIncomeCC || 0).toFixed(2),\n              estimatedCostsLC: \"0.00\",\n              estimatedCostsEUR: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              netProfitTargetVC: (s.data.estimatedResultCC || 0).toFixed(2),\n              netProfitTargetLC: (s.data.estimatedResultBC || 0).toFixed(2),\n              netProfitTargetEUR: (s.data.estimatedResultEUR || 0).toFixed(2),\n            });\n          });\n        v.push({\n          vendor: \"TOTAL\",\n          projectManager: \"\",\n          creditor: \"\",\n          debitor: \"\",\n          manufacturer: \"\",\n          bu: \"\",\n          ph: { label: \"\", value: \"\" },\n          budgetCurrency: { label: \"\", value: \"\" },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setVendors([...v]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: \"\",\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: vendor.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    data.push({\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: \"\",\n      eurBudget: \"\",\n      share: \"\",\n      estimatedCostsCC: \"\",\n      estimatedIncomeCC: \"\",\n      estimatedCostsLC: \"\",\n      estimatedCostsEUR: \"\",\n      netProfitTargetVC: \"\",\n      netProfitTargetLC: \"\",\n      netProfitTargetEUR: \"\",\n    });\n    setVendors(data);\n  }, [vendorsNames]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n\n    var temp = [...vendors];\n    temp.slice(0, -1).forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    var totalVendorBudgetInLC = 0;\n    var totalVendorBudgetInEUR = 0;\n    var totalVendorShare = 0;\n    var totalEstimatedIncomeInCC = 0;\n    var totalEstimatedCostsInCC = 0;\n    var totalEstimatedCostsInLC = 0;\n    var totalEstimatedCostsInEUR = 0;\n    var totalNetProfitTargetInCC = 0;\n    var totalNetProfitTargetInLC = 0;\n    var totalNetProfitTargetInEUR = 0;\n    temp.slice(0, -1).forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 2)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (parseFloat(row.share) * 0.01 * parseFloat(netProfitTarget)).toFixed(2);\n\n      row.netProfitTargetLC = (\n        parseFloat(row.netProfitTargetEUR) * localExchangeRate\n      ).toFixed(2);\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n      totalVendorBudgetInLC += parseFloat(row.localBudget);\n      totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n      totalVendorShare += parseFloat(row.share);\n      totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n      totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n      totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n      totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n      totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n      totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n      totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n    });\n\n    temp[temp.length - 1] = {\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: totalVendorBudgetInLC.toFixed(2),\n      eurBudget: totalVendorBudgetInEUR.toFixed(2),\n      share: totalVendorShare.toFixed(2),\n      estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n      estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n      estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n      estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n      netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n      netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n      netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n    };\n\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Target Audience</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setTargetAudience(value.label);\n            }}\n            value={{ label: targetAudience, value: targetAudience }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"targetAudience\"\n            options={TargetAudience}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approver</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: \"\", value: \"\" }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectApprover\"\n            options={[]}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approval (attachments)</Text>\n          <Uploader action=\"\" draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer`s Fiscal Period</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={fiscalQuarter}\n            onChange={(value) => {\n              setFiscalQuarter(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={FiscalQuarter}\n          />\n        </Box>\n\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (name and surname)</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={budgetApprovedByVendor}\n            onChange={(event) => {\n              setBudgetApprovedByVendor(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (attachments)</Text>\n          <Uploader\n            action=\"\"\n            disabled={budgetSource.value === \"noBudget\"}\n            draggable\n          >\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={vendors}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>ALSO Marketing Manager</HeaderCell>\n              <Cell dataKey=\"projectManager\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectManager}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].projectManager = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    isDisabled\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.bu}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].bu = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    isDisabled={budgetSource.value === \"noBudget\"}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"6246ec8efa2a446faadb8d9b\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n                    estimatedIncomeBudgetCurrency\n                  ),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n                  projectType: \"Local Multi Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              vendors.slice(0, -1).forEach((vendor: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    vendorName: vendor.vendor,\n                    marketingResponsible: vendor.projectManager,\n                    creditorNumber: vendor.creditor,\n                    debitorNumber: vendor.debitor,\n                    manufacturerNumber: vendor.manufacturer,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorBudgetCurrency:\n                      budgetSource.value === \"noBudget\"\n                        ? \"N/A\"\n                        : vendor.budgetCurrency.label,\n                    vendorAmount:\n                      isNaN(parseFloat(vendor.localBudget)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.localBudget),\n                    vendorBudgetAmount:\n                      isNaN(parseFloat(vendor.budgetAmount)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.budgetAmount),\n                    // cbbudgetEur: parseFloat(vendor.eurBudget),\n                    vendorShare: parseFloat(vendor.share),\n                    estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                    estimatedIncomeCC:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.estimatedIncomeCC),\n                    estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n                    // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.eurBudget),\n                    estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n                    estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n                    estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n                  },\n                });\n              });\n\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { SubmissionsTransformer } from \"../../utils/SubmissionsTransformer\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Elov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        props.submission.data.campaignEstimatedIncomeEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCosts(\n        props.submission.data.campaignEstimatedCostsEur.toFixed(2) || \"0.00\"\n      );\n      setNetProfitTarget(\n        props.submission.data.campaignNetProfitTargetEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        props.submission.data.totalEstimatedCostsLC.toFixed(2) || \"0.00\"\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorName({\n          label: props.children[0].data.vendorName ?? \"\",\n          value: props.children[0].data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: props.children[0].data.vendorName ?? \"\",\n          creditor: props.children[0].data.sapCreditorNumber ?? \"\",\n          debitor: props.children[0].data.debitorNumber ?? \"\",\n          manufacturer: props.children[0].data.manufacturerNumber ?? \"\",\n          bu: props.children[0].data.businessUnit ?? \"\",\n          ph: {\n            label: props.children[0].data.PH1 || \"1\",\n            value: props.children[0].data.PH1 || \"1\",\n          },\n          projectManager: props.children[0].productionProjectManager || \"\",\n          budgetCurrency: {\n            label: props.children[0].data.budgetCurrency || \"\",\n            value: props.children[0].data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n      }\n    }\n  }, [props.submission, props.children]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (vendorName.value && !props.submission) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: \"\",\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendorName.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Target Audience</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setTargetAudience(value.label);\n            }}\n            value={{ label: targetAudience, value: targetAudience }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"targetAudience\"\n            options={TargetAudience}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approver</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: projectApproval, value: projectApproval }}\n            onChange={(value) => {\n              setProjectApproval(value === null ? \"\" : value.label);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectApprover\"\n            options={[]}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approval (attachments)</Text>\n          <Uploader action=\"\" draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer`s Fiscal Period</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={fiscalQuarter}\n            onChange={(value) => {\n              setFiscalQuarter(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={FiscalQuarter}\n          />\n        </Box>\n\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (name and surname)</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={budgetApprovedByVendor}\n            onChange={(event) => {\n              setBudgetApprovedByVendor(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (attachments)</Text>\n          <Uploader\n            action=\"\"\n            disabled={budgetSource.value === \"noBudget\"}\n            draggable\n          >\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n        {/*  */}\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Marketing Manager</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.projectManager}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.projectManager = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            isDisabled\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.bu}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.bu = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"624ac98682eeddf1a9b6a622\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency:\n                    parseFloat(estimatedIncomeBudgetCurrency) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur:\n                    parseFloat(estimatedIncome) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n                  projectType: \"Local One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  productionProjectManager: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : vendor.budgetCurrency.label,\n                  vendorAmount:\n                    isNaN(parseFloat(vendor.localBudget)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(vendor.localBudget),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport isEqual from \"lodash/isEqual\";\nimport DatePicker from \"react-datepicker\";\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { isDisabled } from \"@chakra-ui/utils\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function Elov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [serviceProvider, setServiceProvider] = useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n  const [services, setServices] = useState<any>([]);\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Name</Text>\n          <Input\n            value={projectName}\n            onChange={(event) => setProjectName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsNames\"\n            isMulti\n            options={VendorsNames}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Service Provider</Text>\n          <Input\n            value={serviceProvider}\n            onChange={(event) => setServiceProvider(event.target.value)}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Services</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={services}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Service Type</HeaderCell>\n              <Cell dataKey=\"serviceType\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.serviceType}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].serviceType = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (LC Currency)</HeaderCell>\n              <Cell dataKey=\"netValueLC\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValueLC}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValueLC = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Local Currency</HeaderCell>\n              <Cell dataKey=\"localCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    menuPortalTarget={document.body}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    value={{\n                      label: rowData.localCurrency,\n                      value: rowData.localCurrency,\n                    }}\n                    onChange={(value) => {\n                      var temp = [...services];\n                      temp[index!].localCurrency =\n                        value === null ? \"\" : value.label;\n                      setServices(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"localCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (Purchase Order Currency)</HeaderCell>\n              <Cell dataKey=\"netValuePO\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValuePO}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValuePO = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Purchase Order Currency Code</HeaderCell>\n              <Cell dataKey=\"poCurrencyCode\">\n                {(rowData, index) => (\n                  <Select\n                    menuPortalTarget={document.body}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    value={{\n                      label: rowData.poCurrencyCode,\n                      value: rowData.poCurrencyCode,\n                    }}\n                    onChange={(value) => {\n                      var temp = [...services];\n                      temp[index!].poCurrencyCode =\n                        value === null ? \"\" : value.label;\n                      setServices(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"poCurrencyCode\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (EUR)</HeaderCell>\n              <Cell dataKey=\"netValueEUR\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValueEUR}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValueEUR = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>External Purchase Order Number</HeaderCell>\n              <Cell dataKey=\"externalPurchaseOrderNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.externalPurchaseOrderNumber}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].externalPurchaseOrderNumber =\n                        event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Purchase Order Date</HeaderCell>\n              <Cell dataKey=\"purchaseOrderDate\">\n                {(rowData, index) => (\n                  <DatePicker\n                    portalId=\"root-portal\"\n                    isClearable={false}\n                    selected={rowData.purchaseOrderDate}\n                    customInput={<Input value={rowData.purchaseOrderDate} />}\n                    onChange={(date) => {\n                      var temp = [...services];\n                      temp[index!].purchaseOrderDate = date;\n                      setServices(temp);\n                    }}\n                    dateFormat=\"dd.MM.yyyy\"\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Name of Person Ordering the Service (ALSO)\n              </HeaderCell>\n              <Cell dataKey=\"orderingPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.orderingPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].orderingPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Name of Person Approving the Purchase Order (ALSO)\n              </HeaderCell>\n              <Cell dataKey=\"approvingPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.approvingPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].approvingPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person from Service Provider Side</HeaderCell>\n              <Cell dataKey=\"contactPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].contactPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Contact Details of Person from Service Provider Side (e-mail,\n                phone)\n              </HeaderCell>\n              <Cell dataKey=\"contactDetails\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactDetails}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].contactDetails = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n          <Button\n            float=\"right\"\n            marginTop=\"20px\"\n            onClick={() => {\n              var temp = [...services];\n              temp.push({});\n              setServices(temp);\n            }}\n          >\n            add\n          </Button>\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        // onClick={() => {\n        //   var projectId = \"62610ab73a88d397b05cea12\";\n\n        //   var parent: Submission = {\n        //     project: projectId,\n        //     title: campaignName,\n        //     parentId: null,\n        //     group: null,\n        //     created: new Date(),\n        //     updated: new Date(),\n        //     status: \"New\",\n        //     author: requestorsName,\n        //     data: {\n        //       purchaseOrderServiceProvider: serviceProvider,\n        //       requestorsCompanyName: requestorsCompanyName.label,\n        //       companyCode: requestorsCompanyName.value.code,\n        //       requestorsCountry: requestorsCompanyName.value.country,\n        //       campaignName: campaignName,\n        //       projectNumber: projectNumber,\n        //       projectName: projectName,\n        //       comments: comments,\n        //       projectType: \"Purchase Order Request\",\n        //     },\n        //   };\n        //   var children: Submission[] = [];\n\n        //   services.forEach((service: any) => {\n        //     children.push({\n        //       project: projectId,\n        //       title: \"\",\n        //       parentId: \"\",\n        //       group: \"vendor\",\n        //       created: new Date(),\n        //       updated: new Date(),\n        //       status: \"New\",\n        //       author: requestorsName,\n        //       data: {\n        //         netValueOfServiceOrderedLC: service.netValueLC,\n        //         localCurrency: service.localCurrency,\n        //         netValuePOC: service.netValuePO,\n        //         purchaseOrderCurrency: service.poCurrencyCode,\n        //         netValueEur: service.netValueEUR,\n        //       },\n        //     });\n        //   });\n\n        //   var submission: SubmissionWithChildren = {\n        //     submission: parent,\n        //     children,\n        //   };\n        //   RestAPI.createSubmissionWithChildren(submission).then((response) => {\n        //     props.history.push(\"/vendors\");\n        //   });\n        // }}\n        onClick={async () => {\n          RestAPI.getSubmissions().then((response) => {\n            var subs = response.data;\n            var targetId = \"\";\n            for (let sub of subs) {\n              if (\n                sub.parentId === null &&\n                sub.data.projectNumber === projectNumber\n              ) {\n                targetId = sub.id || \"\";\n                break;\n              }\n            }\n            if (targetId.length > 0) {\n              RestAPI.updateSubmissionPartial(\n                targetId,\n                \"data.purchaseOrderServiceProvider\",\n                serviceProvider\n              );\n              RestAPI.updateSubmissionPartial(\n                targetId,\n                \"data.vendorNamePO\",\n                vendorsNames.map((v: any) => v.label).join(\", \")\n              );\n              services.forEach(async (service: any) => {\n                await RestAPI.createSubmission({\n                  project: \"62610ab73a88d397b05cea12\",\n                  title: \"\",\n                  parentId: targetId,\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    netValueOfServiceOrderedLC: service.netValueLC,\n                    localCurrency: service.localCurrency,\n                    netValuePOC: service.netValuePO,\n                    purchaseOrderCurrency: service.poCurrencyCode,\n                    netValueEur: service.netValueEUR,\n                  },\n                });\n              });\n              setTimeout(() => {\n                props.history.push(\"/vendors\");\n              }, 2000);\n            }\n          });\n        }}\n        isDisabled={requestorsCompanyName.value.code !== \"6110\"}\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","import { Form } from \"@formio/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  StackDivider,\n  VStack,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  Tag,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiSettings, FiRefreshCw } from \"react-icons/all\";\n\nimport Cerov from \"../../components/projects/cerov\";\nimport Ermv from \"../../components/projects/ermv\";\nimport Erov from \"../../components/projects/erov\";\nimport Elmv from \"../../components/projects/elmv\";\nimport Elov from \"../../components/projects/elov\";\nimport Por from \"../../components/projects/por\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPredefinedProject] = useState<any>(null);\n  const [form, setForm] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) => {\n        setProject(response.data);\n        setForm({ display: \"form\", components: response.data.components });\n        if (props.match.params.id === \"619515b754e61c8dd33daa52\") {\n          setPredefinedProject(\n            <Ermv project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"6246bc93fa2a446faadb8d9a\") {\n          setPredefinedProject(\n            <Erov project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"6246ec8efa2a446faadb8d9b\") {\n          setPredefinedProject(\n            <Elmv project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"624ac98682eeddf1a9b6a622\") {\n          setPredefinedProject(\n            <Elov project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"62610ab73a88d397b05cea12\") {\n          setPredefinedProject(\n            <Por project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"629dfb3f55d209262194a3e6\") {\n          setPredefinedProject(\n            <Cerov project={project} history={props.history} />\n          );\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.push(\"/projects\");\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={props.isAdmin ? \"grid\" : \"none\"}\n            onClick={() => {\n              props.history.push(`/projects/edit/${project.id}`);\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            icon={<FiSettings />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.800\", \"#ABB2BF\")} w=\"100%\" mb={10}>\n        <VStack\n          mb={\"40px\"}\n          pr={{ base: 0, md: \"10px\" }}\n          divider={<StackDivider />}\n          spacing={4}\n          fontSize=\"md\"\n          align=\"stretch\"\n        >\n          <Box>\n            <Stack\n              direction={{ base: \"column\", md: \"row\" }}\n              w=\"100%\"\n              spacing={{ base: \"20px\", md: \"100px\" }}\n            >\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Title\n                </Text>\n                <Text float=\"right\">{project.title}</Text>\n              </Box>\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Tags\n                </Text>\n                <HStack spacing={3} float=\"right\">\n                  {project.tags.map((tag) => {\n                    return (\n                      <Tag\n                        key={tag}\n                        fontWeight={\"400\"}\n                        colorScheme=\"cyan\"\n                        cursor=\"pointer\"\n                      >\n                        {tag}\n                      </Tag>\n                    );\n                  })}\n                </HStack>\n              </Box>\n            </Stack>\n          </Box>\n          <Box>\n            <Text as=\"b\">Description</Text>\n            <Text mt={3}>{project.description}</Text>\n          </Box>\n        </VStack>\n      </Box>\n      {predefinedProject === null ? (\n        <Form\n          // onChange={(event: any) => {\n          //   console.log(event);\n          // }}\n          onSubmit={(formio: any) => {\n            delete formio.data[\"submit\"];\n            var submission: Submission = {\n              project: project.id ?? \"\",\n              parentId: null,\n              group: null,\n              created: new Date(),\n              updated: new Date(),\n              title: \"\",\n              author: \"\",\n              status: project.defaultStatus,\n              data: formio.data,\n            };\n            RestAPI.createSubmission(submission).then((response) => {\n              props.history.push(`/submissions/view/${response.data.id}`);\n            });\n          }}\n          form={form}\n        />\n      ) : (\n        predefinedProject\n      )}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","import { Form } from \"@formio/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  StackDivider,\n  VStack,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  Tag,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiSettings, FiRefreshCw } from \"react-icons/all\";\n\nimport Ermv from \"../../components/projects/ermv\";\nimport Erov from \"../../components/projects/erov\";\nimport Elmv from \"../../components/projects/elmv\";\nimport Elov from \"../../components/projects/elov\";\nimport Por from \"../../components/projects/por\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPredefinedProject] = useState<any>(null);\n  const [form, setForm] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (props.match.params.id) {\n      RestAPI.getSubmissionWithChildren(props.match.params.id).then(\n        (response) => {\n          setForm({ display: \"form\", components: [] });\n          if (response.data.submission.project === \"619515b754e61c8dd33daa52\") {\n            setPredefinedProject(\n              <Ermv\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n              />\n            );\n          }\n          if (response.data.submission.project === \"6246bc93fa2a446faadb8d9a\") {\n            setPredefinedProject(\n              <Erov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n              />\n            );\n          }\n          if (response.data.submission.project === \"6246ec8efa2a446faadb8d9b\") {\n            setPredefinedProject(\n              <Elmv\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n              />\n            );\n          }\n          if (response.data.submission.project === \"624ac98682eeddf1a9b6a622\") {\n            setPredefinedProject(\n              <Elov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n              />\n            );\n          }\n          if (props.match.params.id === \"62610ab73a88d397b05cea12\") {\n            setPredefinedProject(\n              <Por project={project} history={props.history} />\n            );\n          }\n        }\n      );\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.push(\"/projects\");\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={props.isAdmin ? \"grid\" : \"none\"}\n            onClick={() => {\n              props.history.push(`/projects/edit/${project.id}`);\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            icon={<FiSettings />}\n          />\n        </Box>\n      </HStack>\n\n      {predefinedProject === null ? (\n        <Form\n          onSubmit={(formio: any) => {\n            delete formio.data[\"submit\"];\n            var submission: Submission = {\n              project: project.id ?? \"\",\n              parentId: null,\n              group: null,\n              created: new Date(),\n              updated: new Date(),\n              title: \"\",\n              author: \"\",\n              status: project.defaultStatus,\n              data: formio.data,\n            };\n            RestAPI.createSubmission(submission).then((response) => {\n              props.history.push(`/submissions/view/${response.data.id}`);\n            });\n          }}\n          form={form}\n        />\n      ) : (\n        predefinedProject\n      )}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","// source: https://github.com/voodoocreation/ts-deepmerge/blob/master/src/index.ts\ninterface IObject {\n  [key: string]: any\n}\n\ntype TUnionToIntersection<U> = (U extends any\n? (k: U) => void\n: never) extends (k: infer I) => void\n  ? I\n  : never\n\n// istanbul ignore next\nconst isObject = (obj: any) => {\n  if (typeof obj === 'object' && obj !== null) {\n    if (typeof Object.getPrototypeOf === 'function') {\n      const prototype = Object.getPrototypeOf(obj)\n      return prototype === Object.prototype || prototype === null\n    }\n\n    return Object.prototype.toString.call(obj) === '[object Object]'\n  }\n\n  return false\n}\n\nconst merge = <T extends IObject[]>(...objects: T): TUnionToIntersection<T[number]> =>\n  objects.reduce((result, current) => {\n    Object.keys(current).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n        result[key] = Array.from(new Set(result[key].concat(current[key])))\n      } else if (isObject(result[key]) && isObject(current[key])) {\n        result[key] = merge(result[key], current[key])\n      } else {\n        result[key] = current[key]\n      }\n    })\n\n    return result\n  }, {}) as any\n\nexport default merge\n","function pick<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  const ret: any = {}\n  keys.forEach(key => {\n    ret[key] = obj[key]\n  })\n  return ret\n}\n\nexport default pick\n","import React, { createContext, FC, useContext } from \"react\";\nimport { DatepickerStyles } from \"../types\";\nimport merge from \"../utils/deepmerge\";\nimport pick from \"../utils/pick\";\n\nexport interface StylesContextProps {\n  overwriteDefaultStyles: boolean;\n  styles: DatepickerStyles;\n}\n\nexport interface StylesProviderProps {\n  overwriteDefaultStyles?: boolean;\n  styles?: Partial<DatepickerStyles>;\n}\n\nexport const emptyStylesObject: DatepickerStyles = {\n  actionButton: {},\n  arrowIcon: {},\n  buttonsWrapper: {},\n  closeButton: {},\n  datepickerContainer: {},\n  dateRangeInputContainer: {},\n  dateRangeInputDivider: {},\n  day: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  dayContainer: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  inputComponentIcon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInput: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputAddon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputGroup: {\n    active: {},\n    base: {},\n  },\n  monthContainer: {},\n  monthDayGrid: {},\n  monthMonthLabel: {},\n  monthsWrapper: {},\n  monthWeekdayLabel: {},\n  resetDatesButton: {},\n  selectDateContainer: {\n    active: {},\n    base: {},\n  },\n  selectDateDateText: {\n    active: {},\n    base: {},\n  },\n  selectDateText: {\n    active: {},\n    base: {},\n  },\n  datepickerFooter: {},\n};\n\nexport const StylesContext = createContext<StylesContextProps>({\n  styles: emptyStylesObject,\n  overwriteDefaultStyles: false,\n});\n\nexport const StylesProvider: FC<StylesProviderProps> = ({\n  children,\n  overwriteDefaultStyles = false,\n  styles = emptyStylesObject,\n}) => (\n  <StylesContext.Provider\n    value={{ overwriteDefaultStyles, styles: merge(emptyStylesObject, styles) }}\n  >\n    {children}\n  </StylesContext.Provider>\n);\n\nexport function useStyleProps<\n  InitialStyles extends Partial<DatepickerStyles> = Partial<DatepickerStyles>\n>(inlineStyles: InitialStyles) {\n  const { styles, overwriteDefaultStyles } = useContext(StylesContext);\n  const keys = Object.keys(inlineStyles) as (keyof DatepickerStyles)[];\n  const filteredStyles = pick(styles, keys);\n  const result = merge(\n    filteredStyles,\n    !overwriteDefaultStyles ? inlineStyles : ({} as InitialStyles)\n  );\n  return result;\n}\n","import {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronUpIcon,\n} from \"@chakra-ui/icons\";\nimport { IconButton, IconButtonProps } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { ActionButtonStyles } from \"../types\";\n\nexport interface ActionButtonProps extends Omit<IconButtonProps, \"aria-label\"> {\n  direction?: \"up\" | \"right\" | \"down\" | \"left\";\n}\n\nexport const ActionButton: React.FC<ActionButtonProps> = ({\n  direction,\n  ...props\n}) => {\n  let IconComponent = ChevronLeftIcon;\n\n  const styleProps = useStyleProps<ActionButtonStyles>({\n    actionButton: {\n      position: \"relative\",\n    },\n  });\n\n  if (direction === \"up\") {\n    IconComponent = ChevronUpIcon;\n  } else if (direction === \"right\") {\n    IconComponent = ChevronRightIcon;\n  } else if (direction === \"down\") {\n    IconComponent = ChevronDownIcon;\n  } else if (direction === \"left\") {\n    IconComponent = ChevronLeftIcon;\n  }\n\n  return (\n    <IconButton\n      aria-label={`Arrow ${direction}`}\n      icon={<IconComponent />}\n      {...props}\n      {...styleProps.actionButton}\n    />\n  );\n};\n","import {\n  CloseButton as ChakraCloseButton,\n  CloseButtonProps as ChakraCloseButtonProps,\n} from '@chakra-ui/react'\nimport React from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { CloseButtonStyles } from '../types'\n\nexport interface CloseButtonProps extends ChakraCloseButtonProps {}\n\nexport const CloseButton = (props: CloseButtonProps) => {\n  const styleProps = useStyleProps<CloseButtonStyles>({\n    closeButton: {\n      top: 1,\n      right: 1,\n      zIndex: 1,\n      position: 'absolute',\n    },\n  })\n  return <ChakraCloseButton {...styleProps.closeButton} {...props} />\n}\n","export interface DatepickerPhrases {\n  datepickerStartDatePlaceholder: string\n  datepickerStartDateLabel: string\n  datepickerEndDateLabel: string\n  datepickerEndDatePlaceholder: string\n  resetDates: string\n  close: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateSingleInputPhrases extends DatepickerPhrases {\n  dateAriaLabel: string\n  datePlaceholder: string\n}\n\nexport const datepickerPhrases: DatepickerPhrases = {\n  datepickerStartDatePlaceholder: 'Select',\n  datepickerStartDateLabel: 'Start date:',\n  datepickerEndDatePlaceholder: 'Select',\n  datepickerEndDateLabel: 'End date:',\n  resetDates: 'Clean Dates',\n  close: 'Close',\n}\n\nexport const dateRangeInputPhrases: DateRangeInputPhrases = {\n  ...datepickerPhrases,\n\n  startDateAriaLabel: 'Start date',\n  endDateAriaLabel: 'End date',\n\n  startDatePlaceholder: 'Start date',\n  endDatePlaceholder: 'End date',\n}\n\nexport const dateSingleInputPhrases: DateSingleInputPhrases = {\n  ...datepickerPhrases,\n  dateAriaLabel: 'Select date',\n  datePlaceholder: 'Select date',\n}\n","import dateFormat from 'date-fns/format'\n\nexport {\n  monthLabelFormat as monthLabelFormatFn,\n  weekdayLabelFormat as weekdayLabelFormatFn,\n} from '@datepicker-react/hooks'\n\nexport const dayLabelFormatFn = (date: Date) => dateFormat(date, 'd')\n\nexport const defaultDisplayFormat = 'MM/dd/yyyy'\n","import { FocusedInput, FormatFunction, useDatepicker } from '@datepicker-react/hooks'\nimport React, { useContext } from 'react'\nimport { datepickerPhrases, DatepickerPhrases } from '../phrases'\nimport { InputDate } from '../types'\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from '../utils/formatters'\n\nexport type UseDatepickerReturnType = ReturnType<typeof useDatepicker>\n\nexport interface DatepickerFormatProps {\n  dayLabelFormat: typeof dayLabelFormatFn\n  weekdayLabelFormat: typeof weekdayLabelFormatFn\n  monthLabelFormat: typeof monthLabelFormatFn\n}\n\nexport type OnDayRenderType = {\n  isFirst: boolean\n  isLast: boolean\n  isSelected: boolean\n  isWithinHoverRange: boolean\n  isSelectedStartOrEnd: boolean\n  disabledDate: boolean\n}\n\nexport interface DatepickerContextBaseProps {\n  displayFormat: FormatFunction | string\n  startDate: InputDate\n  endDate: InputDate\n  phrases: DatepickerPhrases\n  focusedInput: FocusedInput\n  onDayRender?(date: Date, state: OnDayRenderType): React.ReactNode\n}\n\nexport interface DatepickerContextProps\n  extends DatepickerContextBaseProps,\n    DatepickerFormatProps,\n    UseDatepickerReturnType {}\n\nexport interface DatepickerProviderProps extends Partial<DatepickerContextProps> {}\n\nconst defaultBase: DatepickerContextBaseProps = {\n  startDate: null,\n  endDate: null,\n  focusedInput: null,\n  onDayRender: undefined,\n  displayFormat: defaultDisplayFormat,\n  phrases: datepickerPhrases,\n}\n\nconst defaultFormatters: DatepickerFormatProps = {\n  monthLabelFormat: monthLabelFormatFn,\n  weekdayLabelFormat: weekdayLabelFormatFn,\n  dayLabelFormat: dayLabelFormatFn,\n}\n\nconst defaultUseDatepicker: UseDatepickerReturnType = {\n  numberOfMonths: 2,\n  activeMonths: [],\n  firstDayOfWeek: 0,\n  focusedDate: null,\n  hoveredDate: null,\n  goToDate: () => {},\n  goToNextMonths: () => {},\n  goToNextMonthsByOneMonth: () => {},\n  goToNextYear: () => {},\n  goToPreviousMonths: () => {},\n  goToPreviousMonthsByOneMonth: () => {},\n  goToPreviousYear: () => {},\n  isDateBlocked: () => false,\n  isDateFocused: () => false,\n  isDateHovered: () => false,\n  isDateSelected: () => false,\n  isEndDate: () => false,\n  isFirstOrLastSelectedDate: () => false,\n  isStartDate: () => false,\n  onDateFocus: () => {},\n  onDateHover: () => {},\n  onDateSelect: () => {},\n  onResetDates: () => {},\n}\n\nexport const datepickerContextDefaultValue: DatepickerContextProps = {\n  ...defaultBase,\n  ...defaultFormatters,\n  ...defaultUseDatepicker,\n}\n\nexport const DatepickerContext = React.createContext(datepickerContextDefaultValue)\n\nexport const useDatepickerContext = () => useContext(DatepickerContext)\n\nexport const DatepickerProvider: React.FC<DatepickerProviderProps> = ({ children, ...props }) => (\n  <DatepickerContext.Provider value={{ ...datepickerContextDefaultValue, ...props }}>\n    {children}\n  </DatepickerContext.Provider>\n)\n","import { Box, Button, useColorModeValue } from \"@chakra-ui/react\";\nimport { isEndDate, isStartDate, useDay } from \"@datepicker-react/hooks\";\nimport React, { useMemo, useRef } from \"react\";\nimport {\n  OnDayRenderType,\n  useDatepickerContext,\n} from \"../context/DatepickerContext\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { DayState, DayStyles } from \"../types\";\n\nfunction getColor<T>(\n  { isSelected, isWithinHoverRange, isFirst, isLast }: OnDayRenderType,\n  { base, normal, rangeHover, selected, firstOrLast, first, last }: DayState<T>\n) {\n  let style = base;\n  if (!isSelected && !isWithinHoverRange) style = { ...style, ...normal };\n  if (isSelected) style = { ...style, ...selected };\n  if (isWithinHoverRange) style = { ...style, ...rangeHover };\n  if (isFirst || isLast) style = { ...style, ...firstOrLast };\n  if (isFirst) style = { ...style, ...first };\n  if (isLast) style = { ...style, ...last };\n  return style;\n}\n\ninterface DayProps {\n  day: string;\n  date: Date;\n}\n\nexport function Day({ day, date }: DayProps) {\n  const dayRef = useRef<any>(null);\n\n  const {\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateSelect,\n    onDateFocus,\n    onDateHover,\n    onDayRender,\n    startDate,\n    endDate,\n  } = useDatepickerContext();\n\n  const dayProps = useDay({\n    date,\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateFocus,\n    onDateSelect,\n    onDateHover,\n    dayRef,\n  });\n\n  const {\n    onClick,\n    onKeyDown,\n    onMouseEnter,\n    tabIndex,\n    isSelectedStartOrEnd,\n    isSelected,\n    isWithinHoverRange,\n    disabledDate,\n  } = dayProps;\n\n  const styleProps = useStyleProps<DayStyles>({\n    day: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        minWidth: \"unset\",\n        fontWeight: \"medium\",\n        fontSize: [\"sm\", \"md\"],\n        border: \"2px solid\",\n        textColor: useColorModeValue(\"gray.900\", \"white\"),\n        borderRadius: \"100%\",\n        borderColor: \"transparent\",\n        background: \"transparent\",\n        overflow: \"hidden\",\n        _hover: {\n          borderColor: \"transparent\",\n          background: \"transparent\",\n        },\n      },\n      normal: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      rangeHover: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      selected: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      firstOrLast: {\n        textColor: useColorModeValue(\"white\", \"black\"),\n        background: useColorModeValue(\"blue.400\", \"white\"),\n        _hover: {\n          textColor: useColorModeValue(\"white\", \"black\"),\n          background: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      first: {},\n      last: {},\n    },\n    dayContainer: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      normal: {},\n      rangeHover: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      selected: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"0%\",\n        },\n      },\n      firstOrLast: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n      },\n      first: {\n        borderLeftRadius: \"100%\",\n      },\n      last: {\n        borderRightRadius: \"100%\",\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n    },\n  });\n\n  const isFirst = isStartDate(date, startDate);\n  const isLast = isEndDate(date, endDate);\n\n  const containerStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.dayContainer.base,\n          normal: styleProps.dayContainer.normal,\n          rangeHover: styleProps.dayContainer.rangeHover,\n          selected: styleProps.dayContainer.selected,\n          first: styleProps.dayContainer.first,\n          last: styleProps.dayContainer.last,\n          firstOrLast: styleProps.dayContainer.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  const buttonStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.day.base,\n          normal: styleProps.day.normal,\n          rangeHover: styleProps.day.rangeHover,\n          selected: styleProps.day.selected,\n          first: styleProps.day.first,\n          last: styleProps.day.last,\n          firstOrLast: styleProps.day.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  return (\n    <Box {...containerStyle}>\n      <Button\n        {...buttonStyle}\n        variant=\"unstyled\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        onMouseEnter={onMouseEnter}\n        tabIndex={tabIndex}\n        ref={dayRef}\n        disabled={disabledDate}\n        data-testid=\"Day\"\n        aria-label={`Day-${date.toDateString()}`}\n        type=\"button\"\n      >\n        {typeof onDayRender === \"function\"\n          ? onDayRender(date, {\n              isFirst,\n              isLast,\n              isSelected,\n              isWithinHoverRange,\n              isSelectedStartOrEnd,\n              disabledDate,\n            })\n          : day}\n      </Button>\n    </Box>\n  );\n}\n","import { StateProp } from '../types'\n\nexport const getStateStyle = <T>({ base, active }: StateProp<T>, isActive: boolean) => {\n  return isActive ? { ...base, ...active } : base\n}\n","import { CalendarIcon } from '@chakra-ui/icons'\nimport {\n  Icon,\n  Input as ChakraInput,\n  InputGroup,\n  InputLeftAddon,\n  InputProps as ChakraInputProps,\n} from '@chakra-ui/react'\nimport { parseDate } from '@datepicker-react/hooks'\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputComponentStyles, InputDate } from '../types'\nimport { defaultDisplayFormat } from '../utils/formatters'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface InputProps {\n  allowEditableInputs?: boolean\n  dateFormat?: string\n  disableAccessibility?: boolean\n  iconComponent?: typeof CalendarIcon\n  id?: string\n  isActive?: boolean\n  name?: string\n  onChange?(date: InputDate): void\n  onClick?(): void\n  placeholder?: string\n  showCalendarIcon?: boolean\n  value?: string\n}\n\ninterface BaseProps extends Omit<ChakraInputProps, 'onChange' | 'onClick' | 'value'>, InputProps {}\n\nexport const Input = forwardRef((props: BaseProps, inputRef: Ref<any>) => {\n  const {\n    dateFormat = defaultDisplayFormat,\n    disableAccessibility,\n    iconComponent = CalendarIcon,\n    id,\n    isActive = false,\n    name,\n    onChange = () => {},\n    onClick = () => {},\n    placeholder,\n    showCalendarIcon = true,\n    value,\n    allowEditableInputs = false,\n\n    ...inputProps\n  } = props\n\n  const ref = useRef<any>(null)\n\n  const [searchString, setSearchString] = useState(value)\n\n  const styleProps = useStyleProps<InputComponentStyles>({\n    inputComponentInputGroup: {\n      base: {},\n      active: {},\n    },\n    inputComponentInput: {\n      base: {},\n      active: {},\n    },\n    inputComponentIcon: {\n      base: {},\n      active: {},\n    },\n    inputComponentInputAddon: {\n      base: {},\n      active: {},\n    },\n  })\n\n  // Note: value was updated outside of InputComponent\n  useEffect(() => {\n    setSearchString(value)\n  }, [value])\n\n  function handleOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const dateValue = e.target.value\n    setSearchString(dateValue)\n\n    if (typeof ref.current === 'number') {\n      clearTimeout(ref.current)\n    }\n\n    ref.current = setTimeout(() => {\n      onClick()\n      const parsedDate = parseDate(dateValue, dateFormat, new Date())\n      const isValidDate = !isNaN(parsedDate.getDate())\n\n      if (isValidDate) {\n        onChange(parsedDate)\n      } else {\n        onChange(null)\n      }\n    }, 1000)\n  }\n\n  function handleOnFocus(_e: React.FocusEvent<HTMLInputElement>) {\n    onClick()\n  }\n\n  return (\n    <InputGroup {...getStateStyle(styleProps.inputComponentInputGroup, isActive)} htmlFor={id}>\n      {showCalendarIcon && (\n        <InputLeftAddon {...getStateStyle(styleProps.inputComponentInputAddon, isActive)}>\n          <Icon as={iconComponent} {...getStateStyle(styleProps.inputComponentIcon, isActive)} />\n        </InputLeftAddon>\n      )}\n      <ChakraInput\n        {...inputProps}\n        {...getStateStyle(styleProps.inputComponentInput, isActive)}\n        ref={inputRef}\n        id={id}\n        name={name}\n        isReadOnly={!allowEditableInputs}\n        value={searchString}\n        placeholder={placeholder}\n        tabIndex={disableAccessibility ? -1 : 0}\n        autoComplete=\"off\"\n        data-testid=\"DatepickerInput\"\n        onFocus={handleOnFocus}\n        onChange={handleOnChange}\n      />\n    </InputGroup>\n  )\n})\n","import { Box, Flex, SimpleGrid, Text } from '@chakra-ui/react'\nimport { CalendarDay, useMonth } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { MonthStyles } from '../types'\nimport { Day } from './Day'\n\nexport interface MonthProps {\n  year: number\n  month: number\n}\n\nexport const Month = ({ year, month }: MonthProps) => {\n  const styleProps = useStyleProps<MonthStyles>({\n    monthContainer: {},\n    monthMonthLabel: {\n      justifyContent: 'center',\n      fontWeight: 'bold',\n      mb: 6,\n      fontSize: ['md', 'lg'],\n    },\n    monthWeekdayLabel: {\n      justifyContent: 'center',\n      color: 'gray.500',\n      mb: 4,\n      fontSize: ['sm', 'md'],\n    },\n    monthDayGrid: {\n      rowGap: 1,\n    },\n  })\n\n  const {\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  } = useDatepickerContext()\n\n  const { days, weekdayLabels, monthLabel } = useMonth({\n    year,\n    month,\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  })\n\n  return (\n    <Box {...styleProps.monthContainer}>\n      <Flex {...styleProps.monthMonthLabel}>\n        <Text>{monthLabel}</Text>\n      </Flex>\n      <SimpleGrid columns={7}>\n        {weekdayLabels.map((weekdayLabel: string) => (\n          <Flex key={weekdayLabel} {...styleProps.monthWeekdayLabel}>\n            <Text>{weekdayLabel}</Text>\n          </Flex>\n        ))}\n      </SimpleGrid>\n      <SimpleGrid {...styleProps.monthDayGrid} columns={7}>\n        {days.map((day: CalendarDay, index: number) =>\n          typeof day === 'object' ? (\n            <Day date={day.date} key={`${day.dayLabel}-${index}`} day={day.dayLabel} />\n          ) : (\n            <div key={index} />\n          ),\n        )}\n      </SimpleGrid>\n    </Box>\n  )\n}\n","import { RepeatIcon } from '@chakra-ui/icons'\nimport { Button } from '@chakra-ui/react'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { ResetDatesButtonStyles } from '../types'\n\ninterface ResetDatesProps {\n  onResetDates(): void\n  text: string\n}\n\nexport function ResetDatesButton({ onResetDates, text }: ResetDatesProps) {\n  const { phrases } = useDatepickerContext()\n\n  const styleProps = useStyleProps<ResetDatesButtonStyles>({\n    resetDatesButton: {},\n  })\n\n  function handleMouseUp(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.currentTarget.blur()\n  }\n\n  return (\n    <Button\n      icon={<RepeatIcon />}\n      tabIndex={-1}\n      aria-label={phrases.resetDates}\n      {...styleProps.resetDatesButton}\n      onClick={onResetDates}\n      onMouseUp={handleMouseUp}\n    >\n      {text}\n    </Button>\n  )\n}\n","import { Stack, Text } from '@chakra-ui/react'\nimport { getInputValue } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputDate, SelectDateStyles } from '../types'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface SelectedDateProps {\n  isFocused: boolean\n  date: InputDate\n}\n\nexport const SelectedDate = ({ isFocused, date }: SelectedDateProps) => {\n  const { phrases, displayFormat } = useDatepickerContext()\n\n  const styleProps = useStyleProps<SelectDateStyles>({\n    selectDateContainer: {\n      base: {\n        width: '100%',\n        borderBottom: '2px solid',\n        borderColor: 'gray.300',\n        paddingBottom: [1, 3],\n      },\n      active: {\n        borderColor: 'blue.400',\n      },\n    },\n    selectDateText: {\n      base: {\n        fontSize: 'xs',\n        color: 'gray.500',\n      },\n      active: {},\n    },\n    selectDateDateText: {\n      base: {\n        fontWeight: 'bold',\n        fontSize: ['sm', 'md', 'lg'],\n      },\n      active: {},\n    },\n  })\n\n  return (\n    <Stack {...getStateStyle(styleProps.selectDateContainer, isFocused)}>\n      <Text {...getStateStyle(styleProps.selectDateText, isFocused)}>\n        {phrases.datepickerStartDateLabel}\n      </Text>\n      <Text {...getStateStyle(styleProps.selectDateDateText, isFocused)}>\n        {getInputValue(date, displayFormat, phrases.datepickerStartDatePlaceholder)}\n      </Text>\n    </Stack>\n  )\n}\n","import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Flex,\n  HStack,\n  Stack,\n  useBreakpointValue,\n  useColorModeValue,\n  useTheme,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  MonthType,\n  START_DATE,\n  useDatepicker,\n  UseDatepickerProps,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useImperativeHandle, useRef } from \"react\";\nimport {\n  ActionButton,\n  CloseButton,\n  Month,\n  ResetDatesButton,\n  SelectedDate,\n} from \"./components\";\nimport {\n  DatepickerFormatProps,\n  DatepickerProvider,\n} from \"./context/DatepickerContext\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { DatepickerPhrases, datepickerPhrases } from \"./phrases\";\nimport { DatepickerComponentStyles } from \"./types\";\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from \"./utils/formatters\";\n\nexport interface DatepickerElement {\n  onDateSelect?(date: Date): void;\n}\n\nexport interface DatepickerProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerFormatProps>,\n    Partial<UseDatepickerProps> {\n  displayFormat?: string;\n  onClose?(): void;\n  onDayRender?(date: Date): React.ReactNode;\n  phrases?: DatepickerPhrases;\n  showClose?: boolean;\n  showResetDates?: boolean;\n  showSelectedDates?: boolean;\n  vertical?: boolean;\n}\n\nexport const Datepicker = React.forwardRef(\n  (props: DatepickerProps, ref: Ref<DatepickerElement>) => {\n    const {\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      endDate = null,\n      exactMinBookingDays = false,\n      firstDayOfWeek,\n      focusedInput = null,\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays = 1,\n      monthLabelFormat,\n      numberOfMonths = 2,\n      onClose = () => {},\n      onDatesChange = () => {},\n      onDayRender,\n      overwriteDefaultStyles,\n      phrases = datepickerPhrases,\n      showClose = true,\n      showResetDates = true,\n      showSelectedDates = true,\n      startDate = null,\n      styles: customStyles,\n      unavailableDates = [],\n      weekdayLabelFormat,\n    } = props;\n\n    const dp = useDatepicker({\n      changeActiveMonthOnSelect,\n      endDate,\n      exactMinBookingDays,\n      firstDayOfWeek,\n      focusedInput,\n      initialVisibleMonth,\n      isDateBlocked,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays,\n      numberOfMonths,\n      onDatesChange,\n      startDate,\n      unavailableDates,\n    });\n\n    useImperativeHandle(ref, () => ({\n      onDateSelect: (date: Date) => {\n        dp.onDateSelect(date);\n      },\n    }));\n\n    const monthGridRef = useRef<HTMLDivElement>(null);\n\n    function scrollTopToMonthGrid() {\n      if (monthGridRef && monthGridRef.current && vertical) {\n        monthGridRef.current.scrollTop = 0;\n      }\n    }\n\n    function _goToNextMonths() {\n      dp.goToNextMonths();\n      scrollTopToMonthGrid();\n    }\n\n    function _goToPreviousMonths() {\n      dp.goToPreviousMonths();\n      scrollTopToMonthGrid();\n    }\n\n    const isMobile = useBreakpointValue({ base: true, md: false });\n    const vertical = props.vertical || isMobile;\n\n    const styleProps = useStyleProps<DatepickerComponentStyles>({\n      datepickerContainer: {\n        background: useColorModeValue(\"white\", \"gray.700\"),\n        borderRadius: \"md\",\n        position: \"relative\",\n        width: \"fit-content\",\n        shadow: \"md\",\n        px: [3, 5],\n        py: [5, 7],\n        zIndex: 1,\n      },\n      monthsWrapper: {\n        spacing: [0, 8],\n      },\n      buttonsWrapper: {\n        spacing: [1, 3],\n      },\n      arrowIcon: {\n        my: [5, 15],\n        color: \"gray.500\",\n      },\n      datepickerFooter: {\n        justifyContent: \"space-between\",\n        pt: [1, 3],\n      },\n    });\n\n    return (\n      <StylesProvider\n        styles={customStyles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <DatepickerProvider\n          activeMonths={dp.activeMonths}\n          dayLabelFormat={dayLabelFormat || dayLabelFormatFn}\n          displayFormat={displayFormat}\n          endDate={endDate}\n          firstDayOfWeek={dp.firstDayOfWeek}\n          focusedDate={dp.focusedDate}\n          focusedInput={focusedInput}\n          goToDate={dp.goToDate}\n          goToNextMonths={_goToNextMonths}\n          goToNextMonthsByOneMonth={dp.goToNextMonthsByOneMonth}\n          goToNextYear={dp.goToNextYear}\n          goToPreviousMonths={_goToPreviousMonths}\n          goToPreviousMonthsByOneMonth={dp.goToPreviousMonthsByOneMonth}\n          goToPreviousYear={dp.goToPreviousYear}\n          hoveredDate={dp.hoveredDate}\n          isDateBlocked={dp.isDateBlocked}\n          isDateFocused={dp.isDateFocused}\n          isDateHovered={dp.isDateHovered}\n          isDateSelected={dp.isDateSelected}\n          isEndDate={dp.isEndDate}\n          isFirstOrLastSelectedDate={dp.isFirstOrLastSelectedDate}\n          isStartDate={dp.isStartDate}\n          monthLabelFormat={monthLabelFormat || monthLabelFormatFn}\n          numberOfMonths={dp.numberOfMonths}\n          onDateFocus={dp.onDateFocus}\n          onDateHover={dp.onDateHover}\n          onDateSelect={dp.onDateSelect}\n          onDayRender={onDayRender}\n          onResetDates={dp.onResetDates}\n          phrases={phrases}\n          startDate={startDate}\n          weekdayLabelFormat={weekdayLabelFormat || weekdayLabelFormatFn}\n        >\n          <Box {...styleProps.datepickerContainer} zIndex={10} mt={\"8px\"}>\n            {showClose && <CloseButton onClick={onClose} />}\n\n            {showSelectedDates && (\n              <Box mb={6}>\n                <HStack data-testid=\"SelectedDatesGrid\">\n                  <SelectedDate\n                    date={startDate}\n                    isFocused={focusedInput === START_DATE}\n                  />\n                  <Flex justifyContent=\"center\" alignItems=\"center\">\n                    <ArrowForwardIcon {...styleProps.arrowIcon} />\n                  </Flex>\n                  <SelectedDate\n                    date={endDate}\n                    isFocused={focusedInput === END_DATE}\n                  />\n                </HStack>\n              </Box>\n            )}\n            <Box position=\"relative\">\n              <Stack\n                overflow={vertical ? \"auto\" : undefined}\n                data-testid=\"MonthGrid\"\n                isInline={!vertical}\n                ref={monthGridRef}\n                padding={1}\n                {...styleProps.monthsWrapper}\n                onMouseLeave={() => {\n                  if (dp.hoveredDate) {\n                    dp.onDateHover(null);\n                  }\n                }}\n              >\n                {dp.activeMonths.map((month: MonthType) => (\n                  <Month\n                    key={`month-${month.year}-${month.month}`}\n                    year={month.year}\n                    month={month.month}\n                  />\n                ))}\n              </Stack>\n\n              <Flex {...styleProps.datepickerFooter}>\n                <HStack {...styleProps.buttonsWrapper}>\n                  <ActionButton\n                    direction={vertical ? \"up\" : \"left\"}\n                    onClick={_goToPreviousMonths}\n                    aria-label=\"Previous month\"\n                  />\n                  <ActionButton\n                    direction={vertical ? \"down\" : \"right\"}\n                    onClick={_goToNextMonths}\n                    aria-label=\"Next month\"\n                  />\n                </HStack>\n                {showResetDates && (\n                  <ResetDatesButton\n                    onResetDates={dp.onResetDates}\n                    text={phrases.resetDates}\n                  />\n                )}\n              </Flex>\n            </Box>\n          </Box>\n        </DatepickerProvider>\n      </StylesProvider>\n    );\n  }\n);\n","import { ArrowForwardIcon, CalendarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Stack,\n  StackDivider,\n  useBreakpointValue,\n  Icon,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  FocusedInput,\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useEffect, useRef, useState } from \"react\";\nimport { FaArrowRight } from \"react-icons/all\";\nimport { Input, InputProps } from \"./components\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { dateRangeInputPhrases, DateRangeInputPhrases } from \"./phrases\";\nimport { DateRangeInputStyles, InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface DateRangeInputProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerProps> {\n  startDateInputProps?: Partial<InputProps>;\n  endDateInputProps?: Partial<InputProps>;\n  phrases?: DateRangeInputPhrases;\n  showDivider?: boolean;\n  placement?: \"top\" | \"bottom\";\n  onFocusChange?(focusedInput: FocusedInput): void;\n  endIcon?: typeof CalendarIcon;\n  endId?: string;\n  endName?: string;\n  endPlaceholder?: string;\n  endRef?: Ref<HTMLInputElement>;\n  endShowCalendarIcon?: boolean;\n  startIcon?: typeof CalendarIcon;\n  startId?: string;\n  startName?: string;\n  startPlaceholder?: string;\n  startRef?: Ref<HTMLInputElement>;\n  startShowCalendarIcon?: boolean;\n  allowEditableInputs?: boolean;\n}\n\nexport const DateRangeInput: React.FC<DateRangeInputProps> = (props) => {\n  const {\n    endDate: endDateProp = null,\n    startDate: startDateProp = null,\n    focusedInput: focusedInputProp = null,\n    displayFormat = defaultDisplayFormat,\n    endShowCalendarIcon = true,\n    isDateBlocked = () => false,\n    minBookingDays = 1,\n    phrases = dateRangeInputPhrases,\n    placement = \"bottom\",\n    showClose = true,\n    showDivider = false,\n    showResetDates = true,\n    showSelectedDates = true,\n    startShowCalendarIcon = true,\n    onClose = () => {},\n    onDatesChange = () => {},\n    onFocusChange = () => {},\n    styles: customStyles,\n    overwriteDefaultStyles,\n    startIcon,\n    startId,\n    startName,\n    startPlaceholder,\n    startRef,\n    endId,\n    endName,\n    endRef,\n    endIcon,\n    endPlaceholder,\n    changeActiveMonthOnSelect,\n    dayLabelFormat,\n    exactMinBookingDays,\n    firstDayOfWeek,\n    initialVisibleMonth,\n    maxBookingDate,\n    minBookingDate,\n    monthLabelFormat,\n    numberOfMonths,\n    onDayRender,\n    unavailableDates,\n    weekdayLabelFormat,\n    allowEditableInputs,\n  } = props;\n\n  const datepickerRef = useRef<DatepickerElement>(null);\n  const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n  const [startDate, setStartDate] = useState<InputDate>(startDateProp);\n  const [endDate, setEndDate] = useState<InputDate>(endDateProp);\n  const [focusedInput, setFocusedInput] =\n    useState<FocusedInput>(focusedInputProp);\n\n  useEffect(() => {\n    setStartDate(startDateProp);\n    setEndDate(endDateProp);\n  }, [startDateProp, endDateProp]);\n\n  const styleProps = useStyleProps<DateRangeInputStyles>({\n    dateRangeInputContainer: { spacing: 5 },\n    dateRangeInputDivider: {},\n  });\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"click\", onClickOutsideHandler);\n    }\n    return () => {\n      window.removeEventListener(\"click\", onClickOutsideHandler);\n    };\n  });\n\n  function handleOnFocusChange(_focusedInput: FocusedInput) {\n    setFocusedInput(_focusedInput);\n    onFocusChange(_focusedInput);\n  }\n\n  function handleOnDatesChange(data: OnDatesChangeProps) {\n    setStartDate(data.startDate);\n    setEndDate(data.endDate);\n    setFocusedInput(data.focusedInput);\n    onDatesChange(data);\n  }\n\n  function onClickOutsideHandler(event: Event) {\n    if (\n      focusedInput !== null &&\n      datepickerWrapperRef &&\n      datepickerWrapperRef.current &&\n      // @ts-ignore\n      !datepickerWrapperRef.current.contains(event.target)\n    ) {\n      handleOnFocusChange(null);\n    }\n  }\n\n  function handleOnClose() {\n    handleOnFocusChange(null);\n    onClose();\n  }\n\n  function handleInputChange(date: Date) {\n    if (\n      datepickerRef &&\n      datepickerRef.current &&\n      datepickerRef.current.onDateSelect\n    ) {\n      datepickerRef.current.onDateSelect(date);\n    }\n  }\n\n  const isMobile = useBreakpointValue({ base: true, md: false });\n  const vertical = props.vertical || isMobile;\n\n  return (\n    <StylesProvider\n      styles={customStyles}\n      overwriteDefaultStyles={overwriteDefaultStyles}\n    >\n      <Box position=\"relative\" ref={datepickerWrapperRef}>\n        <Stack\n          isInline={!isMobile}\n          {...styleProps.dateRangeInputContainer}\n          data-testid=\"DateRangeInputGrid\"\n          divider={\n            showDivider ? (\n              <StackDivider {...styleProps.dateRangeInputDivider} />\n            ) : undefined\n          }\n        >\n          <Input\n            iconComponent={startIcon}\n            id={startId || \"startDate\"}\n            name={startName || \"startDate\"}\n            placeholder={startPlaceholder || phrases.startDatePlaceholder}\n            ref={startRef}\n            showCalendarIcon={startShowCalendarIcon}\n            aria-label={phrases.startDateAriaLabel}\n            dateFormat={displayFormat}\n            isActive={focusedInput === START_DATE}\n            onChange={handleInputChange}\n            onClick={() => handleOnFocusChange(START_DATE)}\n            value={getInputValue(startDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box textAlign=\"center\" w=\"20px\">\n            <ArrowForwardIcon alignSelf=\"center\" w={5} h=\"100%\" />\n          </Box>\n          <Input\n            id={endId || \"endDate\"}\n            name={endName || \"endDate\"}\n            ref={endRef}\n            iconComponent={endIcon}\n            placeholder={endPlaceholder || phrases.endDatePlaceholder}\n            showCalendarIcon={endShowCalendarIcon}\n            aria-label={phrases.endDateAriaLabel}\n            dateFormat={displayFormat}\n            disableAccessibility={focusedInput === START_DATE}\n            isActive={focusedInput === END_DATE}\n            onChange={handleInputChange}\n            onClick={() =>\n              handleOnFocusChange(!startDate ? START_DATE : END_DATE)\n            }\n            value={getInputValue(endDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n        </Stack>\n        <Box\n          position=\"absolute\"\n          top={placement === \"top\" ? undefined : vertical ? \"100px\" : \"45px\"}\n          bottom={\n            placement === \"bottom\" ? undefined : vertical ? \"100px\" : \"45px\"\n          }\n        >\n          {focusedInput !== null && (\n            <Datepicker\n              ref={datepickerRef}\n              startDate={startDate}\n              endDate={endDate}\n              focusedInput={focusedInput}\n              onClose={handleOnClose}\n              onDatesChange={handleOnDatesChange}\n              changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n              dayLabelFormat={dayLabelFormat}\n              exactMinBookingDays={exactMinBookingDays}\n              firstDayOfWeek={firstDayOfWeek}\n              initialVisibleMonth={initialVisibleMonth}\n              isDateBlocked={isDateBlocked}\n              maxBookingDate={maxBookingDate}\n              minBookingDate={minBookingDate}\n              minBookingDays={minBookingDays}\n              monthLabelFormat={monthLabelFormat}\n              numberOfMonths={vertical ? 1 : numberOfMonths}\n              onDayRender={onDayRender}\n              phrases={phrases}\n              unavailableDates={unavailableDates}\n              displayFormat={displayFormat}\n              showClose={showClose}\n              showResetDates={showResetDates}\n              showSelectedDates={showSelectedDates}\n              vertical={vertical}\n              weekdayLabelFormat={weekdayLabelFormat}\n            />\n          )}\n        </Box>\n      </Box>\n    </StylesProvider>\n  );\n};\n","import { Box } from \"@chakra-ui/react\";\nimport {\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from \"react\";\nimport { Input, InputProps } from \"./components\";\nimport { StylesProvider } from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { DateSingleInputPhrases, dateSingleInputPhrases } from \"./phrases\";\nimport { InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface OnDateChangeProps {\n  date: InputDate;\n  showDatepicker: boolean;\n}\n\nexport interface DateSingleInputProps\n  extends Partial<InputProps>,\n    Partial<DatepickerProps> {\n  onFocusChange?(focusInput: boolean): void;\n  phrases?: DateSingleInputPhrases;\n  placement?: \"top\" | \"bottom\";\n  showDatepicker?: boolean;\n  date?: InputDate;\n  showResetDate?: boolean;\n}\n\nexport const DateSingleInput = forwardRef(\n  (\n    {\n      date: dateProp = null,\n      showDatepicker: showDatepickerProp = false,\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      firstDayOfWeek,\n      iconComponent,\n      id = \"startDate\",\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      monthLabelFormat,\n      name = \"startDate\",\n      numberOfMonths = 1,\n      onChange = () => {},\n      onClick = () => {},\n      onClose = () => {},\n      onDayRender,\n      onFocusChange = () => {},\n      overwriteDefaultStyles,\n      phrases = dateSingleInputPhrases,\n      placeholder,\n      placement = \"bottom\",\n      showCalendarIcon = true,\n      showClose = true,\n      showResetDate = true,\n      styles,\n      unavailableDates = [],\n      value,\n      vertical = false,\n      weekdayLabelFormat,\n      allowEditableInputs = false,\n    }: DateSingleInputProps,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    const datepickerRef = useRef<DatepickerElement>(null);\n    const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [date, setDate] = useState<InputDate>(\n      value ? new Date(value) : dateProp\n    );\n    const [showDatepicker, setShowDatepicker] = useState(showDatepickerProp);\n\n    useEffect(() => {\n      onChange(date);\n    }, [date, onChange]);\n\n    useEffect(() => {\n      onFocusChange(showDatepicker);\n    }, [onFocusChange, showDatepicker]);\n\n    useEffect(() => {\n      if (typeof window !== \"undefined\") {\n        window.addEventListener(\"click\", onClickOutsideHandler);\n      }\n      return () => {\n        window.removeEventListener(\"click\", onClickOutsideHandler);\n      };\n    });\n\n    function handleOnFocusChange(show: boolean) {\n      setShowDatepicker(show);\n    }\n\n    function onClickOutsideHandler(event: Event) {\n      if (\n        showDatepicker &&\n        datepickerWrapperRef &&\n        datepickerWrapperRef.current &&\n        // @ts-ignore\n        !datepickerWrapperRef.current.contains(event.target)\n      ) {\n        handleOnFocusChange(false);\n      }\n    }\n\n    function handleDatepickerClose() {\n      handleOnFocusChange(false);\n      onClose();\n    }\n\n    function handleOnDatesChange(data: OnDatesChangeProps) {\n      handleOnFocusChange(data.focusedInput !== null);\n      setDate(data.startDate);\n    }\n\n    function handleInputChange(date: Date) {\n      if (\n        datepickerRef &&\n        datepickerRef.current &&\n        datepickerRef.current.onDateSelect\n      ) {\n        datepickerRef.current.onDateSelect(date);\n      }\n    }\n\n    return (\n      <StylesProvider\n        styles={styles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <Box position=\"relative\" ref={datepickerWrapperRef}>\n          <Input\n            ref={ref}\n            id={id}\n            name={name}\n            aria-label={phrases.dateAriaLabel}\n            value={getInputValue(date, displayFormat, \"\")}\n            placeholder={placeholder || phrases.datePlaceholder}\n            dateFormat={displayFormat}\n            showCalendarIcon={showCalendarIcon}\n            isActive={showDatepicker}\n            onChange={handleInputChange}\n            onClick={() => {\n              handleOnFocusChange(true);\n              onClick();\n            }}\n            disableAccessibility={false}\n            iconComponent={iconComponent}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box\n            position=\"absolute\"\n            top={placement === \"bottom\" ? \"45px\" : undefined}\n            bottom={placement === \"top\" ? \"45px\" : undefined}\n          >\n            {showDatepicker && (\n              <Datepicker\n                changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n                dayLabelFormat={dayLabelFormat}\n                displayFormat={displayFormat}\n                endDate={date}\n                exactMinBookingDays\n                firstDayOfWeek={firstDayOfWeek}\n                focusedInput={showDatepicker ? START_DATE : null}\n                initialVisibleMonth={initialVisibleMonth}\n                isDateBlocked={isDateBlocked}\n                maxBookingDate={maxBookingDate}\n                minBookingDate={minBookingDate}\n                minBookingDays={1}\n                monthLabelFormat={monthLabelFormat}\n                numberOfMonths={numberOfMonths}\n                onClose={handleDatepickerClose}\n                onDatesChange={handleOnDatesChange}\n                onDayRender={onDayRender}\n                phrases={phrases}\n                ref={datepickerRef}\n                showClose={showClose}\n                showResetDates={showResetDate}\n                showSelectedDates={false}\n                startDate={date}\n                unavailableDates={unavailableDates}\n                vertical={vertical}\n                weekdayLabelFormat={weekdayLabelFormat}\n              />\n            )}\n          </Box>\n        </Box>\n      </StylesProvider>\n    );\n  }\n);\n","import { InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n} from \"@azure/msal-react\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Text,\n  Table as CTable,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Stack,\n  VStack,\n  HStack,\n  Input,\n  IconButton,\n  CloseButton,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Tag,\n  Divider,\n  Portal,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport { TagPicker } from \"rsuite\";\nimport { Table, IconButton as RIconButton } from \"rsuite\";\nimport { msalInstance } from \"../../index\";\nimport {\n  AiOutlineDelete,\n  AiOutlineMinus,\n  AiOutlinePlus,\n  BiPlusMedical,\n} from \"react-icons/all\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useEffect, useState } from \"react\";\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport { RestAPI } from \"../../api/rest\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\n\nconst { ColumnGroup, Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n}\n\ninterface FilterField {\n  column: string;\n  type: string;\n  filter: string;\n  values: any[];\n  selectedValues: any[];\n}\n\nconst filterTypes = {\n  textfield: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  textarea: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  select: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  datetime: [{ label: \"Range\", value: \"range\" }],\n};\n\nexport function TableExplorer(props: Props) {\n  const [project, setProject] = useState<Project>({\n    id: \"\",\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filters, setFilters] = useState<FilterField[]>([]);\n  const [displayedColumns, setDisplayedColumns] = useState<any[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<any[]>([]);\n  const [expandedRowKeys, setExpandedRowKeys] = useState<any[]>([]);\n\n  const handleExpanded = (rowData: any, dataKey: any) => {\n    let open = false;\n    const nextExpandedRowKeys = [];\n\n    expandedRowKeys.forEach((key) => {\n      if (key === rowData[\"id\"]) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    });\n\n    if (!open) {\n      nextExpandedRowKeys.push(rowData[\"id\"]);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n  };\n\n  useEffect(() => {\n    if (project.id) {\n      RestAPI.getSubmissions(project.id).then((response) => {\n        var subm = response.data;\n        if (subm == null) {\n          subm = [];\n        }\n        subm.reverse();\n        setSubmissions(subm);\n        // project.components.map((component: any) => {\n        //   if (component.type === \"customTable\") {\n        //     subm.map((sub) => {\n        //       if (sub.children === undefined) {\n        //         sub.children = [];\n        //       }\n        //       sub.data[component.key].map((tableRecord: any, index: number) => {\n        //         sub.children.push({\n        //           id: uuidv4(),\n        //           title: `[${index + 1}] ${component.label}`,\n        //           data: tableRecord,\n        //         });\n        //       });\n        //     });\n        //   }\n        // });\n        setFilteredSubmissions(subm);\n      });\n    }\n  }, [project]);\n\n  useEffect(() => {\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    var filtered: Submission[] = [];\n    if (filters.length > 0) {\n      submissions.map((submission) => {\n        var valid = true;\n        filters.map((filter) => {\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            // filter\n            var value = submission.data[filter.column];\n            switch (filter.type) {\n              case \"textfield\":\n              case \"textarea\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"select\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    filter.selectedValues.map((filterValue) => {\n                      var exists = false;\n                      value.map((v: any) => {\n                        if (v.toString() === filterValue) {\n                          exists = true;\n                        }\n                      });\n                      if (!exists) {\n                        valid = false;\n                      }\n                    });\n                    break;\n                  case \"includes\":\n                    valid = filter.selectedValues.some((fv) =>\n                      value.includes(fv)\n                    );\n                    break;\n                }\n                break;\n              case \"datetime\":\n                if (\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2\n                ) {\n                  var v = new Date(value);\n                  valid =\n                    v >= filter.selectedValues[0] &&\n                    v <= filter.selectedValues[1];\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          filtered.push(submission);\n        }\n      });\n    }\n    setFilteredSubmissions(filtered);\n  }, [filters]);\n\n  return (\n    <>\n      {/* <AuthenticatedTemplate> */}\n      <div>\n        <Box mb=\"3em\" float=\"right\" w={{ base: \"100%\", md: \"400px\" }}>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: project.title,\n              value: project.id,\n              project: project,\n            }}\n            onChange={(value: any) => {\n              setProject(value.project);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projects\"\n            options={projects.map((project) => {\n              return {\n                label: project.title,\n                value: project.id,\n                project: project,\n              };\n            })}\n          />\n        </Box>\n\n        <VStack mb={\"2em\"} w=\"100%\" spacing={\"2em\"}>\n          <Box w=\"100%\" boxShadow={\"md\"} rounded={\"md\"} bg=\"white\" p=\"2em\">\n            <Stack\n              mb={\"1em\"}\n              w=\"100%\"\n              spacing={{ base: \"2em\", xl: \"4em\" }}\n              direction={{ base: \"column\", lg: \"row\" }}\n              color={\"gray.500\"}\n            >\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Displayed Columns</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  value={displayedColumns}\n                  onChange={(values) => {\n                    setDisplayedColumns(values);\n                  }}\n                  data={project.components\n                    .filter(\n                      (component: any) =>\n                        component.input && component.type !== \"button\"\n                    )\n                    .map((component: any) => {\n                      return { label: component.label, value: component.key };\n                    })}\n                  block\n                />\n              </Box>\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Submission Date</Text>\n                <DateRangeInput\n                  allowEditableInputs={true}\n                  displayFormat=\"dd.MM.yyyy\"\n                  maxBookingDate={new Date()}\n                />\n              </Box>\n            </Stack>\n            <Stack\n              w=\"100%\"\n              spacing={{ base: \"2em\", xl: \"4em\" }}\n              direction={{ base: \"column\", lg: \"row\" }}\n              color={\"gray.500\"}\n            >\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Statuses</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  data={\n                    project.statuses\n                      ? project.statuses.map((status) => {\n                          return { label: status, value: status };\n                        })\n                      : []\n                  }\n                  block\n                />\n              </Box>\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Authors</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  data={[]}\n                  block\n                />\n              </Box>\n            </Stack>\n          </Box>\n\n          <Box\n            shadow=\"md\"\n            color=\"gray.600\"\n            backgroundColor=\"white\"\n            mb={10}\n            p={8}\n            pb={0}\n            rounded=\"md\"\n            w={\"100%\"}\n          >\n            <VStack\n              spacing={8}\n              fontSize=\"md\"\n              align=\"stretch\"\n              color={\"gray.500\"}\n            >\n              <Box w={\"100%\"}>\n                <Box w={\"100%\"}>\n                  {filters.map((filter, index) => {\n                    var valuesField: JSX.Element = <div></div>;\n\n                    switch (filter.type) {\n                      case \"textfield\":\n                      case \"textarea\":\n                        valuesField = (\n                          <Input\n                            onChange={(event) => {\n                              var temp = [...filters];\n                              temp[index!].selectedValues[0] =\n                                event.target.value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                          />\n                        );\n                        break;\n                      case \"number\":\n                        switch (filter.filter) {\n                          case \"exact\":\n                            valuesField = (\n                              <NumberInput\n                                onChange={(_, value) => {\n                                  var temp = [...filters];\n                                  temp[index!].selectedValues[0] = value;\n                                  setFilters(temp);\n                                }}\n                                value={filter.selectedValues[0]}\n                                w=\"100%\"\n                              >\n                                <NumberInputField />\n                                <NumberInputStepper>\n                                  <NumberIncrementStepper />\n                                  <NumberDecrementStepper />\n                                </NumberInputStepper>\n                              </NumberInput>\n                            );\n                            break;\n                          case \"range\":\n                            valuesField = (\n                              <Stack direction={{ base: \"column\", md: \"row\" }}>\n                                <NumberInput\n                                  w=\"100%\"\n                                  onChange={(_, value) => {\n                                    var temp = [...filters];\n                                    temp[index!].selectedValues[0] = value;\n                                    setFilters(temp);\n                                  }}\n                                  value={filter.selectedValues[0]}\n                                >\n                                  <NumberInputField />\n                                  <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                  </NumberInputStepper>\n                                </NumberInput>\n                                <Box textAlign=\"center\" w=\"20px\">\n                                  <ArrowForwardIcon\n                                    alignSelf=\"center\"\n                                    w={5}\n                                    h=\"100%\"\n                                  />\n                                </Box>\n                                <NumberInput\n                                  w=\"100%\"\n                                  onChange={(_, value) => {\n                                    var temp = [...filters];\n                                    temp[index!].selectedValues[1] = value;\n                                    setFilters(temp);\n                                  }}\n                                  value={filter.selectedValues[1]}\n                                >\n                                  <NumberInputField />\n                                  <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                  </NumberInputStepper>\n                                </NumberInput>\n                              </Stack>\n                            );\n                            break;\n                        }\n                        break;\n                      case \"select\":\n                        valuesField = (\n                          <TagPicker\n                            cleanable\n                            style={{\n                              minHeight: \"40px\",\n                              paddingTop: \"2px\",\n                            }}\n                            onChange={(value) => {\n                              var temp = [...filters];\n                              temp[index!].selectedValues = value;\n                              setFilters(temp);\n                            }}\n                            data={filter.selectedValues}\n                            block\n                          />\n                        );\n                        break;\n                      case \"datetime\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                          />\n                        );\n                    }\n\n                    return (\n                      <Box\n                        w={\"100%\"}\n                        backgroundColor=\"white\"\n                        p={4}\n                        mb={5}\n                        border=\"1px\"\n                        rounded=\"md\"\n                        borderColor=\"gray.100\"\n                      >\n                        <CloseButton\n                          onClick={() => {\n                            var temp = [...filters];\n                            temp.splice(index, 1);\n                            setFilters(temp);\n                          }}\n                          float=\"right\"\n                        />\n                        <VStack\n                          mt={\"20px\"}\n                          spacing={8}\n                          fontSize=\"md\"\n                          align=\"stretch\"\n                          color={\"gray.500\"}\n                        >\n                          <Box>\n                            <Stack\n                              direction={{ base: \"column\", xl: \"row\" }}\n                              w=\"100%\"\n                              spacing={{ base: \"20px\", xl: \"50px\" }}\n                            >\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Column</Text>\n                                <Select\n                                  styles={{\n                                    menu: (provided) => ({\n                                      ...provided,\n                                      zIndex: 1000000,\n                                    }),\n                                    singleValue: (provided) => ({\n                                      ...provided,\n                                      color: \"#718196\",\n                                    }),\n                                    control: (base, state) => ({\n                                      ...base,\n                                      minHeight: 40,\n                                      border: \"1px solid #E2E8F0\",\n                                      transition: \"0.3s\",\n                                      \"&:hover\": {\n                                        border: \"1px solid #CBD5E0\",\n                                      },\n                                    }),\n                                  }}\n                                  theme={(theme) => ({\n                                    ...theme,\n                                    borderRadius: 6,\n                                    colors: {\n                                      ...theme.colors,\n                                      primary: \"#3082CE\",\n                                    },\n                                  })}\n                                  value={{\n                                    label: filter.column,\n                                    value: filter.column,\n                                  }}\n                                  onChange={(value: any) => {\n                                    var temp = [...filters];\n                                    temp[index!].column = value.value;\n                                    temp[index!].type = value.type;\n                                    var tv: any = [];\n                                    switch (value.type) {\n                                      case \"textfield\":\n                                      case \"textarea\":\n                                        tv = [\"\"];\n                                        break;\n                                      case \"number\":\n                                        if (temp[index!].filter === \"exact\") {\n                                          tv = [0];\n                                        } else {\n                                          tv = [0, 0];\n                                        }\n                                        break;\n                                    }\n                                    temp[index!].selectedValues = tv;\n                                    setFilters(temp);\n                                  }}\n                                  classNamePrefix=\"select\"\n                                  isClearable={false}\n                                  name=\"color\"\n                                  options={project.components\n                                    .filter(\n                                      (component: any) =>\n                                        component.input &&\n                                        component.type !== \"button\"\n                                    )\n                                    .map((component: any) => {\n                                      return {\n                                        label: component.label,\n                                        value: component.key,\n                                        type: component.type,\n                                      };\n                                    })}\n                                />\n                              </Box>\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Type</Text>\n                                <Input\n                                  onChange={() => {}}\n                                  value={filter.type}\n                                  readOnly\n                                />\n                              </Box>\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Filter</Text>\n                                <Select\n                                  styles={{\n                                    menu: (provided) => ({\n                                      ...provided,\n                                      zIndex: 1000000,\n                                    }),\n                                    singleValue: (provided) => ({\n                                      ...provided,\n                                      color: \"#718196\",\n                                    }),\n                                    control: (base, state) => ({\n                                      ...base,\n                                      minHeight: 40,\n                                      border: \"1px solid #E2E8F0\",\n                                      transition: \"0.3s\",\n                                      \"&:hover\": {\n                                        border: \"1px solid #CBD5E0\",\n                                      },\n                                    }),\n                                  }}\n                                  theme={(theme) => ({\n                                    ...theme,\n                                    borderRadius: 6,\n                                    colors: {\n                                      ...theme.colors,\n                                      primary: \"#3082CE\",\n                                    },\n                                  })}\n                                  value={{\n                                    label:\n                                      filter.filter.charAt(0).toUpperCase() +\n                                      filter.filter.slice(1),\n                                    value: filter.filter,\n                                  }}\n                                  onChange={(value: any) => {\n                                    var temp = [...filters];\n                                    temp[index!].filter = value.value;\n                                    setFilters(temp);\n                                  }}\n                                  classNamePrefix=\"select\"\n                                  isClearable={false}\n                                  name=\"filter\"\n                                  options={\n                                    filterTypes[\n                                      filter.type as keyof typeof filterTypes\n                                    ]\n                                  }\n                                />\n                              </Box>\n                            </Stack>\n                          </Box>\n                          <Stack\n                            direction={{ base: \"column\", xl: \"row\" }}\n                            w=\"100%\"\n                            spacing={{ base: \"20px\", xl: \"50px\" }}\n                          >\n                            <Box w=\"100%\">\n                              <Text mb=\"8px\">Values</Text>\n                              {valuesField}\n                            </Box>\n                          </Stack>\n                        </VStack>\n                      </Box>\n                    );\n                  })}\n                  <IconButton\n                    onClick={() => {\n                      setFilters([\n                        ...filters,\n                        {\n                          column: \"\",\n                          type: \"\",\n                          filter: \"exact\",\n                          values: [],\n                          selectedValues: [],\n                        } as FilterField,\n                      ]);\n                    }}\n                    my={5}\n                    float=\"right\"\n                    variant=\"outline\"\n                    aria-label=\"add-port\"\n                    icon={<BiPlusMedical />}\n                  />\n                </Box>\n              </Box>\n            </VStack>\n          </Box>\n\n          {/* <Box\n            color={\"gray.500\"}\n            w=\"100%\"\n            boxShadow={\"md\"}\n            rounded={\"md\"}\n            bg=\"white\"\n            p=\"2em\"\n          >\n            <Text mb={\"40px\"} color=\"gray.700\" fontWeight={400} fontSize=\"sm\">\n              <b>\n                {filteredSubmissions.length} of {submissions.length}\n              </b>{\" \"}\n              items\n            </Text>\n            <Table\n              headerHeight={80}\n              isTree\n              defaultExpandAllRows\n              bordered\n              cellBordered\n              rowKey=\"id\"\n              shouldUpdateScroll={false}\n              onExpandChange={(isOpen, rowData) => {\n                console.log(isOpen, rowData);\n              }}\n              renderTreeToggle={(icon, rowData) => {\n                return icon;\n              }}\n              autoHeight\n              data={filteredSubmissions}\n            >\n              <Column width={200} fixed=\"left\" align=\"left\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Title</HeaderCell>\n                <Cell dataKey=\"title\" />\n              </Column>\n              <Column width={110} align=\"center\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Status</HeaderCell>\n                <Cell dataKey=\"status\">\n                  {(row: any, index: number) => {\n                    if (row.status) {\n                      return <Tag colorScheme=\"cyan\">{row.status}</Tag>;\n                    }\n                  }}\n                </Cell>\n              </Column>\n\n              <Column width={110} align=\"center\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Created</HeaderCell>\n                <Cell dataKey=\"created\">\n                  {(row: any, index: number) => {\n                    if (row.created) {\n                      return moment(new Date(row.created)).fromNow();\n                    }\n                  }}\n                </Cell>\n              </Column>\n              {project.components.map((component: any) => {\n                if (\n                  displayedColumns === null ||\n                  displayedColumns.length < 1 ||\n                  displayedColumns.includes(component.key)\n                ) {\n                  if (component.type === \"customTable\") {\n                    var columns: any[] = [];\n                    Object.keys(component.columns).map((key) => {\n                      console.log(key);\n                      columns.push(\n                        <Column\n                          colSpan={0}\n                          width={200}\n                          align=\"center\"\n                          resizable\n                        >\n                          <HeaderCell\n                            style={{\n                              backgroundColor: \"#EDF2F6\",\n                              color: \"#718196\",\n                            }}\n                          >\n                            {component.columns[key]}\n                          </HeaderCell>\n                          <Cell dataKey={key}>\n                            {(row: any, index: number) => {\n                              if (row.data && row.data[key]) {\n                                return row.data[key];\n                              }\n                            }}\n                          </Cell>\n                        </Column>\n                      );\n                    });\n                    return (\n                      <ColumnGroup\n                        align=\"left\"\n                        header={<Text as=\"b\">{component.label}</Text>}\n                      >\n                        {columns}\n                      </ColumnGroup>\n                    );\n                  }\n                  if (component.type !== \"button\") {\n                    return (\n                      <Column width={200} align=\"center\" resizable>\n                        <HeaderCell verticalAlign=\"middle\">\n                          {component.label}\n                        </HeaderCell>\n                        <Cell dataKey={component.key}>\n                          {(row: any, index: number) => {\n                            if (row.data) {\n                              var value = row.data[component.key];\n                              switch (typeof value) {\n                                case \"number\":\n                                  return value.toFixed(2);\n                                case \"object\":\n                                  var tags: any[] = [];\n                                  value.map((element: any) => {\n                                    tags.push(<Tag mr={\"5px\"}>{element}</Tag>);\n                                  });\n                                  return tags;\n                                default:\n                                  if (component.type === \"datetime\" && value) {\n                                    var d = new Date(value);\n                                    return d.toLocaleString();\n                                  }\n                                  return value;\n                              }\n                            }\n                          }}\n                        </Cell>\n                      </Column>\n                    );\n                  }\n                }\n              })}\n              <Column width={150}>\n                <HeaderCell verticalAlign=\"middle\">Actions</HeaderCell>\n                <Cell dataKey=\"actions\">\n                  {(row: any, index: number) => {\n                    return (\n                      <HStack>\n                        <Text color=\"#4399E1\" cursor=\"pointer\">\n                          Edit\n                        </Text>\n                        <Divider height=\"10px\" orientation=\"vertical\" />\n                        <Text color=\"#4399E1\" cursor=\"pointer\">\n                          Remove\n                        </Text>\n                      </HStack>\n                    );\n                  }}\n                </Cell>\n              </Column>\n            </Table>\n          </Box> */}\n          <Box\n            color={\"gray.500\"}\n            w=\"100%\"\n            boxShadow={\"md\"}\n            rounded={\"md\"}\n            bg=\"white\"\n            p=\"2em\"\n          >\n            <Text mb={\"40px\"} color=\"gray.700\" fontWeight={400} fontSize=\"sm\">\n              <b>\n                {filteredSubmissions.length} of {submissions.length}\n              </b>{\" \"}\n              items\n            </Text>\n            <Table\n              // virtualized\n              headerHeight={80}\n              isTree\n              defaultExpandAllRows\n              bordered\n              cellBordered\n              rowKey=\"id\"\n              shouldUpdateScroll={false}\n              onExpandChange={(isOpen, rowData) => {\n                console.log(isOpen, rowData);\n              }}\n              renderTreeToggle={(icon, rowData) => {\n                return icon;\n              }}\n              autoHeight\n              data={[]}\n            >\n              <ColumnGroup header={<Text as=\"b\">General Information</Text>}>\n                <Column width={50} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#EDF2F6\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Company Code</HeaderCell>\n                  <Cell dataKey=\"companyCode\" />\n                </Column>\n\n                <Column width={200} resizable>\n                  <HeaderCell>Project Number</HeaderCell>\n                  <Cell dataKey=\"projectNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Campaign Start Date</HeaderCell>\n                  <Cell dataKey=\"campaignStartDate\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Project Type</HeaderCell>\n                  <Cell dataKey=\"projectType\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Project Information</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f2f6ed\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Country</HeaderCell>\n                  <Cell dataKey=\"country\" />\n                </Column>\n\n                <Column width={150} resizable>\n                  <HeaderCell>Country Share %</HeaderCell>\n                  <Cell dataKey=\"countryShare\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Country Budget Contribution (EUR)</HeaderCell>\n                  <Cell dataKey=\"countryBudgetContributionEur\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Country Cost Estimation (EUR)</HeaderCell>\n                  <Cell dataKey=\"countryCostEstimationEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Manufacturer Number</HeaderCell>\n                  <Cell dataKey=\"manufacturerNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Vendor Name</HeaderCell>\n                  <Cell dataKey=\"vendorName\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>SAP Debitor Number</HeaderCell>\n                  <Cell dataKey=\"sapDebitorNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>SAP Creditor Number</HeaderCell>\n                  <Cell dataKey=\"sapCreditorNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>MDF Level</HeaderCell>\n                  <Cell dataKey=\"mdfLevel\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Budget Currency</HeaderCell>\n                  <Cell dataKey=\"budgetCurrency\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Income (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedIncomeBC\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Costs (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedCostsBC\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Result (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedResultBC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Income (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedIncomeEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Costs (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedCostsEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Result (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedResultEur\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Vendor Share %</HeaderCell>\n                  <Cell dataKey=\"vendorShare\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Business Unit</HeaderCell>\n                  <Cell dataKey=\"bu\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>PH1</HeaderCell>\n                  <Cell dataKey=\"ph1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Campaign Channel</HeaderCell>\n                  <Cell dataKey=\"campaignChannel\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Target Audience</HeaderCell>\n                  <Cell dataKey=\"targetAudience\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Marketing Responsible</HeaderCell>\n                  <Cell dataKey=\"marketingResponsible\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Production Project Manager</HeaderCell>\n                  <Cell dataKey=\"productionProjectManager\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Project Approver</HeaderCell>\n                  <Cell dataKey=\"projectApprover\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Purchase Order</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f6edf2\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Purchase Order Service Provider</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderServiceProvider\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Net Value of Service Ordered (LC)</HeaderCell>\n                  <Cell dataKey=\"netValueOfServiceOrderedLC\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Local Currency</HeaderCell>\n                  <Cell dataKey=\"localCurrency\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Net Value (Purchase Order Currency)</HeaderCell>\n                  <Cell dataKey=\"netValuePOC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Purchase Order Currency</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderCurrency\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Net Value (EUR)</HeaderCell>\n                  <Cell dataKey=\"netValueEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Purchase Order Status</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderStatus\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Cost Actuals</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f1edf6\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonth\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentType\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDate\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDate\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Invoice Number</HeaderCell>\n                  <Cell dataKey=\"invoiceNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Account</HeaderCell>\n                  <Cell dataKey=\"costAccount\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Name 1</HeaderCell>\n                  <Cell dataKey=\"name1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"costAmountLC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"costAmountDC\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dc\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Status</HeaderCell>\n                  <Cell dataKey=\"costStatus\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Sales Actuals</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f5f4ec\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Invoice Number</HeaderCell>\n                  <Cell dataKey=\"invoiceNumberSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Account</HeaderCell>\n                  <Cell dataKey=\"incomeAccount\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Name 1</HeaderCell>\n                  <Cell dataKey=\"name1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountLC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountDC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Status</HeaderCell>\n                  <Cell dataKey=\"incomeStatus\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Actual Result (LC)</HeaderCell>\n                  <Cell dataKey=\"actualResult\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Actuals in EUR</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f5eced\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"costAmountEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Actual Result (EUR)</HeaderCell>\n                  <Cell dataKey=\"actualResult\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Cost GL Postings</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f0f0f0\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Account</HeaderCell>\n                  <Cell dataKey=\"costAccountCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"costAmountLCCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"costAmountDCCostGL\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dcCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"costAmountEurCostGL\" />\n                </Column>\n              </ColumnGroup>\n\n              <ColumnGroup header={<Text as=\"b\">Income GL Postings</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#dceee4\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Account</HeaderCell>\n                  <Cell dataKey=\"incomeAccountIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountLCIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountDCIncomeGL\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dcIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountEurIncomeGL\" />\n                </Column>\n              </ColumnGroup>\n              <Column width={0} align=\"left\" resizable>\n                <HeaderCell verticalAlign=\"middle\">\n                  <div></div>\n                </HeaderCell>\n                <Cell dataKey=\"none\" />\n              </Column>\n            </Table>\n          </Box>\n        </VStack>\n      </div>\n      {/* </AuthenticatedTemplate> */}\n      {/* <UnauthenticatedTemplate>\n        <Box boxShadow=\"md\" bg=\"white\" p=\"2em\" h=\"80vh\"></Box>\n      </UnauthenticatedTemplate> */}\n    </>\n  );\n}\n\nexport default TableExplorer;\n","export function numberWithCommas(x: any) {\n  return !isNaN(x) && typeof x === \"number\"\n    ? x\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    : \"\";\n}\n","import { Button, Tag } from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Creatable from \"react-select/creatable\";\nimport { numberWithCommas } from \"../utils/utils\";\n\nconst numRegex = /[0-9.\\-/]|\\./;\n\nfunction isValidDate(d: any) {\n  return d instanceof Date && !isNaN(d as any);\n}\n\nclass EditableTableCell extends React.Component<\n  {\n    onUpdate: any;\n    rowIndex: number;\n    rowData: any;\n    columnKey: string | undefined;\n    loadOptions?: any;\n    type: string;\n    initialValue: any;\n    textColor?: any;\n    backgroundColor?: string;\n    readonly?: boolean;\n    bold?: boolean;\n    maxLength?: number;\n  },\n  {\n    cellValue: any;\n    options: any[];\n    editing: boolean;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      options: [],\n      cellValue: undefined,\n      editing: false,\n    };\n  }\n  componentDidUpdate(prevProps: any) {\n    if (prevProps.initialValue !== this.props.initialValue) {\n      if (this.props.type === \"number\" && isNaN(this.props.initialValue)) {\n        return;\n      }\n      this.setState({ cellValue: this.props.initialValue });\n    }\n  }\n\n  componentDidMount() {\n    var value: any = undefined;\n    if (this.props.rowData.id === \"total\") {\n      value = this.props.initialValue ? this.props.initialValue : \"\";\n    } else {\n      switch (this.props.type) {\n        case \"text\":\n        case \"button\":\n          value = this.props.initialValue\n            ? this.props.initialValue.toString()\n            : \"\";\n          break;\n        case \"number\":\n          value =\n            typeof this.props.initialValue === \"number\"\n              ? numberWithCommas(this.props.initialValue)\n              : \"\";\n          break;\n        case \"tags\":\n          value = this.props.initialValue;\n          break;\n        case \"date\":\n          value =\n            this.props.initialValue && this.props.initialValue !== null\n              ? new Date(this.props.initialValue)\n              : null;\n          break;\n        case \"dropdown\":\n          value =\n            typeof this.props.initialValue === \"string\"\n              ? {\n                  label: this.props.initialValue,\n                  value: this.props.initialValue,\n                }\n              : { label: \"\", value: \"\" };\n          break;\n        case \"multiple-dropdown\":\n          value = [];\n          if (\n            this.props.initialValue &&\n            Array.isArray(this.props.initialValue)\n          ) {\n            this.props.initialValue.forEach((value: any) => {\n              value.push({ label: value, value: value });\n            });\n          }\n          break;\n        case \"menu\":\n          value = this.props.initialValue\n            ? this.props.initialValue.toString()\n            : \"\";\n          break;\n        default:\n          break;\n      }\n    }\n    this.setState({ cellValue: value });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          fontWeight: this.props.bold ? \"bold\" : \"normal\",\n          textAlign: this.props.type === \"button\" ? \"center\" : \"inherit\",\n          backgroundColor:\n            this.props.rowData.id === \"total\"\n              ? \"white\"\n              : this.props.backgroundColor\n              ? this.props.backgroundColor\n              : \"\",\n        }}\n        className={\n          this.state.editing\n            ? \"vendors-table-cell active\"\n            : `content-preview ${\n                this.props.textColor ? this.props.textColor : \"\"\n              } ${this.props.readonly ? \"readonly\" : \"\"}`\n        }\n        onClick={() => {\n          if (\n            !this.state.editing &&\n            !this.props.readonly &&\n            this.props.rowData.id !== \"total\"\n          ) {\n            this.setState({ editing: true });\n          }\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          this.setState({ editing: false });\n        }}\n      >\n        {!this.state.editing ? (\n          this.props.type === \"tags\" ? (\n            this.state.cellValue ? (\n              this.state.cellValue.map((cv: any) => {\n                if (cv) {\n                  return (\n                    <Tag colorScheme={this.props.textColor} mb=\"5px\" mr={\"5px\"}>\n                      {cv}\n                    </Tag>\n                  );\n                }\n              })\n            ) : (\n              \"\"\n            )\n          ) : this.props.type === \"date\" ? (\n            this.state.cellValue && this.state.cellValue !== null ? (\n              moment(this.state.cellValue).format(\"DD.MM.yyyy\")\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"object\" ? (\n            this.state.cellValue !== null ? (\n              `${this.state.cellValue.label}`\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"number\" ? (\n            `${numberWithCommas(this.state.cellValue)}`\n          ) : (\n            `${this.state.cellValue}`\n          )\n        ) : this.props.type === \"text\" || this.props.type === \"number\" ? (\n          <textarea\n            autoFocus\n            style={{ resize: \"none\" }}\n            value={this.state.cellValue ?? \"\"}\n            onChange={(event) => {\n              if (\n                this.props.maxLength !== undefined &&\n                event.target.value.length > this.props.maxLength\n              ) {\n                return;\n              }\n              this.setState({ cellValue: event.target.value });\n            }}\n            onFocus={(e) => {\n              setTimeout(() => {\n                document.execCommand(\"selectAll\", false);\n              }, 0);\n            }}\n            onKeyPress={\n              this.props.type === \"number\"\n                ? (event) => {\n                    const keyCode = event.keyCode || event.which;\n                    const string = String.fromCharCode(keyCode);\n                    if (!numRegex.test(string)) {\n                      event.defaultPrevented = false;\n                      if (event.preventDefault) event.preventDefault();\n                    }\n                  }\n                : undefined\n            }\n            onBlur={(event) => {\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                this.props.type === \"number\"\n                  ? Number(this.state.cellValue)\n                  : this.state.cellValue\n              );\n              this.setState({ editing: false });\n            }}\n            className=\"content-editable\"\n          />\n        ) : this.props.type === \"date\" ? (\n          <DatePicker\n            autoFocus\n            isClearable\n            selected={\n              isValidDate(this.state.cellValue)\n                ? moment(this.state.cellValue).toDate()\n                : null\n            }\n            customInput={<input className=\"datepicker-input\"></input>}\n            onChange={(date) => {\n              this.setState({ cellValue: date, editing: false });\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                date !== null ? date.toString() : null\n              );\n            }}\n            onCalendarClose={() => {\n              this.setState({ editing: false });\n            }}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n        ) : this.props.type === \"dropdown\" ||\n          this.props.type === \"multiple-dropdown\" ? (\n          <Creatable\n            menuPortalTarget={document.body}\n            menuIsOpen={this.state.editing}\n            autoFocus\n            isMulti={this.props.type === \"multiple-dropdown\"}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 1000000 }),\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n                minWidth: \"200px\",\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"black\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                paddingLeft: \"5px\",\n                boxShadow: \"none\",\n                outlineWidth: 0,\n                border: 0,\n                minHeight: 52,\n                backgroundColor: \"transparent\",\n                transition: \"0.3s\",\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 0,\n              colors: {\n                ...theme.colors,\n                primary: \"#a0bfe3\",\n              },\n            })}\n            value={this.state.cellValue}\n            onChange={(value) => {\n              this.setState({\n                cellValue: value !== null ? value : { label: \"\", value: \"\" },\n              });\n              var v: any = \"\";\n              if (value !== null && Array.isArray(value)) {\n                v = [];\n                value.map((dv: any) => v.push(dv.label));\n              }\n              if (value !== null && !Array.isArray(value)) {\n                v = value.label;\n              }\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                v\n              );\n              this.setState({ editing: false });\n            }}\n            onFocus={async () => {\n              this.setState({\n                options: this.props.loadOptions(this.props.columnKey ?? \"\"),\n              });\n            }}\n            onBlur={() => {\n              this.setState({\n                options: [],\n                editing: false,\n              });\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"table-select\"\n            isClearable\n            isSearchable\n            options={this.state.options}\n          />\n        ) : this.props.type === \"button\" ? (\n          <div className=\"table-button-container\">\n            <Button\n              colorScheme={this.props.textColor}\n              onClick={() => {\n                this.props.onUpdate(\n                  this.props.rowData.id,\n                  this.props.columnKey,\n                  this.state.cellValue\n                );\n                this.setState({ editing: false });\n              }}\n              size=\"sm\"\n              color=\"white\"\n              className=\"table-button\"\n            >\n              {this.state.cellValue}\n            </Button>\n          </div>\n        ) : (\n          <div>unknown</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditableTableCell;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Button,\n  HStack,\n  Input,\n  Text,\n  useColorModeValue,\n  Divider,\n  IconButton,\n  Stack,\n  VStack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  CloseButton,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport {\n  cloneElement,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport EditableTableCell from \"../../components/EditableTableCell\";\n\nimport { useFps } from \"react-fps\";\nimport Select from \"react-select\";\nimport { Submission } from \"../../types/submission\";\nimport styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport Toast from \"../../components/Toast\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\n\nimport BaseTable, {\n  AutoResizer,\n  Column,\n  ColumnShape,\n  unflatten,\n} from \"react-base-table\";\nimport \"react-base-table/styles.css\";\nimport { RestAPI } from \"../../api/rest\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  BiPlusMedical,\n  RiFileExcel2Line,\n  RiUserFill,\n  RiGroupFill,\n  RiTeamFill,\n} from \"react-icons/all\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { CheckTreePicker, TagPicker } from \"rsuite\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport { numberWithCommas } from \"../../utils/utils\";\n\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\ninterface Props {\n  history: any;\n}\n\nconst numRegex = /[0-9]|\\./;\n\nconst DebugOverlay = styled.div`\n  width: 300px;\n  background: lightgray;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  padding: 5px 15px;\n  border-radius: 10px;\n  color: white;\n`;\n\nvar ProjectType: any[] = [];\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\nvar SapStatus: any[] = [\n  { label: \"Created\", value: \"created\" },\n  { label: \"None\", value: \"none\" },\n];\nvar CostStatuses: any[] = [\n  { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n  { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n  { label: \"Not Relevant\", value: \"Not Relevant\" },\n];\n\nasync function fetchDropdowns() {\n  var dropdownsIds: string[] = [\n    \"619b630a9a5a2bb37a93b23b\",\n    \"619b61419a5a2bb37a93b237\",\n    \"619b63429a5a2bb37a93b23d\",\n    \"619b62d79a5a2bb37a93b239\",\n    \"619b632c9a5a2bb37a93b23c\",\n    \"619b62959a5a2bb37a93b238\",\n    \"619b62f29a5a2bb37a93b23a\",\n    \"619b66defe27d06ad17d75ac\",\n    \"619b6754fe27d06ad17d75ad\",\n    \"619b6799fe27d06ad17d75ae\",\n    \"619b7b9efe27d06ad17d75af\",\n    \"619b7b9efe27d06ad17d75af\",\n  ];\n  var responses = await Promise.all(\n    dropdownsIds.map((di) => {\n      return RestAPI.getDropdownValues(di);\n    })\n  );\n  PH1 = responses[0].data;\n  Companies = responses[1].data;\n  VendorsNames = responses[2].data;\n  CampaignChannel = responses[3].data;\n  TargetAudience = responses[4].data;\n  Budget = responses[5].data;\n  ExchangeRates = responses[6].data;\n  FiscalQuarter = responses[7].data;\n  Year = responses[8].data;\n  ProjectStartQuarter = responses[9].data;\n  ProjectType = responses[10].data;\n}\n\nconst loadOptions = (identifier: string) => {\n  switch (identifier) {\n    case \"data.budgetSource\":\n      return Budget;\n    case \"data.projectType\":\n      return ProjectType;\n    case \"data.ph1\":\n      return PH1;\n    case \"data.campaignChannel\":\n      return CampaignChannel;\n    case \"data.targetAudience\":\n      return TargetAudience;\n    case \"data.budgetCurrency\" ||\n      \"data.vendorBudgetCurrency\" ||\n      \"data.campaignCurrency\":\n      return ExchangeRates;\n    case \"data.sapStatus\":\n      return SapStatus;\n    case \"data.caVendorName\":\n    case \"data.vendorName\":\n    case \"data.vendorNameSA\":\n      return VendorsNames;\n    case \"data.statusLMD\":\n      return [\n        { label: \"OK FOR INVOICING\", value: \"OK FOR INVOICING\" },\n        { label: \"FUTURE INVOICE\", value: \"FUTURE INVOICE\" },\n        { label: \"INVOICED\", value: \"INVOICED\" },\n        { label: \"INCOMPLETE\", value: \"INCOMPLETE\" },\n        { label: \"OK FOR CANCELLATION\", value: \"OK FOR CANCELLATION\" },\n        { label: \"CANCELLED\", value: \"CANCELLED\" },\n      ];\n    case \"data.purchaseOrderStatus\":\n      return [\n        { label: \"Invoice Received\", value: \"Invoice Received\" },\n        { label: \"Invoice Not Received\", value: \"Invoice Not Received\" },\n      ];\n    case \"data.costStatus\":\n      return [\n        { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n        { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n      ];\n    case \"data.invoiceStatusSI\":\n      return [\n        { label: \"Paid\", value: \"Paid\" },\n        { label: \"Not Paid\", value: \"Not Paid\" },\n      ];\n  }\n  return [];\n};\n\nfunction bytesToSize(bytes: number) {\n  var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  if (bytes == 0) return \"0 Byte\";\n  var i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, i)).toFixed(2) + \" \" + sizes[i];\n}\n\ninterface FilterField {\n  columnValue: string;\n  columnLabel: string;\n  type: string;\n  filter: string;\n  values: any[];\n  selectedValues: any[];\n}\nconst filterTypes = {\n  string: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  dropdown: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  \"multiple-dropdown\": [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  date: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n};\n\nconst DisplayedColumnsList = [\n  {\n    label: \"General Information\",\n    value: \"generalInformation\",\n    children: [\n      { label: \"Company Code\", value: \"data.companyCode\", type: \"string\" },\n      { label: \"Project Number\", value: \"data.projectNumber\", type: \"string\" },\n      { label: \"Project Name\", value: \"data.projectName\", type: \"string\" },\n      {\n        label: \"Campaign Start Date\",\n        value: \"data.campaignStartDate\",\n        type: \"date\",\n      },\n      { label: \"Project Type\", value: \"data.projectType\", type: \"dropdown\" },\n      { label: \"Author\", value: \"author\", type: \"string\" },\n      { label: \"Status\", value: \"data.status\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Project Information\",\n    value: \"projectInformation\",\n    children: [\n      { label: \"Countries EMEA\", value: \"data.country\", type: \"string\" },\n      {\n        label: \"Country Code EMEA\",\n        value: \"data.countryCodeEMEA\",\n        type: \"string\",\n      },\n      {\n        label: \"Mirror Project Number\",\n        value: \"data.mirrorProjectNumber\",\n        type: \"string\",\n      },\n      { label: \"% Country Share\", value: \"data.countryShare\", type: \"number\" },\n      {\n        label: \"Country Budget Contribution (Campaign Currency)\",\n        value: \"data.countryBudgetContributionCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Country Cost Estimation (Campaign Currency)\",\n        value: \"data.countryCostEstimationCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Manufacturer Number\",\n        value: \"data.manufacturerNumber\",\n        type: \"string\",\n      },\n      { label: \"Vendor Name\", value: \"data.vendorName\", type: \"dropdown\" },\n      {\n        label: \"SAP Debitor Number\",\n        value: \"data.debitorNumber\",\n        type: \"string\",\n      },\n      {\n        label: \"SAP Creditor Number\",\n        value: \"data.creditorNumber\",\n        type: \"string\",\n      },\n      { label: \"Budget Source\", value: \"data.budgetSource\", type: \"dropdown\" },\n      {\n        label: \"Vendor Budget Currency\",\n        value: \"data.vendorBudgetCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Vendor Amount\",\n        value: \"data.vendorAmount\",\n        type: \"number\",\n      },\n      {\n        label: \"Campaign Currency\",\n        value: \"data.campaignCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Estimated Income (Campaign Currency)\",\n        value: \"data.estimatedIncomeCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs (Campaign Currency)\",\n        value: \"data.estimatedCostsCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result (Campaign Currency)\",\n        value: \"data.estimatedResultCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Income EUR\",\n        value: \"data.estimatedIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs EUR\",\n        value: \"data.estimatedCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result EUR\",\n        value: \"data.estimatedResultEUR\",\n        type: \"number\",\n      },\n      { label: \"% Vendor Share\", value: \"data.vendorShare\", type: \"number\" },\n      { label: \"Business Unit\", value: \"data.businessUnit\", type: \"string\" },\n      { label: \"PH1\", value: \"data.PH1\", type: \"string\" },\n      {\n        label: \"Campaign Channel\",\n        value: \"data.campaignChannel\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Target Audience\",\n        value: \"data.targetAudience\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Marketing Responsible\",\n        value: \"data.marketingResponsible\",\n        type: \"string\",\n      },\n      {\n        label: \"Project Approver\",\n        value: \"data.projectApprover\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.additionalInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Purchase Order\",\n    value: \"purchaseOrder\",\n    children: [\n      {\n        label: \"Purchase Order Service Provider\",\n        value: \"data.purchaseOrderServiceProvider\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor Name\",\n        value: \"data.vendorNamePO\",\n        type: \"string\",\n      },\n      {\n        label: \"Net Value of Service Ordered (LC)\",\n        value: \"data.netValueOfServiceOrderedLC\",\n        type: \"string\",\n      },\n      { label: \"Local Currency\", value: \"data.localCurrency\", type: \"string\" },\n      {\n        label: \"Net Value (Purchase Order Currency)\",\n        value: \"data.netValuePOC\",\n        type: \"string\",\n      },\n      {\n        label: \"Purchase Order Currency\",\n        value: \"data.purchaseOrderCurrency\",\n        type: \"string\",\n      },\n      { label: \"Net Value (EUR)\", value: \"data.netValueEur\", type: \"string\" },\n      {\n        label: \"Purchase Order Status\",\n        value: \"data.purchaseOrderStatus\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost Invoices\",\n    value: \"costInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonth\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentType\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDate\", type: \"date\" },\n      { label: \"Document Date\", value: \"data.documentDate\", type: \"date\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumber\",\n        type: \"string\",\n      },\n      { label: \"Invoice Number\", value: \"data.invoiceNumber\", type: \"string\" },\n      { label: \"Cost Account\", value: \"data.costAccount\", type: \"string\" },\n      { label: \"Invoice Supplier\", value: \"data.name1\", type: \"string\" },\n      { label: \"Cost Amount (LC)\", value: \"data.costAmountLC\", type: \"string\" },\n      { label: \"Cost Amount (DC)\", value: \"data.costAmountDC\", type: \"string\" },\n      { label: \"DC\", value: \"data.dc\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEUR\",\n        type: \"number\",\n      },\n      { label: \"Cost Status\", value: \"data.costStatus\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Sales Invoices\",\n    value: \"salesInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthSI\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentTypeSI\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDateSI\", type: \"date\" },\n      { label: \"Document Date\", value: \"data.documentDateSI\", type: \"date\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberSI\",\n        type: \"string\",\n      },\n\n      {\n        label: \"Invoice Number\",\n        value: \"data.invoiceNumberSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountSI\",\n        type: \"string\",\n      },\n      { label: \"Invoice Recipient\", value: \"data.name1SI\", type: \"string\" },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCSI\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcSI\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEURSI\",\n        type: \"number\",\n      },\n      {\n        label: \"Invoice Status (Paid/Not Paid)\",\n        value: \"data.invoiceStatusSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Activity ID for Portal Vendors\",\n        value: \"data.activityIdSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Marketing Information\",\n        value: \"data.additionalMarketingInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost GL Postings\",\n    value: \"costGlPostings\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthCostGL\", type: \"string\" },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateCostGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateCostGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Account\",\n        value: \"data.costAccountCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (LC)\",\n        value: \"data.costAmountLCCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (DC)\",\n        value: \"data.costAmountDCCostGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcCostGL\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEURCostGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Income GL Postings\",\n    value: \"incomeGlPostings\",\n    children: [\n      {\n        label: \"Year / Month\",\n        value: \"data.yearMonthIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateIncomeGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateIncomeGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCIncomeGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcIncomeGL\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEurIncomeGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Project Results\",\n    value: \"projectResults\",\n    children: [\n      {\n        label: \"Total Income (LC)\",\n        value: \"data.totalIncomeLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs (LC)\",\n        value: \"data.totalCostsLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Profit (LC)\",\n        value: \"data.totalProfitLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Loss (LC)\",\n        value: \"data.totalLossLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income (EUR)\",\n        value: \"data.totalIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs (EUR)\",\n        value: \"data.totalCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Profit (EUR)\",\n        value: \"data.totalProfitEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Loss (EUR)\",\n        value: \"data.totalLossEUR\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Control Checks\",\n    value: \"controlChecks\",\n    children: [\n      {\n        label: \"Total Costs In Tool (LC)\",\n        value: \"data.totalCostsTool\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs in SAP (LC)\",\n        value: \"data.totalCostsSAP\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income in Tool (LC)\",\n        value: \"data.totalIncomeTool\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income in SAP (LC)\",\n        value: \"data.totalIncomeSAP\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Input of Central Marketing Controlling Team\",\n    value: \"CMCT\",\n    children: [\n      {\n        label: \"Status\",\n        value: \"data.statusCMCT\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"SAP Document Number\",\n        value: \"data.documentNumberCMCT\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.infoCMCT\",\n        type: \"string\",\n      },\n      {\n        label: \"Date\",\n        value: \"data.dateCMCT\",\n        type: \"date\",\n      },\n      {\n        label: \"Operator\",\n        value: \"data.operatorCMCT\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Input of Local Marketing Department\",\n    value: \"LMD\",\n    children: [\n      {\n        label: \"Status\",\n        value: \"data.statusLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Date of Invoicing\",\n        value: \"data.invoicingDateLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Requestor\",\n        value: \"data.requestorLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor\",\n        value: \"data.vendorLMD\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"VOD\",\n        value: \"data.vodLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"BU\",\n        value: \"data.buLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Request Date\",\n        value: \"data.requestDateLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Invoice Type\",\n        value: \"data.invoiceTypeLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Cancellation Information\",\n        value: \"data.cancellationInfoLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Currency\",\n        value: \"data.documentCurrencyLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Material Number\",\n        value: \"data.materialNumberLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Reason\",\n        value: \"data.reasonLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Amount\",\n        value: \"data.amountLMD\",\n        type: \"number\",\n      },\n      {\n        label: \"Additional Info on Invoice\",\n        value: \"data.additionalInvoiceInfoLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Dunning Stop?\",\n        value: \"data.dunningStopLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Payment Method\",\n        value: \"data.paymentMethodLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Deposit Number\",\n        value: \"data.depositNumberLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Send to\",\n        value: \"data.sendToLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Comment\",\n        value: \"data.additionalCommentLMD\",\n        type: \"string\",\n      },\n    ],\n  },\n];\n\nconst DisplayedColumnsListOptions = DisplayedColumnsList.map((group: any) => {\n  return group.children.map((column: any) => {\n    return {\n      label: `${column.label} (${group.label})`,\n      value: column.value,\n      type: column.type,\n    };\n  });\n}).flat(1);\n\nexport function VendorsTable(props: Props) {\n  const [sourceSubmissions, setSourceSubmissions] = useState(new Map());\n  const [currentUser, setCurrentUser] = useState({ displayName: \"unknown\" });\n  const [debugOverlayHidden, hideDebugOverlay] = useState(true);\n  const [filters, setFilters] = useState<FilterField[]>([]);\n  const [displayedColumns, setDisplayedColumns] = useState<string[]>([\n    \"generalInformation\",\n    \"projectInformation\",\n    \"purchaseOrder\",\n    \"costInvoices\",\n    \"salesInvoices\",\n    \"costGlPostings\",\n    \"incomeGlPostings\",\n    \"projectResults\",\n    \"controlChecks\",\n    \"CMCT\",\n    \"LMD\",\n  ]);\n  const [totalCostAmount, setTotalCostAmount] = useState(0);\n  const [totalCostAmountCostGL, setTotalCostAmountCostGL] = useState(0);\n  const [totalCostAmountLC, setTotalCostAmountLC] = useState(0);\n  const [totalCostAmountLCCostGL, setTotalCostAmountLCCostGL] = useState(0);\n  const [totalIncomeAmount, setTotalIncomeAmount] = useState(0);\n  const [totalIncomeAmountLCIncomeGL, setTotalIncomeAmountLCIncomeGL] =\n    useState(0);\n  const [totalIncomeAmountIncomeGL, setTotalIncomeAmountIncomeGL] = useState(0);\n  const [totalIncomeAmountLC, setTotalIncomeAmountLC] = useState(0);\n  const [totalCostsInTool, setTotalCostsInTool] = useState(0);\n  const [totalIncomeInTool, setTotalIncomeInTool] = useState(0);\n  const [totalCostsInToolEUR, setTotalCostsInToolEUR] = useState(0);\n  const [totalIncomeInToolEUR, setTotalIncomeInToolEUR] = useState(0);\n  // const { fps, avgFps } = useFps(20);\n  const [tableWidth, setTableWidth] = useState(1000);\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<Submission[]>(\n    []\n  );\n  const [\n    filteredCommunicationSubmissions,\n    setFilteredCommunicationSubmissions,\n  ] = useState<Submission[]>([]);\n  const [communicationSubmissions, setCommunicationSubmissions] = useState<\n    Submission[]\n  >([]);\n  const [onlyMine, setOnlyMine] = useState(false);\n  const [scrollLeft, setScrollLeft] = React.useState(0);\n  const [defaultColumnsWidth, setDefaultColumnsWidth] = useState({});\n  const onScroll = React.useCallback(\n    (args) => {\n      if (args.scrollLeft !== scrollLeft) {\n        setScrollLeft(args.scrollLeft);\n      }\n    },\n    [scrollLeft]\n  );\n  // const [heapInfo, setHeapInfo] = useState<any>({\n  //   total: 0,\n  //   allocated: 0,\n  //   current: 0,\n  //   domSize: 0,\n  // });\n  const [totalRequests, setTotalRequests] = useState(1);\n\n  useEffect(() => {\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  // useEffect(() => {\n  //   getHeapInfo();\n  //   const interval = setInterval(() => {\n  //     getHeapInfo();\n  //   }, 5000);\n\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  useEffect(() => {\n    let tca = 0;\n    let tcal = 0;\n    let tcit = 0;\n    let tiit = 0;\n    let tcite = 0;\n    let tiite = 0;\n    let tcacgl = 0;\n    let tia = 0;\n    let tial = 0;\n    let tcalcgl = 0;\n    let tialigl = 0;\n    let tiaigl = 0;\n    filteredSubmissions.forEach((subm) => {\n      if (subm.parentId !== null) {\n        tca += subm.data.costAmountEUR || 0;\n        tcacgl += subm.data.costAmountEURCostGL || 0;\n        tcal += subm.data.costAmountLC || 0;\n        tia += subm.data.incomeAmountEURSI || 0;\n        tial += subm.data.incomeAmountLCSI || 0;\n        tcalcgl += subm.data.costAmountLCCostGL || 0;\n        tialigl += subm.data.incomeAmountLCIncomeGL || 0;\n        tiaigl += subm.data.incomeAmountEurIncomeGL || 0;\n      }\n    });\n    tcit = -(tcal + tcalcgl);\n    tiit = -(tial + tialigl);\n    tcite = -(tca + tcacgl);\n    tiite = -(tia + tiaigl);\n    setTotalCostAmount(tca);\n    setTotalCostAmountCostGL(tcacgl);\n    setTotalCostAmountLC(tcal);\n    console.log(tcal);\n    setTotalCostAmountLCCostGL(tcalcgl);\n    setTotalIncomeAmount(tia);\n    setTotalIncomeAmountLCIncomeGL(tialigl);\n    setTotalIncomeAmountLC(tial);\n    setTotalIncomeAmountIncomeGL(tiaigl);\n    setTotalCostsInTool(tcit);\n    setTotalIncomeInTool(tiit);\n    setTotalCostsInToolEUR(tcite);\n    setTotalIncomeInToolEUR(tiite);\n    forceUpdate();\n  }, [filteredSubmissions]);\n\n  useEffect(() => {\n    var filteredMap = new Map();\n    var filtered: Submission[] = [];\n    var cFilteredMap = new Map();\n    var filteredCommunication: Submission[] = [];\n\n    var f: FilterField[] = JSON.parse(JSON.stringify(filters));\n\n    if (onlyMine) {\n      f.push({\n        columnValue: \"author\",\n        columnLabel: \"Author\",\n        type: \"string\",\n        filter: \"exact\",\n        values: [],\n        selectedValues: [currentUser.displayName],\n      } as FilterField);\n    }\n    if (f.length > 0 && submissions.length > 0) {\n      submissions.forEach((submission) => {\n        var valid = true;\n\n        for (let filter of f) {\n          if (\n            filter.columnLabel.includes(\n              \"Input of Local Marketing Department\"\n            ) ||\n            filter.columnLabel.includes(\n              \"Input of Central Marketing Controlling Team\"\n            )\n          ) {\n            return;\n          }\n\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"string\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    if (\n                      filter.columnValue === \"data.documentNumber\" ||\n                      filter.columnValue === \"data.costAccount\" ||\n                      filter.columnValue === \"data.documentNumberSI\" ||\n                      filter.columnValue === \"data.incomeAccountSI\" ||\n                      filter.columnValue === \"data.documentNumberCostGL\" ||\n                      filter.columnValue === \"data.costAccountCostGL\" ||\n                      filter.columnValue === \"data.documentNumberIncomeGL\" ||\n                      filter.columnValue === \"data.incomeAccountIncomeGL\"\n                    ) {\n                      valid = value\n                        .toString()\n                        .endsWith(filter.selectedValues[0].toString());\n                    } else {\n                      valid =\n                        filter.selectedValues[0].toString() ===\n                        value.toString();\n                    }\n                    break;\n                  case \"includes\":\n                    if (\n                      !value\n                        .toString()\n                        .includes(filter.selectedValues[0].toString())\n                    ) {\n                      valid = false;\n                    }\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    // eslint-disable-next-line no-loop-func\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n          if (!valid) {\n            return;\n          }\n        }\n\n        if (valid) {\n          if (submission.parentId !== null) {\n            var parent = sourceSubmissions.get(submission.parentId);\n            if (parent !== undefined && parent.id !== undefined) {\n              filteredMap.set(parent.id, parent);\n            }\n            submissions.forEach((s) => {\n              if (s.parentId === submission.parentId) {\n                filteredMap.set(s.id, s);\n              }\n            });\n          }\n          filteredMap.set(submission.id, submission);\n        }\n      });\n      ///\n      communicationSubmissions.forEach((submission) => {\n        var valid = true;\n        filters.forEach((filter) => {\n          if (\n            !filter.columnLabel.includes(\n              \"Input of Local Marketing Department\"\n            ) &&\n            !filter.columnLabel.includes(\n              \"Input of Central Marketing Controlling Team\"\n            )\n          ) {\n            return;\n          }\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"string\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          if (submission.parentId !== null) {\n            var parent = sourceSubmissions.get(submission.parentId);\n            if (parent !== undefined && parent.id !== undefined) {\n              cFilteredMap.set(parent.id, parent);\n            }\n          }\n          cFilteredMap.set(submission.id, submission);\n        }\n      });\n      ///\n\n      cFilteredMap.forEach((value) => {\n        filteredCommunication.push(value);\n      });\n      filteredMap.forEach((value) => {\n        filtered.push(value);\n      });\n\n      setFilteredCommunicationSubmissions(filteredCommunication);\n      setFilteredSubmissions(filtered);\n    } else {\n      setFilteredSubmissions(submissions);\n      setFilteredCommunicationSubmissions(communicationSubmissions);\n    }\n  }, [filters, submissions, communicationSubmissions, onlyMine]);\n\n  // const getHeapInfo = () => {\n  //   var memory = (window.performance as any).memory;\n  //   if (memory !== undefined) {\n  //     var info: any = {\n  //       total: memory.jsHeapSizeLimit,\n  //       allocated: memory.totalJSHeapSize,\n  //       current: memory.usedJSHeapSize,\n  //       domSize: document.getElementsByTagName(\"*\").length,\n  //     };\n  //     setHeapInfo(info);\n  //   }\n  // };\n  const getVisibleColumnIndices = (offset: number, columns: any) => {\n    var netOffsets: any[] = [],\n      offsetSum = 0,\n      leftBound = offset - 200,\n      rightBound = offset + tableWidth,\n      visibleIndices: any[] = [];\n\n    columns.forEach((col: any) => {\n      netOffsets.push(offsetSum);\n      offsetSum += col.width;\n    });\n\n    netOffsets.forEach((columnOffset, colIdx) => {\n      var isOutside = columnOffset < leftBound || columnOffset > rightBound;\n      if (!isOutside) {\n        visibleIndices.push(colIdx);\n      }\n    });\n\n    return visibleIndices;\n  };\n  // ________________________________\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // --------------------------------\n\n  // // rightBound = offset+tableWidth;\n  //  <-------------*--------------->\n  //  <-------------************---->\n\n  //  // leftBound = offset;\n  //  <-------------*--------------->\n  //  <--************--------------->\n\n  // leftBound = offset - maxColumnWidth;\n\n  //                 offset ->\n  // ********<---------------|--------------->*********\n  //         leftBound       -      rightBound\n\n  // leftBound = offset;\n  // rightBound = tableWidth;\n\n  // isOutside = columnOffset < leftBound || columnOffset > rightBound;\n\n  // if (!isOutside) {\n  //     // render column\n  // } else {\n  //     // remove from DOM\n  // }\n  const rowRenderer = React.useCallback(\n    ({ cells, columns }) => {\n      // null out hidden content on scroll\n      if (cells.length === 89) {\n        const visibleIndices = getVisibleColumnIndices(scrollLeft, columns);\n        const startIndex = visibleIndices[0];\n        const visibleCells = visibleIndices.map((x) => cells[x]);\n\n        if (startIndex > 0) {\n          let width = 0;\n          for (let i = 0; i < visibleIndices[0]; i++) {\n            width += cells[i].props.style.width;\n          }\n\n          const placeholder = <div key=\"placeholder\" style={{ width }} />;\n          return [placeholder, visibleCells];\n        }\n        return visibleCells;\n      }\n\n      return cells;\n    },\n    [scrollLeft]\n  );\n\n  async function partialUpdate(submission: string, path: string, value: any) {\n    setTotalRequests(totalRequests + 1);\n    if (path.includes(\"[\")) {\n      var s = path.split(\".\");\n      s.shift();\n      path = s.join(\".\");\n    }\n    RestAPI.updateSubmissionPartial(submission, path, value);\n  }\n\n  function handleCellUpdate(submission: string, path: string, value: any) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submission);\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n      if (_.get(submissions, path) !== value) {\n        _.set(submissions, path, value);\n        partialUpdate(submission, path, value);\n      }\n    }\n  }\n  function handleCommunicationCellUpdate(\n    submission: string,\n    path: string,\n    value: any\n  ) {\n    var submissionIndex = communicationSubmissions.findIndex(\n      (s) => s.id === submission\n    );\n\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n\n      if (_.get(communicationSubmissions, path) !== value) {\n        _.set(communicationSubmissions, path, value);\n        partialUpdate(submission, path, value);\n        var datePath = `[${submissionIndex}].data.entryDateLMD`;\n        if (_.get(communicationSubmissions, datePath) === undefined) {\n          _.set(communicationSubmissions, datePath, new Date());\n          partialUpdate(submission, datePath, new Date().toString());\n        }\n      }\n    }\n  }\n  function deleteSubmission(submissionId: string) {\n    var tbd: string[] = [submissionId];\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp.splice(submissionIndex, 1);\n      temp.map((s, index) => {\n        if (s.parentId !== null && s.parentId === submissionId) {\n          if (s.id) {\n            temp.splice(index, 1);\n            tbd.push(s.id);\n          }\n        }\n      });\n      setSubmissions(temp);\n      RestAPI.deleteSubmission(submissionId);\n    }\n  }\n  function parentizeSubmission(submissionId: string) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp[submissionIndex].parentId = null;\n      partialUpdate(submissionId, \"parentId\", null);\n      setSubmissions(temp);\n    }\n  }\n  function callSap(submissionId: string) {\n    RestAPI.callSapSubmission(submissionId)\n      .then((response) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div dangerouslySetInnerHTML={{ __html: response.data }} />\n            }\n            type={\"success\"}\n          />\n        );\n        var submissionIndex = submissions.findIndex(\n          (s) => s.id === submissionId\n        );\n        if (submissionIndex > -1) {\n          var temp = [...submissions];\n          temp[submissionIndex].data[\"sapStatus\"] = \"created\";\n          partialUpdate(submissionId, \"data.sapStatus\", \"created\");\n          setSubmissions(temp);\n        }\n      })\n      .catch((error) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div dangerouslySetInnerHTML={{ __html: error.response.data }} />\n            }\n            type={\"error\"}\n          />\n        );\n      });\n  }\n\n  async function handleResize(column: string, width: number) {\n    var c = localStorage.getItem(\"vendors.columns\");\n    var columns = {} as any;\n    if (c !== null) {\n      columns = JSON.parse(c);\n    }\n    columns[column] = width;\n    localStorage.setItem(\"vendors.columns\", JSON.stringify(columns));\n  }\n\n  function columnWidth(column: string, dw: number) {\n    var sd = (defaultColumnsWidth as any)[column];\n    return sd ? sd : dw;\n  }\n  //   async function saveCellWidth(cell: string, width: number) {\n  //     localStorage.setItem(cell, width.toString());\n  //   }\n  //   function getCellWidth(cell: string, defaultWidth: number) {\n  //     console.log(\"get\");\n  //     var value = localStorage.getItem(cell);\n  //     if (value !== null) {\n  //       return Number(value);\n  //     }\n  //     return defaultWidth;\n  //   }\n\n  useEffect(() => {\n    RestAPI.getSubmissions().then((response) => {\n      var vSubs: Submission[] = [];\n      var subs = response.data;\n      var ss = new Map();\n      var cSubs: Submission[] = [];\n\n      subs.forEach((sub) => {\n        if (sub.group === \"communication\") {\n          cSubs.push(sub);\n        } else {\n          vSubs.push(sub);\n        }\n        ss.set(sub.id, sub);\n      });\n\n      vSubs.map((sub) => {\n        if (sub.parentId === null) {\n          sub.data.costAmountLC = 0;\n          sub.data.costAmountEUR = 0;\n          sub.data.incomeAmountLCSI = 0;\n          sub.data.incomeAmountEURSI = 0;\n          sub.data.costAmountLCCostGL = 0;\n          sub.data.costAmountEURCostGL = 0;\n          sub.data.incomeAmountLCIncomeGL = 0;\n          sub.data.incomeAmountEurIncomeGL = 0;\n          sub.data.totalIncomeLC = 0;\n          sub.data.totalCostsLC = 0;\n          sub.data.totalIncomeEUR = 0;\n          sub.data.totalCostsEUR = 0;\n          sub.data.totalCostsTool = 0;\n          sub.data.totalIncomeTool = 0;\n          vSubs\n            .filter((s) => s.parentId === sub.id)\n            .forEach((cs) => {\n              sub.data.costAmountLC += cs.data.costAmountLC || 0;\n              sub.data.costAmountEUR += cs.data.costAmountEUR || 0;\n              sub.data.incomeAmountLCSI += cs.data.incomeAmountLCSI || 0;\n              sub.data.incomeAmountEURSI += cs.data.incomeAmountEURSI || 0;\n              sub.data.costAmountLCCostGL += cs.data.costAmountLCCostGL || 0;\n              sub.data.costAmountEURCostGL += cs.data.costAmountEURCostGL || 0;\n              sub.data.incomeAmountLCIncomeGL +=\n                cs.data.incomeAmountLCIncomeGL || 0;\n              sub.data.incomeAmountEurIncomeGL +=\n                cs.data.incomeAmountEurIncomeGL || 0;\n              sub.data.totalIncomeLC += -(\n                cs.data.incomeAmountLCSI ||\n                0 + cs.data.incomeAmountLCIncomeGL ||\n                0\n              );\n              sub.data.totalCostsLC += -(\n                cs.data.costAmountLC ||\n                0 + cs.data.costAmountLCCostGL ||\n                0\n              );\n              sub.data.totalIncomeEUR += -(\n                cs.data.incomeAmountEURSI ||\n                0 + cs.data.incomeAmountEURIncomeGL ||\n                0\n              );\n              sub.data.totalCostsEUR += -(\n                cs.data.costAmountEUR ||\n                0 + cs.data.costAmountEURCostGL ||\n                0\n              );\n              sub.data.totalCostsTool +=\n                cs.data.costAmountLC || 0 + cs.data.costAmountLCCostGL || 0;\n              sub.data.totalIncomeTool +=\n                cs.data.incomeAmountLCSI ||\n                0 + cs.data.incomeAmountLCIncomeGL ||\n                0;\n            });\n        }\n      });\n\n      setCommunicationSubmissions(cSubs);\n      setFilteredCommunicationSubmissions(cSubs);\n      setSourceSubmissions(ss);\n      setSubmissions(vSubs);\n      setFilteredSubmissions(vSubs);\n    });\n  }, []);\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setCurrentUser(response);\n      }\n    });\n  }, []);\n\n  function visibilityController(group: string, key: string) {\n    return !displayedColumns.includes(group) && !displayedColumns.includes(key);\n  }\n\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.companyCode\",\n      dataKey: \"data.companyCode\",\n      title: \"Company Code\",\n      header: \"General Information\",\n      group: \"General Information\",\n      width: columnWidth(\"data.companyCode\", 150),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.companyCode\"),\n      type: \"number\",\n      // className: \"dark-green-3-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectNumber\",\n      dataKey: \"data.projectNumber\",\n      title: \"Project Number\",\n      width: columnWidth(\"data.projectNumber\", 150),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\"generalInformation\", \"data.projectNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectName\",\n      dataKey: \"data.projectName\",\n      title: \"Project Name\",\n      width: columnWidth(\"data.projectName\", 200),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\"generalInformation\", \"data.projectName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignStartDate\",\n      dataKey: \"data.campaignStartDate\",\n      title: \"Campaign Start Date\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.campaignStartDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.campaignStartDate\"\n      ),\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectType\",\n      dataKey: \"data.projectType\",\n      title: \"Project Type\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.projectType\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.projectType\"),\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          loadOptions={loadOptions}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"author\",\n      dataKey: \"author\",\n      title: \"Author\",\n      group: \"General Information\",\n      width: columnWidth(\"author\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"author\"),\n      type: \"text\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.status\",\n      dataKey: \"data.status\",\n      title: \"Status\",\n      group: \"General Information\",\n      width: columnWidth(\"data.status\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.status\"),\n      type: \"text\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.country\",\n      dataKey: \"data.country\",\n      title: \"Countries EMEA\",\n      header: \"Project Information\",\n      width: columnWidth(\"data.country\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.country\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCodeEMEA\",\n      dataKey: \"data.countryCodeEMEA\",\n      title: \"Country Code EMEA\",\n      width: columnWidth(\"data.countryCodeEMEA\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCodeEMEA\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.mirrorProjectNumber\",\n      dataKey: \"data.mirrorProjectNumber\",\n      title: \"Mirror Project Number\",\n      width: columnWidth(\"data.mirrorProjectNumber\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.mirrorProjectNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.countryShare\",\n      dataKey: \"data.countryShare\",\n      title: \"% Country Share\",\n      width: columnWidth(\"data.countryShare\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.countryShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryBudgetContributionCC\",\n      dataKey: \"data.countryBudgetContributionCC\",\n      title: \"Country Budget Contribution (CC)\",\n      width: columnWidth(\"data.countryBudgetContributionCC\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryBudgetContributionCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCostEstimationCC\",\n      dataKey: \"data.countryCostEstimationCC\",\n      title: \"Country Cost Estimation (CC)\",\n      width: columnWidth(\"data.countryCostEstimationCC\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCostEstimationCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.manufacturerNumber\",\n      dataKey: \"data.manufacturerNumber\",\n      title: \"Manufacturer Number\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.manufacturerNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.manufacturerNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorName\",\n      dataKey: \"data.vendorName\",\n      group: \"Project Information\",\n\n      title: \"Vendor Name\",\n      width: columnWidth(\"data.vendorName\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.debitorNumber\",\n      dataKey: \"data.debitorNumber\",\n      title: \"SAP Debitor Number\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.debitorNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.debitorNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.creditorNumber\",\n      dataKey: \"data.creditorNumber\",\n      group: \"Project Information\",\n\n      title: \"SAP Creditor Number\",\n      width: columnWidth(\"data.creditorNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.creditorNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.budgetSource\",\n      dataKey: \"data.budgetSource\",\n      title: \"Budget Source\",\n      width: columnWidth(\"data.budgetSource\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.budgetSource\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorBudgetCurrency\",\n      dataKey: \"data.vendorBudgetCurrency\",\n      title: \"Vendor Budget Currency\",\n      width: columnWidth(\"data.vendorBudgetCurrency\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.vendorBudgetCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorAmount\",\n      dataKey: \"data.vendorAmount\",\n      group: \"Project Information\",\n\n      title: \"Vendor Amount\",\n      width: columnWidth(\"data.vendorAmount\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorAmount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignCurrency\",\n      dataKey: \"data.campaignCurrency\",\n      title: \"Campaign Currency\",\n      width: columnWidth(\"data.campaignCurrency\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeCC\",\n      group: \"Project Information\",\n\n      dataKey: \"data.estimatedIncomeCC\",\n      title: \"Estimated Income (Campaign Currency)\",\n      width: columnWidth(\"data.estimatedIncomeCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsCC\",\n      group: \"Project Information\",\n\n      dataKey: \"data.estimatedCostsCC\",\n      title: \"Estimated Costs (Campaign Currency)\",\n      width: columnWidth(\"data.estimatedCostsCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.estimatedResultCC\",\n      dataKey: \"data.estimatedResultCC\",\n      title: \"Estimated Result (Campaign Currency)\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedResultCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeEUR\",\n      dataKey: \"data.estimatedIncomeEUR\",\n      title: \"Estimated Income EUR\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedIncomeEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsEUR\",\n      dataKey: \"data.estimatedCostsEUR\",\n      title: \"Estimated Costs EUR\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedCostsEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultEUR\",\n      dataKey: \"data.estimatedResultEUR\",\n      title: \"Estimated Result EUR\",\n      width: columnWidth(\"data.estimatedResultEUR\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorShare\",\n      dataKey: \"data.vendorShare\",\n      title: \"% Vendor Share\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.vendorShare\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.businessUnit\",\n      dataKey: \"data.businessUnit\",\n      group: \"Project Information\",\n\n      title: \"Business Unit\",\n      width: columnWidth(\"data.businessUnit\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.businessUnit\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.PH1\",\n      dataKey: \"data.PH1\",\n      title: \"PH1\",\n      width: columnWidth(\"data.PH1\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.PH1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignChannel\",\n      dataKey: \"data.campaignChannel\",\n      title: \"Campaign Channel\",\n      width: columnWidth(\"data.campaignChannel\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignChannel\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.targetAudience\",\n      dataKey: \"data.targetAudience\",\n      title: \"Target Audience\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.targetAudience\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.targetAudience\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.marketingResponsible\",\n      group: \"Project Information\",\n      dataKey: \"data.marketingResponsible\",\n      title: \"Marketing Responsible\",\n      width: columnWidth(\"data.marketingResponsible\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.marketingResponsible\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectApprover\",\n      dataKey: \"data.projectApprover\",\n      group: \"Project Information\",\n      title: \"Project Approver\",\n      width: columnWidth(\"data.projectApprover\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.projectApprover\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalInformation\",\n      dataKey: \"data.additionalInformation\",\n      title: \"Additional Information\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.additionalInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.additionalInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderServiceProvider\",\n      dataKey: \"data.purchaseOrderServiceProvider\",\n      title: \"Purchase Order Service Provider\",\n      group: \"Purchase Order\",\n\n      header: \"Purchase Order\",\n      width: columnWidth(\"data.purchaseOrderServiceProvider\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderServiceProvider\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorNamePO\",\n      dataKey: \"data.vendorNamePO\",\n      title: \"Vendor Name\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.vendorNamePO\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.vendorNamePO\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueOfServiceOrderedLC\",\n      dataKey: \"data.netValueOfServiceOrderedLC\",\n      group: \"Purchase Order\",\n\n      title: \"Net Value of Service Ordered (LC)\",\n      width: columnWidth(\"data.netValueOfServiceOrderedLC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.netValueOfServiceOrderedLC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localCurrency\",\n      dataKey: \"data.localCurrency\",\n      title: \"Local Currency\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.localCurrency\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.localCurrency\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValuePOC\",\n      dataKey: \"data.netValuePOC\",\n      title: \"Net Value (Purchase Order Currency)\",\n      width: columnWidth(\"data.netValuePOC\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValuePOC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderCurrency\",\n      dataKey: \"data.purchaseOrderCurrency\",\n      title: \"Purchase Order Currency\",\n      width: columnWidth(\"data.purchaseOrderCurrency\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueEur\",\n      dataKey: \"data.netValueEur\",\n      title: \"Net Value (EUR)\",\n      width: columnWidth(\"data.netValueEur\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValueEur\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderStatus\",\n      dataKey: \"data.purchaseOrderStatus\",\n      title: \"Purchase Order Status\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.purchaseOrderStatus\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.purchaseOrderStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonth\",\n      dataKey: \"data.yearMonth\",\n      title: \"Year / Month\",\n      header: \"Cost Invoices\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.yearMonth\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.yearMonth\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentType\",\n      dataKey: \"data.documentType\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentType\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentType\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDate\",\n      dataKey: \"data.postingDate\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDate\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.postingDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDate\",\n      dataKey: \"data.documentDate\",\n      title: \"Document Date\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.documentDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumber\",\n      dataKey: \"data.documentNumber\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumber\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.documentNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumber\",\n      dataKey: \"data.invoiceNumber\",\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumber\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.invoiceNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccount\",\n      dataKey: \"data.costAccount\",\n      title: \"Cost Account\",\n      width: columnWidth(\"data.costAccount\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costAccount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1\",\n      dataKey: \"data.name1\",\n      title: \"Invoice Supplier\",\n      width: columnWidth(\"data.name1\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.name1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLC\",\n      dataKey: \"data.costAmountLC\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLC\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountLC)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDC\",\n      dataKey: \"data.costAmountDC\",\n      title: \"Cost Amount (DC)\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.costAmountDC\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountDC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dc\",\n      dataKey: \"data.dc\",\n      title: \"DC\",\n      width: columnWidth(\"data.dc\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.dc\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEUR\",\n      dataKey: \"data.costAmountEUR\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEUR\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f2fcfc\"\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmount)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costStatus\",\n      dataKey: \"data.costStatus\",\n      title: \"Cost Status\",\n      width: columnWidth(\"data.costStatus\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthSI\",\n      dataKey: \"data.yearMonthSI\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthSI\", 200),\n      group: \"Sales Invoices\",\n\n      header: \"Sales Invoices\",\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.yearMonthSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeSI\",\n      dataKey: \"data.documentTypeSI\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentTypeSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateSI\",\n      dataKey: \"data.postingDateSI\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.postingDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateSI\",\n      dataKey: \"data.documentDateSI\",\n      title: \"Document Date\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.documentDateSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberSI\",\n      group: \"Sales Invoices\",\n\n      dataKey: \"data.documentNumberSI\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumberSI\",\n      dataKey: \"data.invoiceNumberSI\",\n      group: \"Sales Invoices\",\n\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountSI\",\n      dataKey: \"data.incomeAccountSI\",\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAccountSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1SI\",\n      dataKey: \"data.name1SI\",\n      title: \"Invoice Recipient\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.name1SI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.name1SI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n\n    {\n      key: \"data.incomeAmountLCSI\",\n      dataKey: \"data.incomeAmountLCSI\",\n      title: \"Income Amount (LC)\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.incomeAmountLCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountLCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountLC)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCSI\",\n      dataKey: \"data.incomeAmountDCSI\",\n      title: \"Income Amount (DC)\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.incomeAmountDCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountDCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcSI\",\n      dataKey: \"data.dcSI\",\n      title: \"DC\",\n      width: columnWidth(\"data.dcSI\", 200),\n      resizable: true,\n      group: \"Sales Invoices\",\n\n      hidden: visibilityController(\"salesInvoices\", \"data.dcSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEURSI\",\n      dataKey: \"data.incomeAmountEURSI\",\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEURSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountEURSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmount)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceStatusSI\",\n      dataKey: \"data.invoiceStatusSI\",\n      title: \"Invoice Status (Paid/Not Paid)\",\n      width: columnWidth(\"data.invoiceStatusSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceStatusSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.activityIdSI\",\n      group: \"Sales Invoices\",\n      dataKey: \"data.activityIdSI\",\n      title: \"Activity ID for Portal Vendors\",\n      width: columnWidth(\"data.activityIdSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.activityIdSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalMarketingInformation\",\n      group: \"Sales Invoices\",\n      dataKey: \"data.additionalMarketingInformation\",\n      title: \"Additional Marketing Information\",\n      width: columnWidth(\"data.additionalMarketingInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"salesInvoices\",\n        \"data.additionalMarketingInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthCostGL\",\n      dataKey: \"data.yearMonthCostGL\",\n      title: \"Year / Month\",\n      header: \"Cost GL Postings\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.yearMonthCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.yearMonthCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeCostGL\",\n      dataKey: \"data.documentTypeCostGL\",\n      group: \"Cost GL Postings\",\n\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentTypeCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateCostGL\",\n      group: \"Cost GL Postings\",\n\n      dataKey: \"data.postingDateCostGL\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.postingDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateCostGL\",\n      dataKey: \"data.documentDateCostGL\",\n      title: \"Document Date\",\n      width: columnWidth(\"data.documentDateCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberCostGL\",\n      dataKey: \"data.documentNumberCostGL\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.documentNumberCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.textCostGL\",\n      dataKey: \"data.textCostGL\",\n      title: \"Text\",\n      width: columnWidth(\"data.textCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.textCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccountCostGL\",\n      dataKey: \"data.costAccountCostGL\",\n      title: \"Cost Account\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.costAccountCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAccountCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLCCostGL\",\n      dataKey: \"data.costAmountLCCostGL\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLCCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountLCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountLCCostGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDCCostGL\",\n      dataKey: \"data.costAmountDCCostGL\",\n      title: \"Cost Amount (DC)\",\n      width: columnWidth(\"data.costAmountDCCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountDCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcCostGL\",\n      dataKey: \"data.dcCostGL\",\n      title: \"DC\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.dcCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.dcCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEURCostGL\",\n      dataKey: \"data.costAmountEURCostGL\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEURCostGL\", 200),\n      group: \"Cost GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.costAmountEURCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountCostGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthIncomeGL\",\n      dataKey: \"data.yearMonthIncomeGL\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthIncomeGL\", 200),\n      group: \"Income GL Postings\",\n\n      header: \"Income GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.yearMonthIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeIncomeGL\",\n      dataKey: \"data.documentTypeIncomeGL\",\n      title: \"Document Type\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.documentTypeIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentTypeIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateIncomeGL\",\n      dataKey: \"data.postingDateIncomeGL\",\n      title: \"Posting Date\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.postingDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.postingDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateIncomeGL\",\n      dataKey: \"data.documentDateIncomeGL\",\n      title: \"Document Date\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.documentDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberIncomeGL\",\n      dataKey: \"data.documentNumberIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentNumberIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.textIncomeGL\",\n      dataKey: \"data.textIncomeGL\",\n      group: \"Text\",\n\n      title: \"Document Number\",\n      width: columnWidth(\"data.textIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.textIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountIncomeGL\",\n      dataKey: \"data.incomeAccountIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAccountIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCIncomeGL\",\n      dataKey: \"data.incomeAmountLCIncomeGL\",\n      title: \"Income Amount (LC)\",\n      width: columnWidth(\"data.incomeAmountLCIncomeGL\", 200),\n      resizable: true,\n      group: \"Income GL Postings\",\n\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountLCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountLCIncomeGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCIncomeGL\",\n      dataKey: \"data.incomeAmountDCIncomeGL\",\n      title: \"Income Amount (DC)\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.incomeAmountDCIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountDCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcIncomeGL\",\n      dataKey: \"data.dcIncomeGL\",\n      title: \"DC\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.dcIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.dcIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEurIncomeGL\",\n      dataKey: \"data.incomeAmountEurIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEurIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountEurIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountIncomeGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.totalIncomeLC\",\n      dataKey: \"data.totalIncomeLC\",\n      title: \"Total Income (LC)\",\n      header: \"Project Results\",\n      width: columnWidth(\"data.totalIncomeLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalIncomeLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeInTool)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsLC\",\n      dataKey: \"data.totalCostsLC\",\n      title: \"Total Costs (LC)\",\n      width: columnWidth(\"data.totalCostsLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalCostsLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostsInTool)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalProfitLC\",\n      dataKey: \"data.totalProfitLC\",\n      title: \"Total Profit (LC)\",\n      width: columnWidth(\"data.totalProfitLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalProfitLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInTool + totalCostsInTool >= 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    totalIncomeInTool + totalCostsInTool\n                  )}`\n                : props.rowData.data.totalIncomeLC +\n                  props.rowData.data.totalCostsLC\n              : \"\"\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalLossLC\",\n      dataKey: \"data.totalLossLC\",\n      title: \"Total Loss (LC)\",\n      width: columnWidth(\"data.totalLossLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalLossLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInTool + totalCostsInTool < 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    (totalIncomeInTool + totalCostsInTool) * -1\n                  )}`\n                : (props.rowData.data.totalIncomeLC +\n                    props.rowData.data.totalCostsLC) *\n                  -1\n              : \"\"\n          }\n        />\n      ),\n    },\n\n    {\n      key: \"data.totalIncomeEUR\",\n      dataKey: \"data.totalIncomeEUR\",\n      title: \"Total Income (EUR)\",\n      width: columnWidth(\"data.totalIncomeEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalIncomeEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeInToolEUR)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsEUR\",\n      dataKey: \"data.totalCostsEUR\",\n      title: \"Total Costs (EUR)\",\n      width: columnWidth(\"data.totalCostsEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalCostsEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostsInToolEUR)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalProfitEUR\",\n      dataKey: \"data.totalProfitEUR\",\n      title: \"Total Profit (EUR)\",\n      width: columnWidth(\"data.totalProfitEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalProfitEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInToolEUR + totalCostsInToolEUR >= 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    totalIncomeInToolEUR + totalCostsInToolEUR\n                  )}`\n                : props.rowData.data.totalIncomeEUR +\n                  props.rowData.data.totalCostsEUR\n              : \"\"\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalLossEUR\",\n      dataKey: \"data.totalLossEUR\",\n      title: \"Total Loss (EUR)\",\n      width: columnWidth(\"data.totalLossEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalLossEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInToolEUR + totalCostsInToolEUR < 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    (totalIncomeInToolEUR + totalCostsInToolEUR) * -1\n                  )}`\n                : (props.rowData.data.totalIncomeEUR +\n                    props.rowData.data.totalCostsEUR) *\n                  -1\n              : \"\"\n          }\n        />\n      ),\n    },\n\n    ///\n    {\n      key: \"data.totalCostsTool\",\n      dataKey: \"data.totalCostsTool\",\n      title: \"Total Costs In Tool (LC)\",\n      width: columnWidth(\"data.totalCostsTool\", 200),\n      resizable: true,\n      header: \"Control Checks\",\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalCostAmountLC + totalCostAmountLCCostGL\n                )}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsSAP\",\n      dataKey: \"data.totalCostsSAP\",\n      title: \"Total Costs In SAP (LC)\",\n      width: columnWidth(\"data.totalCostsSAP\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalCostAmountLC + totalCostAmountLCCostGL\n                )}`\n              : props.rowData.data.totalCostsTool\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeTool\",\n      dataKey: \"data.totalIncomeTool\",\n      title: \"Total Income In Tool (LC)\",\n      width: columnWidth(\"data.totalIncomeTool\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n                )}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeSAP\",\n      dataKey: \"data.totalIncomeSAP\",\n      title: \"Total Income In SAP (LC)\",\n      width: columnWidth(\"data.totalIncomeSAP\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n                )}`\n              : props.rowData.data.totalIncomeTool\n          }\n        />\n      ),\n    },\n    ///\n\n    {\n      key: \"__actions.sap\",\n      dataKey: \"__actions.sap\",\n      title: \"SAP\",\n      width: columnWidth(\"__actions.sap\", 100),\n      resizable: true,\n      header: \"Actions\",\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"green\"}\n            onUpdate={callSap}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"create\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.view\",\n      dataKey: \"__actions.view\",\n      title: \"View\",\n      width: columnWidth(\"__actions.view\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"yellow\"}\n            onUpdate={(submissionId: string) => {\n              window.open(\n                \"/submissions/view/\" + submissionId,\n                \"_blank\",\n                \"noopener,noreferrer\"\n              );\n            }}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"view\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.delete\",\n      dataKey: \"__actions.delete\",\n      title: \"Delete\",\n      width: columnWidth(\"__actions.delete\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"button\"}\n          textColor={\"red\"}\n          backgroundColor=\"#fef9fa\"\n          onUpdate={deleteSubmission}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\"delete\"}\n        />\n      ),\n    },\n  ];\n\n  const headerRendererForTable = useCallback(\n    (props: {\n      cells: ReactNode[];\n      columns: ColumnShape<{\n        [k: string]: string;\n      }>;\n      headerIndex: number;\n    }) => {\n      const { headerIndex, columns, cells } = props;\n      if (headerIndex === 0) {\n        return cells.map((cell, index) => {\n          return cloneElement(cell as ReactElement, {\n            className: \"BaseTable__header-cell\",\n            children: (\n              <span style={{ fontWeight: 650 }} key={index}>\n                {columns[index].header ? columns[index].header : \"\"}\n              </span>\n            ),\n          });\n        });\n      }\n      return cells;\n    },\n    []\n  );\n  return (\n    <div>\n      <Box h=\"70px\" textAlign={\"end\"}>\n        <IconButton\n          icon={onlyMine ? <RiUserFill /> : <RiGroupFill />}\n          onClick={() => {\n            setOnlyMine(!onlyMine);\n          }}\n          aria-label=\"filter\"\n          colorScheme=\"blue\"\n          mr=\"10px\"\n        />\n        <IconButton\n          onClick={async () => {\n            interface FD {\n              [key: string]: any;\n            }\n            var formattedData: FD[] = [];\n            let init = false;\n            let header: FD[] = [\n              {\n                ID: \"Summary\",\n                Parent: \"\",\n                Group: \"\",\n                Created: \"\",\n                Title: \"\",\n                Author: \"\",\n              },\n              {\n                ID: \"ID\",\n                Parent: \"Parent\",\n                Group: \"Group\",\n                Created: \"Created\",\n                Title: \"Title\",\n                Author: \"Author\",\n              },\n              {\n                ID: \"\",\n                Parent: \"\",\n                Group: \"\",\n                Created: \"\",\n                Title: \"\",\n                Author: \"\",\n              },\n            ];\n            formattedData = filteredSubmissions.map((s) => {\n              let doc: FD = {\n                ID: s.id || \"unknown\",\n                Parent: s.parentId === null,\n                Group: s.group,\n                Created: s.created,\n                Title: s.title,\n                Author: s.author,\n              };\n              DisplayedColumnsList.forEach((group: any) => {\n                if (group.value === \"CMCT\" || group.value === \"LMD\") {\n                  return;\n                }\n                group.children.map((column: any, index: number) => {\n                  doc[column.value] = _.get(s, column.value);\n                  if (column.type === \"number\") {\n                    doc[column.value] = numberWithCommas(doc[column.value]);\n                  }\n                  if (!init) {\n                    header[0][column.value] = index === 0 ? group.label : \"\";\n                    header[1][column.value] = `${column.label}`;\n                  }\n                });\n              });\n              init = true;\n              return doc;\n            });\n            header[2] = {\n              \"data.costAmountLC\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC\n              )}`,\n              \"data.costAmountEUR\": `TOTAL: ${numberWithCommas(\n                totalCostAmount\n              )}`,\n              \"data.incomeAmountLCSI\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC\n              )}`,\n              \"data.incomeAmountEURSI\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmount\n              )}`,\n              \"data.costAmountLCCostGL\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLCCostGL\n              )}`,\n              \"data.costAmountEURCostGL\": `TOTAL: ${numberWithCommas(\n                totalCostAmountCostGL\n              )}`,\n              \"data.incomeAmountLCIncomeGL\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLCIncomeGL\n              )}`,\n              \"data.incomeAmountEurIncomeGL\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountIncomeGL\n              )}`,\n              \"data.totalIncomeLC\": `TOTAL: ${numberWithCommas(\n                totalIncomeInTool\n              )}`,\n              \"data.totalCostsLC\": `TOTAL: ${numberWithCommas(\n                totalCostsInTool\n              )}`,\n              \"data.totalProfitLC\": `TOTAL: ${numberWithCommas(\n                totalIncomeInTool + totalCostsInTool\n              )}`,\n              \"data.totalLossLC\": `TOTAL: ${numberWithCommas(\n                (totalIncomeInTool + totalCostsInTool) * -1\n              )}`,\n              \"data.totalIncomeEUR\": `TOTAL: ${numberWithCommas(\n                totalIncomeInToolEUR\n              )}`,\n              \"data.totalCostsEUR\": `TOTAL: ${numberWithCommas(\n                totalCostsInToolEUR\n              )}`,\n              \"data.totalProfitEUR\": `TOTAL: ${numberWithCommas(\n                totalIncomeInToolEUR + totalCostsInToolEUR\n              )}`,\n              \"data.totalLossEUR\": `TOTAL: ${numberWithCommas(\n                (totalIncomeInToolEUR + totalCostsInToolEUR) * -1\n              )}`,\n              \"data.totalCostsTool\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC + totalCostAmountLCCostGL\n              )}`,\n              \"data.totalCostsSAP\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC + totalCostAmountLCCostGL\n              )}`,\n              \"data.totalIncomeTool\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n              )}`,\n              \"data.totalIncomeSAP\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n              )}`,\n            };\n            formattedData.unshift(...header);\n            const ws = XLSX.utils.json_to_sheet(formattedData, {\n              skipHeader: true,\n            });\n            ws[\"!cols\"] = Object.keys(formattedData[0]).map(() => {\n              return { wch: 30 };\n            });\n            const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n            const excelBuffer = XLSX.write(wb, {\n              bookType: \"xlsx\",\n              type: \"array\",\n            });\n            const data = new Blob([excelBuffer], {\n              type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n            });\n            FileSaver.saveAs(data, \"test\" + \".xlsx\");\n          }}\n          colorScheme=\"teal\"\n          aria-label=\"export\"\n          icon={<RiFileExcel2Line />}\n        ></IconButton>\n      </Box>\n\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        minH={\"80vh\"}\n        mb={5}\n        mt={\"-20px\"}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n      >\n        <Tabs isLazy={false} variant=\"enclosed\">\n          <TabList>\n            <Tab>Projects</Tab>\n            <Tab>Invoicing</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer\n                onResize={({\n                  width,\n                  height,\n                }: {\n                  width: number;\n                  height: number;\n                }) => {\n                  setTableWidth(width);\n                }}\n              >\n                {({ width, height }) => (\n                  <BaseTable\n                    key={ignored}\n                    scrollLeft={scrollLeft}\n                    onScroll={onScroll}\n                    onColumnResizeEnd={({\n                      column,\n                      width,\n                    }: {\n                      column: any;\n                      width: number;\n                    }) => {\n                      handleResize(column.dataKey, width);\n                    }}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={10}\n                    ignoreFunctionInColumnCompare={false}\n                    expandColumnKey={\"__expand\"}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={tableCells}\n                    headerRenderer={headerRendererForTable}\n                    headerClassName=\"header-cells\"\n                    frozenData={\n                      [\n                        {\n                          id: \"total\",\n                          data: {},\n                          parentId: null,\n                        },\n                      ] as any[]\n                    }\n                    data={unflatten([...filteredSubmissions] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={[50, 50]}\n                    rowHeight={55}\n                    // overlayRenderer={\n                    //   <div>\n                    //     <DebugOverlay hidden={debugOverlayHidden}>\n                    //       <Box h=\"40px\" w=\"100%\">\n                    //         <CloseButton\n                    //           onClick={() => {\n                    //             hideDebugOverlay(true);\n                    //           }}\n                    //           mr=\"-10px\"\n                    //           float=\"right\"\n                    //         />\n                    //       </Box>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Requested Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.total)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Allocated Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.allocated)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Active Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.current)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           DOM Elements:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.domSize}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Virtualization:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           partial\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Table Mode:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           editable\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Avg FPS:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {avgFps}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           FPS:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {fps[fps.length - 1]}\n                    //         </Text>\n                    //       </HStack>\n                    //       <Divider mt={\"10px\"} />\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Active Sessions:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           1\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Total Requests:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {totalRequests}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Sync Protocol:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           HTTP\n                    //         </Text>\n                    //       </HStack>\n                    //       <VStack align=\"end\" mt=\"10px\">\n                    //         <Button\n                    //           float=\"right\"\n                    //           onClick={() => {\n                    //             RestAPI.updateVendorTableDefaultConfig(\n                    //               JSON.parse(\n                    //                 localStorage.getItem(\n                    //                   \"vendors.displayedColumns\"\n                    //                 ) || \"[]\"\n                    //               ),\n                    //               JSON.parse(\n                    //                 localStorage.getItem(\"vendors.columns\") ||\n                    //                   \"{}\"\n                    //               )\n                    //             );\n                    //           }}\n                    //           colorScheme=\"blue\"\n                    //         >\n                    //           update preset\n                    //         </Button>\n                    //         <Button\n                    //           float=\"left\"\n                    //           onClick={() => {\n                    //             localStorage.removeItem(\n                    //               \"vendors.displayedColumns\"\n                    //             );\n                    //             localStorage.removeItem(\"vendors.columns\");\n                    //             window.location.reload();\n                    //           }}\n                    //           colorScheme=\"red\"\n                    //         >\n                    //           clear cache\n                    //         </Button>\n                    //       </VStack>\n                    //     </DebugOverlay>\n                    //   </div>\n                    // }\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer\n                onResize={({\n                  width,\n                  height,\n                }: {\n                  width: number;\n                  height: number;\n                }) => {\n                  setTableWidth(width);\n                }}\n              >\n                {({ width, height }) => (\n                  <BaseTable\n                    scrollLeft={scrollLeft}\n                    onScroll={onScroll}\n                    onColumnResizeEnd={({\n                      column,\n                      width,\n                    }: {\n                      column: any;\n                      width: number;\n                    }) => {\n                      handleResize(column.dataKey, width);\n                    }}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={10}\n                    ignoreFunctionInColumnCompare={false}\n                    expandColumnKey={\"__expand\"}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={[\n                      {\n                        key: \"__expand\",\n                        dataKey: \"__expand\",\n                        title: \"\",\n                        width: 50,\n                        frozen: Column.FrozenDirection.LEFT,\n                        resizable: false,\n                        cellRenderer: () => <div />,\n                        className: \"expand\",\n                      },\n                      {\n                        key: \"data.documentNumberCMCT\",\n                        dataKey: \"data.documentNumberCMCT\",\n                        title: \"SAP Document Number\",\n                        group: \"Input of Central Marketing Controlling Team\",\n                        header: \"Input of Central Marketing Controlling Team\",\n                        width: columnWidth(\"data.documentNumberCMCT\", 300),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"CMCT\",\n                          \"data.documentNumberCMCT\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={\n                              props.rowData.data.statusLMD !==\n                                \"OK FOR INVOICING\" &&\n                              props.rowData.data.statusLMD !== \"INVOICED\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.operatorCMCT\",\n                                currentUser.displayName\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.dateCMCT\",\n                                new Date().toString()\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.statusLMD\",\n                                \"INVOICED\"\n                              );\n\n                              var mi = submissions.findIndex(\n                                (s) => s.data.documentNumberSI === value\n                              );\n                              if (mi > -1) {\n                                handleCellUpdate(\n                                  submissions[mi].id!,\n                                  \"data.activityIdSI\",\n                                  props.rowData.data.activityIdForPortalVendors\n                                );\n                                handleCellUpdate(\n                                  submissions[mi].id!,\n                                  \"data.additionalMarketingInformation\",\n                                  props.rowData.data.additionalInformationLMD\n                                );\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.dateCMCT\",\n                        dataKey: \"data.dateCMCT\",\n                        title: \"Date\",\n                        width: columnWidth(\"data.dateCMCT\", 200),\n                        resizable: true,\n                        group: \"Input of Central Marketing Controlling Team\",\n                        hidden: visibilityController(\"CMCT\", \"data.dateCMCT\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            readonly={true}\n                            backgroundColor=\"#f9f9ff\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.operatorCMCT\",\n                        dataKey: \"data.operatorCMCT\",\n                        title: \"Operator\",\n                        width: columnWidth(\"data.operatorCMCT\", 200),\n                        resizable: true,\n                        group: \"Input of Central Marketing Controlling Team\",\n                        hidden: visibilityController(\n                          \"CMCT\",\n                          \"data.operatorCMCT\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={true}\n                            backgroundColor=\"#f9f9ff\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.statusLMD\",\n                        dataKey: \"data.statusLMD\",\n                        title: \"Status\",\n                        width: columnWidth(\"data.statusLMD\", 300),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n                        header: \"Input of Local Marketing Department\",\n                        hidden: visibilityController(\"LMD\", \"data.statusLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            readonly={true}\n                            loadOptions={loadOptions}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoicingDateLMD\",\n                        dataKey: \"data.invoicingDateLMD\",\n                        title: \"Date of Invoicing\",\n                        width: columnWidth(\"data.invoicingDateLMD\", 200),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoicingDateLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.requestorLMD\",\n                                currentUser.displayName\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.requestorLMD\",\n                        dataKey: \"data.requestorLMD\",\n                        title: \"Requestor\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.requestorLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.requestorLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.vendorLMD\",\n                        dataKey: \"data.vendorLMD\",\n                        title: \"Vendor\",\n                        width: columnWidth(\"data.vendorLMD\", 250),\n                        group: \"Input of Local Marketing Department\",\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.vendorLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return VendorsNames;\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              let set = false;\n                              VendorsNames.every((v) => {\n                                if (v.label === value) {\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.vodLMD\",\n                                    v.value.debitorischer\n                                  );\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.buLMD\",\n                                    v.value.bu\n                                  );\n                                  set = true;\n                                  return false;\n                                }\n                                return true;\n                              });\n                              if (!set) {\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.vodLMD\",\n                                  \"\"\n                                );\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.buLMD\",\n                                  \"\"\n                                );\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.vodLMD\",\n                        dataKey: \"data.vodLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"VOD\",\n                        width: columnWidth(\"data.vodLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.vodLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.buLMD\",\n                        dataKey: \"data.buLMD\",\n                        title: \"BU\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.buLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.buLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // FIXME: set after 'refresh status' clicked\n                      {\n                        key: \"data.entryDateLMD\",\n                        dataKey: \"data.entryDateLMD\",\n                        title: \"Entry Date\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.entryDateLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.entryDateLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            readonly\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoiceTypeLMD\",\n                        dataKey: \"data.invoiceTypeLMD\",\n                        title: \"Invoice Type\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.invoiceTypeLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoiceTypeLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            readonly={props.rowData.parentId !== null}\n                            loadOptions={() => {\n                              return [\n                                {\n                                  label: \"Invoice\",\n                                  value: \"Invoice\",\n                                },\n                                { label: \"Pre-Invoice\", value: \"Pre-Invoice\" },\n                                {\n                                  label: \"Internal Invoice\",\n                                  value: \"Internal Invoice\",\n                                },\n                                {\n                                  label: \"Cancellation\",\n                                  value: \"Cancellation\",\n                                },\n                              ];\n                            }}\n                            backgroundColor={\n                              (props.cellData && props.cellData.length > 0) ||\n                              props.rowData.parentId !== null\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.cancellationInfoLMD\",\n                        dataKey: \"data.cancellationInfoLMD\",\n                        title: \"Cancellation Information\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.cancellationInfoLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.cancellationInfoLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={\n                              props.rowData.data.invoiceTypeLMD !==\n                              \"Cancellation\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.materialNumberLMD\",\n                        dataKey: \"data.materialNumberLMD\",\n                        title: \"Material Number\",\n                        width: columnWidth(\"data.materialNumberLMD\", 200),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.materialNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            // loadOptions={() => {\n                            //   return VendorsNames.map((vendor) => {\n                            //     return {\n                            //       label: vendor.value.hersteller,\n                            //       value: vendor.value.hersteller,\n                            //     };\n                            //   });\n                            // }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // {\n                      //   key: \"data.reasonLMD\",\n                      //   dataKey: \"data.reasonLMD\",\n                      //   title: \"Reason\",\n                      //   width: columnWidth(\"data.reasonLMD\", 200),\n                      //   group: \"Input of Local Marketing Department\",\n\n                      //   resizable: true,\n                      //   hidden: visibilityController(\"LMD\", \"data.reasonLMD\"),\n                      //   cellRenderer: (props: any) => (\n                      //     <EditableTableCell\n                      //       type={\"text\"}\n                      //       backgroundColor=\"#F5FAEF\"\n                      //       onUpdate={handleCommunicationCellUpdate}\n                      //       rowIndex={props.rowIndex}\n                      //       columnKey={props.column.dataKey}\n                      //       rowData={props.rowData}\n                      //       initialValue={props.cellData}\n                      //     />\n                      //   ),\n                      // },\n                      {\n                        key: \"data.alsoMarketingProjectNumberLMD\",\n                        dataKey: \"data.alsoMarketingProjectNumberLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"ALSO Marketing Project Number\",\n                        width: columnWidth(\n                          \"data.alsoMarketingProjectNumberLMD\",\n                          250\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.alsoMarketingProjectNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            maxLength={12}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            // FIXME: limit to 12 chars\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoiceTextLMD\",\n                        dataKey: \"data.invoiceTextLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Invoice Text\",\n                        width: columnWidth(\"data.invoiceTextLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoiceTextLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.referenceNumberFromVendor\",\n                        dataKey: \"data.referenceNumberFromVendor\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Reference Number From Vendor\",\n                        width: columnWidth(\n                          \"data.referenceNumberFromVendor\",\n                          200\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.referenceNumberFromVendor\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.activityIdForPortalVendors\",\n                        dataKey: \"data.activityIdForPortalVendors\",\n                        group: \"Input of Local Marketing Department\",\n                        title: \"Activity ID for Portal Vendors\",\n                        width: columnWidth(\n                          \"data.activityIdForPortalVendors\",\n                          200\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.activityIdForPortalVendors\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.amountLMD\",\n                        dataKey: \"data.amountLMD\",\n                        title: \"Amount\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.amountLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.amountLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"number\"}\n                            backgroundColor={\n                              props.cellData &&\n                              props.cellData !== 0 &&\n                              props.cellData.toString().trim().length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // {\n                      //   key: \"data.additionalInvoiceInfoLMD\",\n                      //   dataKey: \"data.additionalInvoiceInfoLMD\",\n                      //   title: \"Additional Info on Invoice\",\n                      //   group: \"Input of Local Marketing Department\",\n\n                      //   width: columnWidth(\n                      //     \"data.additionalInvoiceInfoLMD\",\n                      //     200\n                      //   ),\n                      //   resizable: true,\n                      //   hidden: visibilityController(\n                      //     \"LMD\",\n                      //     \"data.additionalInvoiceInfoLMD\"\n                      //   ),\n                      //   cellRenderer: (props: any) => (\n                      //     <EditableTableCell\n                      //       type={\"text\"}\n                      //       backgroundColor=\"#F5FAEF\"\n                      //       onUpdate={handleCommunicationCellUpdate}\n                      //       rowIndex={props.rowIndex}\n                      //       columnKey={props.column.dataKey}\n                      //       rowData={props.rowData}\n                      //       initialValue={props.cellData}\n                      //     />\n                      //   ),\n                      // },\n                      {\n                        key: \"data.documentCurrencyLMD\",\n                        dataKey: \"data.documentCurrencyLMD\",\n                        title: \"Document Currency\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.documentCurrencyLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.documentCurrencyLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return ExchangeRates;\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.paymentMethodLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        dataKey: \"data.paymentMethodLMD\",\n                        title: \"Payment Method\",\n                        width: columnWidth(\"data.paymentMethodLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.paymentMethodLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return [\n                                { label: \"Payment\", value: \"Payment\" },\n                                {\n                                  label: \"Money in House\",\n                                  value: \"Money in House\",\n                                },\n                                {\n                                  label: \"Credit Note from Vendor\",\n                                  value: \"Credit Note from Vendor\",\n                                },\n                              ];\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              var dunningStop = \"No\";\n                              if (\n                                value === \"Money in House\" ||\n                                value === \"Credit Note from Vendor\"\n                              ) {\n                                dunningStop = \"Yes\";\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.dunningStopLMD\",\n                                dunningStop\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.dunningStopLMD\",\n                        dataKey: \"data.dunningStopLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Dunning Stop?\",\n                        width: columnWidth(\"data.dunningStopLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.dunningStopLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return [\n                                { label: \"Yes\", value: \"Yes\" },\n                                { label: \"No\", value: \"No\" },\n                              ];\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.depositNumberLMD\",\n                        dataKey: \"data.depositNumberLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Deposit Number\",\n                        width: columnWidth(\"data.depositNumberLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.depositNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor={\n                              props.rowData.data.paymentMethodLMD ===\n                              \"Money in House\"\n                                ? props.cellData && props.cellData.length > 0\n                                  ? \"#F5FAEF\"\n                                  : \"#f7cdd6\"\n                                : \"#F5FAEF\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.additionalInformationLMD\",\n                        dataKey: \"data.additionalInformationLMD\",\n                        title: \"Additional Information\",\n                        width: columnWidth(\n                          \"data.additionalInformationLMD\",\n                          200\n                        ),\n                        group: \"Input of Local Marketing Department\",\n\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.additionalInformationLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.sendToLMD\",\n                        dataKey: \"data.sendToLMD\",\n                        title: \"Send to\",\n                        width: columnWidth(\"data.sendToLMD\", 200),\n                        group: \"Input of Local Marketing Department\",\n\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.sendToLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"__actions.validate\",\n                        dataKey: \"__actions.validate\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.validate\", 100),\n                        resizable: false,\n                        header: \"Actions\",\n                        className: \"red-border\",\n                        cellRenderer: (props: any) =>\n                          props.rowData.parentId === null ? (\n                            <EditableTableCell\n                              type={\"button\"}\n                              backgroundColor=\"#fef9fa\"\n                              textColor={\"green\"}\n                              onUpdate={(submissionId: string) => {\n                                var targetSubmissionIndex =\n                                  communicationSubmissions.findIndex(\n                                    (s) => s.id === submissionId\n                                  );\n                                if (targetSubmissionIndex > -1) {\n                                  var is: Submission[] = [];\n                                  is.push(\n                                    communicationSubmissions[\n                                      targetSubmissionIndex\n                                    ]\n                                  );\n\n                                  if (is[0].parentId === null) {\n                                    communicationSubmissions.forEach((s) => {\n                                      if (s.parentId === submissionId) {\n                                        is.push(s);\n                                      }\n                                    });\n                                  }\n\n                                  is.forEach((ts, tsi) => {\n                                    console.log(ts.data.invoicingDateLMD);\n                                    if (\n                                      ts.data.invoicingDateLMD &&\n                                      ts.data.invoicingDateLMD.length > 0 &&\n                                      ts.data.vendorLMD &&\n                                      ts.data.vendorLMD.length > 0 &&\n                                      ts.data.invoiceTypeLMD &&\n                                      ts.data.invoiceTypeLMD.length > 0 &&\n                                      ts.data.materialNumberLMD &&\n                                      ts.data.materialNumberLMD.length > 0 &&\n                                      ts.data.alsoMarketingProjectNumberLMD &&\n                                      ts.data.alsoMarketingProjectNumberLMD\n                                        .length > 0 &&\n                                      ts.data.invoiceTextLMD &&\n                                      ts.data.invoiceTextLMD.length > 0 &&\n                                      ts.data.amountLMD &&\n                                      typeof ts.data.amountLMD === \"number\" &&\n                                      ts.data.documentCurrencyLMD &&\n                                      ts.data.documentCurrencyLMD.length > 0 &&\n                                      ts.data.paymentMethodLMD &&\n                                      ts.data.paymentMethodLMD.length > 0 &&\n                                      ts.data.dunningStopLMD &&\n                                      ts.data.dunningStopLMD.length > 0 &&\n                                      ts.data.sendToLMD &&\n                                      ts.data.sendToLMD.length > 0 &&\n                                      (ts.data.paymentMethodLMD ===\n                                      \"Money in House\"\n                                        ? ts.data.depositNumberLMD &&\n                                          ts.data.depositNumberLMD.length > 0\n                                        : true)\n                                    ) {\n                                      var today = new Date();\n                                      today.setHours(23, 59, 59, 998);\n                                      if (\n                                        ts.data.invoicingDateLMD &&\n                                        new Date(ts.data.invoicingDateLMD) >\n                                          today\n                                      ) {\n                                        handleCommunicationCellUpdate(\n                                          ts.id!,\n                                          \"data.statusLMD\",\n                                          \"FUTURE INVOICE\"\n                                        );\n                                      } else {\n                                        handleCommunicationCellUpdate(\n                                          ts.id!,\n                                          \"data.statusLMD\",\n                                          \"OK FOR INVOICING\"\n                                        );\n                                      }\n                                      toast(\n                                        <Toast\n                                          title={\"Successful Validation\"}\n                                          message={\n                                            (tsi === 0 ? `Parent` : \"Child\") +\n                                            \" submission validated successfully\"\n                                          }\n                                          type={\"success\"}\n                                        />\n                                      );\n                                    } else {\n                                      toast(\n                                        <Toast\n                                          title={\"Incomplete Request\"}\n                                          message={\n                                            (tsi === 0 ? `Parent` : \"Child\") +\n                                            \" submission could not be validated: incomplete data\"\n                                          }\n                                          type={\"error\"}\n                                        />\n                                      );\n\n                                      handleCommunicationCellUpdate(\n                                        ts.id!,\n                                        \"data.statusLMD\",\n                                        \"INCOMPLETE\"\n                                      );\n                                    }\n                                  });\n                                }\n                              }}\n                              rowIndex={props.rowIndex}\n                              columnKey={props.column.dataKey}\n                              rowData={props.rowData}\n                              initialValue={\"validate\"}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                backgroundColor: \"#F7FAFC\",\n                                width: \"100%\",\n                                height: \"100%\",\n                              }}\n                            />\n                          ),\n                      },\n                      {\n                        key: \"__actions.create\",\n                        dataKey: \"__actions.create\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.create\", 100),\n                        resizable: false,\n                        className: \"red-border\",\n                        cellRenderer: (props: any) =>\n                          props.rowData.parentId === null ? (\n                            <EditableTableCell\n                              type={\"button\"}\n                              backgroundColor=\"#fef9fa\"\n                              textColor={\"blue\"}\n                              onUpdate={(submissionId: string) => {\n                                var submission: Submission = {\n                                  project: props.rowData.project,\n                                  parentId: submissionId,\n                                  group: \"communication\",\n                                  created: new Date(),\n                                  updated: new Date(),\n                                  title: \"\",\n                                  author: \"\",\n                                  status: \"\",\n                                  data: {},\n                                };\n                                RestAPI.createSubmission(submission).then(\n                                  (response) => {\n                                    var temp = [...communicationSubmissions];\n                                    temp.push(response.data);\n                                    setCommunicationSubmissions(temp);\n                                  }\n                                );\n                              }}\n                              rowIndex={props.rowIndex}\n                              columnKey={props.column.dataKey}\n                              rowData={props.rowData}\n                              initialValue={\"create\"}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                backgroundColor: \"#F7FAFC\",\n                                width: \"100%\",\n                                height: \"100%\",\n                              }}\n                            />\n                          ),\n                      },\n                      {\n                        key: \"__actions.delete\",\n                        dataKey: \"__actions.delete\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.delete\", 100),\n                        resizable: false,\n                        className: \"red-border\",\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"button\"}\n                            textColor={\"red\"}\n                            backgroundColor=\"#fef9fa\"\n                            onUpdate={(submissionId: string) => {\n                              var tbd: string[] = [submissionId];\n                              var submissionIndex =\n                                communicationSubmissions.findIndex(\n                                  (s) => s.id === submissionId\n                                );\n                              if (submissionIndex > -1) {\n                                var temp = [...communicationSubmissions];\n                                temp.splice(submissionIndex, 1);\n                                temp.forEach((s, index) => {\n                                  if (\n                                    s.parentId !== null &&\n                                    s.parentId === submissionId\n                                  ) {\n                                    if (s.id) {\n                                      temp.splice(index, 1);\n                                      tbd.push(s.id);\n                                    }\n                                  }\n                                });\n                                setCommunicationSubmissions(temp);\n                                RestAPI.deleteSubmission(submissionId);\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={\"delete\"}\n                          />\n                        ),\n                      },\n                    ]}\n                    headerRenderer={headerRendererForTable}\n                    headerClassName=\"header-cells\"\n                    data={unflatten([\n                      ...filteredCommunicationSubmissions,\n                    ] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={[50, 50]}\n                    rowHeight={55}\n                    overlayRenderer={\n                      <div\n                        style={{\n                          position: \"absolute\",\n                          width: \"200px\",\n                          bottom: \"20px\",\n                          right: \"20px\",\n                          padding: \"5px 15px\",\n                        }}\n                      >\n                        <Button\n                          onClick={() => {\n                            var submission: Submission = {\n                              // FIXME\n                              project: \"619515b754e61c8dd33daa52\",\n                              parentId: null,\n                              group: \"communication\",\n                              created: new Date(),\n                              updated: new Date(),\n                              title: \"\",\n                              author: \"\",\n                              status: \"\",\n                              data: {},\n                            };\n                            RestAPI.createSubmission(submission).then(\n                              (response) => {\n                                var temp = [...communicationSubmissions];\n                                temp.unshift(response.data);\n                                setCommunicationSubmissions(temp);\n                              }\n                            );\n                          }}\n                        >\n                          Create Submission\n                        </Button>\n                      </div>\n                    }\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        p={4}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n        color={\"gray.500\"}\n      >\n        <Box mb={\"1em\"} w=\"100%\">\n          <Text mb=\"8px\">Displayed Columns</Text>\n          <CheckTreePicker\n            cleanable={false}\n            defaultExpandAll={false}\n            block\n            onChange={(value) => {\n              var values: string[] = [];\n              if (value.length < 1) {\n                values = [\n                  \"generalInformation\",\n                  \"purchaseOrder\",\n                  \"costActuals\",\n                  \"salesActuals\",\n                  \"actualsInEur\",\n                  \"costGlPostings\",\n                  \"incomeGlPostings\",\n                  \"CMCT\",\n                  \"LMD\",\n                ];\n              } else {\n                value.forEach((v) => {\n                  values.push(v.toString());\n                });\n              }\n\n              localStorage.setItem(\n                \"vendors.displayedColumns\",\n                JSON.stringify(values)\n              );\n              setDisplayedColumns(values);\n            }}\n            value={displayedColumns}\n            data={DisplayedColumnsList}\n            placeholder=\"Groups\"\n            size=\"lg\"\n          />\n        </Box>\n        <Stack\n          mb={\"1em\"}\n          w=\"100%\"\n          spacing={\"2em\"}\n          direction={{ base: \"column\", lg: \"row\" }}\n        >\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Statuses</Text>\n            <TagPicker\n              cleanable\n              style={{\n                minHeight: \"40px\",\n                paddingTop: \"2px\",\n              }}\n              data={[]}\n              block\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Preset</Text>\n            <Select\n              menuPortalTarget={document.body}\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label: \"\",\n                value: \"\",\n              }}\n              onChange={(value: any) => {}}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"presets\"\n              options={[]}\n            />\n          </Box>\n        </Stack>\n      </Box>\n      <Box\n        shadow=\"md\"\n        color=\"gray.600\"\n        backgroundColor=\"white\"\n        mb={10}\n        p={8}\n        pb={0}\n        rounded=\"md\"\n        w={\"100%\"}\n      >\n        <VStack spacing={8} fontSize=\"md\" align=\"stretch\" color={\"gray.500\"}>\n          <Box w={\"100%\"}>\n            <Box w={\"100%\"}>\n              {filters.map((filter, index) => {\n                var valuesField: JSX.Element = <div></div>;\n\n                switch (filter.type) {\n                  case \"string\":\n                    valuesField = (\n                      <Input\n                        onChange={(event) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues[0] = event.target.value;\n                          setFilters(temp);\n                        }}\n                        value={filter.selectedValues[0]}\n                      />\n                    );\n                    break;\n                  case \"number\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <NumberInput\n                            onChange={(_, value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues[0] = value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                            w=\"100%\"\n                          >\n                            <NumberInputField />\n                            <NumberInputStepper>\n                              <NumberIncrementStepper />\n                              <NumberDecrementStepper />\n                            </NumberInputStepper>\n                          </NumberInput>\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <Stack direction={{ base: \"column\", md: \"row\" }}>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[0] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[0]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                            <Box textAlign=\"center\" w=\"20px\">\n                              <ArrowForwardIcon\n                                alignSelf=\"center\"\n                                w={5}\n                                h=\"100%\"\n                              />\n                            </Box>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[1] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[1]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                          </Stack>\n                        );\n                        break;\n                    }\n                    break;\n                  case \"dropdown\":\n                  case \"multiple-dropdown\":\n                    valuesField = (\n                      <TagPicker\n                        cleanable\n                        style={{\n                          minHeight: \"40px\",\n                          paddingTop: \"2px\",\n                        }}\n                        onChange={(value) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues = value;\n                          setFilters(temp);\n                        }}\n                        data={loadOptions(filter.columnValue)}\n                        block\n                      />\n                    );\n                    break;\n                  case \"date\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <DateSingleInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onChange={(value) => {\n                              if (value !== filters[index].selectedValues[0]) {\n                                var temp = [...filters];\n                                temp[index].selectedValues = [value];\n                                setFilters(temp);\n                              }\n                            }}\n                          />\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onDatesChange={(value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues = [\n                                value.startDate,\n                                value.endDate,\n                              ];\n                              setFilters(temp);\n                            }}\n                          />\n                        );\n                        break;\n                    }\n                }\n\n                return (\n                  <Box\n                    w={\"100%\"}\n                    backgroundColor=\"white\"\n                    p={4}\n                    mb={5}\n                    border=\"1px\"\n                    rounded=\"md\"\n                    borderColor=\"gray.100\"\n                  >\n                    <CloseButton\n                      onClick={() => {\n                        var temp = [...filters];\n                        temp.splice(index, 1);\n                        setFilters(temp);\n                      }}\n                      float=\"right\"\n                    />\n                    <VStack\n                      mt={\"20px\"}\n                      spacing={8}\n                      fontSize=\"md\"\n                      align=\"stretch\"\n                      color={\"gray.500\"}\n                    >\n                      <Box>\n                        <Stack\n                          direction={{ base: \"column\", xl: \"row\" }}\n                          w=\"100%\"\n                          spacing={{ base: \"20px\", xl: \"50px\" }}\n                        >\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Column</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label: filter.columnLabel,\n                                value: filter.columnValue,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].columnValue = value.value;\n                                temp[index].columnLabel = value.label;\n                                temp[index].type = value.type;\n                                temp[index].filter = \"exact\";\n                                var tv: any = [];\n                                switch (value.type) {\n                                  case \"string\":\n                                    tv = [\"\"];\n                                    break;\n                                  case \"number\":\n                                    if (temp[index].filter === \"exact\") {\n                                      tv = [0];\n                                    } else {\n                                      tv = [0, 0];\n                                    }\n                                    break;\n                                }\n                                temp[index].selectedValues = tv;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"color\"\n                              options={DisplayedColumnsListOptions}\n                              // options={tableCells\n                              //   .filter((cell: any) => cell.dataKey[0] !== \"_\")\n                              //   .map((cell: any) => {\n                              //     console.log(cell.cellRenderer.arguments[0]);\n                              //     return {\n                              //       label: `${cell.title} (${cell.group})`,\n                              //       value: cell.dataKey,\n                              //       type: cell.type ? cell.type : \"text\",\n                              //     };\n                              //   })}\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Type</Text>\n                            <Input\n                              onChange={() => {}}\n                              value={filter.type}\n                              readOnly\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Filter</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label:\n                                  filter.filter.charAt(0).toUpperCase() +\n                                  filter.filter.slice(1),\n                                value: filter.filter,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].filter = value.value;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"filter\"\n                              options={\n                                filterTypes[\n                                  filter.type as keyof typeof filterTypes\n                                ]\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Box>\n                      <Stack\n                        direction={{ base: \"column\", xl: \"row\" }}\n                        w=\"100%\"\n                        spacing={{ base: \"20px\", xl: \"50px\" }}\n                      >\n                        <Box w=\"100%\">\n                          <Text mb=\"8px\">Values</Text>\n                          {valuesField}\n                        </Box>\n                      </Stack>\n                    </VStack>\n                  </Box>\n                );\n              })}\n              <IconButton\n                onClick={() => {\n                  setFilters([\n                    ...filters,\n                    {\n                      columnValue: \"\",\n                      columnLabel: \"\",\n                      type: \"\",\n                      filter: \"exact\",\n                      values: [],\n                      selectedValues: [],\n                    } as FilterField,\n                  ]);\n                }}\n                my={5}\n                float=\"right\"\n                variant=\"outline\"\n                aria-label=\"add-port\"\n                icon={<BiPlusMedical />}\n              />\n            </Box>\n          </Box>\n        </VStack>\n      </Box>\n    </div>\n  );\n}\n\nexport default VendorsTable;\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Text,\n  Center,\n  Stack,\n  Heading,\n  Avatar,\n  Badge,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Dropdown from \"../types/dropdown\";\n\ninterface Props {\n  history: any;\n  dropdown: Dropdown;\n}\n\nexport default function DropdownCard(props: Props) {\n  return (\n    <Box\n      key={props.dropdown.id}\n      onClick={() => {\n        props.history.push(`/dropdowns/edit/${props.dropdown.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"360px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.dropdown.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.dropdown.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack\n        mt={\"45px\"}\n        direction={\"column\"}\n        textAlign=\"end\"\n        spacing={0}\n        fontSize={\"sm\"}\n        fontWeight={500}\n        color={\"gray.500\"}\n      >\n        <Text>\n          Total Records:{\" \"}\n          {props.dropdown.values !== null ? props.dropdown.values.length : 0}\n        </Text>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={moment(props.dropdown.created).format(\"DD.MM.YYYY HH:mm\")}\n        >\n          <Text>\n            Last Sync:{\" \"}\n            {props.dropdown.type === \"json\"\n              ? \"manual\"\n              : moment(props.dropdown.lastSync).fromNow()}\n          </Text>\n        </Tooltip>\n      </Stack>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport DropdownCard from \"../../components/DropdownCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [dropdowns, setDropdowns] = useState<Dropdown[]>([]);\n\n  useEffect(() => {\n    RestAPI.getDropdowns().then((response) => setDropdowns(response.data));\n  }, []);\n\n  return (\n    <div>\n      <Wrap justify=\"center\" spacing={{ base: \"40px\", lg: \"3em\" }}>\n        {(dropdowns !== null ? dropdowns : []).map((dropdown) => {\n          return (\n            <WrapItem>\n              <DropdownCard history={props.history} dropdown={dropdown} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import { useEffect } from \"react\";\nimport BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function ProjectInformationTable(gprops: any) {\n  useEffect(() => {});\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.country\",\n      dataKey: \"data.country\",\n      title: \"Country\",\n      width: 200,\n      resizable: true,\n      header: \"Project Information\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryShare\",\n      dataKey: \"data.countryShare\",\n      title: \"Country Share %\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryBudgetContributionEur\",\n      dataKey: \"data.countryBudgetContributionEur\",\n      title: \"Country Budget Contribution (EUR)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCostEstimationEur\",\n      dataKey: \"data.countryCostEstimationEur\",\n      title: \"Country Cost Estimation (EUR)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.manufacturerNumber\",\n      dataKey: \"data.manufacturerNumber\",\n      title: \"Manufacturer Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorName\",\n      dataKey: \"data.vendorName\",\n      title: \"Vendor Name\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.sapDebitorNumber\",\n      dataKey: \"data.sapDebitorNumber\",\n      title: \"SAP Debitor Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.sapCreditorNumber\",\n      dataKey: \"data.sapCreditorNumber\",\n      title: \"SAP Creditor Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.mdfLevel\",\n      dataKey: \"data.mdfLevel\",\n      title: \"MDF Level\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.budgetCurrency\",\n      dataKey: \"data.budgetCurrency\",\n      title: \"Budget Currency\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeBC\",\n      dataKey: \"data.estimatedIncomeBC\",\n      title: \"Estimated Income (Budget Currency)\",\n      width: 300,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsBC\",\n      dataKey: \"data.estimatedCostsBC\",\n      title: \"Estimated Costs (Budget Currency)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultBC\",\n      dataKey: \"data.estimatedResultBC\",\n      title: \"Estimated Result (Budget Currency)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeEur\",\n      dataKey: \"data.estimatedIncomeEur\",\n      title: \"Estimated Income (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsEur\",\n      dataKey: \"data.estimatedCostsEur\",\n      title: \"Estimated Costs (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultEur\",\n      dataKey: \"data.estimatedResultEur\",\n      title: \"Estimated Result (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorShare\",\n      dataKey: \"data.vendorShare\",\n      title: \"Vendor Share %\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.bu\",\n      dataKey: \"data.bu\",\n      title: \"Business Unit\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.ph1\",\n      dataKey: \"data.ph1\",\n      title: \"PH1\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignChannel\",\n      dataKey: \"data.campaignChannel\",\n      title: \"Campaign Channel\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.data.targetAudience\",\n      dataKey: \"data.targetAudience\",\n      title: \"Target Audience\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.marketingResponsible\",\n      dataKey: \"data.marketingResponsible\",\n      title: \"Marketing Responsible\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectApprover\",\n      dataKey: \"data.projectApprover\",\n      title: \"Project Approver\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalInformation\",\n      dataKey: \"data.additionalInformation\",\n      title: \"Additional Information\",\n      width: 300,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function PurchaseOrderTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.purchaseOrderServiceProvider\",\n      dataKey: \"data.purchaseOrderServiceProvider\",\n      title: \"Purchase Order Service Provider\",\n      width: 250,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueOfServiceOrderedLC\",\n      dataKey: \"data.netValueOfServiceOrderedLC\",\n      title: \"Net Value of Service Ordered (LC)\",\n      width: 250,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localCurrency\",\n      dataKey: \"data.localCurrency\",\n      title: \"Local Currency\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValuePOC\",\n      dataKey: \"data.netValuePOC\",\n      title: \"Net Value (Purchase Order Currency)\",\n      width: 300,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderCurrency\",\n      dataKey: \"data.purchaseOrderCurrency\",\n      title: \"Purchase Order Currency\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueEur\",\n      dataKey: \"data.netValueEur\",\n      title: \"Net Value (EUR)\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderStatus\",\n      dataKey: \"data.purchaseOrderStatus\",\n      title: \"Purchase Order Status\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function CostActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonth\",\n      dataKey: \"data.yearMonth\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentType\",\n      dataKey: \"data.documentType\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDate\",\n      dataKey: \"data.postingDate\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDate\",\n      dataKey: \"data.documentDate\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumber\",\n      dataKey: \"data.documentNumber\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumber\",\n      dataKey: \"data.invoiceNumber\",\n      title: \"Invoice Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccount\",\n      dataKey: \"data.costAccount\",\n      title: \"Cost Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1\",\n      dataKey: \"data.name1\",\n      title: \"Name 1\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLC\",\n      dataKey: \"data.costAmountLC\",\n      title: \"Cost Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDC\",\n      dataKey: \"data.costAmountDC\",\n      title: \"Cost Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dc\",\n      dataKey: \"data.dc\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costStatus\",\n      dataKey: \"data.costStatus\",\n      title: \"Cost Status\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function SalesActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthSA\",\n      dataKey: \"data.yearMonthSA\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeSA\",\n      dataKey: \"data.documentTypeSA\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateSA\",\n      dataKey: \"data.postingDateSA\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateSA\",\n      dataKey: \"data.documentDateSA\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberSA\",\n      dataKey: \"data.documentNumberSA\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumberSA\",\n      dataKey: \"data.invoiceNumberSA\",\n      title: \"Invoice Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountSA\",\n      dataKey: \"data.incomeAccountSA\",\n      title: \"Income Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1SA\",\n      dataKey: \"data.name1SA\",\n      title: \"Name 1\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLC\",\n      dataKey: \"data.incomeAmountLC\",\n      title: \"Income Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDC\",\n      dataKey: \"data.incomeAmountDC\",\n      title: \"Income Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeStatus\",\n      dataKey: \"data.incomeStatus\",\n      title: \"Income Status\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.actualResultLC\",\n      dataKey: \"data.actualResultLC\",\n      title: \"Actual Result (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function EurActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.incomeAmountEur\",\n      dataKey: \"data.incomeAmountEur\",\n      title: \"Income Amount (EUR)\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEur\",\n      dataKey: \"data.costAmountEur\",\n      title: \"Cost Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.actualResultEur\",\n      dataKey: \"data.actualResultEur\",\n      title: \"Actual Result (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function CostGlPostingsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthCostGL\",\n      dataKey: \"data.yearMonthCostGL\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeCostGL\",\n      dataKey: \"data.documentTypeCostGL\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateCostGL\",\n      dataKey: \"data.postingDateCostGL\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateCostGL\",\n      dataKey: \"data.documentDateCostGL\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberCostGL\",\n      dataKey: \"data.documentNumberCostGL\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccountCostGL\",\n      dataKey: \"data.costAccountCostGL\",\n      title: \"Cost Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLCCostGL\",\n      dataKey: \"data.costAmountLCCostGL\",\n      title: \"Cost Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDCCostGL\",\n      dataKey: \"data.costAmountDCCostGL\",\n      title: \"Cost Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcCostGL\",\n      dataKey: \"data.dcCostGL\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEurCostGL\",\n      dataKey: \"data.costAmountEurCostGL\",\n      title: \"Cost Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function IncomeGlPostingsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthIncomeGL\",\n      dataKey: \"data.yearMonthIncomeGL\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeIncomeGL\",\n      dataKey: \"data.documentTypeIncomeGL\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateIncomeGL\",\n      dataKey: \"data.postingDateIncomeGL\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateIncomeGL\",\n      dataKey: \"data.documentDateIncomeGL\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberIncomeGL\",\n      dataKey: \"data.documentNumberIncomeGL\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountIncomeGL\",\n      dataKey: \"data.incomeAccountIncomeGL\",\n      title: \"Income Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCIncomeGL\",\n      dataKey: \"data.incomeAmountLCIncomeGL\",\n      title: \"Income Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCIncomeGL\",\n      dataKey: \"data.incomeAmountDCIncomeGL\",\n      title: \"Income Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcIncomeGL\",\n      dataKey: \"data.dcIncomeGL\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEurIncomeGL\",\n      dataKey: \"data.incomeAmountEurIncomeGL\",\n      title: \"Income Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Button,\n  HStack,\n  Input,\n  Tooltip,\n  Text,\n  useColorModeValue,\n  Divider,\n  IconButton,\n  Stack,\n  VStack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  CloseButton,\n  MenuButton,\n  Menu,\n  MenuList,\n  MenuItem,\n  TabList,\n  Tabs,\n  Tab,\n  TabPanels,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport {\n  cloneElement,\n  createRef,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport { FpsView, useFps } from \"react-fps\";\nimport Select from \"react-select\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { createGlobalStyle } from \"styled-components\";\nimport styled from \"styled-components\";\nimport { Overlay } from \"react-overlays\";\nimport DatePicker from \"react-datepicker\";\nimport Toast from \"../../components/Toast\";\n\nimport BaseTable, {\n  AutoResizer,\n  Column,\n  ColumnShape,\n  unflatten,\n} from \"react-base-table\";\nimport ContentEditable from \"react-contenteditable\";\nimport \"react-base-table/styles.css\";\nimport { RestAPI } from \"../../api/rest\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { ArrowForwardIcon, SearchIcon } from \"@chakra-ui/icons\";\nimport { BiPlusMedical, VscDebugRerun, VscDebugStart } from \"react-icons/all\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { CheckTreePicker, TagPicker } from \"rsuite\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport EditableTableCell from \"../../components/EditableTableCell\";\nimport { ProjectInformationTable } from \"./Tables/ProjectInformation\";\nimport { PurchaseOrderTable } from \"./Tables/PurchaseOrder\";\nimport { CostActualsTable } from \"./Tables/CostActuals\";\nimport { SalesActualsTable } from \"./Tables/SalesActuals\";\nimport { EurActualsTable } from \"./Tables/EurActuals\";\nimport { CostGlPostingsTable } from \"./Tables/CostGlPostings\";\nimport { IncomeGlPostingsTable } from \"./Tables/IncomeGlPostings\";\n\ninterface Props {\n  history: any;\n}\n\nvar ProjectType: any[] = [];\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\nvar SapStatus: any[] = [\n  { label: \"Created\", value: \"created\" },\n  { label: \"None\", value: \"none\" },\n];\n\nasync function fetchDropdowns() {\n  var dropdownsIds: string[] = [\n    \"619b630a9a5a2bb37a93b23b\",\n    \"619b61419a5a2bb37a93b237\",\n    \"619b63429a5a2bb37a93b23d\",\n    \"619b62d79a5a2bb37a93b239\",\n    \"619b632c9a5a2bb37a93b23c\",\n    \"619b62959a5a2bb37a93b238\",\n    \"619b62f29a5a2bb37a93b23a\",\n    \"619b66defe27d06ad17d75ac\",\n    \"619b6754fe27d06ad17d75ad\",\n    \"619b6799fe27d06ad17d75ae\",\n    \"619b7b9efe27d06ad17d75af\",\n  ];\n  var responses = await Promise.all(\n    dropdownsIds.map((di) => {\n      return RestAPI.getDropdownValues(di);\n    })\n  );\n  PH1 = responses[0].data;\n  Companies = responses[1].data;\n  VendorsNames = responses[2].data;\n  CampaignChannel = responses[3].data;\n  TargetAudience = responses[4].data;\n  Budget = responses[5].data;\n  ExchangeRates = responses[6].data;\n  FiscalQuarter = responses[7].data;\n  Year = responses[8].data;\n  ProjectStartQuarter = responses[9].data;\n  ProjectType = responses[10].data;\n}\n\nconst loadOptions = (identifier: string) => {\n  switch (identifier) {\n    case \"data.projectType\":\n      return ProjectType;\n    case \"data.ph1\":\n      return PH1;\n    case \"data.campaignChannel\":\n      return CampaignChannel;\n    case \"data.targetAudience\":\n      return TargetAudience;\n    case \"data.budgetCurrency\":\n      return ExchangeRates;\n    case \"data.sapStatus\":\n      return SapStatus;\n  }\n  return [];\n};\n\ninterface FilterField {\n  columnValue: string;\n  columnLabel: string;\n  type: string;\n  filter: string;\n  values: any[];\n  selectedValues: any[];\n}\nconst filterTypes = {\n  text: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  dropdown: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  \"multiple-dropdown\": [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  date: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n};\n\nexport function SVendorsTable(props: Props) {\n  const [selectedSubmission, setSelectedSubmission] = useState<null | string>(\n    null\n  );\n  const [filters, setFilters] = useState<FilterField[]>([]);\n\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<Submission[]>(\n    []\n  );\n\n  const [totalRequests, setTotalRequests] = useState(1);\n\n  useEffect(() => {\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [forceUpdateCount, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    var filtered: Submission[] = [];\n    if (filters.length > 0 && submissions.length > 0) {\n      submissions.map((submission) => {\n        var valid = true;\n        filters.map((filter) => {\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"text\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    filter.selectedValues.map((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          filtered.push(submission);\n        }\n      });\n      setFilteredSubmissions(filtered);\n    } else {\n      setFilteredSubmissions([...submissions]);\n    }\n  }, [filters, submissions]);\n\n  async function partialUpdate(submission: string, path: string, value: any) {\n    setTotalRequests(totalRequests + 1);\n    if (path.includes(\"[\")) {\n      var s = path.split(\".\");\n      s.shift();\n      path = s.join(\".\");\n    }\n    RestAPI.updateSubmissionPartial(submission, path, value);\n  }\n\n  function handleCellUpdate(submission: string, path: string, value: any) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submission);\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n      if (_.get(submissions, path) !== value) {\n        _.set(submissions, path, value);\n        partialUpdate(submission, path, value);\n      }\n    }\n  }\n  function deleteSubmission(submissionId: string) {\n    var tbd: string[] = [submissionId];\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp.splice(submissionIndex, 1);\n      temp.map((s, index) => {\n        if (s.parentId !== null && s.parentId === submissionId) {\n          if (s.id) {\n            temp.splice(index, 1);\n            tbd.push(s.id);\n          }\n        }\n      });\n      setSubmissions(temp);\n      tbd.forEach((ds) => {\n        RestAPI.deleteSubmission(ds);\n      });\n    }\n  }\n\n  useEffect(() => {\n    RestAPI.getSubmissions().then((response) => {\n      var vSubs: Submission[] = [];\n      var subs = response.data;\n      subs.map((sub) => {\n        if (sub.project === \"619515b754e61c8dd33daa52\") {\n          vSubs.push(sub);\n        }\n      });\n      setSubmissions(vSubs);\n      setFilteredSubmissions(vSubs);\n    });\n  }, []);\n\n  const tableCells = [\n    {\n      key: \"data.companyName\",\n      dataKey: \"data.companyName\",\n      title: \"Company Name\",\n      width: 200,\n      resizable: true,\n      header: \"General Information\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.companyCode\",\n      dataKey: \"data.companyCode\",\n      title: \"Company Code\",\n      width: 150,\n      resizable: true,\n      type: \"number\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectNumber\",\n      dataKey: \"data.projectNumber\",\n      title: \"Project Number\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectName\",\n      dataKey: \"data.projectName\",\n      title: \"Project Name\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignStartDate\",\n      dataKey: \"data.campaignStartDate\",\n      title: \"Campaign Start Date\",\n      width: 200,\n      resizable: true,\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectType\",\n      dataKey: \"data.projectType\",\n      title: \"Project Type\",\n      width: 250,\n      resizable: true,\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"__summary.countries\",\n      dataKey: \"__summary.countries\",\n      title: \"Countries\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"tags\"}\n          readonly\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          textColor=\"red\"\n          initialValue={submissions.map((submission) => {\n            if (submission.parentId === props.rowData.id) {\n              return submission.data.country;\n            }\n          })}\n        />\n      ),\n    },\n    {\n      key: \"__summary.vendors\",\n      dataKey: \"__summary.vendors\",\n      title: \"Vendors\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"tags\"}\n          readonly\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          textColor=\"blue\"\n          initialValue={submissions.map((submission) => {\n            if (submission.parentId === props.rowData.id) {\n              return submission.data.vendorName;\n            }\n          })}\n        />\n      ),\n    },\n    {\n      key: \"__actions.view\",\n      dataKey: \"__actions.view\",\n      title: \"View\",\n      width: 100,\n      resizable: true,\n      header: \"Actions\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            textColor={\"blue\"}\n            onUpdate={(submission: string) => {\n              setSelectedSubmission(submission);\n            }}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"view\"}\n          />\n        ) : null,\n    },\n    {\n      key: \"__actions.delete\",\n      dataKey: \"__actions.delete\",\n      title: \"Delete\",\n      width: 100,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"button\"}\n          textColor={\"red\"}\n          onUpdate={deleteSubmission}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\"delete\"}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        minH={\"85vh\"}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n        p={\"20px\"}\n      >\n        <Tabs isLazy variant=\"enclosed\" w={\"100%\"}>\n          <TabList align=\"start\">\n            <Tab>General Information</Tab>\n            <Tab hidden={selectedSubmission === null}>Project Information</Tab>\n            <Tab hidden={selectedSubmission === null}>Purchase Order</Tab>\n            <Tab hidden={selectedSubmission === null}>Cost Actuals</Tab>\n            <Tab hidden={selectedSubmission === null}>Sales Actuals</Tab>\n            <Tab hidden={selectedSubmission === null}>Actuals in EUR</Tab>\n            <Tab hidden={selectedSubmission === null}>Cost GL Postings</Tab>\n            <Tab hidden={selectedSubmission === null}>Income GL Postings</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer>\n                {({ width, height }) => (\n                  <BaseTable\n                    ignoreFunctionInColumnCompare={false}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={tableCells}\n                    headerClassName=\"header-cells\"\n                    data={unflatten([...filteredSubmissions] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={50}\n                    rowHeight={55}\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <ProjectInformationTable\n                submissions={\n                  [\n                    ...filteredSubmissions.filter((s) => {\n                      return (\n                        s.id === selectedSubmission ||\n                        (s.parentId === selectedSubmission &&\n                          s.group === \"projectInformation\")\n                      );\n                    }),\n                  ] as any[]\n                }\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <PurchaseOrderTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"puchaseOrder\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <CostActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"costActuals\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <SalesActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"salesActuals\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <EurActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"actualsInEur\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <CostGlPostingsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"costGlPostings\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <IncomeGlPostingsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"incomeGlPostings\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n      {/* <Box\n        shadow=\"md\"\n        color=\"gray.600\"\n        backgroundColor=\"white\"\n        mb={10}\n        p={8}\n        pb={0}\n        rounded=\"md\"\n        w={\"100%\"}\n      >\n        <VStack spacing={8} fontSize=\"md\" align=\"stretch\" color={\"gray.500\"}>\n          <Box w={\"100%\"}>\n            <Box w={\"100%\"}>\n              {filters.map((filter, index) => {\n                var valuesField: JSX.Element = <div></div>;\n\n                switch (filter.type) {\n                  case \"text\":\n                    valuesField = (\n                      <Input\n                        onChange={(event) => {\n                          var temp = [...filters];\n                          temp[index!].selectedValues[0] = event.target.value;\n                          setFilters(temp);\n                        }}\n                        value={filter.selectedValues[0]}\n                      />\n                    );\n                    break;\n                  case \"number\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <NumberInput\n                            onChange={(vstring, value) => {\n                              var temp = [...filters];\n                              temp[index!].selectedValues[0] = value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                            w=\"100%\"\n                          >\n                            <NumberInputField />\n                            <NumberInputStepper>\n                              <NumberIncrementStepper />\n                              <NumberDecrementStepper />\n                            </NumberInputStepper>\n                          </NumberInput>\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <Stack direction={{ base: \"column\", md: \"row\" }}>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(vstring, value) => {\n                                var temp = [...filters];\n                                temp[index!].selectedValues[0] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[0]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                            <Box textAlign=\"center\" w=\"20px\">\n                              <ArrowForwardIcon\n                                alignSelf=\"center\"\n                                w={5}\n                                h=\"100%\"\n                              />\n                            </Box>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(vstring, value) => {\n                                var temp = [...filters];\n                                temp[index!].selectedValues[1] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[1]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                          </Stack>\n                        );\n                        break;\n                    }\n                    break;\n                  case \"dropdown\":\n                  case \"multiple-dropdown\":\n                    valuesField = (\n                      <TagPicker\n                        cleanable\n                        style={{\n                          minHeight: \"40px\",\n                          paddingTop: \"2px\",\n                        }}\n                        onChange={(value) => {\n                          console.log(value);\n                          var temp = [...filters];\n                          temp[index!].selectedValues = value;\n                          setFilters(temp);\n                        }}\n                        data={loadOptions(filter.columnValue)}\n                        block\n                      />\n                    );\n                    break;\n                  case \"date\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <DateSingleInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onChange={(value) => {\n                              if (value !== filters[index].selectedValues[0]) {\n                                var temp = [...filters];\n                                temp[index!].selectedValues = [value];\n                                setFilters(temp);\n                              }\n                            }}\n                          />\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onDatesChange={(value) => {\n                              var temp = [...filters];\n                              temp[index!].selectedValues = [\n                                value.startDate,\n                                value.endDate,\n                              ];\n                              setFilters(temp);\n                            }}\n                          />\n                        );\n                        break;\n                    }\n                }\n\n                return (\n                  <Box\n                    w={\"100%\"}\n                    backgroundColor=\"white\"\n                    p={4}\n                    mb={5}\n                    border=\"1px\"\n                    rounded=\"md\"\n                    borderColor=\"gray.100\"\n                  >\n                    <CloseButton\n                      onClick={() => {\n                        var temp = [...filters];\n                        temp.splice(index, 1);\n                        setFilters(temp);\n                      }}\n                      float=\"right\"\n                    />\n                    <VStack\n                      mt={\"20px\"}\n                      spacing={8}\n                      fontSize=\"md\"\n                      align=\"stretch\"\n                      color={\"gray.500\"}\n                    >\n                      <Box>\n                        <Stack\n                          direction={{ base: \"column\", xl: \"row\" }}\n                          w=\"100%\"\n                          spacing={{ base: \"20px\", xl: \"50px\" }}\n                        >\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Column</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label: filter.columnLabel,\n                                value: filter.columnValue,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index!].columnValue = value.value;\n                                temp[index!].columnLabel = value.label;\n                                temp[index!].type = value.type;\n                                temp[index!].filter = \"exact\";\n                                var tv: any = [];\n                                switch (value.type) {\n                                  case \"text\":\n                                    tv = [\"\"];\n                                    break;\n                                  case \"number\":\n                                    if (temp[index!].filter === \"exact\") {\n                                      tv = [0];\n                                    } else {\n                                      tv = [0, 0];\n                                    }\n                                    break;\n                                }\n                                temp[index!].selectedValues = tv;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"color\"\n                              options={tableCells\n                                .filter((cell: any) => cell.dataKey[0] !== \"_\")\n                                .map((cell: any) => {\n                                  return {\n                                    label: cell.title,\n                                    value: cell.dataKey,\n                                    type: cell.type ? cell.type : \"text\",\n                                  };\n                                })}\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Type</Text>\n                            <Input\n                              onChange={() => {}}\n                              value={filter.type}\n                              readOnly\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Filter</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label:\n                                  filter.filter.charAt(0).toUpperCase() +\n                                  filter.filter.slice(1),\n                                value: filter.filter,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index!].filter = value.value;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"filter\"\n                              options={\n                                filterTypes[\n                                  filter.type as keyof typeof filterTypes\n                                ]\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Box>\n                      <Stack\n                        direction={{ base: \"column\", xl: \"row\" }}\n                        w=\"100%\"\n                        spacing={{ base: \"20px\", xl: \"50px\" }}\n                      >\n                        <Box w=\"100%\">\n                          <Text mb=\"8px\">Values</Text>\n                          {valuesField}\n                        </Box>\n                      </Stack>\n                    </VStack>\n                  </Box>\n                );\n              })}\n              <IconButton\n                onClick={() => {\n                  setFilters([\n                    ...filters,\n                    {\n                      columnValue: \"\",\n                      columnLabel: \"\",\n                      type: \"\",\n                      filter: \"exact\",\n                      values: [],\n                      selectedValues: [],\n                    } as FilterField,\n                  ]);\n                }}\n                my={5}\n                float=\"right\"\n                variant=\"outline\"\n                aria-label=\"add-port\"\n                icon={<BiPlusMedical />}\n              />\n            </Box>\n          </Box>\n        </VStack>\n      </Box> */}\n    </div>\n  );\n}\n\nexport default SVendorsTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\n\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\nimport { CustomNavigationClient } from \"./utils/NavigationClient\";\n\nimport { Explorer } from \"./pages/Explorer\";\nimport { Profile } from \"./pages/Profile\";\nimport Layout from \"./components/Layout\";\nimport Dashboard from \"./pages/Dashboard\";\n\nimport ProjectExplorer from \"./pages/Projects/Explorer\";\nimport ProjectEditor from \"./pages/Projects/Editor\";\nimport ProjectViewer from \"./pages/Projects/Viewer\";\n\nimport SubmissionViewer from \"./pages/Submissions/Viewer\";\n\nimport SubmissionsTableExplorer from \"./pages/Submissions/TableExplorer\";\n\nimport VendorsTable from \"./pages/Submissions/Vendors\";\n\nimport DropdownExplorer from \"./pages/Dropdowns/Explorer\";\nimport DropdownEditor from \"./pages/Dropdowns/Editor\";\nimport { RestAPI } from \"./api/rest\";\nimport { ToastContainer, Slide } from \"react-toastify\";\nimport SVendorsTable from \"./pages/Submissions/SVendors\";\n\ntype AppProps = {\n  pca: IPublicClientApplication;\n};\n\nfunction App({ pca }: AppProps) {\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  const [isAdmin, setAdminRole] = useState(false);\n  pca.setNavigationClient(navigationClient);\n\n  useEffect(() => {\n    RestAPI.getRoles().then((response) =>\n      setAdminRole(response.data.includes(\"administrator\"))\n    );\n  }, []);\n\n  return (\n    <MsalProvider instance={pca}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={true}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        closeButton={false}\n        transition={Slide}\n      />\n      <Switch>\n        <Layout>\n          {/* <Route exact path=\"/\" component={Dashboard} /> */}\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => <ProjectExplorer isAdmin={isAdmin} {...props} />}\n          />\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/explorer\">\n            <Explorer />\n          </Route>\n          <Route\n            exact\n            path=\"/projects\"\n            render={(props) => <ProjectExplorer isAdmin={isAdmin} {...props} />}\n          />\n          <Route\n            path=\"/projects/create\"\n            render={(props) => <ProjectEditor create={true} {...props} />}\n          />\n          <Route\n            path=\"/projects/edit/:id\"\n            render={(props) => <ProjectEditor create={false} {...props} />}\n          />\n          <Route\n            path=\"/projects/view/:id\"\n            render={(props) => (\n              <ProjectViewer isAdmin={isAdmin} create={false} {...props} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/submissions\"\n            render={(props) => <SubmissionsTableExplorer {...props} />}\n          />\n          <Route\n            path=\"/submissions/view/:id\"\n            render={(props) => (\n              <SubmissionViewer isAdmin={isAdmin} create={false} {...props} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/vendors\"\n            render={(props) => <VendorsTable {...props} />}\n          />\n          <Route\n            exact\n            path=\"/vendors/new\"\n            render={(props) => <SVendorsTable {...props} />}\n          />\n          <Route\n            exact\n            path=\"/dropdowns\"\n            render={(props) => (\n              <DropdownExplorer isAdmin={isAdmin} {...props} />\n            )}\n          />\n          <Route\n            path=\"/dropdowns/create\"\n            render={(props) => <DropdownEditor create={true} {...props} />}\n          />\n          <Route\n            path=\"/dropdowns/edit/:id\"\n            render={(props) => <DropdownEditor create={false} {...props} />}\n          />\n        </Layout>\n      </Switch>\n    </MsalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport \"focus-visible/dist/focus-visible\";\nimport { Global, css } from \"@emotion/react\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\n\n// MSAL imports\nimport {\n  PublicClientApplication,\n  EventType,\n  EventMessage,\n  AuthenticationResult,\n} from \"@azure/msal-browser\";\nimport { loginRequest, msalConfig } from \"./authConfig\";\n\nconst GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus    via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\n// Account selection logic is app dependent. Adjust as needed for different use cases.\nconst accounts = msalInstance.getAllAccounts();\nif (accounts.length > 0) {\n  msalInstance.setActiveAccount(accounts[0]);\n}\n\nmsalInstance.addEventCallback((event: EventMessage) => {\n  if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n    const payload = event.payload as AuthenticationResult;\n    const account = payload.account;\n    msalInstance.setActiveAccount(account);\n  }\n});\n\naxios.interceptors.request.use(async (config: any) => {\n  const account = msalInstance.getActiveAccount();\n  if (account) {\n    const response = await msalInstance.acquireTokenSilent({\n      ...loginRequest,\n      account: account,\n    });\n    config.headers.Authorization = `Bearer ${response.idToken}`;\n  }\n  return config;\n});\n\nReactDOM.render(\n  <ChakraProvider\n    theme={extendTheme({\n      styles: {\n        global: (props: any) => ({\n          body: {\n            bg: mode(\"#f7fafc\", \"#282C34\")(props),\n            color: mode(\"gray.800\", \"#ABB2BF\")(props),\n          },\n        }),\n      },\n    })}\n  >\n    <Global styles={GlobalStyles} />\n    <Router>\n      {/* <ColorModeProvider options={{ initialColorMode: \"dark\" }}> */}\n      <App pca={msalInstance} />\n      {/* </ColorModeProvider> */}\n    </Router>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n","import axios, { AxiosResponse } from \"axios\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\n\nexport class API {\n  public baseUrl =\n    process.env.NODE_ENV === \"production\"\n      ? \"/api\"\n      : \"http://localhost:7000/api\";\n  public usersUrl = `${this.baseUrl}/users/`;\n  public projectsUrl = `${this.baseUrl}/projects/`;\n  public bookmarksUrl = `${this.baseUrl}/bookmarks/`;\n  public submissionsUrl = `${this.baseUrl}/submissions/`;\n  public dropdownsUrl = `${this.baseUrl}/dropdowns/`;\n\n  getRoles(): Promise<AxiosResponse<string[]>> {\n    return axios.get(`${this.usersUrl}roles`);\n  }\n  getProjects(): Promise<AxiosResponse<Project[]>> {\n    return axios.get<Project[]>(this.projectsUrl);\n  }\n  getProject(id: string): Promise<AxiosResponse<Project>> {\n    return axios.get<Project>(`${this.projectsUrl}${id}`);\n  }\n  createProject(project: Project): Promise<AxiosResponse<Project>> {\n    return axios.post<Project>(`${this.projectsUrl}`, JSON.stringify(project));\n  }\n  updateProject(project: Project): Promise<AxiosResponse> {\n    return axios.put<Project>(\n      `${this.projectsUrl}${project.id}`,\n      JSON.stringify(project)\n    );\n  }\n  deleteProject(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.projectsUrl}${id}`);\n  }\n\n  getBookmarks(): Promise<AxiosResponse<Bookmark[]>> {\n    return axios.get<Bookmark[]>(this.bookmarksUrl);\n  }\n  createBookmark(bookmark: Bookmark): Promise<AxiosResponse<Bookmark>> {\n    return axios.post<Bookmark>(this.bookmarksUrl, JSON.stringify(bookmark));\n  }\n  deleteBookmark(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.bookmarksUrl}${id}`);\n  }\n\n  getSubmissions(project?: string): Promise<AxiosResponse<Submission[]>> {\n    const params = new URLSearchParams([]);\n    if (project) {\n      params.set(\"project\", project);\n    }\n    return axios.get<Submission[]>(this.submissionsUrl, { params });\n  }\n  getSubmissionWithChildren(\n    id: string\n  ): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.get<SubmissionWithChildren>(`${this.submissionsUrl}${id}`);\n  }\n  createSubmission(submission: Submission): Promise<AxiosResponse<Submission>> {\n    return axios.post<Submission>(\n      `${this.submissionsUrl}`,\n      JSON.stringify(submission)\n    );\n  }\n  createSubmissionWithChildren(\n    submission: SubmissionWithChildren\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}children`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmission(submission: Submission): Promise<AxiosResponse> {\n    return axios.put<Submission>(\n      `${this.submissionsUrl}${submission.id}`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmissionPartial(\n    submission: string,\n    path: string,\n    value: any\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}partial`,\n      JSON.stringify({\n        submission,\n        path,\n        value,\n      })\n    );\n  }\n  callSapSubmission(submission: string): Promise<AxiosResponse> {\n    return axios.get(`${this.submissionsUrl}${submission}/sap`);\n  }\n  deleteSubmission(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.submissionsUrl}${id}`);\n  }\n\n  getDropdowns(): Promise<AxiosResponse<Dropdown[]>> {\n    return axios.get<Dropdown[]>(this.dropdownsUrl);\n  }\n  getDropdown(id: string): Promise<AxiosResponse<Dropdown>> {\n    return axios.get<Dropdown>(`${this.dropdownsUrl}${id}`);\n  }\n  getDropdownValues(id: string): Promise<AxiosResponse<any[]>> {\n    return axios.get<any[]>(`${this.dropdownsUrl}${id}/values`);\n  }\n  syncDropdown(id: string): Promise<AxiosResponse> {\n    return axios.get(`${this.dropdownsUrl}sync/${id}`);\n  }\n  createDropdown(dropdown: Dropdown): Promise<AxiosResponse<Dropdown>> {\n    return axios.post<Dropdown>(\n      `${this.dropdownsUrl}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  updateDropdown(dropdown: Dropdown): Promise<AxiosResponse> {\n    return axios.put<Dropdown>(\n      `${this.dropdownsUrl}${dropdown.id}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  deleteDropdown(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.dropdownsUrl}${id}`);\n  }\n\n  getVendorTableDefaultConfig(): Promise<AxiosResponse<any>> {\n    return axios.get<any>(`${this.submissionsUrl}vendorTable`);\n  }\n\n  updateVendorTableDefaultConfig(\n    displayedColumns: string[],\n    columnsWidth: any\n  ): Promise<AxiosResponse> {\n    return axios.put<any>(\n      `${this.submissionsUrl}vendorTable`,\n      JSON.stringify({\n        displayedColumns: displayedColumns,\n        columnsWidth: columnsWidth,\n      })\n    );\n  }\n\n  getEntityIdFromUrl(url: string): number {\n    const urlSegments = url.split(\"/\").filter((x) => x !== \"\");\n    return parseInt(urlSegments[urlSegments.length - 1]);\n  }\n}\n\nexport const RestAPI = new API();\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Center,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2, VscDebugStart } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/snippets/javascript\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport Dropdown from \"../../types/dropdown\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [debug, setDebug] = useState(\"\");\n  const [rawValues, setRawValues] = useState(\"\");\n  const [dropdown, setDropdown] = useState<Dropdown>({\n    title: \"\",\n    created: new Date(),\n    description: \"\",\n    type: \"js\",\n    url: \"\",\n    processor: \"\",\n    values: [] as any[],\n    syncInterval: 60,\n    lastSync: new Date(),\n    private: false,\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getDropdown(props.match.params.id).then((response) => {\n        setDropdown(response.data);\n        setRawValues(JSON.stringify(response.data.values, null, 2));\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={dropdown.title}\n              onChange={(event) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              placeholder=\"\"\n              onChange={(value: any) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              value={{ label: dropdown.type, value: dropdown.type }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"dropdownType\"\n              options={[\n                { label: \"js\", value: \"js\" },\n                { label: \"json\", value: \"json\" },\n              ]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Sync Interval (minutes)</Text>\n            <NumberInput\n              value={dropdown.syncInterval}\n              onChange={(_, value) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  syncInterval: value,\n                }));\n              }}\n              min={5}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={dropdown.description}\n            onChange={(event) => {\n              setDropdown((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      <Box mb={5} display={dropdown.type === \"json\" ? \"flex\" : \"none\"} w=\"100%\">\n        <AceEditor\n          width=\"100%\"\n          height=\"900px\"\n          style={{\n            borderRadius: \"5px\",\n          }}\n          mode=\"json\"\n          theme=\"tomorrow\"\n          name=\"json-editor\"\n          onChange={(value) => {\n            setRawValues(value);\n          }}\n          fontSize={14}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={rawValues}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            showLineNumbers: true,\n            tabSize: 2,\n          }}\n        />\n      </Box>\n      <Stack\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        spacing={4}\n        mb={4}\n        direction={{ base: \"column\", xl: \"row\" }}\n      >\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"javascript\"\n            theme=\"tomorrow\"\n            name=\"js-editor\"\n            onChange={(value) => {\n              setDropdown((prev) => ({\n                ...prev,\n                processor: value,\n              }));\n            }}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            value={dropdown.processor}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"json\"\n            theme=\"tomorrow\"\n            name=\"console\"\n            fontSize={12}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={debug}\n            readOnly={true}\n            setOptions={{\n              tabSize: 2,\n            }}\n          />\n        </Box>\n      </Stack>\n      <Center\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        mt={\"10px\"}\n        mb=\"60px\"\n        h=\"60px\"\n        w=\"100%\"\n      >\n        <IconButton\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          aria-label=\"Debug\"\n          icon={<VscDebugStart />}\n          onClick={async () => {\n            setDebug(\"\");\n            var result = eval(dropdown.processor);\n            if (typeof result === \"object\") {\n              setDebug(JSON.stringify(result, null, 4));\n            } else {\n              setDebug(String(result));\n            }\n          }}\n        />\n      </Center>\n\n      <HStack mb={\"40px\"} spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            if (dropdown.type === \"json\") {\n              dropdown.values = JSON.parse(rawValues);\n            }\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createDropdown(dropdown);\n              if (response.data.id) {\n                props.history.push(`/dropdowns/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateDropdown(dropdown)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={\n                        <div>Dropdown has been successfully updated</div>\n                      }\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update dropdown\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n"],"sourceRoot":""}