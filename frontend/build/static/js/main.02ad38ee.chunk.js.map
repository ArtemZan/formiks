{"version":3,"sources":["utils/NavigationClient.tsx","components/WelcomeName.tsx","pages/Explorer.tsx","authConfig.tsx","utils/MsGraphApiCall.ts","pages/Profile.tsx","components/AllowCookies.tsx","components/Layout.tsx","components/CreateBookmark.tsx","components/ProjectCard.tsx","pages/Projects/Explorer.tsx","pages/Projects/Editor.tsx","components/projects/ermv.tsx","pages/Projects/Viewer.tsx","components/DatePicker/utils/deepmerge.ts","components/DatePicker/utils/pick.ts","components/DatePicker/context/StylesContext.tsx","components/DatePicker/components/ActionButton.tsx","components/DatePicker/components/CloseButton.tsx","components/DatePicker/phrases.ts","components/DatePicker/utils/formatters.ts","components/DatePicker/context/DatepickerContext.tsx","components/DatePicker/components/Day.tsx","components/DatePicker/utils/getStateStyle.ts","components/DatePicker/components/Input.tsx","components/DatePicker/components/Month.tsx","components/DatePicker/components/ResetDatesButton.tsx","components/DatePicker/components/SelectedDate.tsx","components/DatePicker/Datepicker.tsx","components/DatePicker/DateRangeInput.tsx","components/DatePicker/DateSingleInput.tsx","pages/Submissions/TableExplorer.tsx","utils/utils.ts","components/EditableTableCell.tsx","utils/SubmissionsTransformer.ts","pages/Submissions/Vendors.tsx","components/DropdownCard.tsx","pages/Dropdowns/Explorer.tsx","pages/Submissions/Tables/ProjectInformation.tsx","pages/Submissions/Tables/PurchaseOrder.tsx","pages/Submissions/Tables/CostActuals.tsx","pages/Submissions/Tables/SalesActuals.tsx","pages/Submissions/Tables/EurActuals.tsx","pages/Submissions/Tables/CostGlPostings.tsx","pages/Submissions/Tables/IncomeGlPostings.tsx","pages/Submissions/SVendors.tsx","App.tsx","index.tsx","components/Toast.tsx","api/rest/index.tsx","pages/Dropdowns/Editor.tsx"],"names":["CustomNavigationClient","history","url","options","a","relativePath","replace","window","location","origin","noHistory","this","push","NavigationClient","WelcomeName","accounts","useMsal","account","useAccount","useState","name","setName","useEffect","console","log","split","Explorer","msalInstance","getActiveAccount","loginRequest","scopes","graphConfig","getAccountInfo","acquireTokenSilent","response","headers","Headers","bearer","accessToken","append","method","fetch","then","json","catch","error","getUserPhoto","Authorization","blob","photoBlob","URL","createObjectURL","ProfileContent","instance","inProgress","graphData","setGraphData","undefined","userPhoto","setUserPhoto","InteractionStatus","None","e","InteractionRequiredAuthError","acquireTokenRedirect","JSON","stringify","alt","src","Profile","authRequest","interactionType","InteractionType","Redirect","authenticationRequest","CookiePreference","props","position","bottom","left","right","width","p","boxShadow","bg","ml","mr","mb","borderRadius","direction","alignItems","fontWeight","base","md","justifyContent","fontSize","textAlign","maxW","variant","colorScheme","color","_hover","onClick","onAllow","localStorage","setItem","DesktopNav","useHistory","linkColor","useColorModeValue","linkHoverColor","popoverContentBgColor","isAuthenticated","useIsAuthenticated","spacing","NAV_ITEMS","GUEST_NAV_ITEMS","map","navItem","trigger","placement","href","textDecoration","label","children","border","rounded","minW","mt","child","DesktopSubNav","subLabel","role","display","align","transition","_groupHover","transform","opacity","justify","flex","w","h","as","ChevronRightIcon","MobileNav","closeMenu","MobileNavItem","useDisclosure","isOpen","onToggle","py","Link","ChevronDownIcon","in","animateOpacity","style","marginTop","pl","borderLeft","borderStyle","borderColor","Layout","cookieConsent","setCookieConsent","roles","setRoles","getItem","RestAPI","getRoles","data","sort","useColorMode","colorMode","toggleColorMode","minH","px","borderBottom","icon","Close","Hamburger","useBreakpointValue","fontFamily","cursor","Moon","Sun","size","hasArrow","join","marginLeft","m","zIndex","title","sessionStorage","clear","setTimeout","loginRedirect","xl","CreateBookmark","matchingProjects","setMatchingProjects","availableTags","setAvailableTags","setTitle","selectedTags","setSelectedTags","tags","projects","project","tag","indexOf","some","item","includes","onClose","value","onChange","event","target","placeholder","styles","control","state","background","minHeight","option","isDisabled","isFocused","isSelected","backgroundColor","menu","multiValue","multiValueLabel","multiValueRemove","theme","colors","primary","isMulti","values","element","float","length","bookmarks","bookmark","createBookmark","addBookmark","ProjectCard","id","overflow","whiteSpace","textOverflow","description","author","moment","updated","format","toUpperCase","setProjects","setBookmarks","createBookmarkModal","setCreateBookMarkModal","getBookmarks","getProjects","old","lg","index","onContextMenu","preventDefault","deleteBookmark","filter","b","isAdmin","Add","Editor","isSubmitting","setIsSubmitting","created","Date","statuses","defaultStatus","components","type","code","setProject","create","match","params","getProject","mx","goBack","prev","status","provided","singleValue","classNamePrefix","isClearable","rows","builder","basic","excelTable","advanced","file","premium","form","schema","isLoading","createProject","updateProject","toast","Toast","message","PH1","Companies","VendorsNames","CampaignChannel","TargetAudience","Budget","ExchangeRates","FiscalQuarter","Year","ProjectStartQuarter","Column","Table","HeaderCell","Cell","country","requestorsCompanyName","setRequestorsCompanyName","localExchangeRate","setLocalExchangeRate","campaignName","setCampaignName","campaignDescription","setCampaignDescription","targetAudience","setTargetAudience","campaignChannel","setCampaignChannel","vendorsNames","setVendorsNames","year","setYear","projectStartQuarter","setProjectStartQuarter","projectNumber","setProjectNumber","requestorsName","setRequestorsName","projectApproval","fiscalQuarter","setFiscalQuarter","startDate","setStartDate","endDate","setEndDate","budgetSource","setBudgetSource","budgetApprovedByVendor","setBudgetApprovedByVendor","exchangeRates","setExchangeRates","estimatedIncomeBudgetCurrency","setEstimatedIncomeBudgetCurrency","estimatedCostsBudgetCurrency","setEstimatedCostsBudgetCurrency","netProfitTargetBudgetCurrency","setNetProfitTargetBudgetCurrency","estimatedIncome","setEstimatedIncome","estimatedCosts","setEstimatedCosts","netProfitTarget","setNetProfitTarget","companiesParticipating","setCompaniesParticipating","comments","setComments","vendors","setVendors","costBreakdown","setCostBreakdown","setTotalVendorBudgetInLC","setTotalVendorBudgetInEUR","totalEstimatedCostsLC","setTotalEstimatedCostsLC","dropdownsIds","Promise","all","di","getDropdownValues","responses","parseFloat","toFixed","mail","fetchDropdowns","forceUpdate","useReducer","x","forEach","vendor","projectManager","creditor","kreditor","debitor","debitorischer","manufacturer","hersteller","bu","ph","budgetCurrency","budgetAmount","localBudget","eurBudget","share","estimatedCostsCC","estimatedIncomeCC","estimatedCostsLC","estimatedCostsEUR","netProfitTargetVC","netProfitTargetLC","netProfitTargetEUR","company","companyName","companyCode","contactEmail","contribution","temp","row","isEqual","toString","slice","totalBudgetEur","totalBudgetLC","totalCostsCC","totalIncomeCC","totalCostsLC","totalCostsEur","eb","lb","isNaN","vbEur","totalShare","t","menuPortalTarget","document","body","ler","rate","currency","defaultValue","disabled","maxLength","resize","Uploader","draggable","lineHeight","customInput","selected","date","dateFormat","shouldUpdateScroll","hover","autoHeight","rowHeight","resizable","dataKey","rowData","projectId","parent","parentId","group","requestorsCountry","projectApprover","manufacturersFiscalQuarter","campaignStartDate","campaignEndDate","campaignBudgetsCurrency","campaignEstimatedIncomeBudgetsCurrency","campaignEstimatedCostsBudgetsCurrency","campaignNetProfitTargetBudgetsCurrency","campaignEstimatedIncomeEur","campaignEstimatedCostsEur","campaignNetProfitTargetEur","projectType","vendorName","productionProjectManager","sapCreditorNumber","sapDebitorNumber","manufacturerNumber","ph1","estimatedIncomeEur","estimatedIncomeBC","vendorShare","estimatedCostsEur","estimatedResultBC","estimatedResultEur","countryShare","countryBudgetContributionEur","countryCostEstimationEur","submission","createSubmissionWithChildren","Viewer","predefinedProject","setPrefedinedProject","setForm","pr","divider","onSubmit","formio","createSubmission","isObject","obj","Object","getPrototypeOf","prototype","call","merge","objects","reduce","result","current","keys","key","Array","isArray","from","Set","concat","pick","ret","emptyStylesObject","actionButton","arrowIcon","buttonsWrapper","closeButton","datepickerContainer","dateRangeInputContainer","dateRangeInputDivider","day","normal","rangeHover","first","firstOrLast","last","dayContainer","inputComponentIcon","active","inputComponentInput","inputComponentInputAddon","inputComponentInputGroup","monthContainer","monthDayGrid","monthMonthLabel","monthsWrapper","monthWeekdayLabel","resetDatesButton","selectDateContainer","selectDateDateText","selectDateText","datepickerFooter","StylesContext","createContext","overwriteDefaultStyles","StylesProvider","Provider","useStyleProps","inlineStyles","useContext","filteredStyles","ActionButton","IconComponent","ChevronLeftIcon","styleProps","ChevronUpIcon","CloseButton","top","datepickerPhrases","datepickerStartDatePlaceholder","datepickerStartDateLabel","datepickerEndDatePlaceholder","datepickerEndDateLabel","resetDates","close","dateRangeInputPhrases","startDateAriaLabel","endDateAriaLabel","startDatePlaceholder","endDatePlaceholder","dateSingleInputPhrases","dateAriaLabel","datePlaceholder","dayLabelFormatFn","defaultDisplayFormat","defaultBase","focusedInput","onDayRender","displayFormat","phrases","defaultFormatters","monthLabelFormat","monthLabelFormatFn","weekdayLabelFormat","weekdayLabelFormatFn","dayLabelFormat","datepickerContextDefaultValue","numberOfMonths","activeMonths","firstDayOfWeek","focusedDate","hoveredDate","goToDate","goToNextMonths","goToNextMonthsByOneMonth","goToNextYear","goToPreviousMonths","goToPreviousMonthsByOneMonth","goToPreviousYear","isDateBlocked","isDateFocused","isDateHovered","isDateSelected","isEndDate","isFirstOrLastSelectedDate","isStartDate","onDateFocus","onDateHover","onDateSelect","onResetDates","DatepickerContext","React","useDatepickerContext","DatepickerProvider","getColor","isWithinHoverRange","isFirst","isLast","Day","dayRef","useRef","dayProps","useDay","onKeyDown","onMouseEnter","tabIndex","isSelectedStartOrEnd","disabledDate","height","minWidth","textColor","borderRightRadius","borderLeftRadius","containerStyle","useMemo","buttonStyle","ref","toDateString","getStateStyle","isActive","Input","forwardRef","inputRef","disableAccessibility","iconComponent","CalendarIcon","showCalendarIcon","allowEditableInputs","inputProps","searchString","setSearchString","htmlFor","isReadOnly","autoComplete","onFocus","_e","dateValue","clearTimeout","parsedDate","parseDate","isValidDate","getDate","Month","month","rowGap","useMonth","days","weekdayLabels","monthLabel","columns","weekdayLabel","dayLabel","ResetDatesButton","text","Repeat","onMouseUp","currentTarget","blur","SelectedDate","paddingBottom","getInputValue","Datepicker","changeActiveMonthOnSelect","exactMinBookingDays","initialVisibleMonth","maxBookingDate","minBookingDate","minBookingDays","onDatesChange","showClose","showResetDates","showSelectedDates","customStyles","unavailableDates","dp","useDatepicker","useImperativeHandle","monthGridRef","scrollTopToMonthGrid","vertical","scrollTop","_goToNextMonths","_goToPreviousMonths","isMobile","shadow","my","pt","START_DATE","ArrowForward","END_DATE","isInline","padding","onMouseLeave","DateRangeInput","endDateProp","startDateProp","focusedInputProp","endShowCalendarIcon","showDivider","startShowCalendarIcon","onFocusChange","startIcon","startId","startName","startPlaceholder","startRef","endId","endName","endRef","endIcon","endPlaceholder","datepickerRef","datepickerWrapperRef","setFocusedInput","handleOnFocusChange","_focusedInput","onClickOutsideHandler","contains","handleInputChange","addEventListener","removeEventListener","alignSelf","DateSingleInput","dateProp","showDatepicker","showDatepickerProp","showResetDate","setDate","setShowDatepicker","show","ColumnGroup","filterTypes","textfield","textarea","number","select","datetime","TableExplorer","submissions","setSubmissions","filters","setFilters","displayedColumns","setDisplayedColumns","filteredSubmissions","setFilteredSubmissions","getSubmissions","subm","reverse","filtered","valid","selectedValues","column","filterValue","exists","v","fv","TagPicker","cleanable","paddingTop","component","input","block","pb","valuesField","_","splice","tv","readOnly","charAt","headerHeight","isTree","defaultExpandAllRows","bordered","cellBordered","rowKey","onExpandChange","renderTreeToggle","header","verticalAlign","numberWithCommas","numRegex","EditableTableCell","cellValue","editing","prevProps","initialValue","setState","bold","className","readonly","autoFocus","execCommand","onKeyPress","keyCode","which","string","String","fromCharCode","test","defaultPrevented","onBlur","onUpdate","columnKey","Number","onCalendarClose","menuIsOpen","paddingLeft","outlineWidth","dv","loadOptions","isSearchable","cv","Component","SubmissionsTransformer","transformed","parentSubmission","subSubmissions","uniqueGroups","groupedSubSubmissions","desiredDepth","groupSubmissions","emptyDate","gs","i","si","gi","gd","fromEntries","entries","uuidv4","DebugOverlay","styled","div","ProjectType","SapStatus","CostStatuses","identifier","bytesToSize","bytes","Math","floor","pow","dropdown","DisplayedColumnsList","VendorsTable","debugOverlayHidden","hideDebugOverlay","useFps","fps","avgFps","tableWidth","setTableWidth","scrollLeft","setScrollLeft","defaultColumnsWidth","setDefaultColumnsWidth","onScroll","useCallback","args","total","allocated","domSize","heapInfo","setHeapInfo","totalRequests","setTotalRequests","getHeapInfo","interval","setInterval","clearInterval","getVendorTableDefaultConfig","columnsWidth","cw","parse","dc","get","columnValue","setHours","memory","performance","info","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","getElementsByTagName","rowRenderer","cells","visibleIndices","offset","netOffsets","offsetSum","leftBound","rightBound","col","columnOffset","colIdx","getVisibleColumnIndices","startIndex","visibleCells","partialUpdate","path","s","shift","updateSubmissionPartial","handleCellUpdate","submissionIndex","findIndex","set","deleteSubmission","submissionId","tbd","ds","callSap","callSapSubmission","dangerouslySetInnerHTML","__html","c","columnWidth","dw","sd","visibilityController","vSubs","sub","tableCells","frozen","FrozenDirection","LEFT","cellRenderer","hidden","rowIndex","cellData","costAmountLC","costAmountEUR","costAmountEURCostGL","incomeAmountEURSI","incomeAmountEurIncomeGL","headerRendererForTable","headerIndex","cell","cloneElement","CheckTreePicker","defaultExpandAll","columnLabel","onResize","onColumnResizeEnd","handleResize","overscanRowCount","ignoreFunctionInColumnCompare","expandColumnKey","fixed","headerRenderer","headerClassName","unflatten","overlayRenderer","updateVendorTableDefaultConfig","removeItem","reload","DropdownCard","lastSync","fromNow","dropdowns","setDropdowns","getDropdowns","ProjectInformationTable","gprops","defaultExpandedRowKeys","PurchaseOrderTable","CostActualsTable","SalesActualsTable","EurActualsTable","CostGlPostingsTable","IncomeGlPostingsTable","SVendorsTable","selectedSubmission","setSelectedSubmission","isLazy","App","pca","navigationClient","setAdminRole","setNavigationClient","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","Slide","exact","render","Vendors","SVendors","GlobalStyles","css","PublicClientApplication","auth","clientId","redirectUri","postLogoutRedirectUri","getAllAccounts","setActiveAccount","addEventCallback","eventType","EventType","LOGIN_SUCCESS","payload","axios","interceptors","request","use","config","idToken","ReactDOM","extendTheme","global","mode","getElementById","IoMdCheckmarkCircle","BsLightningFill","MdError","AiFillInfoCircle","boxSize","span","baseUrl","usersUrl","projectsUrl","bookmarksUrl","submissionsUrl","dropdownsUrl","post","put","delete","URLSearchParams","urlSegments","parseInt","debug","setDebug","rawValues","setRawValues","processor","syncInterval","private","setDropdown","getDropdown","min","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","tabSize","enableSnippets","eval","createDropdown","updateDropdown"],"mappings":"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","file":"static/js/main.02ad38ee.chunk.js","sourcesContent":["import { NavigationClient, NavigationOptions } from \"@azure/msal-browser\";\nimport { History } from \"history\";\n\n/**\n * This is an example for overriding the default function MSAL uses to navigate to other urls in your webpage\n */\nexport class CustomNavigationClient extends NavigationClient {\n  private history: History;\n\n  constructor(history: History) {\n    super();\n    this.history = history;\n  }\n\n  /**\n   * Navigates to other pages within the same web application\n   * You can use the useHistory hook provided by react-router-dom to take advantage of client-side routing\n   * @param url\n   * @param options\n   */\n  async navigateInternal(url: string, options: NavigationOptions) {\n    const relativePath = url.replace(window.location.origin, \"\");\n    if (options.noHistory) {\n      this.history.replace(relativePath);\n    } else {\n      this.history.push(relativePath);\n    }\n\n    return false;\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { useMsal, useAccount } from \"@azure/msal-react\";\n\nconst WelcomeName = () => {\n  const { accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    if (account && account.name) {\n      console.log(account);\n      setName(account.name.split(\" \")[0]);\n    } else {\n      setName(\"\");\n    }\n  }, [account]);\n\n  if (name) {\n    return <p>Welcome, {name}</p>;\n  } else {\n    return null;\n  }\n};\n\nexport default WelcomeName;\n","import { InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport WelcomeName from \"../components/WelcomeName\";\nimport { msalInstance } from \"../index\";\n\nexport function Explorer() {\n  console.log(msalInstance.getActiveAccount());\n  return (\n    <>\n      <AuthenticatedTemplate>\n        <WelcomeName />\n      </AuthenticatedTemplate>\n      <UnauthenticatedTemplate>unauthenticated</UnauthenticatedTemplate>\n    </>\n  );\n}\n\nexport default Explorer;\n","import { Configuration, LogLevel, PopupRequest } from \"@azure/msal-browser\";\n\n// Config object to be passed to Msal on creation\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: \"c6c34032-5419-4fdf-bbd4-a863814323b7\",\n    redirectUri: \"/\",\n    postLogoutRedirectUri: \"/\",\n  },\n};\n\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest: PopupRequest = {\n  scopes: [\"User.Read\"],\n};\n\n// Add here the endpoints for MS Graph API services you would like to use.\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n};\n","import { loginRequest, graphConfig } from \"../authConfig\";\nimport { msalInstance } from \"../index\";\n\nexport async function getAccountInfo() {\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    return;\n  }\n\n  const response = await msalInstance.acquireTokenSilent({\n    ...loginRequest,\n    account: account,\n  });\n\n  const headers = new Headers();\n  const bearer = `Bearer ${response.accessToken}`;\n\n  headers.append(\"Authorization\", bearer);\n\n  const options = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(graphConfig.graphMeEndpoint, options)\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n}\n\nexport async function getUserPhoto() {\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    return;\n  }\n\n  const response = await msalInstance.acquireTokenSilent({\n    ...loginRequest,\n    account: account,\n  });\n\n  var url = \"https://graph.microsoft.com/v1.0/me/photo/$value\";\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${response.accessToken}`,\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((response) => response.blob())\n    .then((photoBlob) => URL.createObjectURL(photoBlob));\n}\n","import { useEffect, useState } from \"react\";\n\n// Msal imports\nimport { MsalAuthenticationTemplate, useMsal } from \"@azure/msal-react\";\nimport {\n  InteractionStatus,\n  InteractionType,\n  InteractionRequiredAuthError,\n  AccountInfo,\n} from \"@azure/msal-browser\";\nimport { loginRequest } from \"../authConfig\";\nimport { getAccountInfo, getUserPhoto } from \"../utils/MsGraphApiCall\";\n\nexport type GraphData = {\n  displayName: string;\n  jobTitle: string;\n  mail: string;\n  businessPhones: string[];\n  officeLocation: string;\n};\n\nconst ProfileContent = () => {\n  const { instance, inProgress } = useMsal();\n\n  const [graphData, setGraphData] = useState<null | GraphData>(null);\n  const [userPhoto, setUserPhoto] = useState<undefined | string>(undefined);\n\n  useEffect(() => {\n    if (!userPhoto && inProgress === InteractionStatus.None) {\n      getUserPhoto().then((response) => setUserPhoto(response));\n    }\n    if (!graphData && inProgress === InteractionStatus.None) {\n      getAccountInfo()\n        .then((response) => setGraphData(response))\n        .catch((e) => {\n          if (e instanceof InteractionRequiredAuthError) {\n            instance.acquireTokenRedirect({\n              ...loginRequest,\n              account: instance.getActiveAccount() as AccountInfo,\n            });\n          }\n        });\n    }\n  }, [inProgress, graphData, userPhoto, instance]);\n\n  return (\n    <div>\n      {JSON.stringify(graphData)} <img alt=\"\" src={userPhoto} />\n    </div>\n  );\n};\n\nexport function Profile() {\n  const authRequest = {\n    ...loginRequest,\n  };\n\n  return (\n    <MsalAuthenticationTemplate\n      interactionType={InteractionType.Redirect}\n      authenticationRequest={authRequest}\n      //   errorComponent={ErrorComponent}\n      //   loadingComponent={Loading}\n    >\n      <ProfileContent />\n    </MsalAuthenticationTemplate>\n  );\n}\n","import React from \"react\";\nimport { Stack, Text, Button } from \"@chakra-ui/react\";\n\nexport default function CookiePreference(props: any) {\n  return (\n    <Stack\n      position=\"absolute\"\n      bottom=\"0\"\n      left=\"0\"\n      right=\"0\"\n      width=\"90%\"\n      p=\"6\"\n      boxShadow=\"lg\"\n      bg=\"white\"\n      ml=\"auto\"\n      mr=\"auto\"\n      mb={\"3vh\"}\n      borderRadius=\"md\"\n    >\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Text fontWeight=\"semibold\">Your Privary</Text>\n      </Stack>\n\n      <Stack\n        direction={{ base: \"column\", md: \"row\" }}\n        justifyContent=\"space-between\"\n      >\n        <Text fontSize={{ base: \"sm\" }} textAlign={\"left\"} maxW={\"6xl\"}>\n          We use cookies and similar technologies to help personalise content\n          and provide a better experience. By clicking OK or turning an option\n          on in Cookie Preferences, you agree to this, as outlined in our Cookie\n          Policy. To change preferences or withdraw consent, please update your\n          Cookie Preferences.\n        </Text>\n        <Stack direction={{ base: \"column\", md: \"row\" }}>\n          <Button variant=\"outline\" colorScheme=\"twitter\">\n            Cookie Preferences\n          </Button>\n          <Button\n            color={\"white\"}\n            bg={\"blue.400\"}\n            _hover={{\n              bg: \"blue.300\",\n            }}\n            onClick={() => {\n              props.onAllow();\n              localStorage.setItem(\"cookieConsent\", \"allowed\");\n            }}\n          >\n            Allow\n          </Button>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Link,\n  Avatar,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuGroup,\n  MenuItem,\n  MenuDivider,\n  HStack,\n  VStack,\n  useColorMode,\n  Center,\n  Tooltip,\n  PopoverArrow,\n} from \"@chakra-ui/react\";\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  MoonIcon,\n  SunIcon,\n} from \"@chakra-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useIsAuthenticated,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { FiChevronDown } from \"react-icons/all\";\nimport CookiePreference from \"./AllowCookies\";\nimport { msalInstance } from \"../index\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\nimport { getUserPhoto } from \"../utils/MsGraphApiCall\";\nimport { RestAPI } from \"../api/rest\";\nimport { loginRequest } from \"../authConfig\";\n\nfunction Layout(props: any) {\n  const { instance, inProgress } = useMsal();\n\n  const [userPhoto, setUserPhoto] = useState<undefined | string>(undefined);\n  const [cookieConsent, setCookieConsent] = useState(false);\n  const [roles, setRoles] = useState<string[]>([]);\n  const isAuthenticated = useIsAuthenticated();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cookieConsent\") === \"allowed\") {\n      setCookieConsent(true);\n    }\n    RestAPI.getRoles().then((response) => setRoles(response.data.sort()));\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    if (\n      isAuthenticated &&\n      !userPhoto &&\n      inProgress === InteractionStatus.None\n    ) {\n      getUserPhoto().then((response) => setUserPhoto(response));\n    }\n  }, [inProgress, userPhoto, instance, isAuthenticated]);\n\n  const { children } = props;\n  const { isOpen, onToggle } = useDisclosure();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Box minH=\"100vh\">\n      {!cookieConsent ? (\n        <CookiePreference\n          onAllow={() => {\n            setCookieConsent(true);\n            localStorage.setItem(\"cookieConsent\", \"allowed\");\n          }}\n        />\n      ) : null}\n\n      <Box>\n        <Flex\n          bg={useColorModeValue(\"white\", \"#21252A\")}\n          color={useColorModeValue(\"gray.600\", \"#ABB2BF\")}\n          minH={\"60px\"}\n          py={{ base: 2 }}\n          px={{ base: 4 }}\n          borderBottom={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n          align={\"center\"}\n        >\n          <Flex\n            flex={{ base: 1, md: \"auto\" }}\n            ml={{ base: -2 }}\n            display={{ base: \"flex\", md: \"none\" }}\n          >\n            <IconButton\n              onClick={onToggle}\n              icon={\n                isOpen ? (\n                  <CloseIcon w={3} h={3} />\n                ) : (\n                  <HamburgerIcon w={5} h={5} />\n                )\n              }\n              variant={\"ghost\"}\n              aria-label={\"Toggle Navigation\"}\n            />\n          </Flex>\n          <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n            <Text\n              mt={\"2px\"}\n              ml={{ base: \"0\", md: \"10px\" }}\n              textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\n              fontFamily={\"heading\"}\n              fontWeight=\"bold\"\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              cursor=\"pointer\"\n              onClick={() => {\n                history.push(\"/projects\");\n              }}\n              fontSize=\"lg\"\n            >\n              Formiks\n            </Text>\n\n            <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\n              <DesktopNav />\n            </Flex>\n          </Flex>\n\n          <Stack\n            flex={{ base: 1, md: 1 }}\n            justify={\"flex-end\"}\n            direction={\"row\"}\n            spacing={6}\n          >\n            <Button\n              display={{ base: \"none\", md: \"flex\" }}\n              variant=\"ghost\"\n              onClick={toggleColorMode}\n            >\n              {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n            </Button>\n            <AuthenticatedTemplate>\n              <Menu>\n                <MenuButton>\n                  <HStack>\n                    <Avatar src={userPhoto} mr={\"10px\"} size={\"sm\"} />\n                    <VStack\n                      display={{ base: \"none\", md: \"flex\" }}\n                      alignItems=\"flex-start\"\n                      spacing=\"1px\"\n                      ml={{ base: 0, md: \"2\" }}\n                    >\n                      <Text\n                        color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                        fontWeight={500}\n                        fontSize=\"sm\"\n                      >\n                        {msalInstance.getActiveAccount()?.name}\n                      </Text>\n\n                      <Text fontSize=\"xs\" color=\"gray.500\">\n                        <Tooltip hasArrow label=\"Search places\">\n                          {roles.join(\", \")}\n                        </Tooltip>\n                      </Text>\n                    </VStack>\n                    <Box display={{ base: \"none\", md: \"flex\" }}>\n                      <FiChevronDown style={{ marginLeft: \"5px\" }} />\n                    </Box>\n                  </HStack>\n                </MenuButton>\n\n                <MenuList\n                  // mt={4}\n                  m={0}\n                  mr={-3.0}\n                  bg={useColorModeValue(\"white\", \"#21252A\")}\n                  borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n                  boxShadow=\"none\"\n                  zIndex={2000000}\n                >\n                  <MenuGroup title=\"Profile\">\n                    <MenuItem onClick={() => {}}>My Account</MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuGroup title=\"Help\">\n                    <MenuItem onClick={() => {}}>Documentation</MenuItem>\n                    <MenuItem>Report a Bug</MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={async () => {\n                      // instance.logout();\n                      sessionStorage.clear();\n                      setTimeout(() => {\n                        window.location.href = \"/\";\n                      }, 1000);\n                    }}\n                  >\n                    Log Out\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            </AuthenticatedTemplate>\n            <UnauthenticatedTemplate>\n              <Button\n                fontSize={\"sm\"}\n                fontWeight={600}\n                color={\"white\"}\n                bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n                _hover={{\n                  bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n                }}\n                onClick={async () => {\n                  // history.push(\"/login\");\n                  await instance.loginRedirect();\n                  // instance.acquireTokenPopup({\n                  //   ...loginRequest,\n                  //   account: instance.getActiveAccount()!,\n                  // });\n                  // instance.loginPopup();\n                  // instance.login\n                }}\n              >\n                Sign In\n              </Button>\n            </UnauthenticatedTemplate>\n          </Stack>\n        </Flex>\n\n        <Collapse in={isOpen} animateOpacity>\n          <MobileNav closeMenu={onToggle} />\n        </Collapse>\n      </Box>\n      <Box m={{ base: \"1em\", xl: \"5em\" }} mt={{ base: \"3em\", xl: \"5em\" }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const history = useHistory();\n  const linkColor = useColorModeValue(\"gray.600\", \"#ABB2BF\");\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n  const popoverContentBgColor = useColorModeValue(\"white\", \"#21252A\");\n  const isAuthenticated = useIsAuthenticated();\n\n  return (\n    <Stack direction={\"row\"} spacing={4}>\n      {(isAuthenticated ? NAV_ITEMS : GUEST_NAV_ITEMS).map((navItem) => {\n        return (\n          <Box key={navItem.label}>\n            <Popover trigger={\"hover\"} placement={\"bottom-start\"}>\n              <PopoverTrigger>\n                <Button\n                  variant=\"link\"\n                  p={2}\n                  onClick={() => {\n                    if (navItem.href) {\n                      history.push(navItem.href);\n                    }\n                  }}\n                  fontSize={\"sm\"}\n                  fontWeight={500}\n                  color={linkColor}\n                  _hover={{\n                    textDecoration: \"none\",\n                    color: linkHoverColor,\n                  }}\n                >\n                  {navItem.label}\n                </Button>\n              </PopoverTrigger>\n\n              {navItem.children && (\n                <PopoverContent\n                  border={0}\n                  boxShadow={\"xl\"}\n                  bg={popoverContentBgColor}\n                  p={4}\n                  rounded={\"xl\"}\n                  minW={\"sm\"}\n                  mt={\"20px\"}\n                >\n                  <Stack>\n                    {navItem.children.map((child) => (\n                      <DesktopSubNav key={child.label} {...child} />\n                    ))}\n                  </Stack>\n                </PopoverContent>\n              )}\n            </Popover>\n          </Box>\n        );\n      })}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n  const history = useHistory();\n  return (\n    <Link\n      onClick={() => {\n        if (href) {\n          history.push(href);\n        }\n      }}\n      role={\"group\"}\n      display={\"block\"}\n      p={2}\n      rounded={\"md\"}\n      _hover={{ bg: useColorModeValue(\"blue.50\", \"#1d2024\") }}\n    >\n      <Stack direction={\"row\"} align={\"center\"}>\n        <Box>\n          <Text\n            transition={\"all .3s ease\"}\n            _groupHover={{ color: useColorModeValue(\"blue.400\", \"#cacfd9\") }}\n            fontWeight={600}\n            fontSize=\"md\"\n            ml={2}\n          >\n            {label}\n          </Text>\n          <Text ml={2} fontSize={\"sm\"}>\n            {subLabel}\n          </Text>\n        </Box>\n        <Flex\n          transition={\"all .3s ease\"}\n          transform={\"translateX(-10px)\"}\n          opacity={0}\n          _groupHover={{ opacity: \"100%\", transform: \"translateX(0)\" }}\n          justify={\"flex-end\"}\n          align={\"center\"}\n          flex={1}\n        >\n          <Icon\n            color={useColorModeValue(\"blue.400\", \"#cacfd9\")}\n            w={5}\n            h={5}\n            as={ChevronRightIcon}\n          />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = (props: any) => {\n  const isAuthenticated = useIsAuthenticated();\n  return (\n    <Stack\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      p={4}\n      display={{ md: \"none\" }}\n    >\n      {(isAuthenticated ? NAV_ITEMS : GUEST_NAV_ITEMS).map((navItem) => (\n        <MobileNavItem\n          closeMenu={props.closeMenu}\n          key={navItem.label}\n          {...navItem}\n        />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href, closeMenu }: any) => {\n  const history = useHistory();\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        onClick={() => {\n          if (href) {\n            history.push(href);\n          }\n        }}\n        justify={\"space-between\"}\n        align={\"center\"}\n        _hover={{\n          textDecoration: \"none\",\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={\"all .25s ease-in-out\"}\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n          align={\"start\"}\n        >\n          {children &&\n            children.map((child: any) => (\n              <Link\n                key={child.label}\n                py={2}\n                onClick={() => {\n                  if (child.href) {\n                    history.push(child.href);\n                    closeMenu();\n                  }\n                }}\n              >\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Projects\",\n    children: [\n      {\n        label: \"Existing Projects\",\n        subLabel: \"Explore existing formiks projects\",\n        href: \"/projects\",\n      },\n      {\n        label: \"New Project\",\n        subLabel: \"Create new formiks project\",\n        href: \"/projects/create\",\n      },\n    ],\n  },\n\n  {\n    label: \"Submissions\",\n    children: [\n      {\n        label: \"Vendors Viewer (concept)\",\n        subLabel: \"View and edit vendors with multiple tables\",\n        href: \"/vendors/new\",\n      },\n      {\n        label: \"Vendors Viewer\",\n        subLabel: \"View and edit vendors with table view\",\n        href: \"/vendors\",\n      },\n      {\n        label: \"Table Viewer\",\n        subLabel: \"Filter and sort submissions with table view\",\n        href: \"/submissions\",\n      },\n    ],\n  },\n  {\n    label: \"Dropdowns\",\n    children: [\n      {\n        label: \"Existing Dropdowns\",\n        subLabel: \"Explore existing adaptive dropdown\",\n        href: \"/dropdowns\",\n      },\n      {\n        label: \"New Dropdown\",\n        subLabel: \"Create new adaptive dropdown\",\n        href: \"/dropdowns/create\",\n      },\n    ],\n  },\n  {\n    label: \"Pipelines\",\n    href: \"/pipelines\",\n  },\n];\nconst GUEST_NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Projects\",\n    href: \"/projects\",\n  },\n  {\n    label: \"Submissions\",\n    children: [\n      {\n        label: \"Vendors Viewer (concept)\",\n        subLabel: \"View and edit vendors with multiple tables\",\n        href: \"/vendors/new\",\n      },\n      {\n        label: \"Vendors Viewer\",\n        subLabel: \"View and edit vendors with table view\",\n        href: \"/vendors\",\n      },\n      {\n        label: \"Table Viewer\",\n        subLabel: \"Filter and sort submissions with table view\",\n        href: \"/submissions\",\n      },\n    ],\n  },\n  {\n    label: \"Documentation\",\n    href: \"/documentation\",\n  },\n];\n\nexport default Layout;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Project from \"../types/project\";\nimport { RestAPI } from \"../api/rest\";\nimport Bookmark from \"../types/bookmark\";\n\ninterface Props {\n  isOpen: boolean;\n  onClose: any;\n  addBookmark: any;\n  projects: Project[];\n  bookmarks: Bookmark[];\n}\n\nexport default function CreateBookmark(props: Props) {\n  const [matchingProjects, setMatchingProjects] = useState(0);\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n  const [title, setTitle] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  useEffect(() => {\n    var tags: string[] = [];\n    props.projects.map((project) => {\n      project.tags.map((tag) => {\n        if (tags.indexOf(tag) === -1) {\n          tags.push(tag);\n        }\n      });\n      setAvailableTags(tags);\n    });\n  }, [props.projects]);\n  useEffect(() => {\n    var matchingProjects = 0;\n    props.projects.map((project) => {\n      if (\n        project.tags &&\n        project.tags.some((item) => selectedTags.includes(item))\n      ) {\n        matchingProjects++;\n      }\n    });\n    setMatchingProjects(matchingProjects);\n  }, [selectedTags]);\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onClose={() => {\n        props.onClose();\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Create new bookmark</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <VStack spacing={4}>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Title</Text>\n              <Input\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                }}\n                bg={useColorModeValue(\"white\", \"#2C313C\")}\n                color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Tags</Text>\n              <CreatableSelect\n                placeholder=\"\"\n                styles={{\n                  control: (base, state) => ({\n                    ...base,\n                    background: useColorModeValue(\"white\", \"#2C313C\"),\n                    minHeight: 40,\n                    border: useColorModeValue(\n                      \"1px solid #E2E8F0\",\n                      \"1px solid #4E525C\"\n                    ),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      border: useColorModeValue(\n                        \"1px solid #CBD5E0\",\n                        \"1px solid #5E626B\"\n                      ),\n                    },\n                  }),\n                  option: (\n                    styles,\n                    { data, isDisabled, isFocused, isSelected }\n                  ) => {\n                    return {\n                      ...styles,\n                      backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                      color: useColorModeValue(\"#4A5667\", \"white\"),\n                      transition: \"0.3s\",\n                      \"&:hover\": {\n                        backgroundColor: useColorModeValue(\n                          \"#DEEBFF\",\n                          \"#343945\"\n                        ),\n                      },\n                    };\n                  },\n                  menu: (styles) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    background: useColorModeValue(\"white\", \"#2C313C\"),\n                  }),\n                  multiValue: (styles, { data }) => ({\n                    ...styles,\n                    color: \"white\",\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  }),\n                  multiValueLabel: (styles, { data }) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#464646\", \"white\"),\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  }),\n                  multiValueRemove: (styles, { data }) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                    \"&:hover\": {\n                      color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                      backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                    },\n                  }),\n                }}\n                theme={(theme) => ({\n                  ...theme,\n                  borderRadius: 6,\n                  colors: {\n                    ...theme.colors,\n                    primary: \"#3082CE\",\n                  },\n                })}\n                isMulti\n                value={selectedTags.map((tag) => {\n                  return { label: tag, value: tag };\n                })}\n                onChange={(values) => {\n                  var tags: string[] = [];\n                  values.map((element: any) => tags.push(element.value));\n                  setSelectedTags(tags);\n                }}\n                options={availableTags.map((tag) => {\n                  return {\n                    label: tag,\n                    value: tag,\n                  };\n                })}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text float=\"right\" color=\"gray.400\" mb=\"10px\">\n                Matching {matchingProjects} projects\n              </Text>\n            </Box>\n          </VStack>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            isDisabled={\n              title.length < 1 ||\n              (props.bookmarks &&\n                props.bookmarks.some((bookmark) => bookmark.title === title))\n            }\n            color={\"white\"}\n            bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              RestAPI.createBookmark({\n                title,\n                tags: selectedTags,\n              } as Bookmark).then((response) => {\n                props.addBookmark(response.data);\n                props.onClose();\n              });\n            }}\n          >\n            Create\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Text,\n  Image,\n  Stack,\n  Heading,\n  Avatar,\n  Badge,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Project from \"../types/project\";\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function ProjectCard(props: Props) {\n  return (\n    <Box\n      key={props.project.id}\n      onClick={() => {\n        props.history.push(`/projects/view/${props.project.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"433px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.project.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.project.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack mt={6} direction={\"row\"} spacing={4} align={\"center\"}>\n        <Avatar src={\"\"} alt={\"Author\"} />\n        <Stack direction={\"column\"} spacing={0} fontSize={\"sm\"}>\n          <Text fontWeight={600}>{props.project.author}</Text>\n          <Tooltip\n            bg={useColorModeValue(\"white\", \"#373c45\")}\n            color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n            p={4}\n            hasArrow\n            label={moment(props.project.updated).format(\"DD.MM.YYYY HH:mm\")}\n          >\n            <Text color={\"gray.500\"}>\n              {moment(props.project.updated).format(\"MMMM DD, YYYY\")}\n            </Text>\n          </Tooltip>\n        </Stack>\n      </Stack>\n      <Wrap\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        h={\"68px\"}\n        mt={6}\n        justify=\"center\"\n      >\n        {props.project.tags.map((tag) => {\n          return (\n            <WrapItem key={`${props.project.id}-tag-${tag}`}>\n              <Tag fontWeight={\"400\"} size=\"sm\" px={2} cursor=\"pointer\">\n                #{tag.toUpperCase()}\n              </Tag>\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport CreateBookmark from \"../../components/CreateBookmark\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [createBookmarkModal, setCreateBookMarkModal] = useState(false);\n\n  useEffect(() => {\n    RestAPI.getBookmarks().then((response) => setBookmarks(response.data));\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CreateBookmark\n        isOpen={createBookmarkModal}\n        addBookmark={(bookmark: Bookmark) => {\n          setBookmarks((old) => [...(old ? old : []), bookmark]);\n        }}\n        bookmarks={bookmarks}\n        onClose={() => {\n          setCreateBookMarkModal(false);\n        }}\n        projects={projects}\n      />\n      <Center mb={\"5em\"}>\n        <Wrap maxW={{ base: \"100%\", lg: \"50%\" }} justify=\"center\">\n          {bookmarks\n            ? bookmarks.map((bookmark, index) => {\n                return (\n                  <WrapItem key={`bookmark-${index}`}>\n                    <Tag\n                      fontWeight={\"400\"}\n                      size={\"lg\"}\n                      // colorScheme=\"cyan\"\n                      cursor=\"pointer\"\n                      key={bookmark.id}\n                      onContextMenu={(e) => {\n                        e.preventDefault();\n                        console.log(bookmark.id);\n                        if (bookmark.id) {\n                          RestAPI.deleteBookmark(bookmark.id);\n                          setBookmarks(\n                            bookmarks.filter((b) => b.id !== bookmark.id)\n                          );\n                        }\n                      }}\n                      onClick={() => {\n                        // FIXME: filter projects\n                        console.log(bookmark.tags);\n                      }}\n                    >\n                      {bookmark.title}\n                    </Tag>\n                  </WrapItem>\n                );\n              })\n            : null}\n\n          <WrapItem display={props.isAdmin ? \"grid\" : \"none\"}>\n            <Tag\n              onClick={() => {\n                setCreateBookMarkModal(true);\n              }}\n              colorScheme=\"cyan\"\n              fontWeight={\"400\"}\n              size={\"lg\"}\n              cursor=\"pointer\"\n            >\n              <AddIcon w={3} h={3} />\n            </Tag>\n          </WrapItem>\n        </Wrap>\n      </Center>\n      <Wrap justify=\"center\" spacing={{ base: \"40px\", lg: \"3em\" }}>\n        {projects.map((project) => {\n          return (\n            <WrapItem key={`wrap-${project.id}`}>\n              <ProjectCard history={props.history} project={project} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { FormBuilder } from \"@formio/react\";\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2 } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [\n      \"New\",\n      \"In Progress\",\n      \"Completed\",\n      \"On Hold\",\n      \"Cancelled\",\n    ] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) =>\n        setProject(response.data)\n      );\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={project.title}\n              onChange={(event) => {\n                setProject((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Tags</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.tags.map((tag) => {\n                return { label: tag, value: tag };\n              })}\n              onChange={(values) => {\n                var tags: string[] = [];\n                values.map((element: any) => tags.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  tags,\n                }));\n              }}\n              options={[]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Roles</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.roles.map((role) => {\n                return { label: role, value: role };\n              })}\n              onChange={(values) => {\n                var roles: string[] = [];\n                values.map((element: any) => roles.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  roles,\n                }));\n              }}\n              options={[\n                { label: \"administrator\", value: \"administrator\" },\n                { label: \"user\", value: \"user\" },\n                { label: \"guest\", value: \"guest\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"66.5%\" }}>\n            <Text mb=\"8px\">Available Statuses</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n              onChange={(values) => {\n                var statuses: string[] = [];\n                values.map((element: any) => statuses.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  statuses,\n                }));\n              }}\n              options={[\n                { label: \"New\", value: \"New\" },\n                { label: \"In Progress\", value: \"In Progress\" },\n                { label: \"Completed\", value: \"Completed\" },\n                { label: \"On Hold\", value: \"On Hold\" },\n                { label: \"Cancelled\", value: \"Cancelled\" },\n              ]}\n            />\n          </Box>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Default Status</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label: project.defaultStatus,\n                value: project.defaultStatus,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  defaultStatus: value.label,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"defaultStatus\"\n              options={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Project Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label:\n                  project.type === \"formio\" ? \"GUI Builder\" : \"Code Builder\",\n                value: project.type,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"projectType\"\n              options={[\n                { label: \"GUI Builder\", value: \"formio\" },\n                { label: \"Code Builder\", value: \"code\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={project.description}\n            onChange={(event) => {\n              setProject((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      {project.type === \"formio\" ? (\n        <FormBuilder\n          options={{\n            builder: {\n              basic: {\n                components: {\n                  excelTable: true,\n                },\n              },\n              advanced: {\n                components: {\n                  file: true,\n                },\n              },\n              premium: false,\n            },\n          }}\n          form={{ display: \"form\", components: project.components }}\n          onChange={(schema: any) => {\n            console.log(schema);\n            setProject((prev) => ({\n              ...prev,\n              components: schema.components,\n            }));\n          }}\n        />\n      ) : null}\n      <HStack mb=\"40px\" spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createProject(project);\n              if (response.data.id) {\n                props.history.push(`/projects/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateProject(project)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={<div>Project has been successfully updated</div>}\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update project\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  Button,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { msalInstance } from \"../../index\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function CreateBookmark(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.mail);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: \"\",\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: vendor.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    // data.push({\n    //   vendor: \"TOTAL\",\n    //   projectManager: \"\",\n    //   creditor: \"\",\n    //   debitor: \"\",\n    //   manufacturer: \"\",\n    //   bu: \"\",\n    //   ph: { label: \"\", value: \"\" },\n    //   budgetCurrency: { label: \"\", value: \"\" },\n    //   budgetAmount: \"\",\n    //   localBudget: \"\",\n    //   eurBudget: \"\",\n    //   share: \"\",\n    //   estimatedCostsCC: \"\",\n    //   estimatedIncomeCC: \"\",\n    //   estimatedCostsLC: \"\",\n    //   estimatedCostsEUR: \"\",\n    //   netProfitTargetVC: \"\",\n    //   netProfitTargetLC: \"\",\n    //   netProfitTargetEUR: \"\",\n    // });\n    setVendors(data);\n  }, [vendorsNames]);\n  useEffect(() => {\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n\n    var temp = [...vendors];\n    temp.forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    temp.forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 1)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(netProfitTarget)\n      ).toFixed(2);\n\n      row.netProfitTargetLC = (\n        parseFloat(row.netProfitTargetEUR) * localExchangeRate\n      ).toFixed(2);\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (\n          parseFloat(exchangeRates.value) * parseFloat(row.netProfitTargetEUR)\n        ).toFixed(2);\n    });\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Target Audience</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setTargetAudience(value.label);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"targetAudience\"\n            options={TargetAudience}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approver</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: \"\", value: \"\" }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectApprover\"\n            options={[]}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">ALSO Project Approval (attachments)</Text>\n          <Uploader draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer`s Fiscal Period</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={fiscalQuarter}\n            onChange={(value) => {\n              setFiscalQuarter(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={FiscalQuarter}\n          />\n        </Box>\n\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (name and surname)</Text>\n          <Input\n            value={budgetApprovedByVendor}\n            onChange={(event) => {\n              setBudgetApprovedByVendor(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Approved by Vendor (attachments)</Text>\n          <Uploader draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={vendors}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>ALSO Marketing Manager</HeaderCell>\n              <Cell dataKey=\"projectManager\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectManager}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].projectManager = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.bu}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].bu = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={costBreakdown}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          var projectId = \"619515b754e61c8dd33daa52\";\n\n          var parent: Submission = {\n            project: projectId,\n            title: campaignName,\n            parentId: null,\n            group: null,\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              requestorsCompanyName: requestorsCompanyName.label,\n              companyCode: requestorsCompanyName.value.code,\n              requestorsCountry: requestorsCompanyName.value.country,\n              campaignName: campaignName,\n              campaignDescription: campaignDescription,\n              targetAudience: targetAudience,\n              campaignChannel: campaignChannel.label,\n              year: year.label,\n              projectStartQuarter: projectStartQuarter.label,\n              projectNumber: projectNumber,\n              requestorsName: requestorsName,\n              projectApprover: \"\",\n              projectApproval: projectApproval,\n              manufacturersFiscalQuarter: fiscalQuarter.label,\n              campaignStartDate:\n                startDate === null ? null : startDate.toString(),\n              campaignEndDate: endDate === null ? null : endDate.toString(),\n              budgetSource: budgetSource.label,\n              budgetApprovedByVendor: budgetApprovedByVendor,\n              campaignBudgetsCurrency: exchangeRates.label,\n              campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n                estimatedIncomeBudgetCurrency\n              ),\n              campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                estimatedCostsBudgetCurrency\n              ),\n              campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                netProfitTargetBudgetCurrency\n              ),\n              campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n              campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n              campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n              totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n              comments: comments,\n              projectType: \"Regional Multi Vendor\",\n            },\n          };\n          var children: Submission[] = [];\n          vendors.map((vendor: any) => {\n            children.push({\n              project: projectId,\n              title: \"\",\n              parentId: \"\",\n              group: \"vendor\",\n              created: new Date(),\n              updated: new Date(),\n              status: \"New\",\n              author: requestorsName,\n              data: {\n                vendorName: vendor.vendor,\n                productionProjectManager: vendor.projectManager,\n                sapCreditorNumber: vendor.creditor,\n                sapDebitorNumber: vendor.debitor,\n                manufacturerNumber: vendor.manufacturer,\n                bu: vendor.bu,\n                ph1: vendor.ph.label,\n                budgetCurrency: vendor.budgetCurrency.label,\n                estimatedIncomeEur: parseFloat(vendor.budgetAmount),\n                estimatedIncomeBC: parseFloat(vendor.localBudget),\n                // cbbudgetEur: parseFloat(vendor.eurBudget),\n                vendorShare: parseFloat(vendor.share),\n                estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                estimatedIncomeCC: parseFloat(vendor.estimatedIncomeCC),\n                // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                estimatedCostsEur: parseFloat(vendor.estimatedCostsEUR),\n                estimatedResultBC: parseFloat(vendor.netProfitTargetVC),\n                // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                estimatedResultEur: parseFloat(vendor.netProfitTargetEUR),\n              },\n            });\n          });\n          costBreakdown.map((company: any) => {\n            children.push({\n              project: projectId,\n              title: \"\",\n              parentId: \"\",\n              group: \"country\",\n              created: new Date(),\n              updated: new Date(),\n              status: \"New\",\n              author: requestorsName,\n              data: {\n                companyName: company.companyName,\n                companyCode: company.companyCode,\n                country: company.country,\n                productionProjectManager: company.contactEmail,\n                projectNumber: company.projectNumber,\n                countryShare: parseFloat(company.share),\n                countryBudgetContributionEur: company.contribution,\n                countryCostEstimationEur: company.estimatedCosts,\n              },\n            });\n          });\n          var submission: SubmissionWithChildren = {\n            submission: parent,\n            children,\n          };\n          RestAPI.createSubmissionWithChildren(submission).then((response) => {\n            props.history.push(\"/vendors\");\n          });\n        }}\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","import { Form } from \"@formio/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  StackDivider,\n  VStack,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  Tag,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiSettings, FiRefreshCw } from \"react-icons/all\";\n\nimport Ermv from \"../../components/projects/ermv\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPrefedinedProject] = useState<any>(null);\n  const [form, setForm] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) => {\n        setProject(response.data);\n        setForm({ display: \"form\", components: response.data.components });\n        if (props.match.params.id === \"619515b754e61c8dd33daa52\") {\n          setPrefedinedProject(\n            <Ermv project={project} history={props.history} />\n          );\n        }\n      });\n    }\n  }, []);\n\n  // useEffect(() => {\n  //   console.log(\n  //     renderToString(<Ermv project={project} history={props.history} />)\n  //   );\n  // }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.push(\"/projects\");\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={props.isAdmin ? \"grid\" : \"none\"}\n            onClick={() => {\n              props.history.push(`/projects/edit/${project.id}`);\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            icon={<FiSettings />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.800\", \"#ABB2BF\")} w=\"100%\" mb={10}>\n        <VStack\n          mb={\"40px\"}\n          pr={{ base: 0, md: \"10px\" }}\n          divider={<StackDivider />}\n          spacing={4}\n          fontSize=\"md\"\n          align=\"stretch\"\n        >\n          <Box>\n            <Stack\n              direction={{ base: \"column\", md: \"row\" }}\n              w=\"100%\"\n              spacing={{ base: \"20px\", md: \"100px\" }}\n            >\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Title\n                </Text>\n                <Text float=\"right\">{project.title}</Text>\n              </Box>\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Tags\n                </Text>\n                <HStack spacing={3} float=\"right\">\n                  {project.tags.map((tag) => {\n                    return (\n                      <Tag\n                        key={tag}\n                        fontWeight={\"400\"}\n                        colorScheme=\"cyan\"\n                        cursor=\"pointer\"\n                      >\n                        {tag}\n                      </Tag>\n                    );\n                  })}\n                </HStack>\n              </Box>\n            </Stack>\n          </Box>\n          <Box>\n            <Text as=\"b\">Description</Text>\n            <Text mt={3}>{project.description}</Text>\n          </Box>\n        </VStack>\n      </Box>\n      {predefinedProject === null ? (\n        <Form\n          // onChange={(event: any) => {\n          //   console.log(event);\n          // }}\n          onSubmit={(formio: any) => {\n            delete formio.data[\"submit\"];\n            var submission: Submission = {\n              project: project.id ?? \"\",\n              parentId: null,\n              group: null,\n              created: new Date(),\n              updated: new Date(),\n              title: \"\",\n              author: \"\",\n              status: project.defaultStatus,\n              data: formio.data,\n            };\n            RestAPI.createSubmission(submission).then((response) => {\n              props.history.push(`/submissions/view/${response.data.id}`);\n            });\n          }}\n          form={form}\n        />\n      ) : (\n        predefinedProject\n      )}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","// source: https://github.com/voodoocreation/ts-deepmerge/blob/master/src/index.ts\ninterface IObject {\n  [key: string]: any\n}\n\ntype TUnionToIntersection<U> = (U extends any\n? (k: U) => void\n: never) extends (k: infer I) => void\n  ? I\n  : never\n\n// istanbul ignore next\nconst isObject = (obj: any) => {\n  if (typeof obj === 'object' && obj !== null) {\n    if (typeof Object.getPrototypeOf === 'function') {\n      const prototype = Object.getPrototypeOf(obj)\n      return prototype === Object.prototype || prototype === null\n    }\n\n    return Object.prototype.toString.call(obj) === '[object Object]'\n  }\n\n  return false\n}\n\nconst merge = <T extends IObject[]>(...objects: T): TUnionToIntersection<T[number]> =>\n  objects.reduce((result, current) => {\n    Object.keys(current).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n        result[key] = Array.from(new Set(result[key].concat(current[key])))\n      } else if (isObject(result[key]) && isObject(current[key])) {\n        result[key] = merge(result[key], current[key])\n      } else {\n        result[key] = current[key]\n      }\n    })\n\n    return result\n  }, {}) as any\n\nexport default merge\n","function pick<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  const ret: any = {}\n  keys.forEach(key => {\n    ret[key] = obj[key]\n  })\n  return ret\n}\n\nexport default pick\n","import React, { createContext, FC, useContext } from \"react\";\nimport { DatepickerStyles } from \"../types\";\nimport merge from \"../utils/deepmerge\";\nimport pick from \"../utils/pick\";\n\nexport interface StylesContextProps {\n  overwriteDefaultStyles: boolean;\n  styles: DatepickerStyles;\n}\n\nexport interface StylesProviderProps {\n  overwriteDefaultStyles?: boolean;\n  styles?: Partial<DatepickerStyles>;\n}\n\nexport const emptyStylesObject: DatepickerStyles = {\n  actionButton: {},\n  arrowIcon: {},\n  buttonsWrapper: {},\n  closeButton: {},\n  datepickerContainer: {},\n  dateRangeInputContainer: {},\n  dateRangeInputDivider: {},\n  day: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  dayContainer: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  inputComponentIcon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInput: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputAddon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputGroup: {\n    active: {},\n    base: {},\n  },\n  monthContainer: {},\n  monthDayGrid: {},\n  monthMonthLabel: {},\n  monthsWrapper: {},\n  monthWeekdayLabel: {},\n  resetDatesButton: {},\n  selectDateContainer: {\n    active: {},\n    base: {},\n  },\n  selectDateDateText: {\n    active: {},\n    base: {},\n  },\n  selectDateText: {\n    active: {},\n    base: {},\n  },\n  datepickerFooter: {},\n};\n\nexport const StylesContext = createContext<StylesContextProps>({\n  styles: emptyStylesObject,\n  overwriteDefaultStyles: false,\n});\n\nexport const StylesProvider: FC<StylesProviderProps> = ({\n  children,\n  overwriteDefaultStyles = false,\n  styles = emptyStylesObject,\n}) => (\n  <StylesContext.Provider\n    value={{ overwriteDefaultStyles, styles: merge(emptyStylesObject, styles) }}\n  >\n    {children}\n  </StylesContext.Provider>\n);\n\nexport function useStyleProps<\n  InitialStyles extends Partial<DatepickerStyles> = Partial<DatepickerStyles>\n>(inlineStyles: InitialStyles) {\n  const { styles, overwriteDefaultStyles } = useContext(StylesContext);\n  const keys = Object.keys(inlineStyles) as (keyof DatepickerStyles)[];\n  const filteredStyles = pick(styles, keys);\n  const result = merge(\n    filteredStyles,\n    !overwriteDefaultStyles ? inlineStyles : ({} as InitialStyles)\n  );\n  return result;\n}\n","import {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronUpIcon,\n} from \"@chakra-ui/icons\";\nimport { IconButton, IconButtonProps } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { ActionButtonStyles } from \"../types\";\n\nexport interface ActionButtonProps extends Omit<IconButtonProps, \"aria-label\"> {\n  direction?: \"up\" | \"right\" | \"down\" | \"left\";\n}\n\nexport const ActionButton: React.FC<ActionButtonProps> = ({\n  direction,\n  ...props\n}) => {\n  let IconComponent = ChevronLeftIcon;\n\n  const styleProps = useStyleProps<ActionButtonStyles>({\n    actionButton: {\n      position: \"relative\",\n    },\n  });\n\n  if (direction === \"up\") {\n    IconComponent = ChevronUpIcon;\n  } else if (direction === \"right\") {\n    IconComponent = ChevronRightIcon;\n  } else if (direction === \"down\") {\n    IconComponent = ChevronDownIcon;\n  } else if (direction === \"left\") {\n    IconComponent = ChevronLeftIcon;\n  }\n\n  return (\n    <IconButton\n      aria-label={`Arrow ${direction}`}\n      icon={<IconComponent />}\n      {...props}\n      {...styleProps.actionButton}\n    />\n  );\n};\n","import {\n  CloseButton as ChakraCloseButton,\n  CloseButtonProps as ChakraCloseButtonProps,\n} from '@chakra-ui/react'\nimport React from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { CloseButtonStyles } from '../types'\n\nexport interface CloseButtonProps extends ChakraCloseButtonProps {}\n\nexport const CloseButton = (props: CloseButtonProps) => {\n  const styleProps = useStyleProps<CloseButtonStyles>({\n    closeButton: {\n      top: 1,\n      right: 1,\n      zIndex: 1,\n      position: 'absolute',\n    },\n  })\n  return <ChakraCloseButton {...styleProps.closeButton} {...props} />\n}\n","export interface DatepickerPhrases {\n  datepickerStartDatePlaceholder: string\n  datepickerStartDateLabel: string\n  datepickerEndDateLabel: string\n  datepickerEndDatePlaceholder: string\n  resetDates: string\n  close: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateSingleInputPhrases extends DatepickerPhrases {\n  dateAriaLabel: string\n  datePlaceholder: string\n}\n\nexport const datepickerPhrases: DatepickerPhrases = {\n  datepickerStartDatePlaceholder: 'Select',\n  datepickerStartDateLabel: 'Start date:',\n  datepickerEndDatePlaceholder: 'Select',\n  datepickerEndDateLabel: 'End date:',\n  resetDates: 'Clean Dates',\n  close: 'Close',\n}\n\nexport const dateRangeInputPhrases: DateRangeInputPhrases = {\n  ...datepickerPhrases,\n\n  startDateAriaLabel: 'Start date',\n  endDateAriaLabel: 'End date',\n\n  startDatePlaceholder: 'Start date',\n  endDatePlaceholder: 'End date',\n}\n\nexport const dateSingleInputPhrases: DateSingleInputPhrases = {\n  ...datepickerPhrases,\n  dateAriaLabel: 'Select date',\n  datePlaceholder: 'Select date',\n}\n","import dateFormat from 'date-fns/format'\n\nexport {\n  monthLabelFormat as monthLabelFormatFn,\n  weekdayLabelFormat as weekdayLabelFormatFn,\n} from '@datepicker-react/hooks'\n\nexport const dayLabelFormatFn = (date: Date) => dateFormat(date, 'd')\n\nexport const defaultDisplayFormat = 'MM/dd/yyyy'\n","import { FocusedInput, FormatFunction, useDatepicker } from '@datepicker-react/hooks'\nimport React, { useContext } from 'react'\nimport { datepickerPhrases, DatepickerPhrases } from '../phrases'\nimport { InputDate } from '../types'\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from '../utils/formatters'\n\nexport type UseDatepickerReturnType = ReturnType<typeof useDatepicker>\n\nexport interface DatepickerFormatProps {\n  dayLabelFormat: typeof dayLabelFormatFn\n  weekdayLabelFormat: typeof weekdayLabelFormatFn\n  monthLabelFormat: typeof monthLabelFormatFn\n}\n\nexport type OnDayRenderType = {\n  isFirst: boolean\n  isLast: boolean\n  isSelected: boolean\n  isWithinHoverRange: boolean\n  isSelectedStartOrEnd: boolean\n  disabledDate: boolean\n}\n\nexport interface DatepickerContextBaseProps {\n  displayFormat: FormatFunction | string\n  startDate: InputDate\n  endDate: InputDate\n  phrases: DatepickerPhrases\n  focusedInput: FocusedInput\n  onDayRender?(date: Date, state: OnDayRenderType): React.ReactNode\n}\n\nexport interface DatepickerContextProps\n  extends DatepickerContextBaseProps,\n    DatepickerFormatProps,\n    UseDatepickerReturnType {}\n\nexport interface DatepickerProviderProps extends Partial<DatepickerContextProps> {}\n\nconst defaultBase: DatepickerContextBaseProps = {\n  startDate: null,\n  endDate: null,\n  focusedInput: null,\n  onDayRender: undefined,\n  displayFormat: defaultDisplayFormat,\n  phrases: datepickerPhrases,\n}\n\nconst defaultFormatters: DatepickerFormatProps = {\n  monthLabelFormat: monthLabelFormatFn,\n  weekdayLabelFormat: weekdayLabelFormatFn,\n  dayLabelFormat: dayLabelFormatFn,\n}\n\nconst defaultUseDatepicker: UseDatepickerReturnType = {\n  numberOfMonths: 2,\n  activeMonths: [],\n  firstDayOfWeek: 0,\n  focusedDate: null,\n  hoveredDate: null,\n  goToDate: () => {},\n  goToNextMonths: () => {},\n  goToNextMonthsByOneMonth: () => {},\n  goToNextYear: () => {},\n  goToPreviousMonths: () => {},\n  goToPreviousMonthsByOneMonth: () => {},\n  goToPreviousYear: () => {},\n  isDateBlocked: () => false,\n  isDateFocused: () => false,\n  isDateHovered: () => false,\n  isDateSelected: () => false,\n  isEndDate: () => false,\n  isFirstOrLastSelectedDate: () => false,\n  isStartDate: () => false,\n  onDateFocus: () => {},\n  onDateHover: () => {},\n  onDateSelect: () => {},\n  onResetDates: () => {},\n}\n\nexport const datepickerContextDefaultValue: DatepickerContextProps = {\n  ...defaultBase,\n  ...defaultFormatters,\n  ...defaultUseDatepicker,\n}\n\nexport const DatepickerContext = React.createContext(datepickerContextDefaultValue)\n\nexport const useDatepickerContext = () => useContext(DatepickerContext)\n\nexport const DatepickerProvider: React.FC<DatepickerProviderProps> = ({ children, ...props }) => (\n  <DatepickerContext.Provider value={{ ...datepickerContextDefaultValue, ...props }}>\n    {children}\n  </DatepickerContext.Provider>\n)\n","import { Box, Button, useColorModeValue } from \"@chakra-ui/react\";\nimport { isEndDate, isStartDate, useDay } from \"@datepicker-react/hooks\";\nimport React, { useMemo, useRef } from \"react\";\nimport {\n  OnDayRenderType,\n  useDatepickerContext,\n} from \"../context/DatepickerContext\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { DayState, DayStyles } from \"../types\";\n\nfunction getColor<T>(\n  { isSelected, isWithinHoverRange, isFirst, isLast }: OnDayRenderType,\n  { base, normal, rangeHover, selected, firstOrLast, first, last }: DayState<T>\n) {\n  let style = base;\n  if (!isSelected && !isWithinHoverRange) style = { ...style, ...normal };\n  if (isSelected) style = { ...style, ...selected };\n  if (isWithinHoverRange) style = { ...style, ...rangeHover };\n  if (isFirst || isLast) style = { ...style, ...firstOrLast };\n  if (isFirst) style = { ...style, ...first };\n  if (isLast) style = { ...style, ...last };\n  return style;\n}\n\ninterface DayProps {\n  day: string;\n  date: Date;\n}\n\nexport function Day({ day, date }: DayProps) {\n  const dayRef = useRef<any>(null);\n\n  const {\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateSelect,\n    onDateFocus,\n    onDateHover,\n    onDayRender,\n    startDate,\n    endDate,\n  } = useDatepickerContext();\n\n  const dayProps = useDay({\n    date,\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateFocus,\n    onDateSelect,\n    onDateHover,\n    dayRef,\n  });\n\n  const {\n    onClick,\n    onKeyDown,\n    onMouseEnter,\n    tabIndex,\n    isSelectedStartOrEnd,\n    isSelected,\n    isWithinHoverRange,\n    disabledDate,\n  } = dayProps;\n\n  const styleProps = useStyleProps<DayStyles>({\n    day: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        minWidth: \"unset\",\n        fontWeight: \"medium\",\n        fontSize: [\"sm\", \"md\"],\n        border: \"2px solid\",\n        textColor: useColorModeValue(\"gray.900\", \"white\"),\n        borderRadius: \"100%\",\n        borderColor: \"transparent\",\n        background: \"transparent\",\n        overflow: \"hidden\",\n        _hover: {\n          borderColor: \"transparent\",\n          background: \"transparent\",\n        },\n      },\n      normal: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      rangeHover: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      selected: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      firstOrLast: {\n        textColor: useColorModeValue(\"white\", \"black\"),\n        background: useColorModeValue(\"blue.400\", \"white\"),\n        _hover: {\n          textColor: useColorModeValue(\"white\", \"black\"),\n          background: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      first: {},\n      last: {},\n    },\n    dayContainer: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      normal: {},\n      rangeHover: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      selected: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"0%\",\n        },\n      },\n      firstOrLast: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n      },\n      first: {\n        borderLeftRadius: \"100%\",\n      },\n      last: {\n        borderRightRadius: \"100%\",\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n    },\n  });\n\n  const isFirst = isStartDate(date, startDate);\n  const isLast = isEndDate(date, endDate);\n\n  const containerStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.dayContainer.base,\n          normal: styleProps.dayContainer.normal,\n          rangeHover: styleProps.dayContainer.rangeHover,\n          selected: styleProps.dayContainer.selected,\n          first: styleProps.dayContainer.first,\n          last: styleProps.dayContainer.last,\n          firstOrLast: styleProps.dayContainer.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  const buttonStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.day.base,\n          normal: styleProps.day.normal,\n          rangeHover: styleProps.day.rangeHover,\n          selected: styleProps.day.selected,\n          first: styleProps.day.first,\n          last: styleProps.day.last,\n          firstOrLast: styleProps.day.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  return (\n    <Box {...containerStyle}>\n      <Button\n        {...buttonStyle}\n        variant=\"unstyled\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        onMouseEnter={onMouseEnter}\n        tabIndex={tabIndex}\n        ref={dayRef}\n        disabled={disabledDate}\n        data-testid=\"Day\"\n        aria-label={`Day-${date.toDateString()}`}\n        type=\"button\"\n      >\n        {typeof onDayRender === \"function\"\n          ? onDayRender(date, {\n              isFirst,\n              isLast,\n              isSelected,\n              isWithinHoverRange,\n              isSelectedStartOrEnd,\n              disabledDate,\n            })\n          : day}\n      </Button>\n    </Box>\n  );\n}\n","import { StateProp } from '../types'\n\nexport const getStateStyle = <T>({ base, active }: StateProp<T>, isActive: boolean) => {\n  return isActive ? { ...base, ...active } : base\n}\n","import { CalendarIcon } from '@chakra-ui/icons'\nimport {\n  Icon,\n  Input as ChakraInput,\n  InputGroup,\n  InputLeftAddon,\n  InputProps as ChakraInputProps,\n} from '@chakra-ui/react'\nimport { parseDate } from '@datepicker-react/hooks'\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputComponentStyles, InputDate } from '../types'\nimport { defaultDisplayFormat } from '../utils/formatters'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface InputProps {\n  allowEditableInputs?: boolean\n  dateFormat?: string\n  disableAccessibility?: boolean\n  iconComponent?: typeof CalendarIcon\n  id?: string\n  isActive?: boolean\n  name?: string\n  onChange?(date: InputDate): void\n  onClick?(): void\n  placeholder?: string\n  showCalendarIcon?: boolean\n  value?: string\n}\n\ninterface BaseProps extends Omit<ChakraInputProps, 'onChange' | 'onClick' | 'value'>, InputProps {}\n\nexport const Input = forwardRef((props: BaseProps, inputRef: Ref<any>) => {\n  const {\n    dateFormat = defaultDisplayFormat,\n    disableAccessibility,\n    iconComponent = CalendarIcon,\n    id,\n    isActive = false,\n    name,\n    onChange = () => {},\n    onClick = () => {},\n    placeholder,\n    showCalendarIcon = true,\n    value,\n    allowEditableInputs = false,\n\n    ...inputProps\n  } = props\n\n  const ref = useRef<any>(null)\n\n  const [searchString, setSearchString] = useState(value)\n\n  const styleProps = useStyleProps<InputComponentStyles>({\n    inputComponentInputGroup: {\n      base: {},\n      active: {},\n    },\n    inputComponentInput: {\n      base: {},\n      active: {},\n    },\n    inputComponentIcon: {\n      base: {},\n      active: {},\n    },\n    inputComponentInputAddon: {\n      base: {},\n      active: {},\n    },\n  })\n\n  // Note: value was updated outside of InputComponent\n  useEffect(() => {\n    setSearchString(value)\n  }, [value])\n\n  function handleOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const dateValue = e.target.value\n    setSearchString(dateValue)\n\n    if (typeof ref.current === 'number') {\n      clearTimeout(ref.current)\n    }\n\n    ref.current = setTimeout(() => {\n      onClick()\n      const parsedDate = parseDate(dateValue, dateFormat, new Date())\n      const isValidDate = !isNaN(parsedDate.getDate())\n\n      if (isValidDate) {\n        onChange(parsedDate)\n      } else {\n        onChange(null)\n      }\n    }, 1000)\n  }\n\n  function handleOnFocus(_e: React.FocusEvent<HTMLInputElement>) {\n    onClick()\n  }\n\n  return (\n    <InputGroup {...getStateStyle(styleProps.inputComponentInputGroup, isActive)} htmlFor={id}>\n      {showCalendarIcon && (\n        <InputLeftAddon {...getStateStyle(styleProps.inputComponentInputAddon, isActive)}>\n          <Icon as={iconComponent} {...getStateStyle(styleProps.inputComponentIcon, isActive)} />\n        </InputLeftAddon>\n      )}\n      <ChakraInput\n        {...inputProps}\n        {...getStateStyle(styleProps.inputComponentInput, isActive)}\n        ref={inputRef}\n        id={id}\n        name={name}\n        isReadOnly={!allowEditableInputs}\n        value={searchString}\n        placeholder={placeholder}\n        tabIndex={disableAccessibility ? -1 : 0}\n        autoComplete=\"off\"\n        data-testid=\"DatepickerInput\"\n        onFocus={handleOnFocus}\n        onChange={handleOnChange}\n      />\n    </InputGroup>\n  )\n})\n","import { Box, Flex, SimpleGrid, Text } from '@chakra-ui/react'\nimport { CalendarDay, useMonth } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { MonthStyles } from '../types'\nimport { Day } from './Day'\n\nexport interface MonthProps {\n  year: number\n  month: number\n}\n\nexport const Month = ({ year, month }: MonthProps) => {\n  const styleProps = useStyleProps<MonthStyles>({\n    monthContainer: {},\n    monthMonthLabel: {\n      justifyContent: 'center',\n      fontWeight: 'bold',\n      mb: 6,\n      fontSize: ['md', 'lg'],\n    },\n    monthWeekdayLabel: {\n      justifyContent: 'center',\n      color: 'gray.500',\n      mb: 4,\n      fontSize: ['sm', 'md'],\n    },\n    monthDayGrid: {\n      rowGap: 1,\n    },\n  })\n\n  const {\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  } = useDatepickerContext()\n\n  const { days, weekdayLabels, monthLabel } = useMonth({\n    year,\n    month,\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  })\n\n  return (\n    <Box {...styleProps.monthContainer}>\n      <Flex {...styleProps.monthMonthLabel}>\n        <Text>{monthLabel}</Text>\n      </Flex>\n      <SimpleGrid columns={7}>\n        {weekdayLabels.map((weekdayLabel: string) => (\n          <Flex key={weekdayLabel} {...styleProps.monthWeekdayLabel}>\n            <Text>{weekdayLabel}</Text>\n          </Flex>\n        ))}\n      </SimpleGrid>\n      <SimpleGrid {...styleProps.monthDayGrid} columns={7}>\n        {days.map((day: CalendarDay, index: number) =>\n          typeof day === 'object' ? (\n            <Day date={day.date} key={`${day.dayLabel}-${index}`} day={day.dayLabel} />\n          ) : (\n            <div key={index} />\n          ),\n        )}\n      </SimpleGrid>\n    </Box>\n  )\n}\n","import { RepeatIcon } from '@chakra-ui/icons'\nimport { Button } from '@chakra-ui/react'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { ResetDatesButtonStyles } from '../types'\n\ninterface ResetDatesProps {\n  onResetDates(): void\n  text: string\n}\n\nexport function ResetDatesButton({ onResetDates, text }: ResetDatesProps) {\n  const { phrases } = useDatepickerContext()\n\n  const styleProps = useStyleProps<ResetDatesButtonStyles>({\n    resetDatesButton: {},\n  })\n\n  function handleMouseUp(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.currentTarget.blur()\n  }\n\n  return (\n    <Button\n      icon={<RepeatIcon />}\n      tabIndex={-1}\n      aria-label={phrases.resetDates}\n      {...styleProps.resetDatesButton}\n      onClick={onResetDates}\n      onMouseUp={handleMouseUp}\n    >\n      {text}\n    </Button>\n  )\n}\n","import { Stack, Text } from '@chakra-ui/react'\nimport { getInputValue } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputDate, SelectDateStyles } from '../types'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface SelectedDateProps {\n  isFocused: boolean\n  date: InputDate\n}\n\nexport const SelectedDate = ({ isFocused, date }: SelectedDateProps) => {\n  const { phrases, displayFormat } = useDatepickerContext()\n\n  const styleProps = useStyleProps<SelectDateStyles>({\n    selectDateContainer: {\n      base: {\n        width: '100%',\n        borderBottom: '2px solid',\n        borderColor: 'gray.300',\n        paddingBottom: [1, 3],\n      },\n      active: {\n        borderColor: 'blue.400',\n      },\n    },\n    selectDateText: {\n      base: {\n        fontSize: 'xs',\n        color: 'gray.500',\n      },\n      active: {},\n    },\n    selectDateDateText: {\n      base: {\n        fontWeight: 'bold',\n        fontSize: ['sm', 'md', 'lg'],\n      },\n      active: {},\n    },\n  })\n\n  return (\n    <Stack {...getStateStyle(styleProps.selectDateContainer, isFocused)}>\n      <Text {...getStateStyle(styleProps.selectDateText, isFocused)}>\n        {phrases.datepickerStartDateLabel}\n      </Text>\n      <Text {...getStateStyle(styleProps.selectDateDateText, isFocused)}>\n        {getInputValue(date, displayFormat, phrases.datepickerStartDatePlaceholder)}\n      </Text>\n    </Stack>\n  )\n}\n","import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Flex,\n  HStack,\n  Stack,\n  useBreakpointValue,\n  useColorModeValue,\n  useTheme,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  MonthType,\n  START_DATE,\n  useDatepicker,\n  UseDatepickerProps,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useImperativeHandle, useRef } from \"react\";\nimport {\n  ActionButton,\n  CloseButton,\n  Month,\n  ResetDatesButton,\n  SelectedDate,\n} from \"./components\";\nimport {\n  DatepickerFormatProps,\n  DatepickerProvider,\n} from \"./context/DatepickerContext\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { DatepickerPhrases, datepickerPhrases } from \"./phrases\";\nimport { DatepickerComponentStyles } from \"./types\";\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from \"./utils/formatters\";\n\nexport interface DatepickerElement {\n  onDateSelect?(date: Date): void;\n}\n\nexport interface DatepickerProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerFormatProps>,\n    Partial<UseDatepickerProps> {\n  displayFormat?: string;\n  onClose?(): void;\n  onDayRender?(date: Date): React.ReactNode;\n  phrases?: DatepickerPhrases;\n  showClose?: boolean;\n  showResetDates?: boolean;\n  showSelectedDates?: boolean;\n  vertical?: boolean;\n}\n\nexport const Datepicker = React.forwardRef(\n  (props: DatepickerProps, ref: Ref<DatepickerElement>) => {\n    const {\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      endDate = null,\n      exactMinBookingDays = false,\n      firstDayOfWeek,\n      focusedInput = null,\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays = 1,\n      monthLabelFormat,\n      numberOfMonths = 2,\n      onClose = () => {},\n      onDatesChange = () => {},\n      onDayRender,\n      overwriteDefaultStyles,\n      phrases = datepickerPhrases,\n      showClose = true,\n      showResetDates = true,\n      showSelectedDates = true,\n      startDate = null,\n      styles: customStyles,\n      unavailableDates = [],\n      weekdayLabelFormat,\n    } = props;\n\n    const dp = useDatepicker({\n      changeActiveMonthOnSelect,\n      endDate,\n      exactMinBookingDays,\n      firstDayOfWeek,\n      focusedInput,\n      initialVisibleMonth,\n      isDateBlocked,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays,\n      numberOfMonths,\n      onDatesChange,\n      startDate,\n      unavailableDates,\n    });\n\n    useImperativeHandle(ref, () => ({\n      onDateSelect: (date: Date) => {\n        dp.onDateSelect(date);\n      },\n    }));\n\n    const monthGridRef = useRef<HTMLDivElement>(null);\n\n    function scrollTopToMonthGrid() {\n      if (monthGridRef && monthGridRef.current && vertical) {\n        monthGridRef.current.scrollTop = 0;\n      }\n    }\n\n    function _goToNextMonths() {\n      dp.goToNextMonths();\n      scrollTopToMonthGrid();\n    }\n\n    function _goToPreviousMonths() {\n      dp.goToPreviousMonths();\n      scrollTopToMonthGrid();\n    }\n\n    const isMobile = useBreakpointValue({ base: true, md: false });\n    const vertical = props.vertical || isMobile;\n\n    const styleProps = useStyleProps<DatepickerComponentStyles>({\n      datepickerContainer: {\n        background: useColorModeValue(\"white\", \"gray.700\"),\n        borderRadius: \"md\",\n        position: \"relative\",\n        width: \"fit-content\",\n        shadow: \"md\",\n        px: [3, 5],\n        py: [5, 7],\n        zIndex: 1,\n      },\n      monthsWrapper: {\n        spacing: [0, 8],\n      },\n      buttonsWrapper: {\n        spacing: [1, 3],\n      },\n      arrowIcon: {\n        my: [5, 15],\n        color: \"gray.500\",\n      },\n      datepickerFooter: {\n        justifyContent: \"space-between\",\n        pt: [1, 3],\n      },\n    });\n\n    return (\n      <StylesProvider\n        styles={customStyles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <DatepickerProvider\n          activeMonths={dp.activeMonths}\n          dayLabelFormat={dayLabelFormat || dayLabelFormatFn}\n          displayFormat={displayFormat}\n          endDate={endDate}\n          firstDayOfWeek={dp.firstDayOfWeek}\n          focusedDate={dp.focusedDate}\n          focusedInput={focusedInput}\n          goToDate={dp.goToDate}\n          goToNextMonths={_goToNextMonths}\n          goToNextMonthsByOneMonth={dp.goToNextMonthsByOneMonth}\n          goToNextYear={dp.goToNextYear}\n          goToPreviousMonths={_goToPreviousMonths}\n          goToPreviousMonthsByOneMonth={dp.goToPreviousMonthsByOneMonth}\n          goToPreviousYear={dp.goToPreviousYear}\n          hoveredDate={dp.hoveredDate}\n          isDateBlocked={dp.isDateBlocked}\n          isDateFocused={dp.isDateFocused}\n          isDateHovered={dp.isDateHovered}\n          isDateSelected={dp.isDateSelected}\n          isEndDate={dp.isEndDate}\n          isFirstOrLastSelectedDate={dp.isFirstOrLastSelectedDate}\n          isStartDate={dp.isStartDate}\n          monthLabelFormat={monthLabelFormat || monthLabelFormatFn}\n          numberOfMonths={dp.numberOfMonths}\n          onDateFocus={dp.onDateFocus}\n          onDateHover={dp.onDateHover}\n          onDateSelect={dp.onDateSelect}\n          onDayRender={onDayRender}\n          onResetDates={dp.onResetDates}\n          phrases={phrases}\n          startDate={startDate}\n          weekdayLabelFormat={weekdayLabelFormat || weekdayLabelFormatFn}\n        >\n          <Box {...styleProps.datepickerContainer} zIndex={10} mt={\"8px\"}>\n            {showClose && <CloseButton onClick={onClose} />}\n\n            {showSelectedDates && (\n              <Box mb={6}>\n                <HStack data-testid=\"SelectedDatesGrid\">\n                  <SelectedDate\n                    date={startDate}\n                    isFocused={focusedInput === START_DATE}\n                  />\n                  <Flex justifyContent=\"center\" alignItems=\"center\">\n                    <ArrowForwardIcon {...styleProps.arrowIcon} />\n                  </Flex>\n                  <SelectedDate\n                    date={endDate}\n                    isFocused={focusedInput === END_DATE}\n                  />\n                </HStack>\n              </Box>\n            )}\n            <Box position=\"relative\">\n              <Stack\n                overflow={vertical ? \"auto\" : undefined}\n                data-testid=\"MonthGrid\"\n                isInline={!vertical}\n                ref={monthGridRef}\n                padding={1}\n                {...styleProps.monthsWrapper}\n                onMouseLeave={() => {\n                  if (dp.hoveredDate) {\n                    dp.onDateHover(null);\n                  }\n                }}\n              >\n                {dp.activeMonths.map((month: MonthType) => (\n                  <Month\n                    key={`month-${month.year}-${month.month}`}\n                    year={month.year}\n                    month={month.month}\n                  />\n                ))}\n              </Stack>\n\n              <Flex {...styleProps.datepickerFooter}>\n                <HStack {...styleProps.buttonsWrapper}>\n                  <ActionButton\n                    direction={vertical ? \"up\" : \"left\"}\n                    onClick={_goToPreviousMonths}\n                    aria-label=\"Previous month\"\n                  />\n                  <ActionButton\n                    direction={vertical ? \"down\" : \"right\"}\n                    onClick={_goToNextMonths}\n                    aria-label=\"Next month\"\n                  />\n                </HStack>\n                {showResetDates && (\n                  <ResetDatesButton\n                    onResetDates={dp.onResetDates}\n                    text={phrases.resetDates}\n                  />\n                )}\n              </Flex>\n            </Box>\n          </Box>\n        </DatepickerProvider>\n      </StylesProvider>\n    );\n  }\n);\n","import { ArrowForwardIcon, CalendarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Stack,\n  StackDivider,\n  useBreakpointValue,\n  Icon,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  FocusedInput,\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useEffect, useRef, useState } from \"react\";\nimport { FaArrowRight } from \"react-icons/all\";\nimport { Input, InputProps } from \"./components\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { dateRangeInputPhrases, DateRangeInputPhrases } from \"./phrases\";\nimport { DateRangeInputStyles, InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface DateRangeInputProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerProps> {\n  startDateInputProps?: Partial<InputProps>;\n  endDateInputProps?: Partial<InputProps>;\n  phrases?: DateRangeInputPhrases;\n  showDivider?: boolean;\n  placement?: \"top\" | \"bottom\";\n  onFocusChange?(focusedInput: FocusedInput): void;\n  endIcon?: typeof CalendarIcon;\n  endId?: string;\n  endName?: string;\n  endPlaceholder?: string;\n  endRef?: Ref<HTMLInputElement>;\n  endShowCalendarIcon?: boolean;\n  startIcon?: typeof CalendarIcon;\n  startId?: string;\n  startName?: string;\n  startPlaceholder?: string;\n  startRef?: Ref<HTMLInputElement>;\n  startShowCalendarIcon?: boolean;\n  allowEditableInputs?: boolean;\n}\n\nexport const DateRangeInput: React.FC<DateRangeInputProps> = (props) => {\n  const {\n    endDate: endDateProp = null,\n    startDate: startDateProp = null,\n    focusedInput: focusedInputProp = null,\n    displayFormat = defaultDisplayFormat,\n    endShowCalendarIcon = true,\n    isDateBlocked = () => false,\n    minBookingDays = 1,\n    phrases = dateRangeInputPhrases,\n    placement = \"bottom\",\n    showClose = true,\n    showDivider = false,\n    showResetDates = true,\n    showSelectedDates = true,\n    startShowCalendarIcon = true,\n    onClose = () => {},\n    onDatesChange = () => {},\n    onFocusChange = () => {},\n    styles: customStyles,\n    overwriteDefaultStyles,\n    startIcon,\n    startId,\n    startName,\n    startPlaceholder,\n    startRef,\n    endId,\n    endName,\n    endRef,\n    endIcon,\n    endPlaceholder,\n    changeActiveMonthOnSelect,\n    dayLabelFormat,\n    exactMinBookingDays,\n    firstDayOfWeek,\n    initialVisibleMonth,\n    maxBookingDate,\n    minBookingDate,\n    monthLabelFormat,\n    numberOfMonths,\n    onDayRender,\n    unavailableDates,\n    weekdayLabelFormat,\n    allowEditableInputs,\n  } = props;\n\n  const datepickerRef = useRef<DatepickerElement>(null);\n  const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n  const [startDate, setStartDate] = useState<InputDate>(startDateProp);\n  const [endDate, setEndDate] = useState<InputDate>(endDateProp);\n  const [focusedInput, setFocusedInput] =\n    useState<FocusedInput>(focusedInputProp);\n\n  useEffect(() => {\n    setStartDate(startDateProp);\n    setEndDate(endDateProp);\n  }, [startDateProp, endDateProp]);\n\n  const styleProps = useStyleProps<DateRangeInputStyles>({\n    dateRangeInputContainer: { spacing: 5 },\n    dateRangeInputDivider: {},\n  });\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"click\", onClickOutsideHandler);\n    }\n    return () => {\n      window.removeEventListener(\"click\", onClickOutsideHandler);\n    };\n  });\n\n  function handleOnFocusChange(_focusedInput: FocusedInput) {\n    setFocusedInput(_focusedInput);\n    onFocusChange(_focusedInput);\n  }\n\n  function handleOnDatesChange(data: OnDatesChangeProps) {\n    setStartDate(data.startDate);\n    setEndDate(data.endDate);\n    setFocusedInput(data.focusedInput);\n    onDatesChange(data);\n  }\n\n  function onClickOutsideHandler(event: Event) {\n    if (\n      focusedInput !== null &&\n      datepickerWrapperRef &&\n      datepickerWrapperRef.current &&\n      // @ts-ignore\n      !datepickerWrapperRef.current.contains(event.target)\n    ) {\n      handleOnFocusChange(null);\n    }\n  }\n\n  function handleOnClose() {\n    handleOnFocusChange(null);\n    onClose();\n  }\n\n  function handleInputChange(date: Date) {\n    if (\n      datepickerRef &&\n      datepickerRef.current &&\n      datepickerRef.current.onDateSelect\n    ) {\n      datepickerRef.current.onDateSelect(date);\n    }\n  }\n\n  const isMobile = useBreakpointValue({ base: true, md: false });\n  const vertical = props.vertical || isMobile;\n\n  return (\n    <StylesProvider\n      styles={customStyles}\n      overwriteDefaultStyles={overwriteDefaultStyles}\n    >\n      <Box position=\"relative\" ref={datepickerWrapperRef}>\n        <Stack\n          isInline={!isMobile}\n          {...styleProps.dateRangeInputContainer}\n          data-testid=\"DateRangeInputGrid\"\n          divider={\n            showDivider ? (\n              <StackDivider {...styleProps.dateRangeInputDivider} />\n            ) : undefined\n          }\n        >\n          <Input\n            iconComponent={startIcon}\n            id={startId || \"startDate\"}\n            name={startName || \"startDate\"}\n            placeholder={startPlaceholder || phrases.startDatePlaceholder}\n            ref={startRef}\n            showCalendarIcon={startShowCalendarIcon}\n            aria-label={phrases.startDateAriaLabel}\n            dateFormat={displayFormat}\n            isActive={focusedInput === START_DATE}\n            onChange={handleInputChange}\n            onClick={() => handleOnFocusChange(START_DATE)}\n            value={getInputValue(startDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box textAlign=\"center\" w=\"20px\">\n            <ArrowForwardIcon alignSelf=\"center\" w={5} h=\"100%\" />\n          </Box>\n          <Input\n            id={endId || \"endDate\"}\n            name={endName || \"endDate\"}\n            ref={endRef}\n            iconComponent={endIcon}\n            placeholder={endPlaceholder || phrases.endDatePlaceholder}\n            showCalendarIcon={endShowCalendarIcon}\n            aria-label={phrases.endDateAriaLabel}\n            dateFormat={displayFormat}\n            disableAccessibility={focusedInput === START_DATE}\n            isActive={focusedInput === END_DATE}\n            onChange={handleInputChange}\n            onClick={() =>\n              handleOnFocusChange(!startDate ? START_DATE : END_DATE)\n            }\n            value={getInputValue(endDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n        </Stack>\n        <Box\n          position=\"absolute\"\n          top={placement === \"top\" ? undefined : vertical ? \"100px\" : \"45px\"}\n          bottom={\n            placement === \"bottom\" ? undefined : vertical ? \"100px\" : \"45px\"\n          }\n        >\n          {focusedInput !== null && (\n            <Datepicker\n              ref={datepickerRef}\n              startDate={startDate}\n              endDate={endDate}\n              focusedInput={focusedInput}\n              onClose={handleOnClose}\n              onDatesChange={handleOnDatesChange}\n              changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n              dayLabelFormat={dayLabelFormat}\n              exactMinBookingDays={exactMinBookingDays}\n              firstDayOfWeek={firstDayOfWeek}\n              initialVisibleMonth={initialVisibleMonth}\n              isDateBlocked={isDateBlocked}\n              maxBookingDate={maxBookingDate}\n              minBookingDate={minBookingDate}\n              minBookingDays={minBookingDays}\n              monthLabelFormat={monthLabelFormat}\n              numberOfMonths={vertical ? 1 : numberOfMonths}\n              onDayRender={onDayRender}\n              phrases={phrases}\n              unavailableDates={unavailableDates}\n              displayFormat={displayFormat}\n              showClose={showClose}\n              showResetDates={showResetDates}\n              showSelectedDates={showSelectedDates}\n              vertical={vertical}\n              weekdayLabelFormat={weekdayLabelFormat}\n            />\n          )}\n        </Box>\n      </Box>\n    </StylesProvider>\n  );\n};\n","import { Box } from \"@chakra-ui/react\";\nimport {\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from \"react\";\nimport { Input, InputProps } from \"./components\";\nimport { StylesProvider } from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { DateSingleInputPhrases, dateSingleInputPhrases } from \"./phrases\";\nimport { InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface OnDateChangeProps {\n  date: InputDate;\n  showDatepicker: boolean;\n}\n\nexport interface DateSingleInputProps\n  extends Partial<InputProps>,\n    Partial<DatepickerProps> {\n  onFocusChange?(focusInput: boolean): void;\n  phrases?: DateSingleInputPhrases;\n  placement?: \"top\" | \"bottom\";\n  showDatepicker?: boolean;\n  date?: InputDate;\n  showResetDate?: boolean;\n}\n\nexport const DateSingleInput = forwardRef(\n  (\n    {\n      date: dateProp = null,\n      showDatepicker: showDatepickerProp = false,\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      firstDayOfWeek,\n      iconComponent,\n      id = \"startDate\",\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      monthLabelFormat,\n      name = \"startDate\",\n      numberOfMonths = 1,\n      onChange = () => {},\n      onClick = () => {},\n      onClose = () => {},\n      onDayRender,\n      onFocusChange = () => {},\n      overwriteDefaultStyles,\n      phrases = dateSingleInputPhrases,\n      placeholder,\n      placement = \"bottom\",\n      showCalendarIcon = true,\n      showClose = true,\n      showResetDate = true,\n      styles,\n      unavailableDates = [],\n      value,\n      vertical = false,\n      weekdayLabelFormat,\n      allowEditableInputs = false,\n    }: DateSingleInputProps,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    const datepickerRef = useRef<DatepickerElement>(null);\n    const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [date, setDate] = useState<InputDate>(\n      value ? new Date(value) : dateProp\n    );\n    const [showDatepicker, setShowDatepicker] = useState(showDatepickerProp);\n\n    useEffect(() => {\n      onChange(date);\n    }, [date, onChange]);\n\n    useEffect(() => {\n      onFocusChange(showDatepicker);\n    }, [onFocusChange, showDatepicker]);\n\n    useEffect(() => {\n      if (typeof window !== \"undefined\") {\n        window.addEventListener(\"click\", onClickOutsideHandler);\n      }\n      return () => {\n        window.removeEventListener(\"click\", onClickOutsideHandler);\n      };\n    });\n\n    function handleOnFocusChange(show: boolean) {\n      setShowDatepicker(show);\n    }\n\n    function onClickOutsideHandler(event: Event) {\n      if (\n        showDatepicker &&\n        datepickerWrapperRef &&\n        datepickerWrapperRef.current &&\n        // @ts-ignore\n        !datepickerWrapperRef.current.contains(event.target)\n      ) {\n        handleOnFocusChange(false);\n      }\n    }\n\n    function handleDatepickerClose() {\n      handleOnFocusChange(false);\n      onClose();\n    }\n\n    function handleOnDatesChange(data: OnDatesChangeProps) {\n      handleOnFocusChange(data.focusedInput !== null);\n      setDate(data.startDate);\n    }\n\n    function handleInputChange(date: Date) {\n      if (\n        datepickerRef &&\n        datepickerRef.current &&\n        datepickerRef.current.onDateSelect\n      ) {\n        datepickerRef.current.onDateSelect(date);\n      }\n    }\n\n    return (\n      <StylesProvider\n        styles={styles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <Box position=\"relative\" ref={datepickerWrapperRef}>\n          <Input\n            ref={ref}\n            id={id}\n            name={name}\n            aria-label={phrases.dateAriaLabel}\n            value={getInputValue(date, displayFormat, \"\")}\n            placeholder={placeholder || phrases.datePlaceholder}\n            dateFormat={displayFormat}\n            showCalendarIcon={showCalendarIcon}\n            isActive={showDatepicker}\n            onChange={handleInputChange}\n            onClick={() => {\n              handleOnFocusChange(true);\n              onClick();\n            }}\n            disableAccessibility={false}\n            iconComponent={iconComponent}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box\n            position=\"absolute\"\n            top={placement === \"bottom\" ? \"45px\" : undefined}\n            bottom={placement === \"top\" ? \"45px\" : undefined}\n          >\n            {showDatepicker && (\n              <Datepicker\n                changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n                dayLabelFormat={dayLabelFormat}\n                displayFormat={displayFormat}\n                endDate={date}\n                exactMinBookingDays\n                firstDayOfWeek={firstDayOfWeek}\n                focusedInput={showDatepicker ? START_DATE : null}\n                initialVisibleMonth={initialVisibleMonth}\n                isDateBlocked={isDateBlocked}\n                maxBookingDate={maxBookingDate}\n                minBookingDate={minBookingDate}\n                minBookingDays={1}\n                monthLabelFormat={monthLabelFormat}\n                numberOfMonths={numberOfMonths}\n                onClose={handleDatepickerClose}\n                onDatesChange={handleOnDatesChange}\n                onDayRender={onDayRender}\n                phrases={phrases}\n                ref={datepickerRef}\n                showClose={showClose}\n                showResetDates={showResetDate}\n                showSelectedDates={false}\n                startDate={date}\n                unavailableDates={unavailableDates}\n                vertical={vertical}\n                weekdayLabelFormat={weekdayLabelFormat}\n              />\n            )}\n          </Box>\n        </Box>\n      </StylesProvider>\n    );\n  }\n);\n","import { InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n} from \"@azure/msal-react\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Text,\n  Table as CTable,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Stack,\n  VStack,\n  HStack,\n  Input,\n  IconButton,\n  CloseButton,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Tag,\n  Divider,\n  Portal,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport { TagPicker } from \"rsuite\";\nimport { Table, IconButton as RIconButton } from \"rsuite\";\nimport { msalInstance } from \"../../index\";\nimport {\n  AiOutlineDelete,\n  AiOutlineMinus,\n  AiOutlinePlus,\n  BiPlusMedical,\n} from \"react-icons/all\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useEffect, useState } from \"react\";\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport { RestAPI } from \"../../api/rest\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\n\nconst { ColumnGroup, Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n}\n\ninterface FilterField {\n  column: string;\n  type: string;\n  filter: string;\n  values: any[];\n  selectedValues: any[];\n}\n\nconst filterTypes = {\n  textfield: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  textarea: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  select: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  datetime: [{ label: \"Range\", value: \"range\" }],\n};\n\nexport function TableExplorer(props: Props) {\n  const [project, setProject] = useState<Project>({\n    id: \"\",\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filters, setFilters] = useState<FilterField[]>([]);\n  const [displayedColumns, setDisplayedColumns] = useState<any[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<any[]>([]);\n  const [expandedRowKeys, setExpandedRowKeys] = useState<any[]>([]);\n\n  const handleExpanded = (rowData: any, dataKey: any) => {\n    let open = false;\n    const nextExpandedRowKeys = [];\n\n    expandedRowKeys.forEach((key) => {\n      if (key === rowData[\"id\"]) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    });\n\n    if (!open) {\n      nextExpandedRowKeys.push(rowData[\"id\"]);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n  };\n\n  useEffect(() => {\n    if (project.id) {\n      RestAPI.getSubmissions(project.id).then((response) => {\n        var subm = response.data;\n        if (subm == null) {\n          subm = [];\n        }\n        subm.reverse();\n        setSubmissions(subm);\n        // project.components.map((component: any) => {\n        //   if (component.type === \"customTable\") {\n        //     subm.map((sub) => {\n        //       if (sub.children === undefined) {\n        //         sub.children = [];\n        //       }\n        //       sub.data[component.key].map((tableRecord: any, index: number) => {\n        //         sub.children.push({\n        //           id: uuidv4(),\n        //           title: `[${index + 1}] ${component.label}`,\n        //           data: tableRecord,\n        //         });\n        //       });\n        //     });\n        //   }\n        // });\n        setFilteredSubmissions(subm);\n      });\n    }\n  }, [project]);\n\n  useEffect(() => {\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    var filtered: Submission[] = [];\n    if (filters.length > 0) {\n      submissions.map((submission) => {\n        var valid = true;\n        filters.map((filter) => {\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            // filter\n            var value = submission.data[filter.column];\n            switch (filter.type) {\n              case \"textfield\":\n              case \"textarea\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"select\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    filter.selectedValues.map((filterValue) => {\n                      var exists = false;\n                      value.map((v: any) => {\n                        if (v.toString() === filterValue) {\n                          exists = true;\n                        }\n                      });\n                      if (!exists) {\n                        valid = false;\n                      }\n                    });\n                    break;\n                  case \"includes\":\n                    valid = filter.selectedValues.some((fv) =>\n                      value.includes(fv)\n                    );\n                    break;\n                }\n                break;\n              case \"datetime\":\n                if (\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2\n                ) {\n                  var v = new Date(value);\n                  valid =\n                    v >= filter.selectedValues[0] &&\n                    v <= filter.selectedValues[1];\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          filtered.push(submission);\n        }\n      });\n    }\n    setFilteredSubmissions(filtered);\n  }, [filters]);\n\n  return (\n    <>\n      {/* <AuthenticatedTemplate> */}\n      <div>\n        <Box mb=\"3em\" float=\"right\" w={{ base: \"100%\", md: \"400px\" }}>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: project.title,\n              value: project.id,\n              project: project,\n            }}\n            onChange={(value: any) => {\n              setProject(value.project);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projects\"\n            options={projects.map((project) => {\n              return {\n                label: project.title,\n                value: project.id,\n                project: project,\n              };\n            })}\n          />\n        </Box>\n\n        <VStack mb={\"2em\"} w=\"100%\" spacing={\"2em\"}>\n          <Box w=\"100%\" boxShadow={\"md\"} rounded={\"md\"} bg=\"white\" p=\"2em\">\n            <Stack\n              mb={\"1em\"}\n              w=\"100%\"\n              spacing={{ base: \"2em\", xl: \"4em\" }}\n              direction={{ base: \"column\", lg: \"row\" }}\n              color={\"gray.500\"}\n            >\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Displayed Columns</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  value={displayedColumns}\n                  onChange={(values) => {\n                    setDisplayedColumns(values);\n                  }}\n                  data={project.components\n                    .filter(\n                      (component: any) =>\n                        component.input && component.type !== \"button\"\n                    )\n                    .map((component: any) => {\n                      return { label: component.label, value: component.key };\n                    })}\n                  block\n                />\n              </Box>\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Submission Date</Text>\n                <DateRangeInput\n                  allowEditableInputs={true}\n                  displayFormat=\"dd.MM.yyyy\"\n                  maxBookingDate={new Date()}\n                />\n              </Box>\n            </Stack>\n            <Stack\n              w=\"100%\"\n              spacing={{ base: \"2em\", xl: \"4em\" }}\n              direction={{ base: \"column\", lg: \"row\" }}\n              color={\"gray.500\"}\n            >\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Statuses</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  data={\n                    project.statuses\n                      ? project.statuses.map((status) => {\n                          return { label: status, value: status };\n                        })\n                      : []\n                  }\n                  block\n                />\n              </Box>\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Authors</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  data={[]}\n                  block\n                />\n              </Box>\n            </Stack>\n          </Box>\n\n          <Box\n            shadow=\"md\"\n            color=\"gray.600\"\n            backgroundColor=\"white\"\n            mb={10}\n            p={8}\n            pb={0}\n            rounded=\"md\"\n            w={\"100%\"}\n          >\n            <VStack\n              spacing={8}\n              fontSize=\"md\"\n              align=\"stretch\"\n              color={\"gray.500\"}\n            >\n              <Box w={\"100%\"}>\n                <Box w={\"100%\"}>\n                  {filters.map((filter, index) => {\n                    var valuesField: JSX.Element = <div></div>;\n\n                    switch (filter.type) {\n                      case \"textfield\":\n                      case \"textarea\":\n                        valuesField = (\n                          <Input\n                            onChange={(event) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues[0] =\n                                event.target.value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                          />\n                        );\n                        break;\n                      case \"number\":\n                        switch (filter.filter) {\n                          case \"exact\":\n                            valuesField = (\n                              <NumberInput\n                                onChange={(_, value) => {\n                                  var temp = [...filters];\n                                  temp[index].selectedValues[0] = value;\n                                  setFilters(temp);\n                                }}\n                                value={filter.selectedValues[0]}\n                                w=\"100%\"\n                              >\n                                <NumberInputField />\n                                <NumberInputStepper>\n                                  <NumberIncrementStepper />\n                                  <NumberDecrementStepper />\n                                </NumberInputStepper>\n                              </NumberInput>\n                            );\n                            break;\n                          case \"range\":\n                            valuesField = (\n                              <Stack direction={{ base: \"column\", md: \"row\" }}>\n                                <NumberInput\n                                  w=\"100%\"\n                                  onChange={(_, value) => {\n                                    var temp = [...filters];\n                                    temp[index].selectedValues[0] = value;\n                                    setFilters(temp);\n                                  }}\n                                  value={filter.selectedValues[0]}\n                                >\n                                  <NumberInputField />\n                                  <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                  </NumberInputStepper>\n                                </NumberInput>\n                                <Box textAlign=\"center\" w=\"20px\">\n                                  <ArrowForwardIcon\n                                    alignSelf=\"center\"\n                                    w={5}\n                                    h=\"100%\"\n                                  />\n                                </Box>\n                                <NumberInput\n                                  w=\"100%\"\n                                  onChange={(_, value) => {\n                                    var temp = [...filters];\n                                    temp[index].selectedValues[1] = value;\n                                    setFilters(temp);\n                                  }}\n                                  value={filter.selectedValues[1]}\n                                >\n                                  <NumberInputField />\n                                  <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                  </NumberInputStepper>\n                                </NumberInput>\n                              </Stack>\n                            );\n                            break;\n                        }\n                        break;\n                      case \"select\":\n                        valuesField = (\n                          <TagPicker\n                            cleanable\n                            style={{\n                              minHeight: \"40px\",\n                              paddingTop: \"2px\",\n                            }}\n                            onChange={(value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues = value;\n                              setFilters(temp);\n                            }}\n                            data={filter.selectedValues}\n                            block\n                          />\n                        );\n                        break;\n                      case \"datetime\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                          />\n                        );\n                    }\n\n                    return (\n                      <Box\n                        w={\"100%\"}\n                        backgroundColor=\"white\"\n                        p={4}\n                        mb={5}\n                        border=\"1px\"\n                        rounded=\"md\"\n                        borderColor=\"gray.100\"\n                      >\n                        <CloseButton\n                          onClick={() => {\n                            var temp = [...filters];\n                            temp.splice(index, 1);\n                            setFilters(temp);\n                          }}\n                          float=\"right\"\n                        />\n                        <VStack\n                          mt={\"20px\"}\n                          spacing={8}\n                          fontSize=\"md\"\n                          align=\"stretch\"\n                          color={\"gray.500\"}\n                        >\n                          <Box>\n                            <Stack\n                              direction={{ base: \"column\", xl: \"row\" }}\n                              w=\"100%\"\n                              spacing={{ base: \"20px\", xl: \"50px\" }}\n                            >\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Column</Text>\n                                <Select\n                                  styles={{\n                                    menu: (provided) => ({\n                                      ...provided,\n                                      zIndex: 1000000,\n                                    }),\n                                    singleValue: (provided) => ({\n                                      ...provided,\n                                      color: \"#718196\",\n                                    }),\n                                    control: (base, state) => ({\n                                      ...base,\n                                      minHeight: 40,\n                                      border: \"1px solid #E2E8F0\",\n                                      transition: \"0.3s\",\n                                      \"&:hover\": {\n                                        border: \"1px solid #CBD5E0\",\n                                      },\n                                    }),\n                                  }}\n                                  theme={(theme) => ({\n                                    ...theme,\n                                    borderRadius: 6,\n                                    colors: {\n                                      ...theme.colors,\n                                      primary: \"#3082CE\",\n                                    },\n                                  })}\n                                  value={{\n                                    label: filter.column,\n                                    value: filter.column,\n                                  }}\n                                  onChange={(value: any) => {\n                                    var temp = [...filters];\n                                    temp[index].column = value.value;\n                                    temp[index].type = value.type;\n                                    var tv: any = [];\n                                    switch (value.type) {\n                                      case \"textfield\":\n                                      case \"textarea\":\n                                        tv = [\"\"];\n                                        break;\n                                      case \"number\":\n                                        if (temp[index].filter === \"exact\") {\n                                          tv = [0];\n                                        } else {\n                                          tv = [0, 0];\n                                        }\n                                        break;\n                                    }\n                                    temp[index].selectedValues = tv;\n                                    setFilters(temp);\n                                  }}\n                                  classNamePrefix=\"select\"\n                                  isClearable={false}\n                                  name=\"color\"\n                                  options={project.components\n                                    .filter(\n                                      (component: any) =>\n                                        component.input &&\n                                        component.type !== \"button\"\n                                    )\n                                    .map((component: any) => {\n                                      return {\n                                        label: component.label,\n                                        value: component.key,\n                                        type: component.type,\n                                      };\n                                    })}\n                                />\n                              </Box>\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Type</Text>\n                                <Input\n                                  onChange={() => {}}\n                                  value={filter.type}\n                                  readOnly\n                                />\n                              </Box>\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Filter</Text>\n                                <Select\n                                  styles={{\n                                    menu: (provided) => ({\n                                      ...provided,\n                                      zIndex: 1000000,\n                                    }),\n                                    singleValue: (provided) => ({\n                                      ...provided,\n                                      color: \"#718196\",\n                                    }),\n                                    control: (base, state) => ({\n                                      ...base,\n                                      minHeight: 40,\n                                      border: \"1px solid #E2E8F0\",\n                                      transition: \"0.3s\",\n                                      \"&:hover\": {\n                                        border: \"1px solid #CBD5E0\",\n                                      },\n                                    }),\n                                  }}\n                                  theme={(theme) => ({\n                                    ...theme,\n                                    borderRadius: 6,\n                                    colors: {\n                                      ...theme.colors,\n                                      primary: \"#3082CE\",\n                                    },\n                                  })}\n                                  value={{\n                                    label:\n                                      filter.filter.charAt(0).toUpperCase() +\n                                      filter.filter.slice(1),\n                                    value: filter.filter,\n                                  }}\n                                  onChange={(value: any) => {\n                                    var temp = [...filters];\n                                    temp[index].filter = value.value;\n                                    setFilters(temp);\n                                  }}\n                                  classNamePrefix=\"select\"\n                                  isClearable={false}\n                                  name=\"filter\"\n                                  options={\n                                    filterTypes[\n                                      filter.type as keyof typeof filterTypes\n                                    ]\n                                  }\n                                />\n                              </Box>\n                            </Stack>\n                          </Box>\n                          <Stack\n                            direction={{ base: \"column\", xl: \"row\" }}\n                            w=\"100%\"\n                            spacing={{ base: \"20px\", xl: \"50px\" }}\n                          >\n                            <Box w=\"100%\">\n                              <Text mb=\"8px\">Values</Text>\n                              {valuesField}\n                            </Box>\n                          </Stack>\n                        </VStack>\n                      </Box>\n                    );\n                  })}\n                  <IconButton\n                    onClick={() => {\n                      setFilters([\n                        ...filters,\n                        {\n                          column: \"\",\n                          type: \"\",\n                          filter: \"exact\",\n                          values: [],\n                          selectedValues: [],\n                        } as FilterField,\n                      ]);\n                    }}\n                    my={5}\n                    float=\"right\"\n                    variant=\"outline\"\n                    aria-label=\"add-port\"\n                    icon={<BiPlusMedical />}\n                  />\n                </Box>\n              </Box>\n            </VStack>\n          </Box>\n\n          {/* <Box\n            color={\"gray.500\"}\n            w=\"100%\"\n            boxShadow={\"md\"}\n            rounded={\"md\"}\n            bg=\"white\"\n            p=\"2em\"\n          >\n            <Text mb={\"40px\"} color=\"gray.700\" fontWeight={400} fontSize=\"sm\">\n              <b>\n                {filteredSubmissions.length} of {submissions.length}\n              </b>{\" \"}\n              items\n            </Text>\n            <Table\n              headerHeight={80}\n              isTree\n              defaultExpandAllRows\n              bordered\n              cellBordered\n              rowKey=\"id\"\n              shouldUpdateScroll={false}\n              onExpandChange={(isOpen, rowData) => {\n                console.log(isOpen, rowData);\n              }}\n              renderTreeToggle={(icon, rowData) => {\n                return icon;\n              }}\n              autoHeight\n              data={filteredSubmissions}\n            >\n              <Column width={200} fixed=\"left\" align=\"left\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Title</HeaderCell>\n                <Cell dataKey=\"title\" />\n              </Column>\n              <Column width={110} align=\"center\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Status</HeaderCell>\n                <Cell dataKey=\"status\">\n                  {(row: any, index: number) => {\n                    if (row.status) {\n                      return <Tag colorScheme=\"cyan\">{row.status}</Tag>;\n                    }\n                  }}\n                </Cell>\n              </Column>\n\n              <Column width={110} align=\"center\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Created</HeaderCell>\n                <Cell dataKey=\"created\">\n                  {(row: any, index: number) => {\n                    if (row.created) {\n                      return moment(new Date(row.created)).fromNow();\n                    }\n                  }}\n                </Cell>\n              </Column>\n              {project.components.map((component: any) => {\n                if (\n                  displayedColumns === null ||\n                  displayedColumns.length < 1 ||\n                  displayedColumns.includes(component.key)\n                ) {\n                  if (component.type === \"customTable\") {\n                    var columns: any[] = [];\n                    Object.keys(component.columns).map((key) => {\n                      console.log(key);\n                      columns.push(\n                        <Column\n                          colSpan={0}\n                          width={200}\n                          align=\"center\"\n                          resizable\n                        >\n                          <HeaderCell\n                            style={{\n                              backgroundColor: \"#EDF2F6\",\n                              color: \"#718196\",\n                            }}\n                          >\n                            {component.columns[key]}\n                          </HeaderCell>\n                          <Cell dataKey={key}>\n                            {(row: any, index: number) => {\n                              if (row.data && row.data[key]) {\n                                return row.data[key];\n                              }\n                            }}\n                          </Cell>\n                        </Column>\n                      );\n                    });\n                    return (\n                      <ColumnGroup\n                        align=\"left\"\n                        header={<Text as=\"b\">{component.label}</Text>}\n                      >\n                        {columns}\n                      </ColumnGroup>\n                    );\n                  }\n                  if (component.type !== \"button\") {\n                    return (\n                      <Column width={200} align=\"center\" resizable>\n                        <HeaderCell verticalAlign=\"middle\">\n                          {component.label}\n                        </HeaderCell>\n                        <Cell dataKey={component.key}>\n                          {(row: any, index: number) => {\n                            if (row.data) {\n                              var value = row.data[component.key];\n                              switch (typeof value) {\n                                case \"number\":\n                                  return value.toFixed(2);\n                                case \"object\":\n                                  var tags: any[] = [];\n                                  value.map((element: any) => {\n                                    tags.push(<Tag mr={\"5px\"}>{element}</Tag>);\n                                  });\n                                  return tags;\n                                default:\n                                  if (component.type === \"datetime\" && value) {\n                                    var d = new Date(value);\n                                    return d.toLocaleString();\n                                  }\n                                  return value;\n                              }\n                            }\n                          }}\n                        </Cell>\n                      </Column>\n                    );\n                  }\n                }\n              })}\n              <Column width={150}>\n                <HeaderCell verticalAlign=\"middle\">Actions</HeaderCell>\n                <Cell dataKey=\"actions\">\n                  {(row: any, index: number) => {\n                    return (\n                      <HStack>\n                        <Text color=\"#4399E1\" cursor=\"pointer\">\n                          Edit\n                        </Text>\n                        <Divider height=\"10px\" orientation=\"vertical\" />\n                        <Text color=\"#4399E1\" cursor=\"pointer\">\n                          Remove\n                        </Text>\n                      </HStack>\n                    );\n                  }}\n                </Cell>\n              </Column>\n            </Table>\n          </Box> */}\n          <Box\n            color={\"gray.500\"}\n            w=\"100%\"\n            boxShadow={\"md\"}\n            rounded={\"md\"}\n            bg=\"white\"\n            p=\"2em\"\n          >\n            <Text mb={\"40px\"} color=\"gray.700\" fontWeight={400} fontSize=\"sm\">\n              <b>\n                {filteredSubmissions.length} of {submissions.length}\n              </b>{\" \"}\n              items\n            </Text>\n            <Table\n              // virtualized\n              headerHeight={80}\n              isTree\n              defaultExpandAllRows\n              bordered\n              cellBordered\n              rowKey=\"id\"\n              shouldUpdateScroll={false}\n              onExpandChange={(isOpen, rowData) => {\n                console.log(isOpen, rowData);\n              }}\n              renderTreeToggle={(icon, rowData) => {\n                return icon;\n              }}\n              autoHeight\n              data={[]}\n            >\n              <ColumnGroup header={<Text as=\"b\">General Information</Text>}>\n                <Column width={50} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#EDF2F6\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Company Code</HeaderCell>\n                  <Cell dataKey=\"companyCode\" />\n                </Column>\n\n                <Column width={200} resizable>\n                  <HeaderCell>Project Number</HeaderCell>\n                  <Cell dataKey=\"projectNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Campaign Start Date</HeaderCell>\n                  <Cell dataKey=\"campaignStartDate\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Project Type</HeaderCell>\n                  <Cell dataKey=\"projectType\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Project Information</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f2f6ed\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Country</HeaderCell>\n                  <Cell dataKey=\"country\" />\n                </Column>\n\n                <Column width={150} resizable>\n                  <HeaderCell>Country Share %</HeaderCell>\n                  <Cell dataKey=\"countryShare\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Country Budget Contribution (EUR)</HeaderCell>\n                  <Cell dataKey=\"countryBudgetContributionEur\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Country Cost Estimation (EUR)</HeaderCell>\n                  <Cell dataKey=\"countryCostEstimationEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Manufacturer Number</HeaderCell>\n                  <Cell dataKey=\"manufacturerNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Vendor Name</HeaderCell>\n                  <Cell dataKey=\"vendorName\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>SAP Debitor Number</HeaderCell>\n                  <Cell dataKey=\"sapDebitorNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>SAP Creditor Number</HeaderCell>\n                  <Cell dataKey=\"sapCreditorNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>MDF Level</HeaderCell>\n                  <Cell dataKey=\"mdfLevel\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Budget Currency</HeaderCell>\n                  <Cell dataKey=\"budgetCurrency\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Income (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedIncomeBC\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Costs (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedCostsBC\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Result (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedResultBC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Income (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedIncomeEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Costs (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedCostsEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Result (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedResultEur\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Vendor Share %</HeaderCell>\n                  <Cell dataKey=\"vendorShare\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Business Unit</HeaderCell>\n                  <Cell dataKey=\"bu\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>PH1</HeaderCell>\n                  <Cell dataKey=\"ph1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Campaign Channel</HeaderCell>\n                  <Cell dataKey=\"campaignChannel\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Target Audience</HeaderCell>\n                  <Cell dataKey=\"targetAudience\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Marketing Responsible</HeaderCell>\n                  <Cell dataKey=\"marketingResponsible\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Production Project Manager</HeaderCell>\n                  <Cell dataKey=\"productionProjectManager\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Project Approver</HeaderCell>\n                  <Cell dataKey=\"projectApprover\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Purchase Order</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f6edf2\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Purchase Order Service Provider</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderServiceProvider\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Net Value of Service Ordered (LC)</HeaderCell>\n                  <Cell dataKey=\"netValueOfServiceOrderedLC\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Local Currency</HeaderCell>\n                  <Cell dataKey=\"localCurrency\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Net Value (Purchase Order Currency)</HeaderCell>\n                  <Cell dataKey=\"netValuePOC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Purchase Order Currency</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderCurrency\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Net Value (EUR)</HeaderCell>\n                  <Cell dataKey=\"netValueEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Purchase Order Status</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderStatus\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Cost Actuals</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f1edf6\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonth\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentType\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDate\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDate\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Invoice Number</HeaderCell>\n                  <Cell dataKey=\"invoiceNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Account</HeaderCell>\n                  <Cell dataKey=\"costAccount\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Name 1</HeaderCell>\n                  <Cell dataKey=\"name1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"costAmountLC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"costAmountDC\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dc\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Status</HeaderCell>\n                  <Cell dataKey=\"costStatus\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Sales Actuals</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f5f4ec\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Invoice Number</HeaderCell>\n                  <Cell dataKey=\"invoiceNumberSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Account</HeaderCell>\n                  <Cell dataKey=\"incomeAccount\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Name 1</HeaderCell>\n                  <Cell dataKey=\"name1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountLC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountDC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Status</HeaderCell>\n                  <Cell dataKey=\"incomeStatus\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Actual Result (LC)</HeaderCell>\n                  <Cell dataKey=\"actualResult\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Actuals in EUR</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f5eced\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"costAmountEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Actual Result (EUR)</HeaderCell>\n                  <Cell dataKey=\"actualResult\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Cost GL Postings</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f0f0f0\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Account</HeaderCell>\n                  <Cell dataKey=\"costAccountCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"costAmountLCCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"costAmountDCCostGL\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dcCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"costAmountEurCostGL\" />\n                </Column>\n              </ColumnGroup>\n\n              <ColumnGroup header={<Text as=\"b\">Income GL Postings</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#dceee4\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Account</HeaderCell>\n                  <Cell dataKey=\"incomeAccountIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountLCIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountDCIncomeGL\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dcIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountEurIncomeGL\" />\n                </Column>\n              </ColumnGroup>\n              <Column width={0} align=\"left\" resizable>\n                <HeaderCell verticalAlign=\"middle\">\n                  <div></div>\n                </HeaderCell>\n                <Cell dataKey=\"none\" />\n              </Column>\n            </Table>\n          </Box>\n        </VStack>\n      </div>\n      {/* </AuthenticatedTemplate> */}\n      {/* <UnauthenticatedTemplate>\n        <Box boxShadow=\"md\" bg=\"white\" p=\"2em\" h=\"80vh\"></Box>\n      </UnauthenticatedTemplate> */}\n    </>\n  );\n}\n\nexport default TableExplorer;\n","export function numberWithCommas(x: any) {\n  return !isNaN(x) && typeof x === \"number\"\n    ? x\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    : \"\";\n}\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Tag,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport {\n  AiFillInfoCircle,\n  BsLightningFill,\n  IoMdCheckmarkCircle,\n  MdError,\n} from \"react-icons/all\";\nimport DatePicker from \"react-datepicker\";\nimport Creatable from \"react-select/creatable\";\nimport { shadeColor } from \"../utils/Color\";\nimport { numberWithCommas } from \"../utils/utils\";\n\nconst numRegex = /[0-9]|\\./;\n\nclass EditableTableCell extends React.Component<\n  {\n    onUpdate: any;\n    rowIndex: number;\n    rowData: any;\n    columnKey: string | undefined;\n    loadOptions?: any;\n    type: string;\n    initialValue: any;\n    textColor?: any;\n    backgroundColor?: string;\n    readonly?: boolean;\n    bold?: boolean;\n  },\n  {\n    cellValue: any;\n    options: any[];\n    editing: boolean;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      options: [],\n      cellValue: undefined,\n      editing: false,\n    };\n  }\n  componentDidUpdate(prevProps: any) {\n    if (\n      prevProps.initialValue !== this.props.initialValue &&\n      !isNaN(this.props.initialValue)\n    ) {\n      this.setState({ cellValue: this.props.initialValue });\n    }\n  }\n\n  componentDidMount() {\n    var value: any = undefined;\n    switch (this.props.type) {\n      case \"text\":\n      case \"button\":\n        value = this.props.initialValue\n          ? this.props.initialValue.toString()\n          : \"\";\n        break;\n      case \"number\":\n        value =\n          typeof this.props.initialValue === \"number\"\n            ? numberWithCommas(this.props.initialValue)\n            : \"\";\n        break;\n      case \"tags\":\n        value = this.props.initialValue;\n        break;\n      case \"date\":\n        value =\n          this.props.initialValue && this.props.initialValue !== null\n            ? new Date(this.props.initialValue)\n            : null;\n        break;\n      case \"dropdown\":\n        value =\n          typeof this.props.initialValue === \"string\"\n            ? { label: this.props.initialValue, value: this.props.initialValue }\n            : { label: \"\", value: \"\" };\n        break;\n      case \"multiple-dropdown\":\n        value = [];\n        if (this.props.initialValue && Array.isArray(this.props.initialValue)) {\n          this.props.initialValue.forEach((value: any) => {\n            value.push({ label: value, value: value });\n          });\n        }\n        break;\n      case \"menu\":\n        value = this.props.initialValue\n          ? this.props.initialValue.toString()\n          : \"\";\n        break;\n      default:\n        break;\n    }\n    this.setState({ cellValue: value });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          fontWeight: this.props.bold ? \"bold\" : \"normal\",\n          textAlign: this.props.type === \"button\" ? \"center\" : \"inherit\",\n          backgroundColor: this.props.backgroundColor\n            ? this.props.backgroundColor\n            : \"\",\n          // borderRight: this.props.backgroundColor\n          //   ? `1px solid ${shadeColor(this.props.backgroundColor, -20)}`\n          //   : \"\",\n          // borderTop:\n          //   this.props.rowIndex === 0 && this.props.backgroundColor\n          //     ? `3px solid ${shadeColor(this.props.backgroundColor, 20)}`\n          //     : \"\",\n        }}\n        className={\n          this.state.editing\n            ? \"vendors-table-cell active\"\n            : `content-preview ${\n                this.props.textColor ? this.props.textColor : \"\"\n              } ${this.props.readonly ? \"readonly\" : \"\"} ${\n                this.props.rowData.parentId !== null ? \"readonly\" : \"\"\n              }`\n        }\n        onClick={() => {\n          if (\n            !this.state.editing &&\n            !this.props.readonly &&\n            this.props.rowData.parentId === null\n          ) {\n            this.setState({ editing: true });\n          }\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          this.setState({ editing: false });\n        }}\n      >\n        {!this.state.editing ? (\n          this.props.type === \"tags\" ? (\n            this.state.cellValue ? (\n              this.state.cellValue.map((cv: any) => {\n                if (cv) {\n                  return (\n                    <Tag colorScheme={this.props.textColor} mb=\"5px\" mr={\"5px\"}>\n                      {cv}\n                    </Tag>\n                  );\n                }\n              })\n            ) : (\n              \"\"\n            )\n          ) : this.props.type === \"date\" ? (\n            this.state.cellValue && this.state.cellValue !== null ? (\n              moment(this.state.cellValue).format(\"DD.MM.yyyy\")\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"object\" ? (\n            this.state.cellValue !== null ? (\n              `${this.state.cellValue.label}`\n            ) : (\n              \"\"\n            )\n          ) : (\n            `${this.state.cellValue}`\n          )\n        ) : this.props.type === \"text\" || this.props.type === \"number\" ? (\n          <textarea\n            autoFocus\n            style={{ resize: \"none\" }}\n            value={this.state.cellValue ?? \"\"}\n            onChange={(event) => {\n              this.setState({ cellValue: event.target.value });\n            }}\n            onFocus={(e) => {\n              setTimeout(() => {\n                document.execCommand(\"selectAll\", false);\n              }, 0);\n            }}\n            onKeyPress={\n              this.props.type === \"number\"\n                ? (event) => {\n                    const keyCode = event.keyCode || event.which;\n                    const string = String.fromCharCode(keyCode);\n                    if (!numRegex.test(string)) {\n                      event.defaultPrevented = false;\n                      if (event.preventDefault) event.preventDefault();\n                    }\n                  }\n                : undefined\n            }\n            onBlur={(event) => {\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                this.props.type === \"number\"\n                  ? Number(this.state.cellValue)\n                  : this.state.cellValue\n              );\n              this.setState({ editing: false });\n            }}\n            className=\"content-editable\"\n          />\n        ) : this.props.type === \"date\" ? (\n          <DatePicker\n            autoFocus\n            // showTimeInput\n            isClearable\n            customInput={<input className=\"datepicker-input\"></input>}\n            // selected={this.state.cellValue}\n            onChange={(date) => {\n              this.setState({ cellValue: date, editing: false });\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                date !== null ? date.toString() : null\n              );\n            }}\n            onCalendarClose={() => {\n              this.setState({ editing: false });\n            }}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n        ) : this.props.type === \"dropdown\" ||\n          this.props.type === \"multiple-dropdown\" ? (\n          <Creatable\n            menuIsOpen={this.state.editing}\n            autoFocus\n            isMulti={this.props.type === \"multiple-dropdown\"}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n                minWidth: \"200px\",\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"black\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                paddingLeft: \"5px\",\n                boxShadow: \"none\",\n                outlineWidth: 0,\n                border: 0,\n                minHeight: 52,\n                backgroundColor: \"transparent\",\n                transition: \"0.3s\",\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 0,\n              colors: {\n                ...theme.colors,\n                primary: \"#a0bfe3\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={this.state.cellValue}\n            onChange={(value) => {\n              this.setState({\n                cellValue: value !== null ? value : { label: \"\", value: \"\" },\n              });\n              var v: any = \"\";\n              if (value !== null && Array.isArray(value)) {\n                v = [];\n                value.map((dv: any) => v.push(dv.label));\n              }\n              if (value !== null && !Array.isArray(value)) {\n                v = value.label;\n              }\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                v\n              );\n              this.setState({ editing: false });\n            }}\n            onFocus={async () => {\n              this.setState({\n                options: this.props.loadOptions(this.props.columnKey ?? \"\"),\n              });\n            }}\n            onBlur={() => {\n              this.setState({\n                options: [],\n                editing: false,\n              });\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"table-select\"\n            isClearable\n            isSearchable\n            options={this.state.options}\n          />\n        ) : this.props.type === \"button\" ? (\n          <div className=\"table-button-container\">\n            <Button\n              colorScheme={this.props.textColor}\n              onClick={() => {\n                this.props.onUpdate(\n                  this.props.rowData.id,\n                  \"data.companyName\",\n                  \"Updated Name\"\n                );\n                this.setState({ editing: false });\n              }}\n              size=\"sm\"\n              color=\"white\"\n              className=\"table-button\"\n            >\n              {this.state.cellValue}\n            </Button>\n          </div>\n        ) : (\n          <div>unknown</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditableTableCell;\n","import { Submission } from \"../types/submission\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport function SubmissionsTransformer(submissions: Submission[]) {\n  var transformed: Submission[] = [];\n\n  var parentSubmissions = submissions.filter(\n    (submission) => submission.parentId === null\n  );\n\n  parentSubmissions.forEach((parentSubmission) => {\n    transformed.push(parentSubmission);\n    var subSubmissions = submissions.filter(\n      (submission) =>\n        submission.parentId !== null &&\n        submission.parentId === parentSubmission.id\n    );\n    var uniqueGroups = [\n      ...Array.from(\n        new Set(subSubmissions.map((submission) => submission.group))\n      ),\n    ];\n\n    var groupedSubSubmissions: Submission[][] = [];\n    var desiredDepth = 0;\n    uniqueGroups.forEach((group) => {\n      var groupSubmissions = subSubmissions.filter(\n        (submission) => submission.group === group\n      );\n      if (groupSubmissions.length > desiredDepth) {\n        desiredDepth = groupSubmissions.length;\n      }\n      groupedSubSubmissions.push(groupSubmissions);\n    });\n\n    var emptyDate = new Date();\n\n    groupedSubSubmissions.forEach((gs) => {\n      if (gs.length < desiredDepth) {\n        for (var i = 0; i < desiredDepth; i++) {\n          if (typeof gs[i] === \"undefined\") {\n            gs[i] = {\n              parentId: submissions[0].parentId,\n              group: null,\n              project: submissions[0].project,\n              created: emptyDate,\n              updated: emptyDate,\n              title: \"\",\n              author: \"\",\n              status: \"\",\n              data: null,\n            };\n          }\n        }\n      }\n    });\n\n    for (var si = 0; si < desiredDepth; si++) {\n      var data = {};\n      for (var gi = 0; gi < groupedSubSubmissions.length; gi++) {\n        var gd = groupedSubSubmissions[gi][si].data;\n        if (gd !== null) {\n          data = {\n            ...data,\n            ...Object.fromEntries(\n              Object.entries(gd).filter(([_, v]) => v != null)\n            ),\n          };\n        }\n      }\n      transformed.push({\n        id: uuidv4(),\n        parentId: subSubmissions[0].parentId,\n        group: \"transformed\",\n        project: subSubmissions[0].project,\n        created: emptyDate,\n        updated: emptyDate,\n        title: \"\",\n        status: \"\",\n        author: \"\",\n        data: data,\n      });\n    }\n  });\n\n  return transformed;\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Button,\n  HStack,\n  Input,\n  Text,\n  useColorModeValue,\n  Divider,\n  IconButton,\n  Stack,\n  VStack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  CloseButton,\n} from \"@chakra-ui/react\";\nimport {\n  cloneElement,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport EditableTableCell from \"../../components/EditableTableCell\";\n\nimport { useFps } from \"react-fps\";\nimport Select from \"react-select\";\nimport { Submission } from \"../../types/submission\";\nimport styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport Toast from \"../../components/Toast\";\n\nimport BaseTable, {\n  AutoResizer,\n  Column,\n  ColumnShape,\n  unflatten,\n} from \"react-base-table\";\nimport \"react-base-table/styles.css\";\nimport { RestAPI } from \"../../api/rest\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport { BiPlusMedical } from \"react-icons/all\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { CheckTreePicker, TagPicker } from \"rsuite\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport { SubmissionsTransformer } from \"../../utils/SubmissionsTransformer\";\nimport { numberWithCommas } from \"../../utils/utils\";\n\ninterface Props {\n  history: any;\n}\n\nconst numRegex = /[0-9]|\\./;\n\nconst DebugOverlay = styled.div`\n  width: 300px;\n  background: lightgray;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  padding: 5px 15px;\n  border-radius: 10px;\n  color: white;\n`;\n\nvar ProjectType: any[] = [];\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\nvar SapStatus: any[] = [\n  { label: \"Created\", value: \"created\" },\n  { label: \"None\", value: \"none\" },\n];\nvar CostStatuses: any[] = [\n  { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n  { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n  { label: \"Not Relevant\", value: \"Not Relevant\" },\n];\n\nasync function fetchDropdowns() {\n  var dropdownsIds: string[] = [\n    \"619b630a9a5a2bb37a93b23b\",\n    \"619b61419a5a2bb37a93b237\",\n    \"619b63429a5a2bb37a93b23d\",\n    \"619b62d79a5a2bb37a93b239\",\n    \"619b632c9a5a2bb37a93b23c\",\n    \"619b62959a5a2bb37a93b238\",\n    \"619b62f29a5a2bb37a93b23a\",\n    \"619b66defe27d06ad17d75ac\",\n    \"619b6754fe27d06ad17d75ad\",\n    \"619b6799fe27d06ad17d75ae\",\n    \"619b7b9efe27d06ad17d75af\",\n    \"619b7b9efe27d06ad17d75af\",\n  ];\n  var responses = await Promise.all(\n    dropdownsIds.map((di) => {\n      return RestAPI.getDropdownValues(di);\n    })\n  );\n  PH1 = responses[0].data;\n  Companies = responses[1].data;\n  VendorsNames = responses[2].data;\n  CampaignChannel = responses[3].data;\n  TargetAudience = responses[4].data;\n  Budget = responses[5].data;\n  ExchangeRates = responses[6].data;\n  FiscalQuarter = responses[7].data;\n  Year = responses[8].data;\n  ProjectStartQuarter = responses[9].data;\n  ProjectType = responses[10].data;\n}\n\nconst loadOptions = (identifier: string) => {\n  switch (identifier) {\n    case \"data.projectType\":\n      return ProjectType;\n    case \"data.ph1\":\n      return PH1;\n    case \"data.campaignChannel\":\n      return CampaignChannel;\n    case \"data.targetAudience\":\n      return TargetAudience;\n    case \"data.budgetCurrency\":\n      return ExchangeRates;\n    case \"data.sapStatus\":\n      return SapStatus;\n    case \"data.caVendorName\":\n    case \"data.vendorName\":\n    case \"data.vendorNameSA\":\n      return VendorsNames;\n    case \"data.costStatus\":\n      return CostStatuses;\n  }\n  return [];\n};\n\nfunction bytesToSize(bytes: number) {\n  var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  if (bytes == 0) return \"0 Byte\";\n  var i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, i)).toFixed(2) + \" \" + sizes[i];\n}\n\ninterface FilterField {\n  columnValue: string;\n  columnLabel: string;\n  type: string;\n  filter: string;\n  values: any[];\n  selectedValues: any[];\n}\nconst filterTypes = {\n  text: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  dropdown: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  \"multiple-dropdown\": [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  date: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n};\n\nconst DisplayedColumnsList = [\n  {\n    label: \"General Information\",\n    value: \"generalInformation\",\n    children: [\n      { label: \"Company Code\", value: \"data.companyCode\", type: \"string\" },\n      { label: \"Project Number\", value: \"data.projectNumber\", type: \"string\" },\n      { label: \"Project Name\", value: \"data.projectName\", type: \"string\" },\n      {\n        label: \"Campaign Start Date\",\n        value: \"data.campaignStartDate\",\n        type: \"date\",\n      },\n      { label: \"Project Type\", value: \"data.projectType\", type: \"dropdown\" },\n    ],\n  },\n  {\n    label: \"Project Information\",\n    value: \"projectInformation\",\n    children: [\n      { label: \"Countries EMEA\", value: \"data.countriesEMEA\", type: \"string\" },\n      { label: \"% Country Share\", value: \"data.countryShare\", type: \"number\" },\n      {\n        label: \"Country Budget Contribution (EUR)\",\n        value: \"data.countryBudgetContributionEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Country Cost Estimation (EUR)\",\n        value: \"data.countryCostEstimationEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Manufacturer Number\",\n        value: \"data.manufacturerNumber\",\n        type: \"string\",\n      },\n      { label: \"Vendor Name\", value: \"data.vendorName\", type: \"string\" },\n      {\n        label: \"SAP Debitor Number\",\n        value: \"data.debitorNumber\",\n        type: \"string\",\n      },\n      {\n        label: \"SAP Creditor Number\",\n        value: \"data.creditorNumber\",\n        type: \"string\",\n      },\n      { label: \"MDF Level\", value: \"data.mdfLevel\", type: \"dropdown\" },\n      {\n        label: \"Vendor Budget Currency\",\n        value: \"data.vendorBudgetCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Estimated Income (Budget Currency)\",\n        value: \"data.estimatedIncomeBC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs (Budget Currency)\",\n        value: \"data.estimatedCostsBC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result (Budget Currency)\",\n        value: \"data.estimatedResultBC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Income EUR\",\n        value: \"data.estimatedIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs EUR\",\n        value: \"data.estimatedCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result EUR\",\n        value: \"data.estimatedResultEUR\",\n        type: \"number\",\n      },\n      { label: \"% Vendor Share\", value: \"data.vendorShare\", type: \"number\" },\n      { label: \"Business Unit\", value: \"data.businessUnit\", type: \"string\" },\n      { label: \"PH1\", value: \"data.PH1\", type: \"string\" },\n      {\n        label: \"Campaign Channel\",\n        value: \"data.campaignChannel\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Target Audience\",\n        value: \"data.targetAudience\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Marketing Responsible\",\n        value: \"data.marketingResponsible\",\n        type: \"string\",\n      },\n      {\n        label: \"Project Approver\",\n        value: \"data.projectApprover\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.additionalInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Purchase Order\",\n    value: \"purchaseOrder\",\n    children: [\n      {\n        label: \"Purchase Order Service Provider\",\n        value: \"data.purchaseOrderServiceProvider\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor Name\",\n        value: \"data.vendorNamePO\",\n        type: \"string\",\n      },\n      {\n        label: \"Net Value of Service Ordered (LC)\",\n        value: \"data.netValueOfServiceOrderedLC\",\n        type: \"string\",\n      },\n      { label: \"Local Currency\", value: \"data.localCurrency\", type: \"string\" },\n      {\n        label: \"Net Value (Purchase Order Currency)\",\n        value: \"data.netValuePOC\",\n        type: \"string\",\n      },\n      {\n        label: \"Purchase Order Currency\",\n        value: \"data.purchaseOrderCurrency\",\n        type: \"string\",\n      },\n      { label: \"Net Value (EUR)\", value: \"data.netValueEur\", type: \"string\" },\n      {\n        label: \"Purchase Order Status\",\n        value: \"data.purchaseOrderStatus\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost Invoices\",\n    value: \"costInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonth\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentType\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDate\", type: \"string\" },\n      { label: \"Document Date\", value: \"data.documentDate\", type: \"string\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumber\",\n        type: \"string\",\n      },\n      { label: \"Invoice Number\", value: \"data.invoiceNumber\", type: \"string\" },\n      { label: \"Cost Account\", value: \"data.costAccount\", type: \"string\" },\n      { label: \"Name 1\", value: \"data.name1\", type: \"string\" },\n      { label: \"Vendor Name\", value: \"data.vendorNameCI\", type: \"string\" },\n      { label: \"Cost Amount (LC)\", value: \"data.costAmountLC\", type: \"string\" },\n      { label: \"Cost Amount (DC)\", value: \"data.costAmountDC\", type: \"string\" },\n      { label: \"DC\", value: \"data.dc\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEUR\",\n        type: \"number\",\n      },\n      { label: \"Cost Status\", value: \"data.costStatus\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Sales Invoices\",\n    value: \"salesInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthSI\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentTypeSI\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDateSI\", type: \"string\" },\n      { label: \"Document Date\", value: \"data.documentDateSI\", type: \"string\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Invoice Number\",\n        value: \"data.invoiceNumberSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountSI\",\n        type: \"string\",\n      },\n      { label: \"Name 1\", value: \"data.name1SI\", type: \"string\" },\n      { label: \"Vendor Name\", value: \"data.vendorNameSI\", type: \"string\" },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCSI\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcSI\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEURSI\",\n        type: \"number\",\n      },\n      { label: \"Income Status\", value: \"data.incomeStatusSI\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Cost GL Postings\",\n    value: \"costGlPostings\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthCostGL\", type: \"string\" },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Account\",\n        value: \"data.costAccountCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (LC)\",\n        value: \"data.costAmountLCCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (DC)\",\n        value: \"data.costAmountDCCostGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcCostGL\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEURCostGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Income GL Postings\",\n    value: \"incomeGlPostings\",\n    children: [\n      {\n        label: \"Year / Month\",\n        value: \"data.yearMonthIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCIncomeGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcIncomeGL\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEurIncomeGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Project Results\",\n    value: \"projectResults\",\n    children: [\n      { label: \"Result (LC)\", value: \"data.resultLCPR\", type: \"string\" },\n      { label: \"Result (EUR)\", value: \"data.resultEURPR\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Control Checks\",\n    value: \"controlChecks\",\n    children: [\n      {\n        label: \"Total Costs in Tool\",\n        value: \"data.totalCostsInTool\",\n        type: \"formula\",\n      },\n      {\n        label: \"Total Costs in SAP\",\n        value: \"data.totalCostsInSAP\",\n        type: \"string\",\n      },\n      {\n        label: \"Total Income in Tool\",\n        value: \"data.totalIncomeInTool\",\n        type: \"string\",\n      },\n      {\n        label: \"Total Income in SAP\",\n        value: \"data.totalIncomeInSAP\",\n        type: \"string\",\n      },\n    ],\n  },\n];\n\nexport function VendorsTable(props: Props) {\n  const [debugOverlayHidden, hideDebugOverlay] = useState(false);\n  const [filters, setFilters] = useState<FilterField[]>([]);\n  const [displayedColumns, setDisplayedColumns] = useState<string[]>([\n    \"generalInformation\",\n    \"projectInformation\",\n    \"purchaseOrder\",\n    \"costInvoices\",\n    \"salesInvoices\",\n    \"costGlPostings\",\n    \"incomeGlPostings\",\n    \"projectResults\",\n    \"controlChecks\",\n  ]);\n  const { fps, avgFps } = useFps(20);\n  const [tableWidth, setTableWidth] = useState(1000);\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<Submission[]>(\n    []\n  );\n  const [scrollLeft, setScrollLeft] = React.useState(0);\n  const [defaultColumnsWidth, setDefaultColumnsWidth] = useState({});\n  const onScroll = React.useCallback(\n    (args) => {\n      if (args.scrollLeft !== scrollLeft) {\n        setScrollLeft(args.scrollLeft);\n      }\n    },\n    [scrollLeft]\n  );\n  const [heapInfo, setHeapInfo] = useState<any>({\n    total: 0,\n    allocated: 0,\n    current: 0,\n    domSize: 0,\n  });\n  const [totalRequests, setTotalRequests] = useState(1);\n\n  useEffect(() => {\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {}, []);\n\n  useEffect(() => {\n    getHeapInfo();\n    const interval = setInterval(() => {\n      getHeapInfo();\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    RestAPI.getVendorTableDefaultConfig().then((response) => {\n      if (response.data.columnsWidth !== null) {\n        setDefaultColumnsWidth(response.data.columnsWidth);\n      }\n      if (response.data.displayedColumns !== null) {\n        if (response.data.displayedColumns.length > 0) {\n          setDisplayedColumns(response.data.displayedColumns);\n        }\n      }\n\n      var cw = localStorage.getItem(\"vendors.columns\");\n      if (cw !== null) {\n        setDefaultColumnsWidth(JSON.parse(cw));\n      }\n      var dc = localStorage.getItem(\"vendors.displayedColumns\");\n      if (dc !== null) {\n        setDisplayedColumns(JSON.parse(dc));\n      }\n    });\n  }, []);\n  useEffect(() => {\n    var filtered: Submission[] = [];\n    if (filters.length > 0 && submissions.length > 0) {\n      submissions.forEach((submission) => {\n        var valid = true;\n        filters.forEach((filter) => {\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"text\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          filtered.push(submission);\n        }\n      });\n      setFilteredSubmissions(SubmissionsTransformer(filtered));\n    } else {\n      setFilteredSubmissions(SubmissionsTransformer([...submissions]));\n    }\n  }, [filters, submissions]);\n\n  const getHeapInfo = () => {\n    var memory = (window.performance as any).memory;\n    if (memory !== undefined) {\n      var info: any = {\n        total: memory.jsHeapSizeLimit,\n        allocated: memory.totalJSHeapSize,\n        current: memory.usedJSHeapSize,\n        domSize: document.getElementsByTagName(\"*\").length,\n      };\n      setHeapInfo(info);\n    }\n  };\n  const getVisibleColumnIndices = (offset: number, columns: any) => {\n    var netOffsets: any[] = [],\n      offsetSum = 0,\n      leftBound = offset - 200,\n      rightBound = offset + tableWidth,\n      visibleIndices: any[] = [];\n\n    columns.forEach((col: any) => {\n      netOffsets.push(offsetSum);\n      offsetSum += col.width;\n    });\n\n    netOffsets.forEach((columnOffset, colIdx) => {\n      var isOutside = columnOffset < leftBound || columnOffset > rightBound;\n      if (!isOutside) {\n        visibleIndices.push(colIdx);\n      }\n    });\n\n    return visibleIndices;\n  };\n  // ________________________________\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // --------------------------------\n\n  // // rightBound = offset+tableWidth;\n  //  <-------------*--------------->\n  //  <-------------************---->\n\n  //  // leftBound = offset;\n  //  <-------------*--------------->\n  //  <--************--------------->\n\n  // leftBound = offset - maxColumnWidth;\n\n  //                 offset ->\n  // ********<---------------|--------------->*********\n  //         leftBound       -      rightBound\n\n  // leftBound = offset;\n  // rightBound = tableWidth;\n\n  // isOutside = columnOffset < leftBound || columnOffset > rightBound;\n\n  // if (!isOutside) {\n  //     // render column\n  // } else {\n  //     // remove from DOM\n  // }\n  const rowRenderer = React.useCallback(\n    ({ cells, columns }) => {\n      // null out hidden content on scroll\n      if (cells.length === 89) {\n        const visibleIndices = getVisibleColumnIndices(scrollLeft, columns);\n        const startIndex = visibleIndices[0];\n        const visibleCells = visibleIndices.map((x) => cells[x]);\n\n        if (startIndex > 0) {\n          let width = 0;\n          for (let i = 0; i < visibleIndices[0]; i++) {\n            width += cells[i].props.style.width;\n          }\n\n          const placeholder = <div key=\"placeholder\" style={{ width }} />;\n          return [placeholder, visibleCells];\n        }\n        return visibleCells;\n      }\n\n      return cells;\n    },\n    [scrollLeft]\n  );\n\n  async function partialUpdate(submission: string, path: string, value: any) {\n    setTotalRequests(totalRequests + 1);\n    if (path.includes(\"[\")) {\n      var s = path.split(\".\");\n      s.shift();\n      path = s.join(\".\");\n    }\n    RestAPI.updateSubmissionPartial(submission, path, value);\n  }\n\n  function handleCellUpdate(submission: string, path: string, value: any) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submission);\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n      if (_.get(submissions, path) !== value) {\n        _.set(submissions, path, value);\n        partialUpdate(submission, path, value);\n      }\n    }\n  }\n  function deleteSubmission(submissionId: string) {\n    var tbd: string[] = [submissionId];\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp.splice(submissionIndex, 1);\n      temp.map((s, index) => {\n        if (s.parentId !== null && s.parentId === submissionId) {\n          if (s.id) {\n            temp.splice(index, 1);\n            tbd.push(s.id);\n          }\n        }\n      });\n      setSubmissions(temp);\n      tbd.forEach((ds) => {\n        RestAPI.deleteSubmission(ds);\n      });\n    }\n  }\n  function parentizeSubmission(submissionId: string) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp[submissionIndex].parentId = null;\n      partialUpdate(submissionId, \"parentId\", null);\n      setSubmissions(temp);\n    }\n  }\n  function callSap(submissionId: string) {\n    RestAPI.callSapSubmission(submissionId)\n      .then((response) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div dangerouslySetInnerHTML={{ __html: response.data }} />\n            }\n            type={\"success\"}\n          />\n        );\n        var submissionIndex = submissions.findIndex(\n          (s) => s.id === submissionId\n        );\n        if (submissionIndex > -1) {\n          var temp = [...submissions];\n          temp[submissionIndex].data[\"sapStatus\"] = \"created\";\n          partialUpdate(submissionId, \"data.sapStatus\", \"created\");\n          setSubmissions(temp);\n        }\n      })\n      .catch((error) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div dangerouslySetInnerHTML={{ __html: error.response.data }} />\n            }\n            type={\"error\"}\n          />\n        );\n      });\n  }\n\n  async function handleResize(column: string, width: number) {\n    var c = localStorage.getItem(\"vendors.columns\");\n    var columns = {} as any;\n    if (c !== null) {\n      columns = JSON.parse(c);\n    }\n    columns[column] = width;\n    localStorage.setItem(\"vendors.columns\", JSON.stringify(columns));\n  }\n\n  function columnWidth(column: string, dw: number) {\n    var sd = (defaultColumnsWidth as any)[column];\n    return sd ? sd : 150;\n  }\n  //   async function saveCellWidth(cell: string, width: number) {\n  //     localStorage.setItem(cell, width.toString());\n  //   }\n  //   function getCellWidth(cell: string, defaultWidth: number) {\n  //     console.log(\"get\");\n  //     var value = localStorage.getItem(cell);\n  //     if (value !== null) {\n  //       return Number(value);\n  //     }\n  //     return defaultWidth;\n  //   }\n\n  useEffect(() => {\n    RestAPI.getSubmissions().then((response) => {\n      var vSubs: Submission[] = [];\n      var subs = response.data;\n      subs.forEach((sub) => {\n        if (sub.project === \"619515b754e61c8dd33daa52\") {\n          vSubs.push(sub);\n        }\n      });\n      var transformed = SubmissionsTransformer(vSubs);\n      setSubmissions(transformed);\n      setFilteredSubmissions(transformed);\n    });\n  }, []);\n\n  function visibilityController(group: string, key: string) {\n    return !displayedColumns.includes(group) && !displayedColumns.includes(key);\n  }\n\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.companyCode\",\n      dataKey: \"data.companyCode\",\n      title: \"Company Code\",\n      header: \"General Information\",\n      width: columnWidth(\"data.companyCode\", 150),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.companyCode\"),\n      type: \"number\",\n      // className: \"dark-green-3-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectNumber\",\n      dataKey: \"data.projectNumber\",\n      title: \"Project Number\",\n      width: columnWidth(\"data.projectNumber\", 150),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.projectNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectName\",\n      dataKey: \"data.projectName\",\n      title: \"Project Name\",\n      width: columnWidth(\"data.projectName\", 200),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.projectName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignStartDate\",\n      dataKey: \"data.campaignStartDate\",\n      title: \"Campaign Start Date\",\n      width: columnWidth(\"data.campaignStartDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.campaignStartDate\"\n      ),\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectType\",\n      dataKey: \"data.projectType\",\n      title: \"Project Type\",\n      width: columnWidth(\"data.projectType\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.projectType\"),\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          loadOptions={loadOptions}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countriesEMEA\",\n      dataKey: \"data.countriesEMEA\",\n      title: \"Countries EMEA\",\n      header: \"Project Information\",\n      width: columnWidth(\"data.countriesEMEA\", 250),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.countriesEMEA\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryShare\",\n      dataKey: \"data.countryShare\",\n      title: \"% Country Share\",\n      width: columnWidth(\"data.countryShare\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.countryShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryBudgetContributionEUR\",\n      dataKey: \"data.countryBudgetContributionEUR\",\n      title: \"Country Budget Contribution (EUR)\",\n      width: columnWidth(\"data.countryBudgetContributionEUR\", 250),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryBudgetContributionEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCostEstimationEUR\",\n      dataKey: \"data.countryCostEstimationEUR\",\n      title: \"Country Cost Estimation (EUR)\",\n      width: columnWidth(\"data.countryCostEstimationEUR\", 250),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCostEstimationEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.manufacturerNumber\",\n      dataKey: \"data.manufacturerNumber\",\n      title: \"Manufacturer Number\",\n      width: columnWidth(\"data.manufacturerNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.manufacturerNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorName\",\n      dataKey: \"data.vendorName\",\n      title: \"Vendor Name\",\n      width: columnWidth(\"data.vendorName\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.debitorNumber\",\n      dataKey: \"data.debitorNumber\",\n      title: \"SAP Debitor Number\",\n      width: columnWidth(\"data.debitorNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.debitorNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.creditorNumber\",\n      dataKey: \"data.creditorNumber\",\n      title: \"SAP Creditor Number\",\n      width: columnWidth(\"data.creditorNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.creditorNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.mdfLevel\",\n      dataKey: \"data.mdfLevel\",\n      title: \"MDF Level\",\n      width: columnWidth(\"data.mdfLevel\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.mdfLevel\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorBudgetCurrency\",\n      dataKey: \"data.vendorBudgetCurrency\",\n      title: \"Vendor Budget Currency\",\n      width: columnWidth(\"data.vendorBudgetCurrency\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.vendorBudgetCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeBC\",\n      dataKey: \"data.estimatedIncomeBC\",\n      title: \"Estimated Income (Budget Currency)\",\n      width: columnWidth(\"data.estimatedIncomeBC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeBC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsBC\",\n      dataKey: \"data.estimatedCostsBC\",\n      title: \"Estimated Costs (Budget Currency)\",\n      width: columnWidth(\"data.estimatedCostsBC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsBC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultBC\",\n      dataKey: \"data.estimatedResultBC\",\n      title: \"Estimated Result (Budget Currency)\",\n      width: columnWidth(\"data.estimatedResultBC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultBC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeEUR\",\n      dataKey: \"data.estimatedIncomeEUR\",\n      title: \"Estimated Income EUR\",\n      width: columnWidth(\"data.estimatedIncomeEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsEUR\",\n      dataKey: \"data.estimatedCostsEUR\",\n      title: \"Estimated Costs EUR\",\n      width: columnWidth(\"data.estimatedCostsEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultEUR\",\n      dataKey: \"data.estimatedResultEUR\",\n      title: \"Estimated Result EUR\",\n      width: columnWidth(\"data.estimatedResultEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorShare\",\n      dataKey: \"data.vendorShare\",\n      title: \"% Vendor Share\",\n      width: columnWidth(\"data.vendorShare\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.businessUnit\",\n      dataKey: \"data.businessUnit\",\n      title: \"Business Unit\",\n      width: columnWidth(\"data.businessUnit\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.businessUnit\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.PH1\",\n      dataKey: \"data.PH1\",\n      title: \"PH1\",\n      width: columnWidth(\"data.PH1\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.PH1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignChannel\",\n      dataKey: \"data.campaignChannel\",\n      title: \"Campaign Channel\",\n      width: columnWidth(\"data.campaignChannel\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignChannel\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.targetAudience\",\n      dataKey: \"data.targetAudience\",\n      title: \"Target Audience\",\n      width: columnWidth(\"data.targetAudience\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.targetAudience\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.marketingResponsible\",\n      dataKey: \"data.marketingResponsible\",\n      title: \"Marketing Responsible\",\n      width: columnWidth(\"data.marketingResponsible\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.marketingResponsible\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectApprover\",\n      dataKey: \"data.projectApprover\",\n      title: \"Project Approver\",\n      width: columnWidth(\"data.projectApprover\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.projectApprover\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalInformation\",\n      dataKey: \"data.additionalInformation\",\n      title: \"Additional Information\",\n      width: columnWidth(\"data.additionalInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.additionalInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderServiceProvider\",\n      dataKey: \"data.purchaseOrderServiceProvider\",\n      title: \"Purchase Order Service Provider\",\n      header: \"Purchase Order\",\n      width: columnWidth(\"data.purchaseOrderServiceProvider\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderServiceProvider\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorNamePO\",\n      dataKey: \"data.vendorNamePO\",\n      title: \"Vendor Name\",\n      width: columnWidth(\"data.vendorNamePO\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.vendorNamePO\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueOfServiceOrderedLC\",\n      dataKey: \"data.netValueOfServiceOrderedLC\",\n      title: \"Net Value of Service Ordered (LC)\",\n      width: columnWidth(\"data.netValueOfServiceOrderedLC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.netValueOfServiceOrderedLC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localCurrency\",\n      dataKey: \"data.localCurrency\",\n      title: \"Local Currency\",\n      width: columnWidth(\"data.localCurrency\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.localCurrency\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValuePOC\",\n      dataKey: \"data.netValuePOC\",\n      title: \"Net Value (Purchase Order Currency)\",\n      width: columnWidth(\"data.netValuePOC\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValuePOC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderCurrency\",\n      dataKey: \"data.purchaseOrderCurrency\",\n      title: \"Purchase Order Currency\",\n      width: columnWidth(\"data.purchaseOrderCurrency\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueEur\",\n      dataKey: \"data.netValueEur\",\n      title: \"Net Value (EUR)\",\n      width: columnWidth(\"data.netValueEur\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValueEur\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderStatus\",\n      dataKey: \"data.purchaseOrderStatus\",\n      title: \"Purchase Order Status\",\n      width: columnWidth(\"data.purchaseOrderStatus\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.purchaseOrderStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonth\",\n      dataKey: \"data.yearMonth\",\n      title: \"Year / Month\",\n      header: \"Cost Invoices\",\n      width: columnWidth(\"data.yearMonth\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.yearMonth\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentType\",\n      dataKey: \"data.documentType\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentType\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentType\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDate\",\n      dataKey: \"data.postingDate\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.postingDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDate\",\n      dataKey: \"data.documentDate\",\n      title: \"Document Date\",\n      width: columnWidth(\"data.documentDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumber\",\n      dataKey: \"data.documentNumber\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumber\",\n      dataKey: \"data.invoiceNumber\",\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.invoiceNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccount\",\n      dataKey: \"data.costAccount\",\n      title: \"Cost Account\",\n      width: columnWidth(\"data.costAccount\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAccount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1\",\n      dataKey: \"data.name1\",\n      title: \"Name 1\",\n      width: columnWidth(\"data.name1\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.name1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.VendorNameCI\",\n      dataKey: \"data.VendorNameCI\",\n      title: \"Vendor Name\",\n      width: columnWidth(\"data.VendorNameCI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.VendorNameCI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLC\",\n      dataKey: \"data.costAmountLC\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLC\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#fff7f8\"\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.parentId === null\n              ? filteredSubmissions.reduce(\n                  (a, b) =>\n                    a +\n                    (b.parentId === props.rowData.id\n                      ? b.data.costAmountLC || 0\n                      : 0),\n                  0\n                )\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDC\",\n      dataKey: \"data.costAmountDC\",\n      title: \"Cost Amount (DC)\",\n      width: columnWidth(\"data.costAmountDC\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountDC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dc\",\n      dataKey: \"data.dc\",\n      title: \"DC\",\n      width: columnWidth(\"data.dc\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.dc\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEUR\",\n      dataKey: \"data.costAmountEUR\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#fff7f8\"\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.parentId === null\n              ? filteredSubmissions.reduce(\n                  (a, b) =>\n                    a +\n                    (b.parentId === props.rowData.id\n                      ? b.data.costAmountEUR || 0\n                      : 0),\n                  0\n                )\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costStatus\",\n      dataKey: \"data.costStatus\",\n      title: \"Cost Status\",\n      width: columnWidth(\"data.costStatus\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthSI\",\n      dataKey: \"data.yearMonthSI\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthSI\", 200),\n      header: \"Sales Invoices\",\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.yearMonthSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeSI\",\n      dataKey: \"data.documentTypeSI\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentTypeSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateSI\",\n      dataKey: \"data.postingDateSI\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.postingDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateSI\",\n      dataKey: \"data.documentDateSI\",\n      title: \"Document Date\",\n      width: columnWidth(\"data.documentDateSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberSI\",\n      dataKey: \"data.documentNumberSI\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumberSI\",\n      dataKey: \"data.invoiceNumberSI\",\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountSI\",\n      dataKey: \"data.incomeAccountSI\",\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAccountSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1SI\",\n      dataKey: \"data.name1SI\",\n      title: \"Name 1\",\n      width: columnWidth(\"data.name1SI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.name1SI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorNameSI\",\n      dataKey: \"data.vendorNameSI\",\n      title: \"Vendor Name\",\n      width: columnWidth(\"data.vendorNameSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.vendorNameSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCSI\",\n      dataKey: \"data.incomeAmountLCSI\",\n      title: \"Income Amount (LC)\",\n      width: columnWidth(\"data.incomeAmountLCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountLCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCSI\",\n      dataKey: \"data.incomeAmountDCSI\",\n      title: \"Income Amount (DC)\",\n      width: columnWidth(\"data.incomeAmountDCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountDCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcSI\",\n      dataKey: \"data.dcSI\",\n      title: \"DC\",\n      width: columnWidth(\"data.dcSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.dcSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEURSI\",\n      dataKey: \"data.incomeAmountEURSI\",\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEURSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountEURSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeStatusSI\",\n      dataKey: \"data.incomeStatusSI\",\n      title: \"Income Status\",\n      width: columnWidth(\"data.incomeStatusSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeStatusSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2f5fa\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthCostGL\",\n      dataKey: \"data.yearMonthCostGL\",\n      title: \"Year / Month\",\n      header: \"Cost GL Postings\",\n      width: columnWidth(\"data.yearMonthCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.yearMonthCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeCostGL\",\n      dataKey: \"data.documentTypeCostGL\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentTypeCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateCostGL\",\n      dataKey: \"data.postingDateCostGL\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.postingDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateCostGL\",\n      dataKey: \"data.documentDateCostGL\",\n      title: \"Document Date\",\n      width: columnWidth(\"data.documentDateCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberCostGL\",\n      dataKey: \"data.documentNumberCostGL\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.documentNumberCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccountCostGL\",\n      dataKey: \"data.costAccountCostGL\",\n      title: \"Cost Account\",\n      width: columnWidth(\"data.costAccountCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAccountCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLCCostGL\",\n      dataKey: \"data.costAmountLCCostGL\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLCCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountLCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDCCostGL\",\n      dataKey: \"data.costAmountDCCostGL\",\n      title: \"Cost Amount (DC)\",\n      width: columnWidth(\"data.costAmountDCCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountDCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcCostGL\",\n      dataKey: \"data.dcCostGL\",\n      title: \"DC\",\n      width: columnWidth(\"data.dcCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.dcCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEURCostGL\",\n      dataKey: \"data.costAmountEURCostGL\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEURCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.costAmountEURCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#fcfcfe\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthIncomeGL\",\n      dataKey: \"data.yearMonthIncomeGL\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthIncomeGL\", 200),\n      header: \"Income GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.yearMonthIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeIncomeGL\",\n      dataKey: \"data.documentTypeIncomeGL\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentTypeIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateIncomeGL\",\n      dataKey: \"data.postingDateIncomeGL\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.postingDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateIncomeGL\",\n      dataKey: \"data.documentDateIncomeGL\",\n      title: \"Document Date\",\n      width: columnWidth(\"data.documentDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberIncomeGL\",\n      dataKey: \"data.documentNumberIncomeGL\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentNumberIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountIncomeGL\",\n      dataKey: \"data.incomeAccountIncomeGL\",\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAccountIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCIncomeGL\",\n      dataKey: \"data.incomeAmountLCIncomeGL\",\n      title: \"Income Amount (LC)\",\n      width: columnWidth(\"data.incomeAmountLCIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountLCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCIncomeGL\",\n      dataKey: \"data.incomeAmountDCIncomeGL\",\n      title: \"Income Amount (DC)\",\n      width: columnWidth(\"data.incomeAmountDCIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountDCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcIncomeGL\",\n      dataKey: \"data.dcIncomeGL\",\n      title: \"DC\",\n      width: columnWidth(\"data.dcIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.dcIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEurIncomeGL\",\n      dataKey: \"data.incomeAmountEurIncomeGL\",\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEurIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountEurIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.resultLCPR\",\n      dataKey: \"data.resultLCPR\",\n      title: \"Result (LC)\",\n      header: \"Project Results\",\n      width: columnWidth(\"data.resultLCPR\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectResults\", \"data.resultLCPR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.resultEURPR\",\n      dataKey: \"data.resultEURPR\",\n      title: \"Result (EUR)\",\n      width: columnWidth(\"data.resultEURPR\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectResults\", \"data.resultEURPR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsInTool\",\n      dataKey: \"data.totalCostsInTool\",\n      title: \"Total Costs in Tool\",\n      header: \"Control Checks\",\n      width: columnWidth(\"data.totalCostsInTool\", 200),\n      resizable: true,\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsInTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.parentId === null\n              ? filteredSubmissions.reduce(\n                  (a, b) =>\n                    a +\n                    (b.parentId === props.rowData.id\n                      ? b.data.costAmountEUR ||\n                        0 + b.data.costAmountEURCostGL ||\n                        0\n                      : 0),\n                  0\n                )\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsInSAP\",\n      dataKey: \"data.totalCostsInSAP\",\n      title: \"Total Costs in SAP\",\n      width: columnWidth(\"data.totalCostsInSAP\", 200),\n      resizable: true,\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsInSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeInTool\",\n      dataKey: \"data.totalIncomeInTool\",\n      title: \"Total Income in Tool\",\n      width: columnWidth(\"data.totalIncomeInTool\", 200),\n      resizable: true,\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeInTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={numberWithCommas(\n            props.rowData.data.incomeAmountEURSI +\n              props.rowData.data.incomeAmountEurIncomeGL\n          )}\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeInSAP\",\n      dataKey: \"data.totalIncomeInSAP\",\n      title: \"Total Income in SAP\",\n      width: columnWidth(\"data.totalIncomeInSAP\", 200),\n      resizable: true,\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeInSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    ///\n\n    {\n      key: \"__actions.sap\",\n      dataKey: \"__actions.sap\",\n      title: \"SAP\",\n      width: columnWidth(\"__actions.sap\", 100),\n      resizable: true,\n      header: \"Actions\",\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"green\"}\n            onUpdate={callSap}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"create\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.edit\",\n      dataKey: \"__actions.edit\",\n      title: \"Edit\",\n      width: columnWidth(\"__actions.edit\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"yellow\"}\n            onUpdate={handleCellUpdate}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"edit\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.delete\",\n      dataKey: \"__actions.delete\",\n      title: \"Delete\",\n      width: columnWidth(\"__actions.delete\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"button\"}\n          textColor={\"red\"}\n          backgroundColor=\"#fef9fa\"\n          onUpdate={deleteSubmission}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\"delete\"}\n        />\n      ),\n    },\n  ];\n\n  const headerRendererForTable = useCallback(\n    (props: {\n      cells: ReactNode[];\n      columns: ColumnShape<{\n        [k: string]: string;\n      }>;\n      headerIndex: number;\n    }) => {\n      const { headerIndex, columns, cells } = props;\n      if (headerIndex === 0) {\n        return cells.map((cell, index) => {\n          var colorClass: string = \"\";\n          // switch (true) {\n          //   case index < 12:\n          //     colorClass = index === 0 ? \"\" : \"dark-green-3\";\n          //     break;\n          //   case index < 16:\n          //     colorClass = \"white\";\n          //     break;\n          //   case index < 31:\n          //     colorClass = \"white\";\n          //     break;\n          //   case index < 38:\n          //     colorClass = \"orange\";\n          //     break;\n          //   case index < 51:\n          //     colorClass = \"blue-2\";\n          //     break;\n          //   case index < 64:\n          //     colorClass = \"warm-gray\";\n          //     break;\n          //   case index < 67:\n          //     colorClass = \"yellow\";\n          //     break;\n          //   case index < 77:\n          //     colorClass = \"purple\";\n          //     break;\n          //   case index < 87:\n          //     colorClass = \"salmon\";\n          //     break;\n          //   default:\n          //     colorClass = \"red\";\n          //     break;\n          // }\n\n          return cloneElement(cell as ReactElement, {\n            className: \"BaseTable__header-cell \" + colorClass,\n            children: (\n              <span style={{ fontWeight: 650 }} key={index}>\n                {columns[index].header ? columns[index].header : \"\"}\n              </span>\n            ),\n          });\n        });\n      }\n      return cells;\n    },\n    []\n  );\n  return (\n    <div>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        p={4}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n        color={\"gray.500\"}\n      >\n        <Box mb={\"1em\"} w=\"100%\">\n          <Text mb=\"8px\">Displayed Columns</Text>\n          <CheckTreePicker\n            cleanable={false}\n            defaultExpandAll={false}\n            block\n            onChange={(value) => {\n              var values: string[] = [];\n              if (value.length < 1) {\n                values = [\n                  \"generalInformation\",\n                  \"purchaseOrder\",\n                  \"costActuals\",\n                  \"salesActuals\",\n                  \"actualsInEur\",\n                  \"costGlPostings\",\n                  \"incomeGlPostings\",\n                ];\n              } else {\n                value.forEach((v) => {\n                  values.push(v.toString());\n                });\n              }\n\n              localStorage.setItem(\n                \"vendors.displayedColumns\",\n                JSON.stringify(values)\n              );\n              setDisplayedColumns(values);\n            }}\n            value={displayedColumns}\n            data={DisplayedColumnsList}\n            placeholder=\"Groups\"\n            size=\"lg\"\n          />\n        </Box>\n        <Stack\n          mb={\"1em\"}\n          w=\"100%\"\n          spacing={\"2em\"}\n          direction={{ base: \"column\", lg: \"row\" }}\n        >\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Statuses</Text>\n            <TagPicker\n              cleanable\n              style={{\n                minHeight: \"40px\",\n                paddingTop: \"2px\",\n              }}\n              data={[]}\n              block\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Preset</Text>\n            <Select\n              menuPortalTarget={document.body}\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label: \"\",\n                value: \"\",\n              }}\n              onChange={(value: any) => {}}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"presets\"\n              options={[]}\n            />\n          </Box>\n        </Stack>\n        {/* <Box w=\"100%\" textAlign=\"right\">\n          <Button>Save</Button>\n        </Box> */}\n      </Box>\n      <Box\n        shadow=\"md\"\n        color=\"gray.600\"\n        backgroundColor=\"white\"\n        mb={10}\n        p={8}\n        pb={0}\n        rounded=\"md\"\n        w={\"100%\"}\n      >\n        <VStack spacing={8} fontSize=\"md\" align=\"stretch\" color={\"gray.500\"}>\n          <Box w={\"100%\"}>\n            <Box w={\"100%\"}>\n              {filters.map((filter, index) => {\n                var valuesField: JSX.Element = <div></div>;\n\n                switch (filter.type) {\n                  case \"text\":\n                    valuesField = (\n                      <Input\n                        onChange={(event) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues[0] = event.target.value;\n                          setFilters(temp);\n                        }}\n                        value={filter.selectedValues[0]}\n                      />\n                    );\n                    break;\n                  case \"number\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <NumberInput\n                            onChange={(_, value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues[0] = value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                            w=\"100%\"\n                          >\n                            <NumberInputField />\n                            <NumberInputStepper>\n                              <NumberIncrementStepper />\n                              <NumberDecrementStepper />\n                            </NumberInputStepper>\n                          </NumberInput>\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <Stack direction={{ base: \"column\", md: \"row\" }}>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[0] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[0]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                            <Box textAlign=\"center\" w=\"20px\">\n                              <ArrowForwardIcon\n                                alignSelf=\"center\"\n                                w={5}\n                                h=\"100%\"\n                              />\n                            </Box>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[1] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[1]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                          </Stack>\n                        );\n                        break;\n                    }\n                    break;\n                  case \"dropdown\":\n                  case \"multiple-dropdown\":\n                    valuesField = (\n                      <TagPicker\n                        cleanable\n                        style={{\n                          minHeight: \"40px\",\n                          paddingTop: \"2px\",\n                        }}\n                        onChange={(value) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues = value;\n                          setFilters(temp);\n                        }}\n                        data={loadOptions(filter.columnValue)}\n                        block\n                      />\n                    );\n                    break;\n                  case \"date\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <DateSingleInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onChange={(value) => {\n                              if (value !== filters[index].selectedValues[0]) {\n                                var temp = [...filters];\n                                temp[index].selectedValues = [value];\n                                setFilters(temp);\n                              }\n                            }}\n                          />\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onDatesChange={(value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues = [\n                                value.startDate,\n                                value.endDate,\n                              ];\n                              setFilters(temp);\n                            }}\n                          />\n                        );\n                        break;\n                    }\n                }\n\n                return (\n                  <Box\n                    w={\"100%\"}\n                    backgroundColor=\"white\"\n                    p={4}\n                    mb={5}\n                    border=\"1px\"\n                    rounded=\"md\"\n                    borderColor=\"gray.100\"\n                  >\n                    <CloseButton\n                      onClick={() => {\n                        var temp = [...filters];\n                        temp.splice(index, 1);\n                        setFilters(temp);\n                      }}\n                      float=\"right\"\n                    />\n                    <VStack\n                      mt={\"20px\"}\n                      spacing={8}\n                      fontSize=\"md\"\n                      align=\"stretch\"\n                      color={\"gray.500\"}\n                    >\n                      <Box>\n                        <Stack\n                          direction={{ base: \"column\", xl: \"row\" }}\n                          w=\"100%\"\n                          spacing={{ base: \"20px\", xl: \"50px\" }}\n                        >\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Column</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label: `${filter.columnLabel} (${filter.columnLabel})`,\n                                value: filter.columnValue,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].columnValue = value.value;\n                                temp[index].columnLabel = value.label;\n                                temp[index].type = value.type;\n                                temp[index].filter = \"exact\";\n                                var tv: any = [];\n                                switch (value.type) {\n                                  case \"text\":\n                                    tv = [\"\"];\n                                    break;\n                                  case \"number\":\n                                    if (temp[index].filter === \"exact\") {\n                                      tv = [0];\n                                    } else {\n                                      tv = [0, 0];\n                                    }\n                                    break;\n                                }\n                                temp[index].selectedValues = tv;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"color\"\n                              options={tableCells\n                                .filter((cell: any) => cell.dataKey[0] !== \"_\")\n                                .map((cell: any) => {\n                                  return {\n                                    label: `${cell.title}`,\n                                    value: cell.dataKey,\n                                    type: cell.type ? cell.type : \"text\",\n                                  };\n                                })}\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Type</Text>\n                            <Input\n                              onChange={() => {}}\n                              value={filter.type}\n                              readOnly\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Filter</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label:\n                                  filter.filter.charAt(0).toUpperCase() +\n                                  filter.filter.slice(1),\n                                value: filter.filter,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].filter = value.value;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"filter\"\n                              options={\n                                filterTypes[\n                                  filter.type as keyof typeof filterTypes\n                                ]\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Box>\n                      <Stack\n                        direction={{ base: \"column\", xl: \"row\" }}\n                        w=\"100%\"\n                        spacing={{ base: \"20px\", xl: \"50px\" }}\n                      >\n                        <Box w=\"100%\">\n                          <Text mb=\"8px\">Values</Text>\n                          {valuesField}\n                        </Box>\n                      </Stack>\n                    </VStack>\n                  </Box>\n                );\n              })}\n              <IconButton\n                onClick={() => {\n                  setFilters([\n                    ...filters,\n                    {\n                      columnValue: \"\",\n                      columnLabel: \"\",\n                      type: \"\",\n                      filter: \"exact\",\n                      values: [],\n                      selectedValues: [],\n                    } as FilterField,\n                  ]);\n                }}\n                my={5}\n                float=\"right\"\n                variant=\"outline\"\n                aria-label=\"add-port\"\n                icon={<BiPlusMedical />}\n              />\n            </Box>\n          </Box>\n        </VStack>\n      </Box>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        minH={\"85vh\"}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n      >\n        <AutoResizer\n          onResize={({ width, height }: { width: number; height: number }) => {\n            setTableWidth(width);\n          }}\n        >\n          {({ width, height }) => (\n            <BaseTable\n              scrollLeft={scrollLeft}\n              onScroll={onScroll}\n              onColumnResizeEnd={({\n                column,\n                width,\n              }: {\n                column: any;\n                width: number;\n              }) => {\n                handleResize(column.dataKey, width);\n              }}\n              rowRenderer={rowRenderer}\n              overscanRowCount={10}\n              ignoreFunctionInColumnCompare={false}\n              expandColumnKey={\"__expand\"}\n              width={width}\n              height={height}\n              fixed\n              columns={tableCells}\n              headerRenderer={headerRendererForTable}\n              headerClassName=\"header-cells\"\n              data={unflatten([...filteredSubmissions] as any[])}\n              rowKey=\"id\"\n              headerHeight={[50, 50]}\n              rowHeight={55}\n              overlayRenderer={\n                <div>\n                  <DebugOverlay hidden={debugOverlayHidden}>\n                    <Box h=\"40px\" w=\"100%\">\n                      <CloseButton\n                        onClick={() => {\n                          hideDebugOverlay(true);\n                        }}\n                        mr=\"-10px\"\n                        float=\"right\"\n                      />\n                    </Box>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Requested Heap Size:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        {heapInfo.total > 0\n                          ? bytesToSize(heapInfo.total)\n                          : \"none\"}\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Allocated Heap Size:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        {heapInfo.total > 0\n                          ? bytesToSize(heapInfo.allocated)\n                          : \"none\"}\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Active Heap Size:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        {heapInfo.total > 0\n                          ? bytesToSize(heapInfo.current)\n                          : \"none\"}\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        DOM Elements:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        {heapInfo.domSize}\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Virtualization:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        partial\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Table Mode:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        editable\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Avg FPS:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        {avgFps}\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        FPS:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        {fps[fps.length - 1]}\n                      </Text>\n                    </HStack>\n                    <Divider mt={\"10px\"} />\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Active Sessions:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        1\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Total Requests:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        {totalRequests}\n                      </Text>\n                    </HStack>\n                    <HStack spacing={0}>\n                      <Text w=\"120%\" float=\"left\">\n                        Sync Protocol:\n                      </Text>\n                      <Text w=\"80%\" textAlign=\"right\">\n                        HTTP\n                      </Text>\n                    </HStack>\n                    <VStack align=\"end\" mt=\"10px\">\n                      <Button\n                        float=\"right\"\n                        onClick={() => {\n                          RestAPI.updateVendorTableDefaultConfig(\n                            JSON.parse(\n                              localStorage.getItem(\n                                \"vendors.displayedColumns\"\n                              ) || \"[]\"\n                            ),\n                            JSON.parse(\n                              localStorage.getItem(\"vendors.columns\") || \"{}\"\n                            )\n                          );\n                        }}\n                        colorScheme=\"blue\"\n                      >\n                        update preset\n                      </Button>\n                      <Button\n                        float=\"left\"\n                        onClick={() => {\n                          localStorage.removeItem(\"vendors.displayedColumns\");\n                          localStorage.removeItem(\"vendors.columns\");\n                          window.location.reload();\n                        }}\n                        colorScheme=\"red\"\n                      >\n                        clear cache\n                      </Button>\n                    </VStack>\n                  </DebugOverlay>\n                </div>\n              }\n            ></BaseTable>\n          )}\n        </AutoResizer>\n      </Box>\n    </div>\n  );\n}\n\nexport default VendorsTable;\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Text,\n  Center,\n  Stack,\n  Heading,\n  Avatar,\n  Badge,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Dropdown from \"../types/dropdown\";\n\ninterface Props {\n  history: any;\n  dropdown: Dropdown;\n}\n\nexport default function DropdownCard(props: Props) {\n  return (\n    <Box\n      key={props.dropdown.id}\n      onClick={() => {\n        props.history.push(`/dropdowns/edit/${props.dropdown.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"360px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.dropdown.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.dropdown.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack\n        mt={\"45px\"}\n        direction={\"column\"}\n        textAlign=\"end\"\n        spacing={0}\n        fontSize={\"sm\"}\n        fontWeight={500}\n        color={\"gray.500\"}\n      >\n        <Text>\n          Total Records:{\" \"}\n          {props.dropdown.values !== null ? props.dropdown.values.length : 0}\n        </Text>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={moment(props.dropdown.created).format(\"DD.MM.YYYY HH:mm\")}\n        >\n          <Text>\n            Last Sync:{\" \"}\n            {props.dropdown.type === \"json\"\n              ? \"manual\"\n              : moment(props.dropdown.lastSync).fromNow()}\n          </Text>\n        </Tooltip>\n      </Stack>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport DropdownCard from \"../../components/DropdownCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [dropdowns, setDropdowns] = useState<Dropdown[]>([]);\n\n  useEffect(() => {\n    RestAPI.getDropdowns().then((response) => setDropdowns(response.data));\n  }, []);\n\n  return (\n    <div>\n      <Wrap justify=\"center\" spacing={{ base: \"40px\", lg: \"3em\" }}>\n        {(dropdowns !== null ? dropdowns : []).map((dropdown) => {\n          return (\n            <WrapItem>\n              <DropdownCard history={props.history} dropdown={dropdown} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import { useEffect } from \"react\";\nimport BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function ProjectInformationTable(gprops: any) {\n  useEffect(() => {});\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.country\",\n      dataKey: \"data.country\",\n      title: \"Country\",\n      width: 200,\n      resizable: true,\n      header: \"Project Information\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryShare\",\n      dataKey: \"data.countryShare\",\n      title: \"Country Share %\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryBudgetContributionEur\",\n      dataKey: \"data.countryBudgetContributionEur\",\n      title: \"Country Budget Contribution (EUR)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCostEstimationEur\",\n      dataKey: \"data.countryCostEstimationEur\",\n      title: \"Country Cost Estimation (EUR)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.manufacturerNumber\",\n      dataKey: \"data.manufacturerNumber\",\n      title: \"Manufacturer Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorName\",\n      dataKey: \"data.vendorName\",\n      title: \"Vendor Name\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.sapDebitorNumber\",\n      dataKey: \"data.sapDebitorNumber\",\n      title: \"SAP Debitor Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.sapCreditorNumber\",\n      dataKey: \"data.sapCreditorNumber\",\n      title: \"SAP Creditor Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.mdfLevel\",\n      dataKey: \"data.mdfLevel\",\n      title: \"MDF Level\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.budgetCurrency\",\n      dataKey: \"data.budgetCurrency\",\n      title: \"Budget Currency\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeBC\",\n      dataKey: \"data.estimatedIncomeBC\",\n      title: \"Estimated Income (Budget Currency)\",\n      width: 300,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsBC\",\n      dataKey: \"data.estimatedCostsBC\",\n      title: \"Estimated Costs (Budget Currency)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultBC\",\n      dataKey: \"data.estimatedResultBC\",\n      title: \"Estimated Result (Budget Currency)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeEur\",\n      dataKey: \"data.estimatedIncomeEur\",\n      title: \"Estimated Income (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsEur\",\n      dataKey: \"data.estimatedCostsEur\",\n      title: \"Estimated Costs (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultEur\",\n      dataKey: \"data.estimatedResultEur\",\n      title: \"Estimated Result (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorShare\",\n      dataKey: \"data.vendorShare\",\n      title: \"Vendor Share %\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.bu\",\n      dataKey: \"data.bu\",\n      title: \"Business Unit\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.ph1\",\n      dataKey: \"data.ph1\",\n      title: \"PH1\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignChannel\",\n      dataKey: \"data.campaignChannel\",\n      title: \"Campaign Channel\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.data.targetAudience\",\n      dataKey: \"data.targetAudience\",\n      title: \"Target Audience\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.marketingResponsible\",\n      dataKey: \"data.marketingResponsible\",\n      title: \"Marketing Responsible\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectApprover\",\n      dataKey: \"data.projectApprover\",\n      title: \"Project Approver\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalInformation\",\n      dataKey: \"data.additionalInformation\",\n      title: \"Additional Information\",\n      width: 300,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function PurchaseOrderTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.purchaseOrderServiceProvider\",\n      dataKey: \"data.purchaseOrderServiceProvider\",\n      title: \"Purchase Order Service Provider\",\n      width: 250,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueOfServiceOrderedLC\",\n      dataKey: \"data.netValueOfServiceOrderedLC\",\n      title: \"Net Value of Service Ordered (LC)\",\n      width: 250,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localCurrency\",\n      dataKey: \"data.localCurrency\",\n      title: \"Local Currency\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValuePOC\",\n      dataKey: \"data.netValuePOC\",\n      title: \"Net Value (Purchase Order Currency)\",\n      width: 300,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderCurrency\",\n      dataKey: \"data.purchaseOrderCurrency\",\n      title: \"Purchase Order Currency\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueEur\",\n      dataKey: \"data.netValueEur\",\n      title: \"Net Value (EUR)\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderStatus\",\n      dataKey: \"data.purchaseOrderStatus\",\n      title: \"Purchase Order Status\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function CostActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonth\",\n      dataKey: \"data.yearMonth\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentType\",\n      dataKey: \"data.documentType\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDate\",\n      dataKey: \"data.postingDate\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDate\",\n      dataKey: \"data.documentDate\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumber\",\n      dataKey: \"data.documentNumber\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumber\",\n      dataKey: \"data.invoiceNumber\",\n      title: \"Invoice Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccount\",\n      dataKey: \"data.costAccount\",\n      title: \"Cost Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1\",\n      dataKey: \"data.name1\",\n      title: \"Name 1\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLC\",\n      dataKey: \"data.costAmountLC\",\n      title: \"Cost Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDC\",\n      dataKey: \"data.costAmountDC\",\n      title: \"Cost Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dc\",\n      dataKey: \"data.dc\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costStatus\",\n      dataKey: \"data.costStatus\",\n      title: \"Cost Status\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function SalesActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthSA\",\n      dataKey: \"data.yearMonthSA\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeSA\",\n      dataKey: \"data.documentTypeSA\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateSA\",\n      dataKey: \"data.postingDateSA\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateSA\",\n      dataKey: \"data.documentDateSA\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberSA\",\n      dataKey: \"data.documentNumberSA\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumberSA\",\n      dataKey: \"data.invoiceNumberSA\",\n      title: \"Invoice Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountSA\",\n      dataKey: \"data.incomeAccountSA\",\n      title: \"Income Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1SA\",\n      dataKey: \"data.name1SA\",\n      title: \"Name 1\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLC\",\n      dataKey: \"data.incomeAmountLC\",\n      title: \"Income Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDC\",\n      dataKey: \"data.incomeAmountDC\",\n      title: \"Income Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeStatus\",\n      dataKey: \"data.incomeStatus\",\n      title: \"Income Status\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.actualResultLC\",\n      dataKey: \"data.actualResultLC\",\n      title: \"Actual Result (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function EurActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.incomeAmountEur\",\n      dataKey: \"data.incomeAmountEur\",\n      title: \"Income Amount (EUR)\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEur\",\n      dataKey: \"data.costAmountEur\",\n      title: \"Cost Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.actualResultEur\",\n      dataKey: \"data.actualResultEur\",\n      title: \"Actual Result (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function CostGlPostingsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthCostGL\",\n      dataKey: \"data.yearMonthCostGL\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeCostGL\",\n      dataKey: \"data.documentTypeCostGL\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateCostGL\",\n      dataKey: \"data.postingDateCostGL\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateCostGL\",\n      dataKey: \"data.documentDateCostGL\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberCostGL\",\n      dataKey: \"data.documentNumberCostGL\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccountCostGL\",\n      dataKey: \"data.costAccountCostGL\",\n      title: \"Cost Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLCCostGL\",\n      dataKey: \"data.costAmountLCCostGL\",\n      title: \"Cost Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDCCostGL\",\n      dataKey: \"data.costAmountDCCostGL\",\n      title: \"Cost Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcCostGL\",\n      dataKey: \"data.dcCostGL\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEurCostGL\",\n      dataKey: \"data.costAmountEurCostGL\",\n      title: \"Cost Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function IncomeGlPostingsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthIncomeGL\",\n      dataKey: \"data.yearMonthIncomeGL\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeIncomeGL\",\n      dataKey: \"data.documentTypeIncomeGL\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateIncomeGL\",\n      dataKey: \"data.postingDateIncomeGL\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateIncomeGL\",\n      dataKey: \"data.documentDateIncomeGL\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberIncomeGL\",\n      dataKey: \"data.documentNumberIncomeGL\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountIncomeGL\",\n      dataKey: \"data.incomeAccountIncomeGL\",\n      title: \"Income Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCIncomeGL\",\n      dataKey: \"data.incomeAmountLCIncomeGL\",\n      title: \"Income Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCIncomeGL\",\n      dataKey: \"data.incomeAmountDCIncomeGL\",\n      title: \"Income Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcIncomeGL\",\n      dataKey: \"data.dcIncomeGL\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEurIncomeGL\",\n      dataKey: \"data.incomeAmountEurIncomeGL\",\n      title: \"Income Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Button,\n  HStack,\n  Input,\n  Tooltip,\n  Text,\n  useColorModeValue,\n  Divider,\n  IconButton,\n  Stack,\n  VStack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  CloseButton,\n  MenuButton,\n  Menu,\n  MenuList,\n  MenuItem,\n  TabList,\n  Tabs,\n  Tab,\n  TabPanels,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport {\n  cloneElement,\n  createRef,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport { FpsView, useFps } from \"react-fps\";\nimport Select from \"react-select\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { createGlobalStyle } from \"styled-components\";\nimport styled from \"styled-components\";\nimport { Overlay } from \"react-overlays\";\nimport DatePicker from \"react-datepicker\";\nimport Toast from \"../../components/Toast\";\n\nimport BaseTable, {\n  AutoResizer,\n  Column,\n  ColumnShape,\n  unflatten,\n} from \"react-base-table\";\nimport ContentEditable from \"react-contenteditable\";\nimport \"react-base-table/styles.css\";\nimport { RestAPI } from \"../../api/rest\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { ArrowForwardIcon, SearchIcon } from \"@chakra-ui/icons\";\nimport { BiPlusMedical, VscDebugRerun, VscDebugStart } from \"react-icons/all\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { CheckTreePicker, TagPicker } from \"rsuite\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport EditableTableCell from \"../../components/EditableTableCell\";\nimport { ProjectInformationTable } from \"./Tables/ProjectInformation\";\nimport { PurchaseOrderTable } from \"./Tables/PurchaseOrder\";\nimport { CostActualsTable } from \"./Tables/CostActuals\";\nimport { SalesActualsTable } from \"./Tables/SalesActuals\";\nimport { EurActualsTable } from \"./Tables/EurActuals\";\nimport { CostGlPostingsTable } from \"./Tables/CostGlPostings\";\nimport { IncomeGlPostingsTable } from \"./Tables/IncomeGlPostings\";\n\ninterface Props {\n  history: any;\n}\n\nvar ProjectType: any[] = [];\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\nvar SapStatus: any[] = [\n  { label: \"Created\", value: \"created\" },\n  { label: \"None\", value: \"none\" },\n];\n\nasync function fetchDropdowns() {\n  var dropdownsIds: string[] = [\n    \"619b630a9a5a2bb37a93b23b\",\n    \"619b61419a5a2bb37a93b237\",\n    \"619b63429a5a2bb37a93b23d\",\n    \"619b62d79a5a2bb37a93b239\",\n    \"619b632c9a5a2bb37a93b23c\",\n    \"619b62959a5a2bb37a93b238\",\n    \"619b62f29a5a2bb37a93b23a\",\n    \"619b66defe27d06ad17d75ac\",\n    \"619b6754fe27d06ad17d75ad\",\n    \"619b6799fe27d06ad17d75ae\",\n    \"619b7b9efe27d06ad17d75af\",\n  ];\n  var responses = await Promise.all(\n    dropdownsIds.map((di) => {\n      return RestAPI.getDropdownValues(di);\n    })\n  );\n  PH1 = responses[0].data;\n  Companies = responses[1].data;\n  VendorsNames = responses[2].data;\n  CampaignChannel = responses[3].data;\n  TargetAudience = responses[4].data;\n  Budget = responses[5].data;\n  ExchangeRates = responses[6].data;\n  FiscalQuarter = responses[7].data;\n  Year = responses[8].data;\n  ProjectStartQuarter = responses[9].data;\n  ProjectType = responses[10].data;\n}\n\nconst loadOptions = (identifier: string) => {\n  switch (identifier) {\n    case \"data.projectType\":\n      return ProjectType;\n    case \"data.ph1\":\n      return PH1;\n    case \"data.campaignChannel\":\n      return CampaignChannel;\n    case \"data.targetAudience\":\n      return TargetAudience;\n    case \"data.budgetCurrency\":\n      return ExchangeRates;\n    case \"data.sapStatus\":\n      return SapStatus;\n  }\n  return [];\n};\n\ninterface FilterField {\n  columnValue: string;\n  columnLabel: string;\n  type: string;\n  filter: string;\n  values: any[];\n  selectedValues: any[];\n}\nconst filterTypes = {\n  text: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  dropdown: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  \"multiple-dropdown\": [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  date: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n};\n\nexport function SVendorsTable(props: Props) {\n  const [selectedSubmission, setSelectedSubmission] = useState<null | string>(\n    null\n  );\n  const [filters, setFilters] = useState<FilterField[]>([]);\n\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<Submission[]>(\n    []\n  );\n\n  const [totalRequests, setTotalRequests] = useState(1);\n\n  useEffect(() => {\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [forceUpdateCount, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    var filtered: Submission[] = [];\n    if (filters.length > 0 && submissions.length > 0) {\n      submissions.map((submission) => {\n        var valid = true;\n        filters.map((filter) => {\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"text\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    filter.selectedValues.map((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          filtered.push(submission);\n        }\n      });\n      setFilteredSubmissions(filtered);\n    } else {\n      setFilteredSubmissions([...submissions]);\n    }\n  }, [filters, submissions]);\n\n  async function partialUpdate(submission: string, path: string, value: any) {\n    setTotalRequests(totalRequests + 1);\n    if (path.includes(\"[\")) {\n      var s = path.split(\".\");\n      s.shift();\n      path = s.join(\".\");\n    }\n    RestAPI.updateSubmissionPartial(submission, path, value);\n  }\n\n  function handleCellUpdate(submission: string, path: string, value: any) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submission);\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n      if (_.get(submissions, path) !== value) {\n        _.set(submissions, path, value);\n        partialUpdate(submission, path, value);\n      }\n    }\n  }\n  function deleteSubmission(submissionId: string) {\n    var tbd: string[] = [submissionId];\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp.splice(submissionIndex, 1);\n      temp.map((s, index) => {\n        if (s.parentId !== null && s.parentId === submissionId) {\n          if (s.id) {\n            temp.splice(index, 1);\n            tbd.push(s.id);\n          }\n        }\n      });\n      setSubmissions(temp);\n      tbd.forEach((ds) => {\n        RestAPI.deleteSubmission(ds);\n      });\n    }\n  }\n\n  useEffect(() => {\n    RestAPI.getSubmissions().then((response) => {\n      var vSubs: Submission[] = [];\n      var subs = response.data;\n      subs.map((sub) => {\n        if (sub.project === \"619515b754e61c8dd33daa52\") {\n          vSubs.push(sub);\n        }\n      });\n      setSubmissions(vSubs);\n      setFilteredSubmissions(vSubs);\n    });\n  }, []);\n\n  const tableCells = [\n    {\n      key: \"data.companyName\",\n      dataKey: \"data.companyName\",\n      title: \"Company Name\",\n      width: 200,\n      resizable: true,\n      header: \"General Information\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.companyCode\",\n      dataKey: \"data.companyCode\",\n      title: \"Company Code\",\n      width: 150,\n      resizable: true,\n      type: \"number\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectNumber\",\n      dataKey: \"data.projectNumber\",\n      title: \"Project Number\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectName\",\n      dataKey: \"data.projectName\",\n      title: \"Project Name\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignStartDate\",\n      dataKey: \"data.campaignStartDate\",\n      title: \"Campaign Start Date\",\n      width: 200,\n      resizable: true,\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectType\",\n      dataKey: \"data.projectType\",\n      title: \"Project Type\",\n      width: 250,\n      resizable: true,\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"__summary.countries\",\n      dataKey: \"__summary.countries\",\n      title: \"Countries\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"tags\"}\n          readonly\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          textColor=\"red\"\n          initialValue={submissions.map((submission) => {\n            if (submission.parentId === props.rowData.id) {\n              return submission.data.country;\n            }\n          })}\n        />\n      ),\n    },\n    {\n      key: \"__summary.vendors\",\n      dataKey: \"__summary.vendors\",\n      title: \"Vendors\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"tags\"}\n          readonly\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          textColor=\"blue\"\n          initialValue={submissions.map((submission) => {\n            if (submission.parentId === props.rowData.id) {\n              return submission.data.vendorName;\n            }\n          })}\n        />\n      ),\n    },\n    {\n      key: \"__actions.view\",\n      dataKey: \"__actions.view\",\n      title: \"View\",\n      width: 100,\n      resizable: true,\n      header: \"Actions\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            textColor={\"blue\"}\n            onUpdate={(submission: string) => {\n              setSelectedSubmission(submission);\n            }}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"view\"}\n          />\n        ) : null,\n    },\n    {\n      key: \"__actions.delete\",\n      dataKey: \"__actions.delete\",\n      title: \"Delete\",\n      width: 100,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"button\"}\n          textColor={\"red\"}\n          onUpdate={deleteSubmission}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\"delete\"}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        minH={\"85vh\"}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n        p={\"20px\"}\n      >\n        <Tabs isLazy variant=\"enclosed\" w={\"100%\"}>\n          <TabList align=\"start\">\n            <Tab>General Information</Tab>\n            <Tab hidden={selectedSubmission === null}>Project Information</Tab>\n            <Tab hidden={selectedSubmission === null}>Purchase Order</Tab>\n            <Tab hidden={selectedSubmission === null}>Cost Actuals</Tab>\n            <Tab hidden={selectedSubmission === null}>Sales Actuals</Tab>\n            <Tab hidden={selectedSubmission === null}>Actuals in EUR</Tab>\n            <Tab hidden={selectedSubmission === null}>Cost GL Postings</Tab>\n            <Tab hidden={selectedSubmission === null}>Income GL Postings</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer>\n                {({ width, height }) => (\n                  <BaseTable\n                    ignoreFunctionInColumnCompare={false}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={tableCells}\n                    headerClassName=\"header-cells\"\n                    data={unflatten([...filteredSubmissions] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={50}\n                    rowHeight={55}\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <ProjectInformationTable\n                submissions={\n                  [\n                    ...filteredSubmissions.filter((s) => {\n                      return (\n                        s.id === selectedSubmission ||\n                        (s.parentId === selectedSubmission &&\n                          s.group === \"projectInformation\")\n                      );\n                    }),\n                  ] as any[]\n                }\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <PurchaseOrderTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"puchaseOrder\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <CostActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"costActuals\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <SalesActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"salesActuals\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <EurActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"actualsInEur\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <CostGlPostingsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"costGlPostings\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <IncomeGlPostingsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"incomeGlPostings\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n      {/* <Box\n        shadow=\"md\"\n        color=\"gray.600\"\n        backgroundColor=\"white\"\n        mb={10}\n        p={8}\n        pb={0}\n        rounded=\"md\"\n        w={\"100%\"}\n      >\n        <VStack spacing={8} fontSize=\"md\" align=\"stretch\" color={\"gray.500\"}>\n          <Box w={\"100%\"}>\n            <Box w={\"100%\"}>\n              {filters.map((filter, index) => {\n                var valuesField: JSX.Element = <div></div>;\n\n                switch (filter.type) {\n                  case \"text\":\n                    valuesField = (\n                      <Input\n                        onChange={(event) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues[0] = event.target.value;\n                          setFilters(temp);\n                        }}\n                        value={filter.selectedValues[0]}\n                      />\n                    );\n                    break;\n                  case \"number\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <NumberInput\n                            onChange={(vstring, value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues[0] = value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                            w=\"100%\"\n                          >\n                            <NumberInputField />\n                            <NumberInputStepper>\n                              <NumberIncrementStepper />\n                              <NumberDecrementStepper />\n                            </NumberInputStepper>\n                          </NumberInput>\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <Stack direction={{ base: \"column\", md: \"row\" }}>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(vstring, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[0] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[0]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                            <Box textAlign=\"center\" w=\"20px\">\n                              <ArrowForwardIcon\n                                alignSelf=\"center\"\n                                w={5}\n                                h=\"100%\"\n                              />\n                            </Box>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(vstring, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[1] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[1]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                          </Stack>\n                        );\n                        break;\n                    }\n                    break;\n                  case \"dropdown\":\n                  case \"multiple-dropdown\":\n                    valuesField = (\n                      <TagPicker\n                        cleanable\n                        style={{\n                          minHeight: \"40px\",\n                          paddingTop: \"2px\",\n                        }}\n                        onChange={(value) => {\n                          console.log(value);\n                          var temp = [...filters];\n                          temp[index].selectedValues = value;\n                          setFilters(temp);\n                        }}\n                        data={loadOptions(filter.columnValue)}\n                        block\n                      />\n                    );\n                    break;\n                  case \"date\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <DateSingleInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onChange={(value) => {\n                              if (value !== filters[index].selectedValues[0]) {\n                                var temp = [...filters];\n                                temp[index].selectedValues = [value];\n                                setFilters(temp);\n                              }\n                            }}\n                          />\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onDatesChange={(value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues = [\n                                value.startDate,\n                                value.endDate,\n                              ];\n                              setFilters(temp);\n                            }}\n                          />\n                        );\n                        break;\n                    }\n                }\n\n                return (\n                  <Box\n                    w={\"100%\"}\n                    backgroundColor=\"white\"\n                    p={4}\n                    mb={5}\n                    border=\"1px\"\n                    rounded=\"md\"\n                    borderColor=\"gray.100\"\n                  >\n                    <CloseButton\n                      onClick={() => {\n                        var temp = [...filters];\n                        temp.splice(index, 1);\n                        setFilters(temp);\n                      }}\n                      float=\"right\"\n                    />\n                    <VStack\n                      mt={\"20px\"}\n                      spacing={8}\n                      fontSize=\"md\"\n                      align=\"stretch\"\n                      color={\"gray.500\"}\n                    >\n                      <Box>\n                        <Stack\n                          direction={{ base: \"column\", xl: \"row\" }}\n                          w=\"100%\"\n                          spacing={{ base: \"20px\", xl: \"50px\" }}\n                        >\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Column</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label: filter.columnLabel,\n                                value: filter.columnValue,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].columnValue = value.value;\n                                temp[index].columnLabel = value.label;\n                                temp[index].type = value.type;\n                                temp[index].filter = \"exact\";\n                                var tv: any = [];\n                                switch (value.type) {\n                                  case \"text\":\n                                    tv = [\"\"];\n                                    break;\n                                  case \"number\":\n                                    if (temp[index].filter === \"exact\") {\n                                      tv = [0];\n                                    } else {\n                                      tv = [0, 0];\n                                    }\n                                    break;\n                                }\n                                temp[index].selectedValues = tv;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"color\"\n                              options={tableCells\n                                .filter((cell: any) => cell.dataKey[0] !== \"_\")\n                                .map((cell: any) => {\n                                  return {\n                                    label: cell.title,\n                                    value: cell.dataKey,\n                                    type: cell.type ? cell.type : \"text\",\n                                  };\n                                })}\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Type</Text>\n                            <Input\n                              onChange={() => {}}\n                              value={filter.type}\n                              readOnly\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Filter</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label:\n                                  filter.filter.charAt(0).toUpperCase() +\n                                  filter.filter.slice(1),\n                                value: filter.filter,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].filter = value.value;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"filter\"\n                              options={\n                                filterTypes[\n                                  filter.type as keyof typeof filterTypes\n                                ]\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Box>\n                      <Stack\n                        direction={{ base: \"column\", xl: \"row\" }}\n                        w=\"100%\"\n                        spacing={{ base: \"20px\", xl: \"50px\" }}\n                      >\n                        <Box w=\"100%\">\n                          <Text mb=\"8px\">Values</Text>\n                          {valuesField}\n                        </Box>\n                      </Stack>\n                    </VStack>\n                  </Box>\n                );\n              })}\n              <IconButton\n                onClick={() => {\n                  setFilters([\n                    ...filters,\n                    {\n                      columnValue: \"\",\n                      columnLabel: \"\",\n                      type: \"\",\n                      filter: \"exact\",\n                      values: [],\n                      selectedValues: [],\n                    } as FilterField,\n                  ]);\n                }}\n                my={5}\n                float=\"right\"\n                variant=\"outline\"\n                aria-label=\"add-port\"\n                icon={<BiPlusMedical />}\n              />\n            </Box>\n          </Box>\n        </VStack>\n      </Box> */}\n    </div>\n  );\n}\n\nexport default SVendorsTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\n\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\nimport { CustomNavigationClient } from \"./utils/NavigationClient\";\n\nimport { Explorer } from \"./pages/Explorer\";\nimport { Profile } from \"./pages/Profile\";\nimport Layout from \"./components/Layout\";\nimport Dashboard from \"./pages/Dashboard\";\n\nimport ProjectExplorer from \"./pages/Projects/Explorer\";\nimport ProjectEditor from \"./pages/Projects/Editor\";\nimport ProjectViewer from \"./pages/Projects/Viewer\";\n\nimport SubmissionsTableExplorer from \"./pages/Submissions/TableExplorer\";\n\nimport VendorsTable from \"./pages/Submissions/Vendors\";\n\nimport DropdownExplorer from \"./pages/Dropdowns/Explorer\";\nimport DropdownEditor from \"./pages/Dropdowns/Editor\";\nimport { RestAPI } from \"./api/rest\";\nimport { ToastContainer, Slide } from \"react-toastify\";\nimport SVendorsTable from \"./pages/Submissions/SVendors\";\n\ntype AppProps = {\n  pca: IPublicClientApplication;\n};\n\nfunction App({ pca }: AppProps) {\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  const [isAdmin, setAdminRole] = useState(false);\n  pca.setNavigationClient(navigationClient);\n\n  useEffect(() => {\n    RestAPI.getRoles().then((response) =>\n      setAdminRole(response.data.includes(\"administrator\"))\n    );\n  }, []);\n\n  return (\n    <MsalProvider instance={pca}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={true}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        closeButton={false}\n        transition={Slide}\n      />\n      <Switch>\n        <Layout>\n          {/* <Route exact path=\"/\" component={Dashboard} /> */}\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => <ProjectExplorer isAdmin={isAdmin} {...props} />}\n          />\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/explorer\">\n            <Explorer />\n          </Route>\n          <Route\n            exact\n            path=\"/projects\"\n            render={(props) => <ProjectExplorer isAdmin={isAdmin} {...props} />}\n          />\n          <Route\n            path=\"/projects/create\"\n            render={(props) => <ProjectEditor create={true} {...props} />}\n          />\n          <Route\n            path=\"/projects/edit/:id\"\n            render={(props) => <ProjectEditor create={false} {...props} />}\n          />\n          <Route\n            path=\"/projects/view/:id\"\n            render={(props) => (\n              <ProjectViewer isAdmin={isAdmin} create={false} {...props} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/submissions\"\n            render={(props) => <SubmissionsTableExplorer {...props} />}\n          />\n          <Route\n            exact\n            path=\"/vendors\"\n            render={(props) => <VendorsTable {...props} />}\n          />\n          <Route\n            exact\n            path=\"/vendors/new\"\n            render={(props) => <SVendorsTable {...props} />}\n          />\n          <Route\n            exact\n            path=\"/dropdowns\"\n            render={(props) => (\n              <DropdownExplorer isAdmin={isAdmin} {...props} />\n            )}\n          />\n          <Route\n            path=\"/dropdowns/create\"\n            render={(props) => <DropdownEditor create={true} {...props} />}\n          />\n          <Route\n            path=\"/dropdowns/edit/:id\"\n            render={(props) => <DropdownEditor create={false} {...props} />}\n          />\n        </Layout>\n      </Switch>\n    </MsalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport \"focus-visible/dist/focus-visible\";\nimport { Global, css } from \"@emotion/react\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\n\n// MSAL imports\nimport {\n  PublicClientApplication,\n  EventType,\n  EventMessage,\n  AuthenticationResult,\n} from \"@azure/msal-browser\";\nimport { loginRequest, msalConfig } from \"./authConfig\";\n\nconst GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus    via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\n// Account selection logic is app dependent. Adjust as needed for different use cases.\nconst accounts = msalInstance.getAllAccounts();\nif (accounts.length > 0) {\n  msalInstance.setActiveAccount(accounts[0]);\n}\n\nmsalInstance.addEventCallback((event: EventMessage) => {\n  if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n    const payload = event.payload as AuthenticationResult;\n    const account = payload.account;\n    msalInstance.setActiveAccount(account);\n  }\n});\n\naxios.interceptors.request.use(async (config: any) => {\n  const account = msalInstance.getActiveAccount();\n  if (account) {\n    const response = await msalInstance.acquireTokenSilent({\n      ...loginRequest,\n      account: account,\n    });\n    config.headers.Authorization = `Bearer ${response.idToken}`;\n  }\n  return config;\n});\n\nReactDOM.render(\n  <ChakraProvider\n    theme={extendTheme({\n      styles: {\n        global: (props: any) => ({\n          body: {\n            bg: mode(\"#f7fafc\", \"#282C34\")(props),\n            color: mode(\"gray.800\", \"#ABB2BF\")(props),\n          },\n        }),\n      },\n    })}\n  >\n    <Global styles={GlobalStyles} />\n    <Router>\n      {/* <ColorModeProvider options={{ initialColorMode: \"dark\" }}> */}\n      <App pca={msalInstance} />\n      {/* </ColorModeProvider> */}\n    </Router>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n","import { Box, chakra, Flex, Icon, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {\n  AiFillInfoCircle,\n  BsLightningFill,\n  IoMdCheckmarkCircle,\n  MdError,\n} from \"react-icons/all\";\n\nexport declare type ToastType = \"info\" | \"success\" | \"warning\" | \"error\";\n\ninterface Props {\n  title: string;\n  message: any;\n  type: ToastType;\n}\n\nconst Toast: React.FunctionComponent<Props> = (props) => {\n  return (\n    <Flex\n      w=\"350px\"\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      shadow=\"md\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n    >\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        w={12}\n        bg={\n          props.type === \"success\"\n            ? \"green.500\"\n            : props.type === \"error\"\n            ? \"red.500\"\n            : props.type === \"warning\"\n            ? \"yellow.500\"\n            : \"blue.500\"\n        }\n      >\n        <Icon\n          as={\n            props.type === \"success\"\n              ? IoMdCheckmarkCircle\n              : props.type === \"error\"\n              ? BsLightningFill\n              : props.type === \"warning\"\n              ? MdError\n              : AiFillInfoCircle\n          }\n          color=\"white\"\n          boxSize={6}\n        />\n      </Flex>\n\n      <Box mx={-3} py={2} px={4}>\n        <Box mx={3}>\n          <chakra.span\n            color={\n              props.type === \"success\"\n                ? \"green.500\"\n                : props.type === \"error\"\n                ? \"red.500\"\n                : props.type === \"warning\"\n                ? \"yellow.500\"\n                : \"blue.500\"\n            }\n            fontWeight=\"bold\"\n            fontSize=\"md\"\n          >\n            {props.title}\n          </chakra.span>\n          <chakra.div color={\"gray.600\"} fontSize=\"sm\">\n            {props.message}\n          </chakra.div>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Toast;\n","import axios, { AxiosResponse } from \"axios\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\n\nexport class API {\n  public baseUrl =\n    process.env.NODE_ENV === \"production\"\n      ? \"/api\"\n      : \"http://localhost:7000/api\";\n  public usersUrl = `${this.baseUrl}/users/`;\n  public projectsUrl = `${this.baseUrl}/projects/`;\n  public bookmarksUrl = `${this.baseUrl}/bookmarks/`;\n  public submissionsUrl = `${this.baseUrl}/submissions/`;\n  public dropdownsUrl = `${this.baseUrl}/dropdowns/`;\n\n  getRoles(): Promise<AxiosResponse<string[]>> {\n    return axios.get(`${this.usersUrl}roles`);\n  }\n  getProjects(): Promise<AxiosResponse<Project[]>> {\n    return axios.get<Project[]>(this.projectsUrl);\n  }\n  getProject(id: string): Promise<AxiosResponse<Project>> {\n    return axios.get<Project>(`${this.projectsUrl}${id}`);\n  }\n  createProject(project: Project): Promise<AxiosResponse<Project>> {\n    return axios.post<Project>(`${this.projectsUrl}`, JSON.stringify(project));\n  }\n  updateProject(project: Project): Promise<AxiosResponse> {\n    return axios.put<Project>(\n      `${this.projectsUrl}${project.id}`,\n      JSON.stringify(project)\n    );\n  }\n  deleteProject(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.projectsUrl}${id}`);\n  }\n\n  getBookmarks(): Promise<AxiosResponse<Bookmark[]>> {\n    return axios.get<Bookmark[]>(this.bookmarksUrl);\n  }\n  createBookmark(bookmark: Bookmark): Promise<AxiosResponse<Bookmark>> {\n    return axios.post<Bookmark>(this.bookmarksUrl, JSON.stringify(bookmark));\n  }\n  deleteBookmark(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.bookmarksUrl}${id}`);\n  }\n\n  getSubmissions(project?: string): Promise<AxiosResponse<Submission[]>> {\n    const params = new URLSearchParams([]);\n    if (project) {\n      params.set(\"project\", project);\n    }\n    return axios.get<Submission[]>(this.submissionsUrl, { params });\n  }\n  getSubmission(id: string): Promise<AxiosResponse<Submission>> {\n    return axios.get<Submission>(`${this.submissionsUrl}${id}`);\n  }\n  createSubmission(submission: Submission): Promise<AxiosResponse<Submission>> {\n    return axios.post<Submission>(\n      `${this.submissionsUrl}`,\n      JSON.stringify(submission)\n    );\n  }\n  createSubmissionWithChildren(\n    submission: SubmissionWithChildren\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}children`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmission(submission: Submission): Promise<AxiosResponse> {\n    return axios.put<Submission>(\n      `${this.submissionsUrl}${submission.id}`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmissionPartial(\n    submission: string,\n    path: string,\n    value: any\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}partial`,\n      JSON.stringify({\n        submission,\n        path,\n        value,\n      })\n    );\n  }\n  callSapSubmission(submission: string): Promise<AxiosResponse> {\n    return axios.get(`${this.submissionsUrl}${submission}/sap`);\n  }\n  deleteSubmission(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.submissionsUrl}${id}`);\n  }\n\n  getDropdowns(): Promise<AxiosResponse<Dropdown[]>> {\n    return axios.get<Dropdown[]>(this.dropdownsUrl);\n  }\n  getDropdown(id: string): Promise<AxiosResponse<Dropdown>> {\n    return axios.get<Dropdown>(`${this.dropdownsUrl}${id}`);\n  }\n  getDropdownValues(id: string): Promise<AxiosResponse<any[]>> {\n    return axios.get<any[]>(`${this.dropdownsUrl}${id}/values`);\n  }\n  syncDropdown(id: string): Promise<AxiosResponse> {\n    return axios.get(`${this.dropdownsUrl}sync/${id}`);\n  }\n  createDropdown(dropdown: Dropdown): Promise<AxiosResponse<Dropdown>> {\n    return axios.post<Dropdown>(\n      `${this.dropdownsUrl}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  updateDropdown(dropdown: Dropdown): Promise<AxiosResponse> {\n    return axios.put<Dropdown>(\n      `${this.dropdownsUrl}${dropdown.id}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  deleteDropdown(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.dropdownsUrl}${id}`);\n  }\n\n  getVendorTableDefaultConfig(): Promise<AxiosResponse<any>> {\n    return axios.get<any>(`${this.submissionsUrl}vendorTable`);\n  }\n\n  updateVendorTableDefaultConfig(\n    displayedColumns: string[],\n    columnsWidth: any\n  ): Promise<AxiosResponse> {\n    return axios.put<any>(\n      `${this.submissionsUrl}vendorTable`,\n      JSON.stringify({\n        displayedColumns: displayedColumns,\n        columnsWidth: columnsWidth,\n      })\n    );\n  }\n\n  getEntityIdFromUrl(url: string): number {\n    const urlSegments = url.split(\"/\").filter((x) => x !== \"\");\n    return parseInt(urlSegments[urlSegments.length - 1]);\n  }\n}\n\nexport const RestAPI = new API();\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Center,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2, VscDebugStart } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/snippets/javascript\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport Dropdown from \"../../types/dropdown\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [debug, setDebug] = useState(\"\");\n  const [rawValues, setRawValues] = useState(\"\");\n  const [dropdown, setDropdown] = useState<Dropdown>({\n    title: \"\",\n    created: new Date(),\n    description: \"\",\n    type: \"js\",\n    url: \"\",\n    processor: \"\",\n    values: [] as any[],\n    syncInterval: 60,\n    lastSync: new Date(),\n    private: false,\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getDropdown(props.match.params.id).then((response) => {\n        setDropdown(response.data);\n        setRawValues(JSON.stringify(response.data.values, null, 2));\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={dropdown.title}\n              onChange={(event) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              placeholder=\"\"\n              onChange={(value: any) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              value={{ label: dropdown.type, value: dropdown.type }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"dropdownType\"\n              options={[\n                { label: \"js\", value: \"js\" },\n                { label: \"json\", value: \"json\" },\n              ]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Sync Interval (minutes)</Text>\n            <NumberInput\n              value={dropdown.syncInterval}\n              onChange={(_, value) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  syncInterval: value,\n                }));\n              }}\n              min={5}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={dropdown.description}\n            onChange={(event) => {\n              setDropdown((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      <Box mb={5} display={dropdown.type === \"json\" ? \"flex\" : \"none\"} w=\"100%\">\n        <AceEditor\n          width=\"100%\"\n          height=\"900px\"\n          style={{\n            borderRadius: \"5px\",\n          }}\n          mode=\"json\"\n          theme=\"tomorrow\"\n          name=\"json-editor\"\n          onChange={(value) => {\n            setRawValues(value);\n          }}\n          fontSize={14}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={rawValues}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            showLineNumbers: true,\n            tabSize: 2,\n          }}\n        />\n      </Box>\n      <Stack\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        spacing={4}\n        mb={4}\n        direction={{ base: \"column\", xl: \"row\" }}\n      >\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"javascript\"\n            theme=\"tomorrow\"\n            name=\"js-editor\"\n            onChange={(value) => {\n              setDropdown((prev) => ({\n                ...prev,\n                processor: value,\n              }));\n            }}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            value={dropdown.processor}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"json\"\n            theme=\"tomorrow\"\n            name=\"console\"\n            fontSize={12}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={debug}\n            readOnly={true}\n            setOptions={{\n              tabSize: 2,\n            }}\n          />\n        </Box>\n      </Stack>\n      <Center\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        mt={\"10px\"}\n        mb=\"60px\"\n        h=\"60px\"\n        w=\"100%\"\n      >\n        <IconButton\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          aria-label=\"Debug\"\n          icon={<VscDebugStart />}\n          onClick={async () => {\n            setDebug(\"\");\n            var result = eval(dropdown.processor);\n            if (typeof result === \"object\") {\n              setDebug(JSON.stringify(result, null, 4));\n            } else {\n              setDebug(String(result));\n            }\n          }}\n        />\n      </Center>\n\n      <HStack mb={\"40px\"} spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            if (dropdown.type === \"json\") {\n              dropdown.values = JSON.parse(rawValues);\n            }\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createDropdown(dropdown);\n              if (response.data.id) {\n                props.history.push(`/dropdowns/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateDropdown(dropdown)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={\n                        <div>Dropdown has been successfully updated</div>\n                      }\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update dropdown\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n"],"sourceRoot":""}