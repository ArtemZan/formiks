{"version":3,"sources":["utils/NavigationClient.tsx","components/WelcomeName.tsx","pages/Explorer.tsx","authConfig.tsx","utils/MsGraphApiCall.ts","pages/Profile.tsx","components/AllowCookies.tsx","components/Layout.tsx","components/CreateBookmark.tsx","components/ProjectCard.tsx","pages/Projects/Explorer.tsx","pages/Projects/Editor.tsx","components/projects/cerov.tsx","components/projects/ermv.tsx","components/projects/erov.tsx","components/projects/elmv.tsx","components/projects/elov.tsx","components/projects/por.tsx","pages/Projects/Viewer.tsx","pages/Drafts/Explorer.tsx","pages/Submissions/Viewer.tsx","components/DatePicker/utils/deepmerge.ts","components/DatePicker/utils/pick.ts","components/DatePicker/context/StylesContext.tsx","components/DatePicker/components/ActionButton.tsx","components/DatePicker/components/CloseButton.tsx","components/DatePicker/phrases.ts","components/DatePicker/utils/formatters.ts","components/DatePicker/context/DatepickerContext.tsx","components/DatePicker/components/Day.tsx","components/DatePicker/utils/getStateStyle.ts","components/DatePicker/components/Input.tsx","components/DatePicker/components/Month.tsx","components/DatePicker/components/ResetDatesButton.tsx","components/DatePicker/components/SelectedDate.tsx","components/DatePicker/Datepicker.tsx","components/DatePicker/DateRangeInput.tsx","components/DatePicker/DateSingleInput.tsx","pages/Submissions/TableExplorer.tsx","utils/utils.ts","components/EditableTableCell.tsx","pages/Submissions/Vendors.tsx","components/DropdownCard.tsx","pages/Dropdowns/Explorer.tsx","pages/Submissions/Tables/ProjectInformation.tsx","pages/Submissions/Tables/PurchaseOrder.tsx","pages/Submissions/Tables/CostActuals.tsx","pages/Submissions/Tables/SalesActuals.tsx","pages/Submissions/Tables/EurActuals.tsx","pages/Submissions/Tables/CostGlPostings.tsx","pages/Submissions/Tables/IncomeGlPostings.tsx","pages/Submissions/SVendors.tsx","App.tsx","index.tsx","api/rest/index.tsx","pages/Dropdowns/Editor.tsx","components/Toast.tsx"],"names":["CustomNavigationClient","history","url","options","a","relativePath","replace","window","location","origin","noHistory","this","push","NavigationClient","WelcomeName","accounts","useMsal","account","useAccount","useState","name","setName","useEffect","console","log","split","Explorer","msalInstance","getActiveAccount","loginRequest","scopes","graphConfig","getAccountInfo","acquireTokenSilent","response","headers","Headers","bearer","accessToken","append","method","fetch","then","json","catch","error","getUserPhoto","Authorization","blob","photoBlob","URL","createObjectURL","ProfileContent","instance","inProgress","graphData","setGraphData","undefined","userPhoto","setUserPhoto","InteractionStatus","None","e","InteractionRequiredAuthError","acquireTokenRedirect","JSON","stringify","alt","src","Profile","authRequest","interactionType","InteractionType","Redirect","authenticationRequest","CookiePreference","props","position","bottom","left","right","width","p","boxShadow","bg","ml","mr","mb","borderRadius","zIndex","direction","alignItems","fontWeight","base","md","justifyContent","fontSize","textAlign","maxW","variant","colorScheme","color","_hover","onClick","onAllow","localStorage","setItem","DesktopNav","useHistory","linkColor","useColorModeValue","linkHoverColor","popoverContentBgColor","isAuthenticated","useIsAuthenticated","spacing","NAV_ITEMS","GUEST_NAV_ITEMS","map","navItem","trigger","placement","href","textDecoration","label","children","border","rounded","minW","mt","child","DesktopSubNav","subLabel","role","display","align","transition","_groupHover","transform","opacity","justify","flex","w","h","as","ChevronRightIcon","MobileNav","closeMenu","MobileNavItem","useDisclosure","isOpen","onToggle","py","Link","ChevronDownIcon","in","animateOpacity","style","marginTop","pl","borderLeft","borderStyle","borderColor","Layout","cookieConsent","setCookieConsent","roles","setRoles","getItem","RestAPI","getRoles","data","sort","useColorMode","colorMode","toggleColorMode","minH","px","borderBottom","icon","Close","Hamburger","useBreakpointValue","fontFamily","cursor","Moon","Sun","size","hasArrow","join","marginLeft","m","title","sessionStorage","clear","setTimeout","loginRedirect","xl","CreateBookmark","matchingProjects","setMatchingProjects","availableTags","setAvailableTags","setTitle","selectedTags","setSelectedTags","tags","projects","project","tag","indexOf","some","item","includes","onClose","value","onChange","event","target","placeholder","styles","control","state","background","minHeight","option","isDisabled","isFocused","isSelected","backgroundColor","menu","multiValue","multiValueLabel","multiValueRemove","theme","colors","primary","isMulti","values","element","float","length","bookmarks","bookmark","createBookmark","addBookmark","ProjectCard","id","overflow","whiteSpace","textOverflow","description","author","moment","updated","format","toUpperCase","setProjects","setBookmarks","createBookmarkModal","setCreateBookMarkModal","getBookmarks","getProjects","old","lg","index","onContextMenu","preventDefault","deleteBookmark","filter","b","isAdmin","Add","mx","Editor","isSubmitting","setIsSubmitting","created","Date","statuses","defaultStatus","components","type","code","setProject","create","match","params","getProject","goBack","prev","status","provided","singleValue","classNamePrefix","isClearable","rows","builder","basic","excelTable","advanced","file","premium","form","schema","isLoading","createProject","updateProject","toast","Toast","message","PH1","Companies","VendorsNames","CampaignChannel","Budget","ExchangeRates","Year","ProjectStartQuarter","Column","Table","HeaderCell","Cell","Cerov","country","requestorsCompanyName","setRequestorsCompanyName","localExchangeRate","setLocalExchangeRate","campaignName","setCampaignName","campaignDescription","setCampaignDescription","targetAudience","setTargetAudience","campaignChannel","setCampaignChannel","vendorName","setVendorName","year","setYear","projectStartQuarter","setProjectStartQuarter","projectNumber","setProjectNumber","requestorsName","setRequestorsName","projectApproval","fiscalQuarter","setFiscalQuarter","organizingCompany","setOrganizingCompany","startDate","setStartDate","endDate","setEndDate","budgetSource","setBudgetSource","budgetApprovedByVendor","setBudgetApprovedByVendor","exchangeRates","setExchangeRates","estimatedIncomeBudgetCurrency","setEstimatedIncomeBudgetCurrency","estimatedCostsBudgetCurrency","setEstimatedCostsBudgetCurrency","netProfitTargetBudgetCurrency","setNetProfitTargetBudgetCurrency","estimatedIncome","setEstimatedIncome","estimatedCosts","setEstimatedCosts","netProfitTarget","setNetProfitTarget","companiesParticipating","setCompaniesParticipating","comments","setComments","vendor","setVendor","costBreakdown","setCostBreakdown","totalcbShare","setTotalcbShare","totalcbContribution","setTotalcbContribution","totalcbCosts","setTotalcbCosts","totalEstimatedCostsLC","setTotalEstimatedCostsLC","dropdownsIds","Promise","all","di","getDropdownValues","responses","submission","companyCode","requestorsCountry","currency","localCurrency","manufacturersFiscalQuarter","campaignStartDate","campaignEndDate","campaignBudgetsCurrency","campaignEstimatedIncomeBudgetsCurrency","toString","campaignEstimatedIncomeEur","toFixed","campaignEstimatedCostsEur","campaignNetProfitTargetEur","campaignEstimatedCostsBudgetsCurrency","campaignNetProfitTargetBudgetsCurrency","parseFloat","find","rate","vs","s","group","projectManager","productionProjectManager","creditor","creditorNumber","debitor","debitorNumber","manufacturer","manufacturerNumber","bu","businessUnit","ph","budgetCurrency","budgetAmount","localBudget","eurBudget","share","estimatedCostsCC","estimatedIncomeCC","estimatedCostsLC","estimatedCostsEUR","netProfitTargetVC","netProfitTargetLC","netProfitTargetEUR","companyName","c","forEach","countryCodeEMEA","countriesEMEA","contactEmail","mirrorProjectNumber","countryShare","contribution","countryBudgetContributionCC","countryCostEstimationCC","displayName","fetchDropdowns","forceUpdate","useReducer","x","company","substring","totalShare","totalContribution","totalCosts","temp","row","isEqual","alsoMarketingConsultant","kreditor","debitorischer","hersteller","slice","menuPortalTarget","document","body","ler","defaultValue","disabled","selected","maxLength","resize","customInput","date","dateFormat","bgColor","menuPortal","shouldUpdateScroll","hover","autoHeight","rowHeight","resizable","dataKey","rowData","formattedData","v","wb","Sheets","XLSX","aoa_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","getSubmissions","parentSubmissions","parentId","isUnique","pn","found","newSuffix","parseInt","projectId","parent","projectName","projectApprover","campaignCurrency","additionalInformation","projectType","vendorBudgetCurrency","vendorAmount","isNaN","vendorShare","estimatedResultCC","estimatedIncomeEUR","estimatedResultEUR","estimatedResultBC","countryBudgetContributionEur","countryCostEstimationEur","createSubmissionWithChildren","isDraft","updateDraft","createDraft","createSubmission","Ermv","vendorsNames","setVendorsNames","vendors","setVendors","setTotalVendorBudgetInLC","setTotalVendorBudgetInEUR","marketingResponsible","er","vendorBudgetAmount","totalBudgetEur","totalBudgetLC","totalCostsCC","totalIncomeCC","totalCostsLC","totalCostsEur","eb","lb","totalVendorBudgetInLC","totalVendorBudgetInEUR","totalVendorShare","totalEstimatedIncomeInCC","totalEstimatedCostsInCC","totalEstimatedCostsInLC","totalEstimatedCostsInEUR","totalNetProfitTargetInCC","totalNetProfitTargetInLC","totalNetProfitTargetInEUR","vbEur","t","val","invalid","TargetAudience","FiscalQuarter","Erov","setProjectApproval","Uploader","action","draggable","lineHeight","Elmv","Elov","sapCreditorNumber","setProjectName","serviceProvider","setServiceProvider","services","setServices","serviceType","netValueLC","netValuePO","poCurrencyCode","netValueEUR","externalPurchaseOrderNumber","portalId","purchaseOrderDate","orderingPerson","approvingPerson","contactPerson","contactDetails","subs","targetId","sub","updateSubmissionPartial","service","netValueOfServiceOrderedLC","netValuePOC","purchaseOrderCurrency","netValueEur","Viewer","predefinedProject","setPredefinedProject","setForm","pr","divider","onSubmit","formio","drafts","setDrafts","getDrafts","defaultIndex","allowMultiple","pd","draft","pb","open","getDraft","getSubmissionWithChildren","isObject","obj","Object","getPrototypeOf","prototype","call","merge","objects","reduce","result","current","keys","key","Array","isArray","from","Set","concat","pick","ret","emptyStylesObject","actionButton","arrowIcon","buttonsWrapper","closeButton","datepickerContainer","dateRangeInputContainer","dateRangeInputDivider","day","normal","rangeHover","first","firstOrLast","last","dayContainer","inputComponentIcon","active","inputComponentInput","inputComponentInputAddon","inputComponentInputGroup","monthContainer","monthDayGrid","monthMonthLabel","monthsWrapper","monthWeekdayLabel","resetDatesButton","selectDateContainer","selectDateDateText","selectDateText","datepickerFooter","StylesContext","createContext","overwriteDefaultStyles","StylesProvider","Provider","useStyleProps","inlineStyles","useContext","filteredStyles","ActionButton","IconComponent","ChevronLeftIcon","styleProps","ChevronUpIcon","CloseButton","top","datepickerPhrases","datepickerStartDatePlaceholder","datepickerStartDateLabel","datepickerEndDatePlaceholder","datepickerEndDateLabel","resetDates","close","dateRangeInputPhrases","startDateAriaLabel","endDateAriaLabel","startDatePlaceholder","endDatePlaceholder","dateSingleInputPhrases","dateAriaLabel","datePlaceholder","dayLabelFormatFn","defaultDisplayFormat","defaultBase","focusedInput","onDayRender","displayFormat","phrases","defaultFormatters","monthLabelFormat","monthLabelFormatFn","weekdayLabelFormat","weekdayLabelFormatFn","dayLabelFormat","datepickerContextDefaultValue","numberOfMonths","activeMonths","firstDayOfWeek","focusedDate","hoveredDate","goToDate","goToNextMonths","goToNextMonthsByOneMonth","goToNextYear","goToPreviousMonths","goToPreviousMonthsByOneMonth","goToPreviousYear","isDateBlocked","isDateFocused","isDateHovered","isDateSelected","isEndDate","isFirstOrLastSelectedDate","isStartDate","onDateFocus","onDateHover","onDateSelect","onResetDates","DatepickerContext","React","useDatepickerContext","DatepickerProvider","getColor","isWithinHoverRange","isFirst","isLast","Day","dayRef","useRef","dayProps","useDay","onKeyDown","onMouseEnter","tabIndex","isSelectedStartOrEnd","disabledDate","height","minWidth","textColor","borderRightRadius","borderLeftRadius","containerStyle","useMemo","buttonStyle","ref","toDateString","getStateStyle","isActive","Input","forwardRef","inputRef","disableAccessibility","iconComponent","CalendarIcon","showCalendarIcon","allowEditableInputs","inputProps","searchString","setSearchString","htmlFor","isReadOnly","autoComplete","onFocus","_e","dateValue","clearTimeout","parsedDate","parseDate","isValidDate","getDate","Month","month","rowGap","useMonth","days","weekdayLabels","monthLabel","columns","weekdayLabel","dayLabel","ResetDatesButton","text","Repeat","onMouseUp","currentTarget","blur","SelectedDate","paddingBottom","getInputValue","Datepicker","changeActiveMonthOnSelect","exactMinBookingDays","initialVisibleMonth","maxBookingDate","minBookingDate","minBookingDays","onDatesChange","showClose","showResetDates","showSelectedDates","customStyles","unavailableDates","dp","useDatepicker","useImperativeHandle","monthGridRef","scrollTopToMonthGrid","vertical","scrollTop","_goToNextMonths","_goToPreviousMonths","isMobile","shadow","my","pt","START_DATE","ArrowForward","END_DATE","isInline","padding","onMouseLeave","DateRangeInput","endDateProp","startDateProp","focusedInputProp","endShowCalendarIcon","showDivider","startShowCalendarIcon","onFocusChange","startIcon","startId","startName","startPlaceholder","startRef","endId","endName","endRef","endIcon","endPlaceholder","datepickerRef","datepickerWrapperRef","setFocusedInput","handleOnFocusChange","_focusedInput","onClickOutsideHandler","contains","handleInputChange","addEventListener","removeEventListener","alignSelf","DateSingleInput","dateProp","showDatepicker","showDatepickerProp","showResetDate","setDate","setShowDatepicker","show","ColumnGroup","filterTypes","textfield","textarea","number","select","datetime","TableExplorer","submissions","setSubmissions","filters","setFilters","displayedColumns","setDisplayedColumns","filteredSubmissions","setFilteredSubmissions","subm","reverse","filtered","valid","selectedValues","column","filterValue","exists","fv","TagPicker","cleanable","paddingTop","component","input","block","valuesField","_","splice","tv","readOnly","charAt","headerHeight","isTree","defaultExpandAllRows","bordered","cellBordered","rowKey","onExpandChange","renderTreeToggle","header","verticalAlign","numberWithCommas","numRegex","EditableTableCell","cellValue","editing","prevProps","initialValue","setState","d","bold","className","readonly","invoiced","autoFocus","execCommand","onKeyPress","keyCode","which","string","String","fromCharCode","test","defaultPrevented","onBlur","onUpdate","columnKey","Number","toDate","onCalendarClose","menuIsOpen","paddingLeft","outlineWidth","dv","loadOptions","isSearchable","cv","Component","ProjectType","styled","div","SapStatus","defaultColumns","identifier","dropdown","DisplayedColumnsList","DisplayedColumnsListOptions","flat","VendorsTable","selectedTemplate","setSelectedTemplate","templates","setTemplates","Map","sourceSubmissions","setSourceSubmissions","currentUser","setCurrentUser","totalCostAmount","setTotalCostAmount","totalCostAmountCostGL","setTotalCostAmountCostGL","totalCostAmountLC","setTotalCostAmountLC","totalCostAmountLCCostGL","setTotalCostAmountLCCostGL","totalIncomeAmount","setTotalIncomeAmount","totalIncomeAmountLCIncomeGL","setTotalIncomeAmountLCIncomeGL","totalIncomeAmountIncomeGL","setTotalIncomeAmountIncomeGL","totalIncomeAmountLC","setTotalIncomeAmountLC","totalCostsInTool","setTotalCostsInTool","totalIncomeInTool","setTotalIncomeInTool","totalCostsInToolEUR","setTotalCostsInToolEUR","totalIncomeInToolEUR","setTotalIncomeInToolEUR","tableWidth","setTableWidth","filteredCommunicationSubmissions","setFilteredCommunicationSubmissions","communicationSubmissions","setCommunicationSubmissions","onlyMine","setOnlyMine","scrollLeft","setScrollLeft","defaultColumnsWidth","onScroll","useCallback","args","totalRequests","setTotalRequests","ignored","tcit","tiit","tcite","tiite","tca","tcal","tcacgl","tia","tial","tcalcgl","tialigl","tiaigl","costAmountEUR","costAmountEURCostGL","costAmountLC","incomeAmountEURSI","incomeAmountLCSI","costAmountLCCostGL","incomeAmountLCIncomeGL","incomeAmountEurIncomeGL","filteredMap","cFilteredMap","filteredCommunication","f","parse","columnValue","columnLabel","get","endsWith","setHours","set","rowRenderer","cells","visibleIndices","offset","netOffsets","offsetSum","leftBound","rightBound","col","columnOffset","colIdx","getVisibleColumnIndices","startIndex","visibleCells","i","partialUpdate","path","shift","handleCellUpdate","submissionIndex","findIndex","handleCommunicationCellUpdate","datePath","deleteSubmission","submissionId","tbd","callSap","callSapSubmission","dangerouslySetInnerHTML","__html","columnWidth","dw","sd","findSubmissionsByPO","po","visibilityController","template","getTemplates","vSubs","ss","cSubs","totalIncomeLC","totalIncomeEUR","totalCostsEUR","totalCostsTool","totalIncomeTool","cs","incomeAmountEURIncomeGL","tableCells","frozen","FrozenDirection","LEFT","cellRenderer","hidden","rowIndex","cellData","headerRendererForTable","headerIndex","cell","cloneElement","updateTemplate","init","ID","Parent","Group","Created","Title","Author","doc","unshift","ws","json_to_sheet","skipHeader","wch","isLazy","onResize","onColumnResizeEnd","overscanRowCount","ignoreFunctionInColumnCompare","expandColumnKey","fixed","headerRenderer","headerClassName","frozenData","unflatten","statusLMD","mi","documentNumberSI","activityIdForPortalVendors","additionalInformationLMD","alsoMarketingProjectNumberLMD","every","invoiceTypeLMD","currentVendor","vendorLMD","amount","NaN","trim","dunningStop","paymentMethodLMD","targetSubmissionIndex","is","ts","tsi","invoicingDateLMD","materialNumberLMD","invoiceTextLMD","amountLMD","documentCurrencyLMD","dunningStopLMD","sendToLMD","depositNumberLMD","today","overlayRenderer","CheckTreePicker","defaultExpandAll","onCreateOption","toLowerCase","DropdownCard","lastSync","fromNow","dropdowns","setDropdowns","getDropdowns","ProjectInformationTable","gprops","defaultExpandedRowKeys","PurchaseOrderTable","CostActualsTable","SalesActualsTable","EurActualsTable","CostGlPostingsTable","IncomeGlPostingsTable","SVendorsTable","selectedSubmission","setSelectedSubmission","ds","App","pca","navigationClient","setAdminRole","setNavigationClient","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","Slide","exact","render","Vendors","SVendors","GlobalStyles","css","PublicClientApplication","auth","clientId","redirectUri","postLogoutRedirectUri","getAllAccounts","setActiveAccount","addEventCallback","eventType","EventType","LOGIN_SUCCESS","payload","axios","interceptors","request","use","config","idToken","ReactDOM","extendTheme","global","mode","getElementById","baseUrl","usersUrl","projectsUrl","bookmarksUrl","submissionsUrl","dropdownsUrl","templatesUrl","draftsUrl","post","put","delete","URLSearchParams","columnsWidth","urlSegments","debug","setDebug","rawValues","setRawValues","processor","syncInterval","private","setDropdown","getDropdown","min","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","tabSize","enableSnippets","eval","createDropdown","updateDropdown","IoMdCheckmarkCircle","BsLightningFill","MdError","AiFillInfoCircle","boxSize","span"],"mappings":"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","file":"static/js/main.70f74617.chunk.js","sourcesContent":["import { NavigationClient, NavigationOptions } from \"@azure/msal-browser\";\nimport { History } from \"history\";\n\n/**\n * This is an example for overriding the default function MSAL uses to navigate to other urls in your webpage\n */\nexport class CustomNavigationClient extends NavigationClient {\n  private history: History;\n\n  constructor(history: History) {\n    super();\n    this.history = history;\n  }\n\n  /**\n   * Navigates to other pages within the same web application\n   * You can use the useHistory hook provided by react-router-dom to take advantage of client-side routing\n   * @param url\n   * @param options\n   */\n  async navigateInternal(url: string, options: NavigationOptions) {\n    const relativePath = url.replace(window.location.origin, \"\");\n    if (options.noHistory) {\n      this.history.replace(relativePath);\n    } else {\n      this.history.push(relativePath);\n    }\n\n    return false;\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { useMsal, useAccount } from \"@azure/msal-react\";\n\nconst WelcomeName = () => {\n  const { accounts } = useMsal();\n  const account = useAccount(accounts[0] || {});\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    if (account && account.name) {\n      console.log(account);\n      setName(account.name.split(\" \")[0]);\n    } else {\n      setName(\"\");\n    }\n  }, [account]);\n\n  if (name) {\n    return <p>Welcome, {name}</p>;\n  } else {\n    return null;\n  }\n};\n\nexport default WelcomeName;\n","import { InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport WelcomeName from \"../components/WelcomeName\";\nimport { msalInstance } from \"../index\";\n\nexport function Explorer() {\n  console.log(msalInstance.getActiveAccount());\n  return (\n    <>\n      <AuthenticatedTemplate>\n        <WelcomeName />\n      </AuthenticatedTemplate>\n      <UnauthenticatedTemplate>unauthenticated</UnauthenticatedTemplate>\n    </>\n  );\n}\n\nexport default Explorer;\n","import { Configuration, LogLevel, PopupRequest } from \"@azure/msal-browser\";\n\n// Config object to be passed to Msal on creation\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: \"c6c34032-5419-4fdf-bbd4-a863814323b7\",\n    redirectUri: \"/\",\n    postLogoutRedirectUri: \"/\",\n  },\n};\n\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest: PopupRequest = {\n  scopes: [\"User.Read\"],\n};\n\n// Add here the endpoints for MS Graph API services you would like to use.\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n};\n","import { loginRequest, graphConfig } from \"../authConfig\";\nimport { msalInstance } from \"../index\";\n\nexport async function getAccountInfo() {\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    return;\n  }\n\n  const response = await msalInstance.acquireTokenSilent({\n    ...loginRequest,\n    account: account,\n  });\n\n  const headers = new Headers();\n  const bearer = `Bearer ${response.accessToken}`;\n\n  headers.append(\"Authorization\", bearer);\n\n  const options = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(graphConfig.graphMeEndpoint, options)\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n}\n\nexport async function getUserPhoto() {\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    return;\n  }\n\n  const response = await msalInstance.acquireTokenSilent({\n    ...loginRequest,\n    account: account,\n  });\n\n  var url = \"https://graph.microsoft.com/v1.0/me/photo/$value\";\n\n  return fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${response.accessToken}`,\n      \"Content-Type\": \"image/jpeg\",\n    },\n  })\n    .then((response) => response.blob())\n    .then((photoBlob) => URL.createObjectURL(photoBlob));\n}\n","import { useEffect, useState } from \"react\";\n\n// Msal imports\nimport { MsalAuthenticationTemplate, useMsal } from \"@azure/msal-react\";\nimport {\n  InteractionStatus,\n  InteractionType,\n  InteractionRequiredAuthError,\n  AccountInfo,\n} from \"@azure/msal-browser\";\nimport { loginRequest } from \"../authConfig\";\nimport { getAccountInfo, getUserPhoto } from \"../utils/MsGraphApiCall\";\n\nexport type GraphData = {\n  displayName: string;\n  jobTitle: string;\n  mail: string;\n  businessPhones: string[];\n  officeLocation: string;\n};\n\nconst ProfileContent = () => {\n  const { instance, inProgress } = useMsal();\n\n  const [graphData, setGraphData] = useState<null | GraphData>(null);\n  const [userPhoto, setUserPhoto] = useState<undefined | string>(undefined);\n\n  useEffect(() => {\n    if (!userPhoto && inProgress === InteractionStatus.None) {\n      getUserPhoto().then((response) => setUserPhoto(response));\n    }\n    if (!graphData && inProgress === InteractionStatus.None) {\n      getAccountInfo()\n        .then((response) => setGraphData(response))\n        .catch((e) => {\n          if (e instanceof InteractionRequiredAuthError) {\n            instance.acquireTokenRedirect({\n              ...loginRequest,\n              account: instance.getActiveAccount() as AccountInfo,\n            });\n          }\n        });\n    }\n  }, [inProgress, graphData, userPhoto, instance]);\n\n  return (\n    <div>\n      {JSON.stringify(graphData)} <img alt=\"\" src={userPhoto} />\n    </div>\n  );\n};\n\nexport function Profile() {\n  const authRequest = {\n    ...loginRequest,\n  };\n\n  return (\n    <MsalAuthenticationTemplate\n      interactionType={InteractionType.Redirect}\n      authenticationRequest={authRequest}\n      //   errorComponent={ErrorComponent}\n      //   loadingComponent={Loading}\n    >\n      <ProfileContent />\n    </MsalAuthenticationTemplate>\n  );\n}\n","import React from \"react\";\nimport { Stack, Text, Button } from \"@chakra-ui/react\";\n\nexport default function CookiePreference(props: any) {\n  return (\n    <Stack\n      position=\"fixed\"\n      bottom=\"0\"\n      left=\"0\"\n      right=\"0\"\n      width=\"90%\"\n      p=\"6\"\n      boxShadow=\"lg\"\n      bg=\"white\"\n      ml=\"auto\"\n      mr=\"auto\"\n      mb={\"3vh\"}\n      borderRadius=\"md\"\n      zIndex={10000}\n    >\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Text fontWeight=\"semibold\">Your Privary</Text>\n      </Stack>\n\n      <Stack\n        direction={{ base: \"column\", md: \"row\" }}\n        justifyContent=\"space-between\"\n      >\n        <Text fontSize={{ base: \"sm\" }} textAlign={\"left\"} maxW={\"6xl\"}>\n          We use cookies and similar technologies to help personalise content\n          and provide a better experience. By clicking OK or turning an option\n          on in Cookie Preferences, you agree to this, as outlined in our Cookie\n          Policy. To change preferences or withdraw consent, please update your\n          Cookie Preferences.\n        </Text>\n        <Stack direction={{ base: \"column\", md: \"row\" }}>\n          <Button variant=\"outline\" colorScheme=\"twitter\">\n            Cookie Preferences\n          </Button>\n          <Button\n            color={\"white\"}\n            bg={\"blue.400\"}\n            _hover={{\n              bg: \"blue.300\",\n            }}\n            onClick={() => {\n              props.onAllow();\n              localStorage.setItem(\"cookieConsent\", \"allowed\");\n            }}\n          >\n            Allow\n          </Button>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Link,\n  Avatar,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuGroup,\n  MenuItem,\n  MenuDivider,\n  HStack,\n  VStack,\n  useColorMode,\n  Center,\n  Tooltip,\n  PopoverArrow,\n} from \"@chakra-ui/react\";\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  MoonIcon,\n  SunIcon,\n} from \"@chakra-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useIsAuthenticated,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { FiChevronDown } from \"react-icons/all\";\nimport CookiePreference from \"./AllowCookies\";\nimport { msalInstance } from \"../index\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\nimport { getUserPhoto } from \"../utils/MsGraphApiCall\";\nimport { RestAPI } from \"../api/rest\";\nimport { loginRequest } from \"../authConfig\";\n\nfunction Layout(props: any) {\n  const { instance, inProgress } = useMsal();\n\n  const [userPhoto, setUserPhoto] = useState<undefined | string>(undefined);\n  const [cookieConsent, setCookieConsent] = useState(false);\n  const [roles, setRoles] = useState<string[]>([]);\n  const isAuthenticated = useIsAuthenticated();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cookieConsent\") === \"allowed\") {\n      setCookieConsent(true);\n    }\n    RestAPI.getRoles().then((response) => setRoles(response.data.sort()));\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    if (\n      isAuthenticated &&\n      !userPhoto &&\n      inProgress === InteractionStatus.None\n    ) {\n      getUserPhoto().then((response) => setUserPhoto(response));\n    }\n  }, [inProgress, userPhoto, instance, isAuthenticated]);\n\n  const { children } = props;\n  const { isOpen, onToggle } = useDisclosure();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Box minH=\"100vh\">\n      {!cookieConsent ? (\n        <CookiePreference\n          onAllow={() => {\n            setCookieConsent(true);\n            localStorage.setItem(\"cookieConsent\", \"allowed\");\n          }}\n        />\n      ) : null}\n\n      <Box>\n        <Flex\n          bg={useColorModeValue(\"white\", \"#21252A\")}\n          color={useColorModeValue(\"gray.600\", \"#ABB2BF\")}\n          minH={\"60px\"}\n          py={{ base: 2 }}\n          px={{ base: 4 }}\n          borderBottom={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n          align={\"center\"}\n        >\n          <Flex\n            flex={{ base: 1, md: \"auto\" }}\n            ml={{ base: -2 }}\n            display={{ base: \"flex\", md: \"none\" }}\n          >\n            <IconButton\n              onClick={onToggle}\n              icon={\n                isOpen ? (\n                  <CloseIcon w={3} h={3} />\n                ) : (\n                  <HamburgerIcon w={5} h={5} />\n                )\n              }\n              variant={\"ghost\"}\n              aria-label={\"Toggle Navigation\"}\n            />\n          </Flex>\n          <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n            <Text\n              mt={\"2px\"}\n              ml={{ base: \"0\", md: \"10px\" }}\n              textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\n              fontFamily={\"heading\"}\n              fontWeight=\"bold\"\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              cursor=\"pointer\"\n              onClick={() => {\n                history.push(\"/projects\");\n              }}\n              fontSize=\"lg\"\n            >\n              Formiks\n            </Text>\n\n            <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\n              <DesktopNav />\n            </Flex>\n          </Flex>\n\n          <Stack\n            flex={{ base: 1, md: 1 }}\n            justify={\"flex-end\"}\n            direction={\"row\"}\n            spacing={6}\n          >\n            <Button\n              display={{ base: \"none\", md: \"flex\" }}\n              variant=\"ghost\"\n              onClick={toggleColorMode}\n            >\n              {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n            </Button>\n            <AuthenticatedTemplate>\n              <Menu>\n                <MenuButton>\n                  <HStack>\n                    <Avatar src={userPhoto} mr={\"10px\"} size={\"sm\"} />\n                    <VStack\n                      display={{ base: \"none\", md: \"flex\" }}\n                      alignItems=\"flex-start\"\n                      spacing=\"1px\"\n                      ml={{ base: 0, md: \"2\" }}\n                    >\n                      <Text\n                        color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                        fontWeight={500}\n                        fontSize=\"sm\"\n                      >\n                        {msalInstance.getActiveAccount()?.name}\n                      </Text>\n\n                      <Text fontSize=\"xs\" color=\"gray.500\">\n                        <Tooltip hasArrow label=\"Search places\">\n                          {roles.join(\", \")}\n                        </Tooltip>\n                      </Text>\n                    </VStack>\n                    <Box display={{ base: \"none\", md: \"flex\" }}>\n                      <FiChevronDown style={{ marginLeft: \"5px\" }} />\n                    </Box>\n                  </HStack>\n                </MenuButton>\n\n                <MenuList\n                  // mt={4}\n                  m={0}\n                  mr={-3.0}\n                  bg={useColorModeValue(\"white\", \"#21252A\")}\n                  borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n                  boxShadow=\"none\"\n                  zIndex={2000000}\n                >\n                  <MenuGroup title=\"Profile\">\n                    <MenuItem onClick={() => {}}>My Account</MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuGroup title=\"Help\">\n                    <MenuItem onClick={() => {}}>Documentation</MenuItem>\n                    <MenuItem>Report a Bug</MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={async () => {\n                      // instance.logout();\n                      sessionStorage.clear();\n                      setTimeout(() => {\n                        window.location.href = \"/\";\n                      }, 1000);\n                    }}\n                  >\n                    Log Out\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            </AuthenticatedTemplate>\n            <UnauthenticatedTemplate>\n              <Button\n                fontSize={\"sm\"}\n                fontWeight={600}\n                color={\"white\"}\n                bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n                _hover={{\n                  bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n                }}\n                onClick={async () => {\n                  // history.push(\"/login\");\n                  await instance.loginRedirect();\n                  // await instance.acquireTokenPopup({\n                  //   ...loginRequest,\n                  //   account: instance.getActiveAccount()!,\n                  // });\n                  // await instance.loginPopup();\n                }}\n              >\n                Sign In\n              </Button>\n            </UnauthenticatedTemplate>\n          </Stack>\n        </Flex>\n\n        <Collapse in={isOpen} animateOpacity>\n          <MobileNav closeMenu={onToggle} />\n        </Collapse>\n      </Box>\n      <Box m={{ base: \"1em\", xl: \"5em\" }} mt={{ base: \"3em\", xl: \"5em\" }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const history = useHistory();\n  const linkColor = useColorModeValue(\"gray.600\", \"#ABB2BF\");\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n  const popoverContentBgColor = useColorModeValue(\"white\", \"#21252A\");\n  const isAuthenticated = useIsAuthenticated();\n\n  return (\n    <Stack direction={\"row\"} spacing={4}>\n      {(isAuthenticated ? NAV_ITEMS : GUEST_NAV_ITEMS).map((navItem) => {\n        return (\n          <Box key={navItem.label}>\n            <Popover trigger={\"hover\"} placement={\"bottom-start\"}>\n              <PopoverTrigger>\n                <Button\n                  variant=\"link\"\n                  p={2}\n                  onClick={() => {\n                    if (navItem.href) {\n                      history.push(navItem.href);\n                    }\n                  }}\n                  fontSize={\"sm\"}\n                  fontWeight={500}\n                  color={linkColor}\n                  _hover={{\n                    textDecoration: \"none\",\n                    color: linkHoverColor,\n                  }}\n                >\n                  {navItem.label}\n                </Button>\n              </PopoverTrigger>\n\n              {navItem.children && (\n                <PopoverContent\n                  border={0}\n                  boxShadow={\"xl\"}\n                  bg={popoverContentBgColor}\n                  p={4}\n                  rounded={\"xl\"}\n                  minW={\"sm\"}\n                  mt={\"20px\"}\n                >\n                  <Stack>\n                    {navItem.children.map((child) => (\n                      <DesktopSubNav key={child.label} {...child} />\n                    ))}\n                  </Stack>\n                </PopoverContent>\n              )}\n            </Popover>\n          </Box>\n        );\n      })}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel }: NavItem) => {\n  const history = useHistory();\n  return (\n    <Link\n      onClick={() => {\n        if (href) {\n          history.push(href);\n        }\n      }}\n      role={\"group\"}\n      display={\"block\"}\n      p={2}\n      rounded={\"md\"}\n      _hover={{ bg: useColorModeValue(\"blue.50\", \"#1d2024\") }}\n    >\n      <Stack direction={\"row\"} align={\"center\"}>\n        <Box>\n          <Text\n            transition={\"all .3s ease\"}\n            _groupHover={{ color: useColorModeValue(\"blue.400\", \"#cacfd9\") }}\n            fontWeight={600}\n            fontSize=\"md\"\n            ml={2}\n          >\n            {label}\n          </Text>\n          <Text ml={2} fontSize={\"sm\"}>\n            {subLabel}\n          </Text>\n        </Box>\n        <Flex\n          transition={\"all .3s ease\"}\n          transform={\"translateX(-10px)\"}\n          opacity={0}\n          _groupHover={{ opacity: \"100%\", transform: \"translateX(0)\" }}\n          justify={\"flex-end\"}\n          align={\"center\"}\n          flex={1}\n        >\n          <Icon\n            color={useColorModeValue(\"blue.400\", \"#cacfd9\")}\n            w={5}\n            h={5}\n            as={ChevronRightIcon}\n          />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = (props: any) => {\n  const isAuthenticated = useIsAuthenticated();\n  return (\n    <Stack\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      p={4}\n      display={{ md: \"none\" }}\n    >\n      {(isAuthenticated ? NAV_ITEMS : GUEST_NAV_ITEMS).map((navItem) => (\n        <MobileNavItem\n          closeMenu={props.closeMenu}\n          key={navItem.label}\n          {...navItem}\n        />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href, closeMenu }: any) => {\n  const history = useHistory();\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        onClick={() => {\n          if (href) {\n            history.push(href);\n          }\n        }}\n        justify={\"space-between\"}\n        align={\"center\"}\n        _hover={{\n          textDecoration: \"none\",\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={\"all .25s ease-in-out\"}\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n          align={\"start\"}\n        >\n          {children &&\n            children.map((child: any) => (\n              <Link\n                key={child.label}\n                py={2}\n                onClick={() => {\n                  if (child.href) {\n                    history.push(child.href);\n                    closeMenu();\n                  }\n                }}\n              >\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Requests\",\n    children: [\n      {\n        label: \"Existing Requests\",\n        subLabel: \"Explore existing formiks requests\",\n        href: \"/projects\",\n      },\n      {\n        label: \"New Request\",\n        subLabel: \"Create new formiks request\",\n        href: \"/projects/create\",\n      },\n      {\n        label: \"Drafts\",\n        subLabel: \"Explore unpublished submissions\",\n        href: \"/drafts\",\n      },\n    ],\n  },\n\n  {\n    label: \"Projects\",\n    href: \"/vendors\",\n  },\n  {\n    label: \"Dropdowns\",\n    children: [\n      {\n        label: \"Existing Dropdowns\",\n        subLabel: \"Explore existing adaptive dropdown\",\n        href: \"/dropdowns\",\n      },\n      {\n        label: \"New Dropdown\",\n        subLabel: \"Create new adaptive dropdown\",\n        href: \"/dropdowns/create\",\n      },\n    ],\n  },\n  {\n    label: \"Pipelines\",\n    href: \"/pipelines\",\n  },\n];\nconst GUEST_NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Requests\",\n    href: \"/projects\",\n  },\n  {\n    label: \"Projects\",\n    href: \"/vendors\",\n  },\n  {\n    label: \"Documentation\",\n    href: \"/documentation\",\n  },\n];\n\nexport default Layout;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Project from \"../types/project\";\nimport { RestAPI } from \"../api/rest\";\nimport Bookmark from \"../types/bookmark\";\n\ninterface Props {\n  isOpen: boolean;\n  onClose: any;\n  addBookmark: any;\n  projects: Project[];\n  bookmarks: Bookmark[];\n}\n\nexport default function CreateBookmark(props: Props) {\n  const [matchingProjects, setMatchingProjects] = useState(0);\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n  const [title, setTitle] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  useEffect(() => {\n    var tags: string[] = [];\n    props.projects.map((project) => {\n      project.tags.map((tag) => {\n        if (tags.indexOf(tag) === -1) {\n          tags.push(tag);\n        }\n      });\n      setAvailableTags(tags);\n    });\n  }, [props.projects]);\n  useEffect(() => {\n    var matchingProjects = 0;\n    props.projects.map((project) => {\n      if (\n        project.tags &&\n        project.tags.some((item) => selectedTags.includes(item))\n      ) {\n        matchingProjects++;\n      }\n    });\n    setMatchingProjects(matchingProjects);\n  }, [selectedTags]);\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onClose={() => {\n        props.onClose();\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Create new bookmark</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <VStack spacing={4}>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Title</Text>\n              <Input\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                }}\n                bg={useColorModeValue(\"white\", \"#2C313C\")}\n                color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Tags</Text>\n              <CreatableSelect\n                placeholder=\"\"\n                styles={{\n                  control: (base, state) => ({\n                    ...base,\n                    background: useColorModeValue(\"white\", \"#2C313C\"),\n                    minHeight: 40,\n                    border: useColorModeValue(\n                      \"1px solid #E2E8F0\",\n                      \"1px solid #4E525C\"\n                    ),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      border: useColorModeValue(\n                        \"1px solid #CBD5E0\",\n                        \"1px solid #5E626B\"\n                      ),\n                    },\n                  }),\n                  option: (\n                    styles,\n                    { data, isDisabled, isFocused, isSelected }\n                  ) => {\n                    return {\n                      ...styles,\n                      backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                      color: useColorModeValue(\"#4A5667\", \"white\"),\n                      transition: \"0.3s\",\n                      \"&:hover\": {\n                        backgroundColor: useColorModeValue(\n                          \"#DEEBFF\",\n                          \"#343945\"\n                        ),\n                      },\n                    };\n                  },\n                  menu: (styles) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    background: useColorModeValue(\"white\", \"#2C313C\"),\n                  }),\n                  multiValue: (styles, { data }) => ({\n                    ...styles,\n                    color: \"white\",\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  }),\n                  multiValueLabel: (styles, { data }) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#464646\", \"white\"),\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  }),\n                  multiValueRemove: (styles, { data }) => ({\n                    ...styles,\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                    \"&:hover\": {\n                      color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                      backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                    },\n                  }),\n                }}\n                theme={(theme) => ({\n                  ...theme,\n                  borderRadius: 6,\n                  colors: {\n                    ...theme.colors,\n                    primary: \"#3082CE\",\n                  },\n                })}\n                isMulti\n                value={selectedTags.map((tag) => {\n                  return { label: tag, value: tag };\n                })}\n                onChange={(values) => {\n                  var tags: string[] = [];\n                  values.map((element: any) => tags.push(element.value));\n                  setSelectedTags(tags);\n                }}\n                options={availableTags.map((tag) => {\n                  return {\n                    label: tag,\n                    value: tag,\n                  };\n                })}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text float=\"right\" color=\"gray.400\" mb=\"10px\">\n                Matching {matchingProjects} projects\n              </Text>\n            </Box>\n          </VStack>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            isDisabled={\n              title.length < 1 ||\n              (props.bookmarks &&\n                props.bookmarks.some((bookmark) => bookmark.title === title))\n            }\n            color={\"white\"}\n            bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              RestAPI.createBookmark({\n                title,\n                tags: selectedTags,\n              } as Bookmark).then((response) => {\n                props.addBookmark(response.data);\n                props.onClose();\n              });\n            }}\n          >\n            Create\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Text,\n  Image,\n  Stack,\n  Heading,\n  Avatar,\n  Badge,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Project from \"../types/project\";\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function ProjectCard(props: Props) {\n  return (\n    <Box\n      key={props.project.id}\n      onClick={() => {\n        props.history.push(`/projects/view/${props.project.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"433px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.project.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.project.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack mt={6} direction={\"row\"} spacing={4} align={\"center\"}>\n        <Avatar src={\"\"} alt={\"Author\"} />\n        <Stack direction={\"column\"} spacing={0} fontSize={\"sm\"}>\n          <Text fontWeight={600}>{props.project.author}</Text>\n          <Tooltip\n            bg={useColorModeValue(\"white\", \"#373c45\")}\n            color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n            p={4}\n            hasArrow\n            label={moment(props.project.updated).format(\"DD.MM.YYYY HH:mm\")}\n          >\n            <Text color={\"gray.500\"}>\n              {moment(props.project.updated).format(\"MMMM DD, YYYY\")}\n            </Text>\n          </Tooltip>\n        </Stack>\n      </Stack>\n      <Wrap\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        h={\"68px\"}\n        mt={6}\n        justify=\"center\"\n      >\n        {props.project.tags.map((tag) => {\n          return (\n            <WrapItem key={`${props.project.id}-tag-${tag}`}>\n              <Tag fontWeight={\"400\"} size=\"sm\" px={2} cursor=\"pointer\">\n                #{tag.toUpperCase()}\n              </Tag>\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport CreateBookmark from \"../../components/CreateBookmark\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [createBookmarkModal, setCreateBookMarkModal] = useState(false);\n\n  useEffect(() => {\n    RestAPI.getBookmarks().then((response) => setBookmarks(response.data));\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <CreateBookmark\n        isOpen={createBookmarkModal}\n        addBookmark={(bookmark: Bookmark) => {\n          setBookmarks((old) => [...(old ? old : []), bookmark]);\n        }}\n        bookmarks={bookmarks}\n        onClose={() => {\n          setCreateBookMarkModal(false);\n        }}\n        projects={projects}\n      />\n      <Center mb={\"5em\"}>\n        <Wrap maxW={{ base: \"100%\", lg: \"50%\" }} justify=\"center\">\n          {bookmarks\n            ? bookmarks.map((bookmark, index) => {\n                return (\n                  <WrapItem key={`bookmark-${index}`}>\n                    <Tag\n                      fontWeight={\"400\"}\n                      size={\"lg\"}\n                      // colorScheme=\"cyan\"\n                      cursor=\"pointer\"\n                      key={bookmark.id}\n                      onContextMenu={(e) => {\n                        e.preventDefault();\n                        console.log(bookmark.id);\n                        if (bookmark.id) {\n                          RestAPI.deleteBookmark(bookmark.id);\n                          setBookmarks(\n                            bookmarks.filter((b) => b.id !== bookmark.id)\n                          );\n                        }\n                      }}\n                      onClick={() => {\n                        // FIXME: filter projects\n                        console.log(bookmark.tags);\n                      }}\n                    >\n                      {bookmark.title}\n                    </Tag>\n                  </WrapItem>\n                );\n              })\n            : null}\n\n          <WrapItem display={props.isAdmin ? \"grid\" : \"none\"}>\n            <Tag\n              onClick={() => {\n                setCreateBookMarkModal(true);\n              }}\n              colorScheme=\"cyan\"\n              fontWeight={\"400\"}\n              size={\"lg\"}\n              cursor=\"pointer\"\n            >\n              <AddIcon w={3} h={3} />\n            </Tag>\n          </WrapItem>\n        </Wrap>\n      </Center>\n      <Wrap\n        justify=\"center\"\n        spacing={{ base: \"40px\", lg: \"3em\" }}\n        mx={{ base: 0, \"2xl\": \"300px\" }}\n      >\n        {projects.map((project) => {\n          return (\n            <WrapItem key={`wrap-${project.id}`}>\n              <ProjectCard history={props.history} project={project} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { FormBuilder } from \"@formio/react\";\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2 } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [\n      \"New\",\n      \"In Progress\",\n      \"Completed\",\n      \"On Hold\",\n      \"Cancelled\",\n    ] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) =>\n        setProject(response.data)\n      );\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={project.title}\n              onChange={(event) => {\n                setProject((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Tags</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.tags.map((tag) => {\n                return { label: tag, value: tag };\n              })}\n              onChange={(values) => {\n                var tags: string[] = [];\n                values.map((element: any) => tags.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  tags,\n                }));\n              }}\n              options={[]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Roles</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.roles.map((role) => {\n                return { label: role, value: role };\n              })}\n              onChange={(values) => {\n                var roles: string[] = [];\n                values.map((element: any) => roles.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  roles,\n                }));\n              }}\n              options={[\n                { label: \"administrator\", value: \"administrator\" },\n                { label: \"user\", value: \"user\" },\n                { label: \"guest\", value: \"guest\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"66.5%\" }}>\n            <Text mb=\"8px\">Available Statuses</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n              onChange={(values) => {\n                var statuses: string[] = [];\n                values.map((element: any) => statuses.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  statuses,\n                }));\n              }}\n              options={[\n                { label: \"New\", value: \"New\" },\n                { label: \"In Progress\", value: \"In Progress\" },\n                { label: \"Completed\", value: \"Completed\" },\n                { label: \"On Hold\", value: \"On Hold\" },\n                { label: \"Cancelled\", value: \"Cancelled\" },\n              ]}\n            />\n          </Box>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Default Status</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label: project.defaultStatus,\n                value: project.defaultStatus,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  defaultStatus: value.label,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"defaultStatus\"\n              options={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Project Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label:\n                  project.type === \"formio\" ? \"GUI Builder\" : \"Code Builder\",\n                value: project.type,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"projectType\"\n              options={[\n                { label: \"GUI Builder\", value: \"formio\" },\n                { label: \"Code Builder\", value: \"code\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={project.description}\n            onChange={(event) => {\n              setProject((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      {project.type === \"formio\" ? (\n        <FormBuilder\n          options={{\n            builder: {\n              basic: {\n                components: {\n                  excelTable: true,\n                },\n              },\n              advanced: {\n                components: {\n                  file: true,\n                },\n              },\n              premium: false,\n            },\n          }}\n          form={{ display: \"form\", components: project.components }}\n          onChange={(schema: any) => {\n            console.log(schema);\n            setProject((prev) => ({\n              ...prev,\n              components: schema.components,\n            }));\n          }}\n        />\n      ) : null}\n      <HStack mb=\"40px\" spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createProject(project);\n              if (response.data.id) {\n                props.history.push(`/projects/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateProject(project)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={<div>Project has been successfully updated</div>}\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update project\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport moment from \"moment\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n  isDraft?: boolean;\n}\n\nexport default function Cerov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [organizingCompany, setOrganizingCompany] = useState(\"\");\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0.00\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setOrganizingCompany(props.submission.data.organizingCompany ?? \"\");\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        props.submission.data.campaignEstimatedIncomeEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCosts(\n        props.submission.data.campaignEstimatedCostsEur.toFixed(2) || \"0.00\"\n      );\n      setNetProfitTarget(\n        props.submission.data.campaignNetProfitTargetEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        props.submission.data.totalEstimatedCostsLC.toFixed(2) || \"0.00\"\n      );\n\n      //\n\n      if (props.children && props.children.length > 0) {\n        var vs = props.children.find((s) => s.group === \"vendor\");\n        setVendorName({\n          label: vs.data.vendorName ?? \"\",\n          value: vs.data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: vs.data.vendorName ?? \"\",\n          projectManager: vs.data.productionProjectManager ?? \"\",\n          creditor: vs.data.creditorNumber ?? \"\",\n          debitor: vs.data.debitorNumber ?? \"\",\n          manufacturer: vs.data.manufacturerNumber ?? \"\",\n          bu: vs.data.businessUnit ?? \"\",\n          ph: {\n            label: vs.data.PH1 || \"1\",\n            value: vs.data.PH1 || \"1\",\n          },\n          budgetCurrency: {\n            label: vs.data.budgetCurrency || \"\",\n            value: vs.data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              console.log(s);\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var c: any[] = [];\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.mirrorProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    console.log(responses[1].data);\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber:\n          projectNumber.length > 0\n            ? company.value.code + projectNumber.substring(4)\n            : \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(2));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: vendorName.value.alsoMarketingConsultant,\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendorName.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (organizingCompany === \"\" ? \"??\" : organizingCompany) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [\n    year,\n    organizingCompany,\n    campaignChannel,\n    projectStartQuarter,\n    requestorsCompanyName,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Organizing Company</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: organizingCompany,\n              value: organizingCompany,\n            }}\n            onChange={(selected: any) => {\n              setOrganizingCompany(selected.value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"organizingCompany\"\n            options={Companies.map((company) => {\n              return {\n                label: company.value.country,\n                value: company.value.country,\n              };\n            })}\n          />\n        </Box>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={campaignChannel}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.bu}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.bu = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"green.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"green.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          interface FD {\n            [key: string]: any;\n          }\n\n          var formattedData = [];\n          formattedData.push([\"Request\", \"European One Vendor\"]);\n          formattedData.push([\n            \"Requestor`s Company Name\",\n            requestorsCompanyName.label,\n          ]);\n          formattedData.push([\n            \"Requestor`s Company Code\",\n            requestorsCompanyName.value.code,\n          ]);\n          formattedData.push([\n            \"Requestor`s Country\",\n            requestorsCompanyName.value.country,\n          ]);\n          formattedData.push([\"Organizing Company\", organizingCompany]);\n          formattedData.push([\"Campaign Name\", campaignName]);\n          formattedData.push([\"Campaign Description\", campaignDescription]);\n          formattedData.push([\"Campaign Channel\", campaignChannel.label]);\n          formattedData.push([\"Year\", year.label]);\n          formattedData.push([\n            \"Campaign/Project Start Quarter (ALSO Quarter)\",\n            projectStartQuarter.label,\n          ]);\n          formattedData.push([\"Project Number\", projectNumber]);\n          formattedData.push([\"Requestor`s Name\", requestorsName]);\n          formattedData.push([\n            \"Campaign Start Date\",\n            moment(startDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\n            \"Campaign End Date\",\n            moment(endDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\"Budget Source\", budgetSource.label]);\n          formattedData.push([\n            \"Local Currency\",\n            requestorsCompanyName.value.currency,\n          ]);\n          formattedData.push([\"Campaign Currency\", exchangeRates.label]);\n          formattedData.push([\n            \"Campaign Estimated Income in Campaign Currency\",\n            estimatedIncomeBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in Campaign Currency\",\n            estimatedCostsBudgetCurrency,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\",\n            netProfitTargetBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Income in EUR\",\n            estimatedIncome,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in EUR\",\n            estimatedCosts,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\",\n            netProfitTarget,\n          ]);\n          formattedData.push([\n            \"Total Estimated Costs in Local Currency\",\n            totalEstimatedCostsLC,\n          ]);\n          formattedData.push([\"Vendor Name\", vendorName.label]);\n          formattedData.push([\"VOD\", vendor.debitor]);\n          formattedData.push([\"Creditor\", vendor.creditor]);\n          formattedData.push([\"Manufacturer\", vendor.manufacturer]);\n          formattedData.push([\"Business Unit\", vendor.bu]);\n          formattedData.push([\"PH1\", vendor.ph.label]);\n          formattedData.push([\"Comments\", comments]);\n          formattedData.push([\n            \"Companies Participating\",\n            companiesParticipating.map((v: any) => v.label).join(\", \"),\n          ]);\n          formattedData.push([]);\n          formattedData.push([\n            \"Company Name\",\n            \"Company Code\",\n            \"Country\",\n            \"Contact Person's Email\",\n            \"Local Project Number\",\n            \"Share %\",\n            \"Budget Contribution in Campaign Currency\",\n            \"Total Estimated Costs in Campaign Currency\",\n          ]);\n          costBreakdown.forEach((company: any) => {\n            formattedData.push([\n              company.companyName,\n              company.companyCode,\n              company.country,\n              company.contactEmail,\n              company.projectNumber,\n              company.contribution,\n              company.estimatedCosts,\n              company.share,\n            ]);\n          });\n          formattedData.push([\n            \"TOTAL\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            totalcbContribution + \" \" + exchangeRates.label,\n            totalcbCosts + \" \" + exchangeRates.label,\n            totalcbShare + \"%\",\n          ]);\n          var ws = XLSX.utils.aoa_to_sheet(formattedData);\n          const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n          const excelBuffer = XLSX.write(wb, {\n            bookType: \"xlsx\",\n            type: \"array\",\n          });\n          const data = new Blob([excelBuffer], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n          });\n          FileSaver.saveAs(data, \"test\" + \".xlsx\");\n        }}\n      >\n        Export\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}. Press submit again.`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"6246bc93fa2a446faadb8d9a\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency:\n                    parseFloat(estimatedIncomeBudgetCurrency) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur:\n                    parseFloat(estimatedIncome) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n\n                  projectType: \"European One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  productionProjectManager: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : vendor.budgetCurrency.label,\n                  vendorAmount:\n                    isNaN(parseFloat(vendor.localBudget)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(vendor.localBudget),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  projectType: \"European One Vendor\",\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: null,\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectName: campaignName,\n                    additionalInformation: comments,\n                    campaignChannel: campaignChannel.label,\n                    mirrorProjectNumber: projectNumber,\n                    projectNumber: company.projectNumber,\n                    campaignStartDate:\n                      startDate === null ? null : startDate.toString(),\n                    campaignEndDate:\n                      endDate === null ? null : endDate.toString(),\n                    budgetSource: budgetSource.label,\n                    campaignCurrency: exchangeRates.label,\n                    vendorName: vendorName.label,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorShare: 100,\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(estimatedIncome),\n                    estimatedCostsEUR: parseFloat(estimatedCosts),\n                    estimatedResultEUR:\n                      parseFloat(netProfitTarget) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    estimatedResultBC:\n                      parseFloat(netProfitTargetBudgetCurrency) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    projectType: \"European One Vendor\",\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" ||\n          (props.submission && !props.isDraft)\n        }\n      >\n        Submit\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          var projectId = \"629dfb3f55d209262194a3e6\";\n\n          var parent: Submission = {\n            project: projectId,\n            title: campaignName,\n            parentId: null,\n            group: null,\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              requestorsCompanyName: requestorsCompanyName.label,\n              companyCode: requestorsCompanyName.value.code,\n              requestorsCountry: requestorsCompanyName.value.country,\n              campaignName: campaignName,\n              projectName: campaignName,\n              campaignDescription: campaignDescription,\n              targetAudience: targetAudience,\n              campaignChannel: campaignChannel.label,\n              year: year.label,\n              organizingCompany: organizingCompany,\n              projectStartQuarter: projectStartQuarter.label,\n              projectNumber: projectNumber,\n              requestorsName: requestorsName,\n              projectApprover: projectApproval,\n              projectApproval: projectApproval,\n              manufacturersFiscalQuarter: fiscalQuarter.label,\n              campaignStartDate:\n                startDate === null ? null : startDate.toString(),\n              campaignEndDate: endDate === null ? null : endDate.toString(),\n              budgetSource: budgetSource.label,\n              budgetApprovedByVendor: budgetApprovedByVendor,\n              campaignBudgetsCurrency: exchangeRates.label,\n              campaignCurrency: exchangeRates.label,\n              campaignEstimatedIncomeBudgetsCurrency:\n                parseFloat(estimatedIncomeBudgetCurrency) === null\n                  ? 0.0\n                  : parseFloat(estimatedIncomeBudgetCurrency),\n              campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                estimatedCostsBudgetCurrency\n              ),\n              campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                netProfitTargetBudgetCurrency\n              ),\n              campaignEstimatedIncomeEur:\n                parseFloat(estimatedIncome) === null\n                  ? 0.0\n                  : parseFloat(estimatedIncome),\n              campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n              campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n              totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n              comments: comments,\n              additionalInformation: comments,\n              localCurrency: requestorsCompanyName.value.currency,\n\n              projectType: \"European One Vendor\",\n            },\n          };\n          var children: Submission[] = [];\n          children.push({\n            project: projectId,\n            title: \"\",\n            parentId: \"\",\n            group: \"vendor\",\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              vendorName: vendorName.label,\n              productionProjectManager: vendor.projectManager,\n              creditorNumber: vendor.creditor,\n              debitorNumber: vendor.debitor,\n              manufacturerNumber: vendor.manufacturer,\n              businessUnit: vendor.bu,\n              PH1: vendor.ph.label,\n              vendorBudgetCurrency:\n                budgetSource.value === \"noBudget\"\n                  ? \"N/A\"\n                  : vendor.budgetCurrency.label,\n              vendorAmount:\n                isNaN(parseFloat(vendor.localBudget)) ||\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(vendor.localBudget),\n              // cbbudgetEur: parseFloat(vendor.eurBudget),\n              vendorShare: 100,\n              estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n              estimatedIncomeCC:\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncomeBudgetCurrency),\n              estimatedResultCC:\n                parseFloat(netProfitTargetBudgetCurrency) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n              estimatedIncomeEUR:\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncome),\n              estimatedCostsEUR: parseFloat(estimatedCosts),\n              estimatedResultEUR:\n                parseFloat(netProfitTarget) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              estimatedResultBC:\n                parseFloat(netProfitTargetBudgetCurrency) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              projectType: \"European One Vendor\",\n              // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n            },\n          });\n\n          costBreakdown.forEach((company: any) => {\n            children.push({\n              project: projectId,\n              title: \"\",\n              parentId: \"\",\n              group: \"country\",\n              created: new Date(),\n              updated: new Date(),\n              status: \"New\",\n              author: requestorsName,\n              data: {\n                projectName: campaignName,\n                additionalInformation: comments,\n                campaignChannel: campaignChannel.label,\n                mirrorProjectNumber: projectNumber,\n                projectNumber: company.projectNumber,\n                campaignStartDate:\n                  startDate === null ? null : startDate.toString(),\n                campaignEndDate: endDate === null ? null : endDate.toString(),\n                budgetSource: budgetSource.label,\n                campaignCurrency: exchangeRates.label,\n                vendorName: vendorName.label,\n                businessUnit: vendor.bu,\n                PH1: vendor.ph.label,\n                vendorShare: 100,\n                estimatedIncomeEUR:\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(estimatedIncome),\n                estimatedCostsEUR: parseFloat(estimatedCosts),\n                estimatedResultEUR:\n                  parseFloat(netProfitTarget) *\n                  (budgetSource.value === \"noBudget\" ? -1 : 1),\n                estimatedResultBC:\n                  parseFloat(netProfitTargetBudgetCurrency) *\n                  (budgetSource.value === \"noBudget\" ? -1 : 1),\n                projectType: \"European One Vendor\",\n                companyName: company.companyName,\n                countryCodeEMEA: company.companyCode,\n                country: company.country,\n                countriesEMEA: company.country,\n                productionProjectManager: company.contactEmail,\n                countryShare: parseFloat(company.share),\n                countryBudgetContributionEur: company.contribution,\n                countryCostEstimationEur: company.estimatedCosts,\n                countryBudgetContributionCC: isNaN(\n                  parseFloat(company.contribution)\n                )\n                  ? 0.0\n                  : parseFloat(company.contribution),\n                countryCostEstimationCC: parseFloat(company.estimatedCosts),\n              },\n            });\n          });\n          var submission: SubmissionWithChildren = {\n            submission: parent,\n            children,\n          };\n          if (props.isDraft) {\n            submission.submission.id = props.submission.id;\n            RestAPI.updateDraft(submission).then((response) => {\n              props.history.push(\"/\");\n            });\n          } else {\n            RestAPI.createDraft(submission).then((response) => {\n              props.history.push(\"/\");\n            });\n          }\n        }}\n      >\n        Draft\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"teal.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"teal.300\", \"#377bbf\"),\n        }}\n        isDisabled={\n          !costBreakdown.some((company: any) => company.companyCode === \"6110\")\n        }\n        onClick={() => {\n          var company = costBreakdown.find(\n            (c: any) => c.companyCode === \"6110\"\n          );\n          if (company === undefined) {\n            return;\n          }\n          var parent = {\n            project: \"6246bc93fa2a446faadb8d9a\",\n            title: \"\",\n            parentId: null,\n            group: \"country\",\n            created: new Date(),\n            updated: new Date(),\n            status: \"Incomplete\",\n            author: requestorsName,\n            data: {\n              status: \"Incomplete\",\n              projectName: campaignName,\n              additionalInformation: comments,\n              campaignChannel: campaignChannel.label,\n              mirrorProjectNumber: projectNumber,\n              projectNumber: company.projectNumber,\n              campaignStartDate:\n                startDate === null ? null : startDate.toString(),\n              campaignEndDate: endDate === null ? null : endDate.toString(),\n              budgetSource: budgetSource.label,\n              campaignCurrency: exchangeRates.label,\n              vendorName: vendorName.label,\n              businessUnit: vendor.bu,\n              PH1: vendor.ph.label,\n              vendorShare: 100,\n              estimatedIncomeEUR:\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncome),\n              estimatedCostsEUR: parseFloat(estimatedCosts),\n              estimatedResultEUR:\n                parseFloat(netProfitTarget) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              estimatedResultBC:\n                parseFloat(netProfitTargetBudgetCurrency) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              projectType: \"European One Vendor\",\n              companyName: company.companyName,\n              countryCodeEMEA: company.companyCode,\n              country: company.country,\n              countriesEMEA: company.country,\n              productionProjectManager: company.contactEmail,\n              countryShare: parseFloat(company.share),\n              countryBudgetContributionEur: company.contribution,\n              countryCostEstimationEur: company.estimatedCosts,\n              countryBudgetContributionCC: isNaN(\n                parseFloat(company.contribution)\n              )\n                ? 0.0\n                : parseFloat(company.contribution),\n              countryCostEstimationCC: parseFloat(company.estimatedCosts),\n            },\n          };\n          RestAPI.createSubmission(parent).then((response) => {\n            props.history.push(\"/vendors\");\n          });\n        }}\n      >\n        Local\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Ermv(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorsNames(\n          props.children\n            .filter((s) => s.group === \"vendor\")\n            .map((s) => {\n              return { label: s.data.vendorName, value: s.data.vendorName };\n            })\n        );\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var v: any[] = [];\n        var c: any[] = [];\n\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.mirrorProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n\n        props.children\n          .filter((s) => s.group === \"vendor\")\n          .forEach((s) => {\n            v.push({\n              vendor: s.data.vendorName,\n              projectManager: s.data.marketingResponsible,\n              creditor: s.data.creditorNumber,\n              debitor: s.data.debitorNumber,\n              manufacturer: s.data.manufacturerNumber,\n              bu: s.data.businessUnit,\n              ph: { label: s.data.PH1, value: s.data.PH1 },\n              budgetCurrency: {\n                label: s.data.vendorBudgetCurrency,\n                value: (\n                  ExchangeRates.find(\n                    (er) => er.label === s.data.vendorBudgetCurrency\n                  ) || { value: \"\" }\n                ).value,\n              },\n              budgetAmount: (s.data.vendorBudgetAmount || 0).toFixed(2),\n              localBudget: (s.data.vendorAmount || 0).toFixed(2),\n              eurBudget: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n              share: s.data.vendorShare.toFixed(0) || \"0\",\n              estimatedCostsCC: (s.data.estimatedCostsCC || 0).toFixed(2),\n              estimatedIncomeCC: (s.data.estimatedIncomeCC || 0).toFixed(2),\n              estimatedCostsLC: \"0.00\",\n              estimatedCostsEUR: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              netProfitTargetVC: (s.data.estimatedResultCC || 0).toFixed(2),\n              netProfitTargetLC: (s.data.estimatedResultBC || 0).toFixed(2),\n              netProfitTargetEUR: (s.data.estimatedResultEUR || 0).toFixed(2),\n            });\n          });\n        v.push({\n          vendor: \"TOTAL\",\n          projectManager: \"\",\n          creditor: \"\",\n          debitor: \"\",\n          manufacturer: \"\",\n          bu: \"\",\n          ph: { label: \"\", value: \"\" },\n          budgetCurrency: { label: \"\", value: \"\" },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setVendors([...v]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: vendor.value.alsoMarketingConsultant,\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: vendor.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    data.push({\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: \"\",\n      eurBudget: \"\",\n      share: \"\",\n      estimatedCostsCC: \"\",\n      estimatedIncomeCC: \"\",\n      estimatedCostsLC: \"\",\n      estimatedCostsEUR: \"\",\n      netProfitTargetVC: \"\",\n      netProfitTargetLC: \"\",\n      netProfitTargetEUR: \"\",\n    });\n    setVendors(data);\n  }, [vendorsNames]);\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    // if (props.submission) {\n    //   return;\n    // }\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(0));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    // if (props.submission) {\n    //   return;\n    // }\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n\n    var temp = [...vendors];\n    temp.slice(0, -1).forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    var totalVendorBudgetInLC = 0;\n    var totalVendorBudgetInEUR = 0;\n    var totalVendorShare = 0;\n    var totalEstimatedIncomeInCC = 0;\n    var totalEstimatedCostsInCC = 0;\n    var totalEstimatedCostsInLC = 0;\n    var totalEstimatedCostsInEUR = 0;\n    var totalNetProfitTargetInCC = 0;\n    var totalNetProfitTargetInLC = 0;\n    var totalNetProfitTargetInEUR = 0;\n    temp.slice(0, -1).forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 2)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (parseFloat(row.share) * 0.01 * parseFloat(netProfitTarget)).toFixed(2);\n\n      row.netProfitTargetLC = (\n        parseFloat(row.netProfitTargetEUR) * localExchangeRate\n      ).toFixed(2);\n\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n      totalVendorBudgetInLC += parseFloat(row.localBudget);\n      totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n      totalVendorShare += parseFloat(row.share);\n      totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n      totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n      totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n      totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n      totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n      totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n      totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n    });\n\n    temp[temp.length - 1] = {\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: totalVendorBudgetInLC.toFixed(2),\n      eurBudget: totalVendorBudgetInEUR.toFixed(2),\n      share: totalVendorShare.toFixed(2),\n      estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n      estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n      estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n      estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n      netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n      netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n      netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n    };\n\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              var val: any = value;\n              if (value !== null && value.length > 0) {\n                val = val.map((v: any) => {\n                  v.label = value.label.split(\"(\")[0];\n                  return v;\n                });\n              }\n              setVendorsNames(val);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames.map((option) => {\n              return {\n                label: `${option.label} (${option.value.debitorischer} - ${option.value.bu})`,\n                value: option.value,\n              };\n            })}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table hover={false} autoHeight rowHeight={65} data={vendors}>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    isDisabled\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.bu}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].bu = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    isDisabled={budgetSource.value === \"noBudget\"}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 10000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            // classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                invalid: totalcbShare === \"100\" ? false : true,\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    color={rowData.invalid && \"red\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}. Press submit again.`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"619515b754e61c8dd33daa52\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n                    estimatedIncomeBudgetCurrency\n                  ),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n                  projectType: \"European Multi Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              vendors.slice(0, -1).forEach((vendor: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectType: \"European Multi Vendor\",\n                    vendorName: vendor.vendor,\n                    marketingResponsible: vendor.projectManager,\n                    creditorNumber: vendor.creditor,\n                    debitorNumber: vendor.debitor,\n                    manufacturerNumber: vendor.manufacturer,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorBudgetCurrency:\n                      budgetSource.value === \"noBudget\"\n                        ? \"N/A\"\n                        : vendor.budgetCurrency.label,\n                    vendorAmount:\n                      isNaN(parseFloat(vendor.localBudget)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.localBudget),\n                    vendorBudgetAmount:\n                      isNaN(parseFloat(vendor.budgetAmount)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.budgetAmount),\n                    // cbbudgetEur: parseFloat(vendor.eurBudget),\n                    vendorShare: parseFloat(vendor.share),\n                    estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                    estimatedIncomeCC:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.estimatedIncomeCC),\n                    estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n                    // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.eurBudget),\n                    estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n                    estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n                    estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n                  },\n                });\n              });\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: null,\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectName: campaignName,\n                    additionalInformation: comments,\n                    campaignChannel: campaignChannel.label,\n                    mirrorProjectNumber:\n                      company.companyCode + projectNumber.substring(4),\n                    projectNumber: company.projectNumber,\n                    campaignStartDate:\n                      startDate === null ? null : startDate.toString(),\n                    campaignEndDate:\n                      endDate === null ? null : endDate.toString(),\n                    budgetSource: budgetSource.label,\n                    campaignCurrency: exchangeRates.label,\n                    // vendorName: vendorName.label,\n                    // businessUnit: vendor.bu,\n                    // PH1: vendor.ph.label,\n                    vendorShare: 100,\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(estimatedIncome),\n                    estimatedCostsEUR: parseFloat(estimatedCosts),\n                    estimatedResultEUR:\n                      parseFloat(netProfitTarget) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    estimatedResultBC:\n                      parseFloat(netProfitTargetBudgetCurrency) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    projectType: \"European Multi Vendor\",\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Erov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0.00\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n\n      //\n\n      if (props.children && props.children.length > 0) {\n        var vs = props.children.find((s) => s.group === \"vendor\");\n        setVendorName({\n          label: vs.data.vendorName ?? \"\",\n          value: vs.data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: vs.data.vendorName ?? \"\",\n          projectManager: vs.data.productionProjectManager ?? \"\",\n          creditor: vs.data.creditorNumber ?? \"\",\n          debitor: vs.data.debitorNumber ?? \"\",\n          manufacturer: vs.data.manufacturerNumber ?? \"\",\n          bu: vs.data.businessUnit ?? \"\",\n          ph: {\n            label: vs.data.PH1 || \"1\",\n            value: vs.data.PH1 || \"1\",\n          },\n          budgetCurrency: {\n            label: vs.data.budgetCurrency || \"\",\n            value: vs.data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              console.log(s);\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var c: any[] = [];\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            console.log(s);\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.mirrorProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(2));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: \"\",\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendorName.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  // useEffect(() => {\n  //   var totalBudgetEur = 0;\n  //   var totalBudgetLC = 0;\n  //   var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n  //   var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n  //   var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n  //   var totalCostsEur = parseFloat(estimatedCosts);\n\n  //   var temp = [...vendor];\n  //   temp.slice(0, -1).forEach((row: any) => {\n  //     row.eurBudget = (\n  //       parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n  //     ).toFixed(2);\n  //     row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n  //       2\n  //     );\n\n  //     var eb = parseFloat(row.eurBudget);\n  //     var lb = parseFloat(row.localBudget);\n\n  //     if (!isNaN(eb)) {\n  //       totalBudgetEur += eb;\n  //     }\n  //     if (!isNaN(lb)) {\n  //       totalBudgetLC += lb;\n  //     }\n  //   });\n  //   var totalVendorBudgetInLC = 0;\n  //   var totalVendorBudgetInEUR = 0;\n  //   var totalVendorShare = 0;\n  //   var totalEstimatedIncomeInCC = 0;\n  //   var totalEstimatedCostsInCC = 0;\n  //   var totalEstimatedCostsInLC = 0;\n  //   var totalEstimatedCostsInEUR = 0;\n  //   var totalNetProfitTargetInCC = 0;\n  //   var totalNetProfitTargetInLC = 0;\n  //   var totalNetProfitTargetInEUR = 0;\n  //   temp.slice(0, -1).forEach((row: any, index: number) => {\n  //     var vbEur = parseFloat(row.eurBudget);\n  //     var share = 0;\n  //     if (budgetSource.value === \"noBudget\") {\n  //       row.budgetAmount = \"0.00\";\n  //       row.localBudget = \"0.00\";\n  //       row.eurBudget = \"0.00\";\n  //       row.estimatedIncomeCC = \"0.00\";\n  //       share = parseFloat(row.share) * 0.01;\n\n  //       row.estimatedCostsCC = (\n  //         share * parseFloat(estimatedCostsBudgetCurrency)\n  //       ).toFixed(2);\n\n  //       row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n  //       row.estimatedCostsLC = (\n  //         parseFloat(row.estimatedCostsEUR) * localExchangeRate\n  //       ).toFixed(2);\n  //     } else {\n  //       share = vbEur / totalBudgetEur;\n  //       row.share = (share * 100).toFixed(2);\n  //       if (index === temp.length - 1) {\n  //         var totalShare = 0.0;\n  //         temp\n  //           .slice(0, temp.length - 2)\n  //           .forEach((t) => (totalShare += parseFloat(t.share)));\n  //         row.share = (100 - totalShare).toFixed(2);\n  //         share = (100 - totalShare) * 0.01;\n  //       }\n  //       if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n  //         if (!isNaN(totalCostsCC)) {\n  //           row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalIncomeCC)) {\n  //           row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalCostsLC)) {\n  //           row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalCostsEur)) {\n  //           row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n  //         }\n  //       }\n  //     }\n  //     row.netProfitTargetEUR =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (parseFloat(row.share) * 0.01 * parseFloat(netProfitTarget)).toFixed(2);\n\n  //     row.netProfitTargetLC =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (parseFloat(row.netProfitTargetEUR) * localExchangeRate).toFixed(2);\n  //     row.netProfitTargetVC =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n  //     totalVendorBudgetInLC += parseFloat(row.localBudget);\n  //     totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n  //     totalVendorShare += parseFloat(row.share);\n  //     totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n  //     totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n  //     totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n  //     totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n  //     totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n  //     totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n  //     totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n  //   });\n\n  //   temp[temp.length - 1] = {\n  //     vendor: \"TOTAL\",\n  //     projectManager: \"\",\n  //     creditor: \"\",\n  //     debitor: \"\",\n  //     manufacturer: \"\",\n  //     bu: \"\",\n  //     ph: { label: \"\", value: \"\" },\n  //     budgetCurrency: { label: \"\", value: \"\" },\n  //     budgetAmount: \"\",\n  //     localBudget: totalVendorBudgetInLC.toFixed(2),\n  //     eurBudget: totalVendorBudgetInEUR.toFixed(2),\n  //     share: totalVendorShare.toFixed(2),\n  //     estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n  //     estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n  //     estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n  //     estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n  //     netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n  //     netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n  //     netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n  //   };\n\n  //   setTotalVendorBudgetInEUR(totalBudgetEur);\n  //   setTotalVendorBudgetInLC(totalBudgetLC);\n  //   if (!isEqual(vendor, temp)) {\n  //     setVendor(temp);\n  //   }\n  // }, [\n  //   vendor,\n  //   estimatedCostsBudgetCurrency,\n  //   totalEstimatedCostsLC,\n  //   budgetSource,\n  // ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">Target Audience</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setTargetAudience(value.label);\n            }}\n            classNamePrefix=\"select\"\n            value={{ label: targetAudience, value: targetAudience }}\n            isClearable={false}\n            name=\"targetAudience\"\n            options={TargetAudience}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={campaignChannel}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">ALSO Project Approver</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: projectApproval, value: projectApproval }}\n            onChange={(value) => {\n              setProjectApproval(value === null ? \"\" : value.label);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectApprover\"\n            options={[]}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">ALSO Project Approval (attachments)</Text>\n          <Uploader action=\"\" draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">Manufacturer`s Fiscal Period</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={fiscalQuarter}\n            onChange={(value) => {\n              setFiscalQuarter(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={FiscalQuarter}\n          />\n        </Box>\n\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">Budget Approved by Vendor (name and surname)</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={budgetApprovedByVendor}\n            onChange={(event) => {\n              setBudgetApprovedByVendor(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">Budget Approved by Vendor (attachments)</Text>\n          <Uploader\n            action=\"\"\n            disabled={budgetSource.value === \"noBudget\"}\n            draggable\n          >\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n        {/*  */}\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">ALSO Marketing Manager</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.projectManager}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.projectManager = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.bu}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.bu = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}. Press submit again.`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"6246bc93fa2a446faadb8d9a\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency:\n                    parseFloat(estimatedIncomeBudgetCurrency) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur:\n                    parseFloat(estimatedIncome) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n\n                  projectType: \"European One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  marketingResponsible: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : vendor.budgetCurrency.label,\n                  vendorAmount:\n                    isNaN(parseFloat(vendor.localBudget)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(vendor.localBudget),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    mirrorProjectNumber: company.projectNumber,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Elmv(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorsNames(\n          props.children\n            .filter((s) => s.group === \"vendor\")\n            .map((s) => {\n              return { label: s.data.vendorName, value: s.data.vendorName };\n            })\n        );\n\n        var v: any[] = [];\n\n        props.children\n          .filter((s) => s.group === \"vendor\")\n          .forEach((s) => {\n            v.push({\n              vendor: s.data.vendorName,\n              projectManager: s.data.marketingResponsible,\n              creditor: s.data.creditorNumber,\n              debitor: s.data.debitorNumber,\n              manufacturer: s.data.manufacturerNumber,\n              bu: s.data.businessUnit,\n              ph: { label: s.data.PH1, value: s.data.PH1 },\n              budgetCurrency: {\n                label: s.data.vendorBudgetCurrency,\n                value: (\n                  ExchangeRates.find(\n                    (er) => er.label === s.data.vendorBudgetCurrency\n                  ) || { value: \"\" }\n                ).value,\n              },\n              budgetAmount: (s.data.vendorBudgetAmount || 0).toFixed(2),\n              localBudget: (s.data.vendorAmount || 0).toFixed(2),\n              eurBudget: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n              share: s.data.vendorShare.toFixed(0) || \"0\",\n              estimatedCostsCC: (s.data.estimatedCostsCC || 0).toFixed(2),\n              estimatedIncomeCC: (s.data.estimatedIncomeCC || 0).toFixed(2),\n              estimatedCostsLC: \"0.00\",\n              estimatedCostsEUR: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              netProfitTargetVC: (s.data.estimatedResultCC || 0).toFixed(2),\n              netProfitTargetLC: (s.data.estimatedResultBC || 0).toFixed(2),\n              netProfitTargetEUR: (s.data.estimatedResultEUR || 0).toFixed(2),\n            });\n          });\n        v.push({\n          vendor: \"TOTAL\",\n          projectManager: \"\",\n          creditor: \"\",\n          debitor: \"\",\n          manufacturer: \"\",\n          bu: \"\",\n          ph: { label: \"\", value: \"\" },\n          budgetCurrency: { label: \"\", value: \"\" },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setVendors([...v]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: vendor.value.alsoMarketingConsultant,\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: vendor.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    data.push({\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: \"\",\n      eurBudget: \"\",\n      share: \"\",\n      estimatedCostsCC: \"\",\n      estimatedIncomeCC: \"\",\n      estimatedCostsLC: \"\",\n      estimatedCostsEUR: \"\",\n      netProfitTargetVC: \"\",\n      netProfitTargetLC: \"\",\n      netProfitTargetEUR: \"\",\n    });\n    setVendors(data);\n  }, [vendorsNames]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n\n    var temp = [...vendors];\n    temp.slice(0, -1).forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    var totalVendorBudgetInLC = 0;\n    var totalVendorBudgetInEUR = 0;\n    var totalVendorShare = 0;\n    var totalEstimatedIncomeInCC = 0;\n    var totalEstimatedCostsInCC = 0;\n    var totalEstimatedCostsInLC = 0;\n    var totalEstimatedCostsInEUR = 0;\n    var totalNetProfitTargetInCC = 0;\n    var totalNetProfitTargetInLC = 0;\n    var totalNetProfitTargetInEUR = 0;\n    temp.slice(0, -1).forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 2)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (parseFloat(row.share) * 0.01 * parseFloat(netProfitTarget)).toFixed(2);\n\n      row.netProfitTargetLC = (\n        parseFloat(row.netProfitTargetEUR) * localExchangeRate\n      ).toFixed(2);\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n      totalVendorBudgetInLC += parseFloat(row.localBudget);\n      totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n      totalVendorShare += parseFloat(row.share);\n      totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n      totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n      totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n      totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n      totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n      totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n      totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n    });\n\n    temp[temp.length - 1] = {\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: totalVendorBudgetInLC.toFixed(2),\n      eurBudget: totalVendorBudgetInEUR.toFixed(2),\n      share: totalVendorShare.toFixed(2),\n      estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n      estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n      estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n      estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n      netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n      netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n      netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n    };\n\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              var val: any = value;\n              if (value !== null && value.length > 0) {\n                val = val.map((v: any) => {\n                  v.label = value.label.split(\"(\")[0];\n                  return v;\n                });\n              }\n              setVendorsNames(val);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames.map((option) => {\n              return {\n                label: `${option.label} (${option.value.debitorischer} - ${option.value.bu})`,\n                value: option.value,\n              };\n            })}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={vendors}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    isDisabled\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.bu}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].bu = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    isDisabled={budgetSource.value === \"noBudget\"}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}. Press submit again.`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"6246ec8efa2a446faadb8d9b\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n                    estimatedIncomeBudgetCurrency\n                  ),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n                  projectType: \"Local Multi Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              vendors.slice(0, -1).forEach((vendor: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    vendorName: vendor.vendor,\n                    marketingResponsible: vendor.projectManager,\n                    creditorNumber: vendor.creditor,\n                    debitorNumber: vendor.debitor,\n                    manufacturerNumber: vendor.manufacturer,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorBudgetCurrency:\n                      budgetSource.value === \"noBudget\"\n                        ? \"N/A\"\n                        : vendor.budgetCurrency.label,\n                    vendorAmount:\n                      isNaN(parseFloat(vendor.localBudget)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.localBudget),\n                    vendorBudgetAmount:\n                      isNaN(parseFloat(vendor.budgetAmount)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.budgetAmount),\n                    // cbbudgetEur: parseFloat(vendor.eurBudget),\n                    vendorShare: parseFloat(vendor.share),\n                    estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                    estimatedIncomeCC:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.estimatedIncomeCC),\n                    estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n                    // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.eurBudget),\n                    estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n                    estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n                    estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n                  },\n                });\n              });\n\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { SubmissionsTransformer } from \"../../utils/SubmissionsTransformer\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Elov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        props.submission.data.campaignEstimatedIncomeEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCosts(\n        props.submission.data.campaignEstimatedCostsEur.toFixed(2) || \"0.00\"\n      );\n      setNetProfitTarget(\n        props.submission.data.campaignNetProfitTargetEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        props.submission.data.totalEstimatedCostsLC.toFixed(2) || \"0.00\"\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorName({\n          label: props.children[0].data.vendorName ?? \"\",\n          value: props.children[0].data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: props.children[0].data.vendorName ?? \"\",\n          creditor: props.children[0].data.sapCreditorNumber ?? \"\",\n          debitor: props.children[0].data.debitorNumber ?? \"\",\n          manufacturer: props.children[0].data.manufacturerNumber ?? \"\",\n          bu: props.children[0].data.businessUnit ?? \"\",\n          ph: {\n            label: props.children[0].data.PH1 || \"1\",\n            value: props.children[0].data.PH1 || \"1\",\n          },\n          projectManager: props.children[0].productionProjectManager || \"\",\n          budgetCurrency: {\n            label: props.children[0].data.budgetCurrency || \"\",\n            value: props.children[0].data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n      }\n    }\n  }, [props.submission, props.children]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: vendorName.value.alsoMarketingConsultant,\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendorName.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              if (typeof value.label === \"string\") {\n                value.label = value.label.split(\"(\")[0];\n              }\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames.map((option) => {\n              return {\n                label: `${option.label} (${option.value.debitorischer} - ${option.value.bu})`,\n                value: option.value,\n              };\n            })}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            isDisabled\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.bu}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.bu = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}. Press submit again.`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"624ac98682eeddf1a9b6a622\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency:\n                    parseFloat(estimatedIncomeBudgetCurrency) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur:\n                    parseFloat(estimatedIncome) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n                  projectType: \"Local One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  productionProjectManager: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : vendor.budgetCurrency.label,\n                  vendorAmount:\n                    isNaN(parseFloat(vendor.localBudget)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(vendor.localBudget),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/vendors\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport isEqual from \"lodash/isEqual\";\nimport DatePicker from \"react-datepicker\";\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { isDisabled } from \"@chakra-ui/utils\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function Elov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [serviceProvider, setServiceProvider] = useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n  const [services, setServices] = useState<any>([]);\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Name</Text>\n          <Input\n            value={projectName}\n            onChange={(event) => setProjectName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsNames\"\n            isMulti\n            options={VendorsNames}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Service Provider</Text>\n          <Input\n            value={serviceProvider}\n            onChange={(event) => setServiceProvider(event.target.value)}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Services</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={services}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Service Type</HeaderCell>\n              <Cell dataKey=\"serviceType\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.serviceType}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].serviceType = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (LC Currency)</HeaderCell>\n              <Cell dataKey=\"netValueLC\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValueLC}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValueLC = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Local Currency</HeaderCell>\n              <Cell dataKey=\"localCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    menuPortalTarget={document.body}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    value={{\n                      label: rowData.localCurrency,\n                      value: rowData.localCurrency,\n                    }}\n                    onChange={(value) => {\n                      var temp = [...services];\n                      temp[index!].localCurrency =\n                        value === null ? \"\" : value.label;\n                      setServices(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"localCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (Purchase Order Currency)</HeaderCell>\n              <Cell dataKey=\"netValuePO\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValuePO}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValuePO = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Purchase Order Currency Code</HeaderCell>\n              <Cell dataKey=\"poCurrencyCode\">\n                {(rowData, index) => (\n                  <Select\n                    menuPortalTarget={document.body}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    value={{\n                      label: rowData.poCurrencyCode,\n                      value: rowData.poCurrencyCode,\n                    }}\n                    onChange={(value) => {\n                      var temp = [...services];\n                      temp[index!].poCurrencyCode =\n                        value === null ? \"\" : value.label;\n                      setServices(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"poCurrencyCode\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (EUR)</HeaderCell>\n              <Cell dataKey=\"netValueEUR\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValueEUR}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValueEUR = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>External Purchase Order Number</HeaderCell>\n              <Cell dataKey=\"externalPurchaseOrderNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.externalPurchaseOrderNumber}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].externalPurchaseOrderNumber =\n                        event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Purchase Order Date</HeaderCell>\n              <Cell dataKey=\"purchaseOrderDate\">\n                {(rowData, index) => (\n                  <DatePicker\n                    portalId=\"root-portal\"\n                    isClearable={false}\n                    selected={rowData.purchaseOrderDate}\n                    customInput={<Input value={rowData.purchaseOrderDate} />}\n                    onChange={(date) => {\n                      var temp = [...services];\n                      temp[index!].purchaseOrderDate = date;\n                      setServices(temp);\n                    }}\n                    dateFormat=\"dd.MM.yyyy\"\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Name of Person Ordering the Service (ALSO)\n              </HeaderCell>\n              <Cell dataKey=\"orderingPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.orderingPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].orderingPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Name of Person Approving the Purchase Order (ALSO)\n              </HeaderCell>\n              <Cell dataKey=\"approvingPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.approvingPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].approvingPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person from Service Provider Side</HeaderCell>\n              <Cell dataKey=\"contactPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].contactPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Contact Details of Person from Service Provider Side (e-mail,\n                phone)\n              </HeaderCell>\n              <Cell dataKey=\"contactDetails\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactDetails}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].contactDetails = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n          <Button\n            float=\"right\"\n            marginTop=\"20px\"\n            onClick={() => {\n              var temp = [...services];\n              temp.push({});\n              setServices(temp);\n            }}\n          >\n            add\n          </Button>\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        // onClick={() => {\n        //   var projectId = \"62610ab73a88d397b05cea12\";\n\n        //   var parent: Submission = {\n        //     project: projectId,\n        //     title: campaignName,\n        //     parentId: null,\n        //     group: null,\n        //     created: new Date(),\n        //     updated: new Date(),\n        //     status: \"New\",\n        //     author: requestorsName,\n        //     data: {\n        //       purchaseOrderServiceProvider: serviceProvider,\n        //       requestorsCompanyName: requestorsCompanyName.label,\n        //       companyCode: requestorsCompanyName.value.code,\n        //       requestorsCountry: requestorsCompanyName.value.country,\n        //       campaignName: campaignName,\n        //       projectNumber: projectNumber,\n        //       projectName: projectName,\n        //       comments: comments,\n        //       projectType: \"Purchase Order Request\",\n        //     },\n        //   };\n        //   var children: Submission[] = [];\n\n        //   services.forEach((service: any) => {\n        //     children.push({\n        //       project: projectId,\n        //       title: \"\",\n        //       parentId: \"\",\n        //       group: \"vendor\",\n        //       created: new Date(),\n        //       updated: new Date(),\n        //       status: \"New\",\n        //       author: requestorsName,\n        //       data: {\n        //         netValueOfServiceOrderedLC: service.netValueLC,\n        //         localCurrency: service.localCurrency,\n        //         netValuePOC: service.netValuePO,\n        //         purchaseOrderCurrency: service.poCurrencyCode,\n        //         netValueEur: service.netValueEUR,\n        //       },\n        //     });\n        //   });\n\n        //   var submission: SubmissionWithChildren = {\n        //     submission: parent,\n        //     children,\n        //   };\n        //   RestAPI.createSubmissionWithChildren(submission).then((response) => {\n        //     props.history.push(\"/vendors\");\n        //   });\n        // }}\n        onClick={async () => {\n          RestAPI.getSubmissions().then((response) => {\n            var subs = response.data;\n            var targetId = \"\";\n            for (let sub of subs) {\n              if (\n                sub.parentId === null &&\n                sub.data.projectNumber === projectNumber\n              ) {\n                targetId = sub.id || \"\";\n                break;\n              }\n            }\n            if (targetId.length > 0) {\n              RestAPI.updateSubmissionPartial(\n                targetId,\n                \"data.purchaseOrderServiceProvider\",\n                serviceProvider\n              );\n              RestAPI.updateSubmissionPartial(\n                targetId,\n                \"data.vendorNamePO\",\n                vendorsNames.map((v: any) => v.label).join(\", \")\n              );\n              services.forEach(async (service: any) => {\n                await RestAPI.createSubmission({\n                  project: \"62610ab73a88d397b05cea12\",\n                  title: \"\",\n                  parentId: targetId,\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    netValueOfServiceOrderedLC: service.netValueLC,\n                    localCurrency: service.localCurrency,\n                    netValuePOC: service.netValuePO,\n                    purchaseOrderCurrency: service.poCurrencyCode,\n                    netValueEur: service.netValueEUR,\n                  },\n                });\n              });\n              setTimeout(() => {\n                props.history.push(\"/vendors\");\n              }, 2000);\n            }\n          });\n        }}\n        isDisabled={requestorsCompanyName.value.code !== \"6110\"}\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","import { Form } from \"@formio/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  StackDivider,\n  VStack,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  Tag,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiSettings, FiRefreshCw } from \"react-icons/all\";\n\nimport Cerov from \"../../components/projects/cerov\";\nimport Ermv from \"../../components/projects/ermv\";\nimport Erov from \"../../components/projects/erov\";\nimport Elmv from \"../../components/projects/elmv\";\nimport Elov from \"../../components/projects/elov\";\nimport Por from \"../../components/projects/por\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPredefinedProject] = useState<any>(null);\n  const [form, setForm] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) => {\n        setProject(response.data);\n        setForm({ display: \"form\", components: response.data.components });\n        if (props.match.params.id === \"619515b754e61c8dd33daa52\") {\n          setPredefinedProject(\n            <Ermv project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"6246bc93fa2a446faadb8d9a\") {\n          setPredefinedProject(\n            <Erov project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"6246ec8efa2a446faadb8d9b\") {\n          setPredefinedProject(\n            <Elmv project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"624ac98682eeddf1a9b6a622\") {\n          setPredefinedProject(\n            <Elov project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"62610ab73a88d397b05cea12\") {\n          setPredefinedProject(\n            <Por project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"629dfb3f55d209262194a3e6\") {\n          setPredefinedProject(\n            <Cerov project={project} history={props.history} />\n          );\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.push(\"/projects\");\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={props.isAdmin ? \"grid\" : \"none\"}\n            onClick={() => {\n              props.history.push(`/projects/edit/${project.id}`);\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            icon={<FiSettings />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.800\", \"#ABB2BF\")} w=\"100%\" mb={10}>\n        <VStack\n          mb={\"40px\"}\n          pr={{ base: 0, md: \"10px\" }}\n          divider={<StackDivider />}\n          spacing={4}\n          fontSize=\"md\"\n          align=\"stretch\"\n        >\n          <Box>\n            <Stack\n              direction={{ base: \"column\", md: \"row\" }}\n              w=\"100%\"\n              spacing={{ base: \"20px\", md: \"100px\" }}\n            >\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Title\n                </Text>\n                <Text float=\"right\">{project.title}</Text>\n              </Box>\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Tags\n                </Text>\n                <HStack spacing={3} float=\"right\">\n                  {project.tags.map((tag) => {\n                    return (\n                      <Tag\n                        key={tag}\n                        fontWeight={\"400\"}\n                        colorScheme=\"cyan\"\n                        cursor=\"pointer\"\n                      >\n                        {tag}\n                      </Tag>\n                    );\n                  })}\n                </HStack>\n              </Box>\n            </Stack>\n          </Box>\n          <Box>\n            <Text as=\"b\">Description</Text>\n            <Text mt={3}>{project.description}</Text>\n          </Box>\n        </VStack>\n      </Box>\n      {predefinedProject === null ? (\n        <Form\n          // onChange={(event: any) => {\n          //   console.log(event);\n          // }}\n          onSubmit={(formio: any) => {\n            delete formio.data[\"submit\"];\n            var submission: Submission = {\n              project: project.id ?? \"\",\n              parentId: null,\n              group: null,\n              created: new Date(),\n              updated: new Date(),\n              title: \"\",\n              author: \"\",\n              status: project.defaultStatus,\n              data: formio.data,\n            };\n            RestAPI.createSubmission(submission).then((response) => {\n              props.history.push(`/submissions/view/${response.data.id}`);\n            });\n          }}\n          form={form}\n        />\n      ) : (\n        predefinedProject\n      )}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  Text,\n  AccordionIcon,\n  VStack,\n  Heading,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport CreateBookmark from \"../../components/CreateBookmark\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Project from \"../../types/project\";\nimport moment from \"moment\";\nimport { Submission } from \"../../types/submission\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [drafts, setDrafts] = useState<Submission[]>([]);\n\n  useEffect(() => {\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n    RestAPI.getDrafts().then((response) => {\n      console.log(response.data);\n      setDrafts(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Accordion defaultIndex={[0]} allowMultiple>\n        {projects.map((project) => {\n          var pd = drafts.filter((draft) => draft.project === project.id);\n          return (\n            <AccordionItem key={project.id}>\n              <h2>\n                <AccordionButton>\n                  <Box flex=\"1\" textAlign=\"left\">\n                    {project.title}\n                  </Box>\n                  <AccordionIcon />\n                </AccordionButton>\n              </h2>\n              <AccordionPanel pb={4}>\n                {pd.length > 0 ? (\n                  <VStack w=\"100%\" spacing={\"1.5em\"}>\n                    {pd.map((draft, index) => {\n                      return (\n                        <Box key={draft.id} bg=\"white\" w=\"100%\" p=\"15px\">\n                          <Box w=\"100%\" h=\"60px\">\n                            <Heading size=\"lg\" float=\"left\">\n                              {draft.data.requestorsCompanyName} (\n                              {draft.data.campaignName}) #{pd.length - index}\n                            </Heading>\n                            <Button\n                              colorScheme={\"blue\"}\n                              float=\"right\"\n                              onClick={() => {\n                                window.open(\n                                  \"/drafts/view/\" + draft.id,\n                                  \"_blank\",\n                                  \"noopener,noreferrer\"\n                                );\n                              }}\n                            >\n                              Edit\n                            </Button>\n                          </Box>\n                          <Box w=\"100%\">\n                            <VStack align={\"start\"} w=\"100%\">\n                              <p>\n                                Requestor`s Company Name:{\" \"}\n                                {draft.data.requestorsCompanyName}\n                              </p>\n                              <p>\n                                Organizing Company:{\" \"}\n                                {draft.data.organizingCompany}\n                              </p>\n                              <p>Campaign Name: {draft.data.campaignName}</p>\n                              <p>Project Number: {draft.data.projectNumber}</p>\n                              <p>Comments: {draft.data.comments}</p>\n                            </VStack>\n                            <VStack float=\"right\">\n                              <p>\n                                Saved:{\" \"}\n                                {moment(draft.created).format(\n                                  \"DD.MM.YYYY HH:mm\"\n                                )}\n                              </p>\n                              <p>Author: {draft.author}</p>\n                            </VStack>\n                          </Box>\n                        </Box>\n                      );\n                    })}\n                  </VStack>\n                ) : (\n                  \"No drafts saved\"\n                )}\n              </AccordionPanel>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import { Form } from \"@formio/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  StackDivider,\n  VStack,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  Tag,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiSettings, FiRefreshCw } from \"react-icons/all\";\n\nimport Ermv from \"../../components/projects/ermv\";\nimport Erov from \"../../components/projects/erov\";\nimport Elmv from \"../../components/projects/elmv\";\nimport Elov from \"../../components/projects/elov\";\nimport Por from \"../../components/projects/por\";\nimport Cerov from \"../../components/projects/cerov\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n  isDraft?: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPredefinedProject] = useState<any>(null);\n  const [form, setForm] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (props.match.params.id) {\n      if (props.isDraft) {\n        RestAPI.getDraft(props.match.params.id).then((response) => {\n          setForm({ display: \"form\", components: [] });\n          if (response.data.submission.project === \"629dfb3f55d209262194a3e6\") {\n            console.log(response.data);\n            setPredefinedProject(\n              <Cerov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n                isDraft={true}\n              />\n            );\n          }\n        });\n      } else {\n        RestAPI.getSubmissionWithChildren(props.match.params.id).then(\n          (response) => {\n            setForm({ display: \"form\", components: [] });\n            if (\n              response.data.submission.project === \"619515b754e61c8dd33daa52\"\n            ) {\n              setPredefinedProject(\n                <Ermv\n                  project={project}\n                  submission={response.data.submission}\n                  children={response.data.children}\n                  history={props.history}\n                />\n              );\n            }\n            if (\n              response.data.submission.project === \"6246bc93fa2a446faadb8d9a\" ||\n              response.data.submission.project === \"629dfb3f55d209262194a3e6\"\n            ) {\n              setPredefinedProject(\n                <Erov\n                  project={project}\n                  submission={response.data.submission}\n                  children={response.data.children}\n                  history={props.history}\n                />\n              );\n            }\n            if (\n              response.data.submission.project === \"6246ec8efa2a446faadb8d9b\"\n            ) {\n              setPredefinedProject(\n                <Elmv\n                  project={project}\n                  submission={response.data.submission}\n                  children={response.data.children}\n                  history={props.history}\n                />\n              );\n            }\n            if (\n              response.data.submission.project === \"624ac98682eeddf1a9b6a622\"\n            ) {\n              setPredefinedProject(\n                <Elov\n                  project={project}\n                  submission={response.data.submission}\n                  children={response.data.children}\n                  history={props.history}\n                />\n              );\n            }\n            if (props.match.params.id === \"62610ab73a88d397b05cea12\") {\n              setPredefinedProject(\n                <Por project={project} history={props.history} />\n              );\n            }\n          }\n        );\n      }\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.push(\"/projects\");\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={props.isAdmin ? \"grid\" : \"none\"}\n            onClick={() => {\n              props.history.push(`/projects/edit/${project.id}`);\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            icon={<FiSettings />}\n          />\n        </Box>\n      </HStack>\n\n      {predefinedProject === null ? (\n        <Form\n          onSubmit={(formio: any) => {\n            delete formio.data[\"submit\"];\n            var submission: Submission = {\n              project: project.id ?? \"\",\n              parentId: null,\n              group: null,\n              created: new Date(),\n              updated: new Date(),\n              title: \"\",\n              author: \"\",\n              status: project.defaultStatus,\n              data: formio.data,\n            };\n            RestAPI.createSubmission(submission).then((response) => {\n              props.history.push(`/submissions/view/${response.data.id}`);\n            });\n          }}\n          form={form}\n        />\n      ) : (\n        predefinedProject\n      )}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","// source: https://github.com/voodoocreation/ts-deepmerge/blob/master/src/index.ts\ninterface IObject {\n  [key: string]: any\n}\n\ntype TUnionToIntersection<U> = (U extends any\n? (k: U) => void\n: never) extends (k: infer I) => void\n  ? I\n  : never\n\n// istanbul ignore next\nconst isObject = (obj: any) => {\n  if (typeof obj === 'object' && obj !== null) {\n    if (typeof Object.getPrototypeOf === 'function') {\n      const prototype = Object.getPrototypeOf(obj)\n      return prototype === Object.prototype || prototype === null\n    }\n\n    return Object.prototype.toString.call(obj) === '[object Object]'\n  }\n\n  return false\n}\n\nconst merge = <T extends IObject[]>(...objects: T): TUnionToIntersection<T[number]> =>\n  objects.reduce((result, current) => {\n    Object.keys(current).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n        result[key] = Array.from(new Set(result[key].concat(current[key])))\n      } else if (isObject(result[key]) && isObject(current[key])) {\n        result[key] = merge(result[key], current[key])\n      } else {\n        result[key] = current[key]\n      }\n    })\n\n    return result\n  }, {}) as any\n\nexport default merge\n","function pick<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  const ret: any = {}\n  keys.forEach(key => {\n    ret[key] = obj[key]\n  })\n  return ret\n}\n\nexport default pick\n","import React, { createContext, FC, useContext } from \"react\";\nimport { DatepickerStyles } from \"../types\";\nimport merge from \"../utils/deepmerge\";\nimport pick from \"../utils/pick\";\n\nexport interface StylesContextProps {\n  overwriteDefaultStyles: boolean;\n  styles: DatepickerStyles;\n}\n\nexport interface StylesProviderProps {\n  overwriteDefaultStyles?: boolean;\n  styles?: Partial<DatepickerStyles>;\n}\n\nexport const emptyStylesObject: DatepickerStyles = {\n  actionButton: {},\n  arrowIcon: {},\n  buttonsWrapper: {},\n  closeButton: {},\n  datepickerContainer: {},\n  dateRangeInputContainer: {},\n  dateRangeInputDivider: {},\n  day: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  dayContainer: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  inputComponentIcon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInput: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputAddon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputGroup: {\n    active: {},\n    base: {},\n  },\n  monthContainer: {},\n  monthDayGrid: {},\n  monthMonthLabel: {},\n  monthsWrapper: {},\n  monthWeekdayLabel: {},\n  resetDatesButton: {},\n  selectDateContainer: {\n    active: {},\n    base: {},\n  },\n  selectDateDateText: {\n    active: {},\n    base: {},\n  },\n  selectDateText: {\n    active: {},\n    base: {},\n  },\n  datepickerFooter: {},\n};\n\nexport const StylesContext = createContext<StylesContextProps>({\n  styles: emptyStylesObject,\n  overwriteDefaultStyles: false,\n});\n\nexport const StylesProvider: FC<StylesProviderProps> = ({\n  children,\n  overwriteDefaultStyles = false,\n  styles = emptyStylesObject,\n}) => (\n  <StylesContext.Provider\n    value={{ overwriteDefaultStyles, styles: merge(emptyStylesObject, styles) }}\n  >\n    {children}\n  </StylesContext.Provider>\n);\n\nexport function useStyleProps<\n  InitialStyles extends Partial<DatepickerStyles> = Partial<DatepickerStyles>\n>(inlineStyles: InitialStyles) {\n  const { styles, overwriteDefaultStyles } = useContext(StylesContext);\n  const keys = Object.keys(inlineStyles) as (keyof DatepickerStyles)[];\n  const filteredStyles = pick(styles, keys);\n  const result = merge(\n    filteredStyles,\n    !overwriteDefaultStyles ? inlineStyles : ({} as InitialStyles)\n  );\n  return result;\n}\n","import {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronUpIcon,\n} from \"@chakra-ui/icons\";\nimport { IconButton, IconButtonProps } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { ActionButtonStyles } from \"../types\";\n\nexport interface ActionButtonProps extends Omit<IconButtonProps, \"aria-label\"> {\n  direction?: \"up\" | \"right\" | \"down\" | \"left\";\n}\n\nexport const ActionButton: React.FC<ActionButtonProps> = ({\n  direction,\n  ...props\n}) => {\n  let IconComponent = ChevronLeftIcon;\n\n  const styleProps = useStyleProps<ActionButtonStyles>({\n    actionButton: {\n      position: \"relative\",\n    },\n  });\n\n  if (direction === \"up\") {\n    IconComponent = ChevronUpIcon;\n  } else if (direction === \"right\") {\n    IconComponent = ChevronRightIcon;\n  } else if (direction === \"down\") {\n    IconComponent = ChevronDownIcon;\n  } else if (direction === \"left\") {\n    IconComponent = ChevronLeftIcon;\n  }\n\n  return (\n    <IconButton\n      aria-label={`Arrow ${direction}`}\n      icon={<IconComponent />}\n      {...props}\n      {...styleProps.actionButton}\n    />\n  );\n};\n","import {\n  CloseButton as ChakraCloseButton,\n  CloseButtonProps as ChakraCloseButtonProps,\n} from '@chakra-ui/react'\nimport React from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { CloseButtonStyles } from '../types'\n\nexport interface CloseButtonProps extends ChakraCloseButtonProps {}\n\nexport const CloseButton = (props: CloseButtonProps) => {\n  const styleProps = useStyleProps<CloseButtonStyles>({\n    closeButton: {\n      top: 1,\n      right: 1,\n      zIndex: 1,\n      position: 'absolute',\n    },\n  })\n  return <ChakraCloseButton {...styleProps.closeButton} {...props} />\n}\n","export interface DatepickerPhrases {\n  datepickerStartDatePlaceholder: string\n  datepickerStartDateLabel: string\n  datepickerEndDateLabel: string\n  datepickerEndDatePlaceholder: string\n  resetDates: string\n  close: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateSingleInputPhrases extends DatepickerPhrases {\n  dateAriaLabel: string\n  datePlaceholder: string\n}\n\nexport const datepickerPhrases: DatepickerPhrases = {\n  datepickerStartDatePlaceholder: 'Select',\n  datepickerStartDateLabel: 'Start date:',\n  datepickerEndDatePlaceholder: 'Select',\n  datepickerEndDateLabel: 'End date:',\n  resetDates: 'Clean Dates',\n  close: 'Close',\n}\n\nexport const dateRangeInputPhrases: DateRangeInputPhrases = {\n  ...datepickerPhrases,\n\n  startDateAriaLabel: 'Start date',\n  endDateAriaLabel: 'End date',\n\n  startDatePlaceholder: 'Start date',\n  endDatePlaceholder: 'End date',\n}\n\nexport const dateSingleInputPhrases: DateSingleInputPhrases = {\n  ...datepickerPhrases,\n  dateAriaLabel: 'Select date',\n  datePlaceholder: 'Select date',\n}\n","import dateFormat from 'date-fns/format'\n\nexport {\n  monthLabelFormat as monthLabelFormatFn,\n  weekdayLabelFormat as weekdayLabelFormatFn,\n} from '@datepicker-react/hooks'\n\nexport const dayLabelFormatFn = (date: Date) => dateFormat(date, 'd')\n\nexport const defaultDisplayFormat = 'MM/dd/yyyy'\n","import { FocusedInput, FormatFunction, useDatepicker } from '@datepicker-react/hooks'\nimport React, { useContext } from 'react'\nimport { datepickerPhrases, DatepickerPhrases } from '../phrases'\nimport { InputDate } from '../types'\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from '../utils/formatters'\n\nexport type UseDatepickerReturnType = ReturnType<typeof useDatepicker>\n\nexport interface DatepickerFormatProps {\n  dayLabelFormat: typeof dayLabelFormatFn\n  weekdayLabelFormat: typeof weekdayLabelFormatFn\n  monthLabelFormat: typeof monthLabelFormatFn\n}\n\nexport type OnDayRenderType = {\n  isFirst: boolean\n  isLast: boolean\n  isSelected: boolean\n  isWithinHoverRange: boolean\n  isSelectedStartOrEnd: boolean\n  disabledDate: boolean\n}\n\nexport interface DatepickerContextBaseProps {\n  displayFormat: FormatFunction | string\n  startDate: InputDate\n  endDate: InputDate\n  phrases: DatepickerPhrases\n  focusedInput: FocusedInput\n  onDayRender?(date: Date, state: OnDayRenderType): React.ReactNode\n}\n\nexport interface DatepickerContextProps\n  extends DatepickerContextBaseProps,\n    DatepickerFormatProps,\n    UseDatepickerReturnType {}\n\nexport interface DatepickerProviderProps extends Partial<DatepickerContextProps> {}\n\nconst defaultBase: DatepickerContextBaseProps = {\n  startDate: null,\n  endDate: null,\n  focusedInput: null,\n  onDayRender: undefined,\n  displayFormat: defaultDisplayFormat,\n  phrases: datepickerPhrases,\n}\n\nconst defaultFormatters: DatepickerFormatProps = {\n  monthLabelFormat: monthLabelFormatFn,\n  weekdayLabelFormat: weekdayLabelFormatFn,\n  dayLabelFormat: dayLabelFormatFn,\n}\n\nconst defaultUseDatepicker: UseDatepickerReturnType = {\n  numberOfMonths: 2,\n  activeMonths: [],\n  firstDayOfWeek: 0,\n  focusedDate: null,\n  hoveredDate: null,\n  goToDate: () => {},\n  goToNextMonths: () => {},\n  goToNextMonthsByOneMonth: () => {},\n  goToNextYear: () => {},\n  goToPreviousMonths: () => {},\n  goToPreviousMonthsByOneMonth: () => {},\n  goToPreviousYear: () => {},\n  isDateBlocked: () => false,\n  isDateFocused: () => false,\n  isDateHovered: () => false,\n  isDateSelected: () => false,\n  isEndDate: () => false,\n  isFirstOrLastSelectedDate: () => false,\n  isStartDate: () => false,\n  onDateFocus: () => {},\n  onDateHover: () => {},\n  onDateSelect: () => {},\n  onResetDates: () => {},\n}\n\nexport const datepickerContextDefaultValue: DatepickerContextProps = {\n  ...defaultBase,\n  ...defaultFormatters,\n  ...defaultUseDatepicker,\n}\n\nexport const DatepickerContext = React.createContext(datepickerContextDefaultValue)\n\nexport const useDatepickerContext = () => useContext(DatepickerContext)\n\nexport const DatepickerProvider: React.FC<DatepickerProviderProps> = ({ children, ...props }) => (\n  <DatepickerContext.Provider value={{ ...datepickerContextDefaultValue, ...props }}>\n    {children}\n  </DatepickerContext.Provider>\n)\n","import { Box, Button, useColorModeValue } from \"@chakra-ui/react\";\nimport { isEndDate, isStartDate, useDay } from \"@datepicker-react/hooks\";\nimport React, { useMemo, useRef } from \"react\";\nimport {\n  OnDayRenderType,\n  useDatepickerContext,\n} from \"../context/DatepickerContext\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { DayState, DayStyles } from \"../types\";\n\nfunction getColor<T>(\n  { isSelected, isWithinHoverRange, isFirst, isLast }: OnDayRenderType,\n  { base, normal, rangeHover, selected, firstOrLast, first, last }: DayState<T>\n) {\n  let style = base;\n  if (!isSelected && !isWithinHoverRange) style = { ...style, ...normal };\n  if (isSelected) style = { ...style, ...selected };\n  if (isWithinHoverRange) style = { ...style, ...rangeHover };\n  if (isFirst || isLast) style = { ...style, ...firstOrLast };\n  if (isFirst) style = { ...style, ...first };\n  if (isLast) style = { ...style, ...last };\n  return style;\n}\n\ninterface DayProps {\n  day: string;\n  date: Date;\n}\n\nexport function Day({ day, date }: DayProps) {\n  const dayRef = useRef<any>(null);\n\n  const {\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateSelect,\n    onDateFocus,\n    onDateHover,\n    onDayRender,\n    startDate,\n    endDate,\n  } = useDatepickerContext();\n\n  const dayProps = useDay({\n    date,\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateFocus,\n    onDateSelect,\n    onDateHover,\n    dayRef,\n  });\n\n  const {\n    onClick,\n    onKeyDown,\n    onMouseEnter,\n    tabIndex,\n    isSelectedStartOrEnd,\n    isSelected,\n    isWithinHoverRange,\n    disabledDate,\n  } = dayProps;\n\n  const styleProps = useStyleProps<DayStyles>({\n    day: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        minWidth: \"unset\",\n        fontWeight: \"medium\",\n        fontSize: [\"sm\", \"md\"],\n        border: \"2px solid\",\n        textColor: useColorModeValue(\"gray.900\", \"white\"),\n        borderRadius: \"100%\",\n        borderColor: \"transparent\",\n        background: \"transparent\",\n        overflow: \"hidden\",\n        _hover: {\n          borderColor: \"transparent\",\n          background: \"transparent\",\n        },\n      },\n      normal: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      rangeHover: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      selected: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      firstOrLast: {\n        textColor: useColorModeValue(\"white\", \"black\"),\n        background: useColorModeValue(\"blue.400\", \"white\"),\n        _hover: {\n          textColor: useColorModeValue(\"white\", \"black\"),\n          background: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      first: {},\n      last: {},\n    },\n    dayContainer: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      normal: {},\n      rangeHover: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      selected: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"0%\",\n        },\n      },\n      firstOrLast: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n      },\n      first: {\n        borderLeftRadius: \"100%\",\n      },\n      last: {\n        borderRightRadius: \"100%\",\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n    },\n  });\n\n  const isFirst = isStartDate(date, startDate);\n  const isLast = isEndDate(date, endDate);\n\n  const containerStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.dayContainer.base,\n          normal: styleProps.dayContainer.normal,\n          rangeHover: styleProps.dayContainer.rangeHover,\n          selected: styleProps.dayContainer.selected,\n          first: styleProps.dayContainer.first,\n          last: styleProps.dayContainer.last,\n          firstOrLast: styleProps.dayContainer.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  const buttonStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.day.base,\n          normal: styleProps.day.normal,\n          rangeHover: styleProps.day.rangeHover,\n          selected: styleProps.day.selected,\n          first: styleProps.day.first,\n          last: styleProps.day.last,\n          firstOrLast: styleProps.day.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  return (\n    <Box {...containerStyle}>\n      <Button\n        {...buttonStyle}\n        variant=\"unstyled\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        onMouseEnter={onMouseEnter}\n        tabIndex={tabIndex}\n        ref={dayRef}\n        disabled={disabledDate}\n        data-testid=\"Day\"\n        aria-label={`Day-${date.toDateString()}`}\n        type=\"button\"\n      >\n        {typeof onDayRender === \"function\"\n          ? onDayRender(date, {\n              isFirst,\n              isLast,\n              isSelected,\n              isWithinHoverRange,\n              isSelectedStartOrEnd,\n              disabledDate,\n            })\n          : day}\n      </Button>\n    </Box>\n  );\n}\n","import { StateProp } from '../types'\n\nexport const getStateStyle = <T>({ base, active }: StateProp<T>, isActive: boolean) => {\n  return isActive ? { ...base, ...active } : base\n}\n","import { CalendarIcon } from '@chakra-ui/icons'\nimport {\n  Icon,\n  Input as ChakraInput,\n  InputGroup,\n  InputLeftAddon,\n  InputProps as ChakraInputProps,\n} from '@chakra-ui/react'\nimport { parseDate } from '@datepicker-react/hooks'\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputComponentStyles, InputDate } from '../types'\nimport { defaultDisplayFormat } from '../utils/formatters'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface InputProps {\n  allowEditableInputs?: boolean\n  dateFormat?: string\n  disableAccessibility?: boolean\n  iconComponent?: typeof CalendarIcon\n  id?: string\n  isActive?: boolean\n  name?: string\n  onChange?(date: InputDate): void\n  onClick?(): void\n  placeholder?: string\n  showCalendarIcon?: boolean\n  value?: string\n}\n\ninterface BaseProps extends Omit<ChakraInputProps, 'onChange' | 'onClick' | 'value'>, InputProps {}\n\nexport const Input = forwardRef((props: BaseProps, inputRef: Ref<any>) => {\n  const {\n    dateFormat = defaultDisplayFormat,\n    disableAccessibility,\n    iconComponent = CalendarIcon,\n    id,\n    isActive = false,\n    name,\n    onChange = () => {},\n    onClick = () => {},\n    placeholder,\n    showCalendarIcon = true,\n    value,\n    allowEditableInputs = false,\n\n    ...inputProps\n  } = props\n\n  const ref = useRef<any>(null)\n\n  const [searchString, setSearchString] = useState(value)\n\n  const styleProps = useStyleProps<InputComponentStyles>({\n    inputComponentInputGroup: {\n      base: {},\n      active: {},\n    },\n    inputComponentInput: {\n      base: {},\n      active: {},\n    },\n    inputComponentIcon: {\n      base: {},\n      active: {},\n    },\n    inputComponentInputAddon: {\n      base: {},\n      active: {},\n    },\n  })\n\n  // Note: value was updated outside of InputComponent\n  useEffect(() => {\n    setSearchString(value)\n  }, [value])\n\n  function handleOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const dateValue = e.target.value\n    setSearchString(dateValue)\n\n    if (typeof ref.current === 'number') {\n      clearTimeout(ref.current)\n    }\n\n    ref.current = setTimeout(() => {\n      onClick()\n      const parsedDate = parseDate(dateValue, dateFormat, new Date())\n      const isValidDate = !isNaN(parsedDate.getDate())\n\n      if (isValidDate) {\n        onChange(parsedDate)\n      } else {\n        onChange(null)\n      }\n    }, 1000)\n  }\n\n  function handleOnFocus(_e: React.FocusEvent<HTMLInputElement>) {\n    onClick()\n  }\n\n  return (\n    <InputGroup {...getStateStyle(styleProps.inputComponentInputGroup, isActive)} htmlFor={id}>\n      {showCalendarIcon && (\n        <InputLeftAddon {...getStateStyle(styleProps.inputComponentInputAddon, isActive)}>\n          <Icon as={iconComponent} {...getStateStyle(styleProps.inputComponentIcon, isActive)} />\n        </InputLeftAddon>\n      )}\n      <ChakraInput\n        {...inputProps}\n        {...getStateStyle(styleProps.inputComponentInput, isActive)}\n        ref={inputRef}\n        id={id}\n        name={name}\n        isReadOnly={!allowEditableInputs}\n        value={searchString}\n        placeholder={placeholder}\n        tabIndex={disableAccessibility ? -1 : 0}\n        autoComplete=\"off\"\n        data-testid=\"DatepickerInput\"\n        onFocus={handleOnFocus}\n        onChange={handleOnChange}\n      />\n    </InputGroup>\n  )\n})\n","import { Box, Flex, SimpleGrid, Text } from '@chakra-ui/react'\nimport { CalendarDay, useMonth } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { MonthStyles } from '../types'\nimport { Day } from './Day'\n\nexport interface MonthProps {\n  year: number\n  month: number\n}\n\nexport const Month = ({ year, month }: MonthProps) => {\n  const styleProps = useStyleProps<MonthStyles>({\n    monthContainer: {},\n    monthMonthLabel: {\n      justifyContent: 'center',\n      fontWeight: 'bold',\n      mb: 6,\n      fontSize: ['md', 'lg'],\n    },\n    monthWeekdayLabel: {\n      justifyContent: 'center',\n      color: 'gray.500',\n      mb: 4,\n      fontSize: ['sm', 'md'],\n    },\n    monthDayGrid: {\n      rowGap: 1,\n    },\n  })\n\n  const {\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  } = useDatepickerContext()\n\n  const { days, weekdayLabels, monthLabel } = useMonth({\n    year,\n    month,\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  })\n\n  return (\n    <Box {...styleProps.monthContainer}>\n      <Flex {...styleProps.monthMonthLabel}>\n        <Text>{monthLabel}</Text>\n      </Flex>\n      <SimpleGrid columns={7}>\n        {weekdayLabels.map((weekdayLabel: string) => (\n          <Flex key={weekdayLabel} {...styleProps.monthWeekdayLabel}>\n            <Text>{weekdayLabel}</Text>\n          </Flex>\n        ))}\n      </SimpleGrid>\n      <SimpleGrid {...styleProps.monthDayGrid} columns={7}>\n        {days.map((day: CalendarDay, index: number) =>\n          typeof day === 'object' ? (\n            <Day date={day.date} key={`${day.dayLabel}-${index}`} day={day.dayLabel} />\n          ) : (\n            <div key={index} />\n          ),\n        )}\n      </SimpleGrid>\n    </Box>\n  )\n}\n","import { RepeatIcon } from '@chakra-ui/icons'\nimport { Button } from '@chakra-ui/react'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { ResetDatesButtonStyles } from '../types'\n\ninterface ResetDatesProps {\n  onResetDates(): void\n  text: string\n}\n\nexport function ResetDatesButton({ onResetDates, text }: ResetDatesProps) {\n  const { phrases } = useDatepickerContext()\n\n  const styleProps = useStyleProps<ResetDatesButtonStyles>({\n    resetDatesButton: {},\n  })\n\n  function handleMouseUp(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.currentTarget.blur()\n  }\n\n  return (\n    <Button\n      icon={<RepeatIcon />}\n      tabIndex={-1}\n      aria-label={phrases.resetDates}\n      {...styleProps.resetDatesButton}\n      onClick={onResetDates}\n      onMouseUp={handleMouseUp}\n    >\n      {text}\n    </Button>\n  )\n}\n","import { Stack, Text } from '@chakra-ui/react'\nimport { getInputValue } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputDate, SelectDateStyles } from '../types'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface SelectedDateProps {\n  isFocused: boolean\n  date: InputDate\n}\n\nexport const SelectedDate = ({ isFocused, date }: SelectedDateProps) => {\n  const { phrases, displayFormat } = useDatepickerContext()\n\n  const styleProps = useStyleProps<SelectDateStyles>({\n    selectDateContainer: {\n      base: {\n        width: '100%',\n        borderBottom: '2px solid',\n        borderColor: 'gray.300',\n        paddingBottom: [1, 3],\n      },\n      active: {\n        borderColor: 'blue.400',\n      },\n    },\n    selectDateText: {\n      base: {\n        fontSize: 'xs',\n        color: 'gray.500',\n      },\n      active: {},\n    },\n    selectDateDateText: {\n      base: {\n        fontWeight: 'bold',\n        fontSize: ['sm', 'md', 'lg'],\n      },\n      active: {},\n    },\n  })\n\n  return (\n    <Stack {...getStateStyle(styleProps.selectDateContainer, isFocused)}>\n      <Text {...getStateStyle(styleProps.selectDateText, isFocused)}>\n        {phrases.datepickerStartDateLabel}\n      </Text>\n      <Text {...getStateStyle(styleProps.selectDateDateText, isFocused)}>\n        {getInputValue(date, displayFormat, phrases.datepickerStartDatePlaceholder)}\n      </Text>\n    </Stack>\n  )\n}\n","import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Flex,\n  HStack,\n  Stack,\n  useBreakpointValue,\n  useColorModeValue,\n  useTheme,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  MonthType,\n  START_DATE,\n  useDatepicker,\n  UseDatepickerProps,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useImperativeHandle, useRef } from \"react\";\nimport {\n  ActionButton,\n  CloseButton,\n  Month,\n  ResetDatesButton,\n  SelectedDate,\n} from \"./components\";\nimport {\n  DatepickerFormatProps,\n  DatepickerProvider,\n} from \"./context/DatepickerContext\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { DatepickerPhrases, datepickerPhrases } from \"./phrases\";\nimport { DatepickerComponentStyles } from \"./types\";\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from \"./utils/formatters\";\n\nexport interface DatepickerElement {\n  onDateSelect?(date: Date): void;\n}\n\nexport interface DatepickerProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerFormatProps>,\n    Partial<UseDatepickerProps> {\n  displayFormat?: string;\n  onClose?(): void;\n  onDayRender?(date: Date): React.ReactNode;\n  phrases?: DatepickerPhrases;\n  showClose?: boolean;\n  showResetDates?: boolean;\n  showSelectedDates?: boolean;\n  vertical?: boolean;\n}\n\nexport const Datepicker = React.forwardRef(\n  (props: DatepickerProps, ref: Ref<DatepickerElement>) => {\n    const {\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      endDate = null,\n      exactMinBookingDays = false,\n      firstDayOfWeek,\n      focusedInput = null,\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays = 1,\n      monthLabelFormat,\n      numberOfMonths = 2,\n      onClose = () => {},\n      onDatesChange = () => {},\n      onDayRender,\n      overwriteDefaultStyles,\n      phrases = datepickerPhrases,\n      showClose = true,\n      showResetDates = true,\n      showSelectedDates = true,\n      startDate = null,\n      styles: customStyles,\n      unavailableDates = [],\n      weekdayLabelFormat,\n    } = props;\n\n    const dp = useDatepicker({\n      changeActiveMonthOnSelect,\n      endDate,\n      exactMinBookingDays,\n      firstDayOfWeek,\n      focusedInput,\n      initialVisibleMonth,\n      isDateBlocked,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays,\n      numberOfMonths,\n      onDatesChange,\n      startDate,\n      unavailableDates,\n    });\n\n    useImperativeHandle(ref, () => ({\n      onDateSelect: (date: Date) => {\n        dp.onDateSelect(date);\n      },\n    }));\n\n    const monthGridRef = useRef<HTMLDivElement>(null);\n\n    function scrollTopToMonthGrid() {\n      if (monthGridRef && monthGridRef.current && vertical) {\n        monthGridRef.current.scrollTop = 0;\n      }\n    }\n\n    function _goToNextMonths() {\n      dp.goToNextMonths();\n      scrollTopToMonthGrid();\n    }\n\n    function _goToPreviousMonths() {\n      dp.goToPreviousMonths();\n      scrollTopToMonthGrid();\n    }\n\n    const isMobile = useBreakpointValue({ base: true, md: false });\n    const vertical = props.vertical || isMobile;\n\n    const styleProps = useStyleProps<DatepickerComponentStyles>({\n      datepickerContainer: {\n        background: useColorModeValue(\"white\", \"gray.700\"),\n        borderRadius: \"md\",\n        position: \"relative\",\n        width: \"fit-content\",\n        shadow: \"md\",\n        px: [3, 5],\n        py: [5, 7],\n        zIndex: 1,\n      },\n      monthsWrapper: {\n        spacing: [0, 8],\n      },\n      buttonsWrapper: {\n        spacing: [1, 3],\n      },\n      arrowIcon: {\n        my: [5, 15],\n        color: \"gray.500\",\n      },\n      datepickerFooter: {\n        justifyContent: \"space-between\",\n        pt: [1, 3],\n      },\n    });\n\n    return (\n      <StylesProvider\n        styles={customStyles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <DatepickerProvider\n          activeMonths={dp.activeMonths}\n          dayLabelFormat={dayLabelFormat || dayLabelFormatFn}\n          displayFormat={displayFormat}\n          endDate={endDate}\n          firstDayOfWeek={dp.firstDayOfWeek}\n          focusedDate={dp.focusedDate}\n          focusedInput={focusedInput}\n          goToDate={dp.goToDate}\n          goToNextMonths={_goToNextMonths}\n          goToNextMonthsByOneMonth={dp.goToNextMonthsByOneMonth}\n          goToNextYear={dp.goToNextYear}\n          goToPreviousMonths={_goToPreviousMonths}\n          goToPreviousMonthsByOneMonth={dp.goToPreviousMonthsByOneMonth}\n          goToPreviousYear={dp.goToPreviousYear}\n          hoveredDate={dp.hoveredDate}\n          isDateBlocked={dp.isDateBlocked}\n          isDateFocused={dp.isDateFocused}\n          isDateHovered={dp.isDateHovered}\n          isDateSelected={dp.isDateSelected}\n          isEndDate={dp.isEndDate}\n          isFirstOrLastSelectedDate={dp.isFirstOrLastSelectedDate}\n          isStartDate={dp.isStartDate}\n          monthLabelFormat={monthLabelFormat || monthLabelFormatFn}\n          numberOfMonths={dp.numberOfMonths}\n          onDateFocus={dp.onDateFocus}\n          onDateHover={dp.onDateHover}\n          onDateSelect={dp.onDateSelect}\n          onDayRender={onDayRender}\n          onResetDates={dp.onResetDates}\n          phrases={phrases}\n          startDate={startDate}\n          weekdayLabelFormat={weekdayLabelFormat || weekdayLabelFormatFn}\n        >\n          <Box {...styleProps.datepickerContainer} zIndex={10} mt={\"8px\"}>\n            {showClose && <CloseButton onClick={onClose} />}\n\n            {showSelectedDates && (\n              <Box mb={6}>\n                <HStack data-testid=\"SelectedDatesGrid\">\n                  <SelectedDate\n                    date={startDate}\n                    isFocused={focusedInput === START_DATE}\n                  />\n                  <Flex justifyContent=\"center\" alignItems=\"center\">\n                    <ArrowForwardIcon {...styleProps.arrowIcon} />\n                  </Flex>\n                  <SelectedDate\n                    date={endDate}\n                    isFocused={focusedInput === END_DATE}\n                  />\n                </HStack>\n              </Box>\n            )}\n            <Box position=\"relative\">\n              <Stack\n                overflow={vertical ? \"auto\" : undefined}\n                data-testid=\"MonthGrid\"\n                isInline={!vertical}\n                ref={monthGridRef}\n                padding={1}\n                {...styleProps.monthsWrapper}\n                onMouseLeave={() => {\n                  if (dp.hoveredDate) {\n                    dp.onDateHover(null);\n                  }\n                }}\n              >\n                {dp.activeMonths.map((month: MonthType) => (\n                  <Month\n                    key={`month-${month.year}-${month.month}`}\n                    year={month.year}\n                    month={month.month}\n                  />\n                ))}\n              </Stack>\n\n              <Flex {...styleProps.datepickerFooter}>\n                <HStack {...styleProps.buttonsWrapper}>\n                  <ActionButton\n                    direction={vertical ? \"up\" : \"left\"}\n                    onClick={_goToPreviousMonths}\n                    aria-label=\"Previous month\"\n                  />\n                  <ActionButton\n                    direction={vertical ? \"down\" : \"right\"}\n                    onClick={_goToNextMonths}\n                    aria-label=\"Next month\"\n                  />\n                </HStack>\n                {showResetDates && (\n                  <ResetDatesButton\n                    onResetDates={dp.onResetDates}\n                    text={phrases.resetDates}\n                  />\n                )}\n              </Flex>\n            </Box>\n          </Box>\n        </DatepickerProvider>\n      </StylesProvider>\n    );\n  }\n);\n","import { ArrowForwardIcon, CalendarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Stack,\n  StackDivider,\n  useBreakpointValue,\n  Icon,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  FocusedInput,\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useEffect, useRef, useState } from \"react\";\nimport { FaArrowRight } from \"react-icons/all\";\nimport { Input, InputProps } from \"./components\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { dateRangeInputPhrases, DateRangeInputPhrases } from \"./phrases\";\nimport { DateRangeInputStyles, InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface DateRangeInputProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerProps> {\n  startDateInputProps?: Partial<InputProps>;\n  endDateInputProps?: Partial<InputProps>;\n  phrases?: DateRangeInputPhrases;\n  showDivider?: boolean;\n  placement?: \"top\" | \"bottom\";\n  onFocusChange?(focusedInput: FocusedInput): void;\n  endIcon?: typeof CalendarIcon;\n  endId?: string;\n  endName?: string;\n  endPlaceholder?: string;\n  endRef?: Ref<HTMLInputElement>;\n  endShowCalendarIcon?: boolean;\n  startIcon?: typeof CalendarIcon;\n  startId?: string;\n  startName?: string;\n  startPlaceholder?: string;\n  startRef?: Ref<HTMLInputElement>;\n  startShowCalendarIcon?: boolean;\n  allowEditableInputs?: boolean;\n}\n\nexport const DateRangeInput: React.FC<DateRangeInputProps> = (props) => {\n  const {\n    endDate: endDateProp = null,\n    startDate: startDateProp = null,\n    focusedInput: focusedInputProp = null,\n    displayFormat = defaultDisplayFormat,\n    endShowCalendarIcon = true,\n    isDateBlocked = () => false,\n    minBookingDays = 1,\n    phrases = dateRangeInputPhrases,\n    placement = \"bottom\",\n    showClose = true,\n    showDivider = false,\n    showResetDates = true,\n    showSelectedDates = true,\n    startShowCalendarIcon = true,\n    onClose = () => {},\n    onDatesChange = () => {},\n    onFocusChange = () => {},\n    styles: customStyles,\n    overwriteDefaultStyles,\n    startIcon,\n    startId,\n    startName,\n    startPlaceholder,\n    startRef,\n    endId,\n    endName,\n    endRef,\n    endIcon,\n    endPlaceholder,\n    changeActiveMonthOnSelect,\n    dayLabelFormat,\n    exactMinBookingDays,\n    firstDayOfWeek,\n    initialVisibleMonth,\n    maxBookingDate,\n    minBookingDate,\n    monthLabelFormat,\n    numberOfMonths,\n    onDayRender,\n    unavailableDates,\n    weekdayLabelFormat,\n    allowEditableInputs,\n  } = props;\n\n  const datepickerRef = useRef<DatepickerElement>(null);\n  const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n  const [startDate, setStartDate] = useState<InputDate>(startDateProp);\n  const [endDate, setEndDate] = useState<InputDate>(endDateProp);\n  const [focusedInput, setFocusedInput] =\n    useState<FocusedInput>(focusedInputProp);\n\n  useEffect(() => {\n    setStartDate(startDateProp);\n    setEndDate(endDateProp);\n  }, [startDateProp, endDateProp]);\n\n  const styleProps = useStyleProps<DateRangeInputStyles>({\n    dateRangeInputContainer: { spacing: 5 },\n    dateRangeInputDivider: {},\n  });\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"click\", onClickOutsideHandler);\n    }\n    return () => {\n      window.removeEventListener(\"click\", onClickOutsideHandler);\n    };\n  });\n\n  function handleOnFocusChange(_focusedInput: FocusedInput) {\n    setFocusedInput(_focusedInput);\n    onFocusChange(_focusedInput);\n  }\n\n  function handleOnDatesChange(data: OnDatesChangeProps) {\n    setStartDate(data.startDate);\n    setEndDate(data.endDate);\n    setFocusedInput(data.focusedInput);\n    onDatesChange(data);\n  }\n\n  function onClickOutsideHandler(event: Event) {\n    if (\n      focusedInput !== null &&\n      datepickerWrapperRef &&\n      datepickerWrapperRef.current &&\n      // @ts-ignore\n      !datepickerWrapperRef.current.contains(event.target)\n    ) {\n      handleOnFocusChange(null);\n    }\n  }\n\n  function handleOnClose() {\n    handleOnFocusChange(null);\n    onClose();\n  }\n\n  function handleInputChange(date: Date) {\n    if (\n      datepickerRef &&\n      datepickerRef.current &&\n      datepickerRef.current.onDateSelect\n    ) {\n      datepickerRef.current.onDateSelect(date);\n    }\n  }\n\n  const isMobile = useBreakpointValue({ base: true, md: false });\n  const vertical = props.vertical || isMobile;\n\n  return (\n    <StylesProvider\n      styles={customStyles}\n      overwriteDefaultStyles={overwriteDefaultStyles}\n    >\n      <Box position=\"relative\" ref={datepickerWrapperRef}>\n        <Stack\n          isInline={!isMobile}\n          {...styleProps.dateRangeInputContainer}\n          data-testid=\"DateRangeInputGrid\"\n          divider={\n            showDivider ? (\n              <StackDivider {...styleProps.dateRangeInputDivider} />\n            ) : undefined\n          }\n        >\n          <Input\n            iconComponent={startIcon}\n            id={startId || \"startDate\"}\n            name={startName || \"startDate\"}\n            placeholder={startPlaceholder || phrases.startDatePlaceholder}\n            ref={startRef}\n            showCalendarIcon={startShowCalendarIcon}\n            aria-label={phrases.startDateAriaLabel}\n            dateFormat={displayFormat}\n            isActive={focusedInput === START_DATE}\n            onChange={handleInputChange}\n            onClick={() => handleOnFocusChange(START_DATE)}\n            value={getInputValue(startDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box textAlign=\"center\" w=\"20px\">\n            <ArrowForwardIcon alignSelf=\"center\" w={5} h=\"100%\" />\n          </Box>\n          <Input\n            id={endId || \"endDate\"}\n            name={endName || \"endDate\"}\n            ref={endRef}\n            iconComponent={endIcon}\n            placeholder={endPlaceholder || phrases.endDatePlaceholder}\n            showCalendarIcon={endShowCalendarIcon}\n            aria-label={phrases.endDateAriaLabel}\n            dateFormat={displayFormat}\n            disableAccessibility={focusedInput === START_DATE}\n            isActive={focusedInput === END_DATE}\n            onChange={handleInputChange}\n            onClick={() =>\n              handleOnFocusChange(!startDate ? START_DATE : END_DATE)\n            }\n            value={getInputValue(endDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n        </Stack>\n        <Box\n          position=\"absolute\"\n          top={placement === \"top\" ? undefined : vertical ? \"100px\" : \"45px\"}\n          bottom={\n            placement === \"bottom\" ? undefined : vertical ? \"100px\" : \"45px\"\n          }\n        >\n          {focusedInput !== null && (\n            <Datepicker\n              ref={datepickerRef}\n              startDate={startDate}\n              endDate={endDate}\n              focusedInput={focusedInput}\n              onClose={handleOnClose}\n              onDatesChange={handleOnDatesChange}\n              changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n              dayLabelFormat={dayLabelFormat}\n              exactMinBookingDays={exactMinBookingDays}\n              firstDayOfWeek={firstDayOfWeek}\n              initialVisibleMonth={initialVisibleMonth}\n              isDateBlocked={isDateBlocked}\n              maxBookingDate={maxBookingDate}\n              minBookingDate={minBookingDate}\n              minBookingDays={minBookingDays}\n              monthLabelFormat={monthLabelFormat}\n              numberOfMonths={vertical ? 1 : numberOfMonths}\n              onDayRender={onDayRender}\n              phrases={phrases}\n              unavailableDates={unavailableDates}\n              displayFormat={displayFormat}\n              showClose={showClose}\n              showResetDates={showResetDates}\n              showSelectedDates={showSelectedDates}\n              vertical={vertical}\n              weekdayLabelFormat={weekdayLabelFormat}\n            />\n          )}\n        </Box>\n      </Box>\n    </StylesProvider>\n  );\n};\n","import { Box } from \"@chakra-ui/react\";\nimport {\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from \"react\";\nimport { Input, InputProps } from \"./components\";\nimport { StylesProvider } from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { DateSingleInputPhrases, dateSingleInputPhrases } from \"./phrases\";\nimport { InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface OnDateChangeProps {\n  date: InputDate;\n  showDatepicker: boolean;\n}\n\nexport interface DateSingleInputProps\n  extends Partial<InputProps>,\n    Partial<DatepickerProps> {\n  onFocusChange?(focusInput: boolean): void;\n  phrases?: DateSingleInputPhrases;\n  placement?: \"top\" | \"bottom\";\n  showDatepicker?: boolean;\n  date?: InputDate;\n  showResetDate?: boolean;\n}\n\nexport const DateSingleInput = forwardRef(\n  (\n    {\n      date: dateProp = null,\n      showDatepicker: showDatepickerProp = false,\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      firstDayOfWeek,\n      iconComponent,\n      id = \"startDate\",\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      monthLabelFormat,\n      name = \"startDate\",\n      numberOfMonths = 1,\n      onChange = () => {},\n      onClick = () => {},\n      onClose = () => {},\n      onDayRender,\n      onFocusChange = () => {},\n      overwriteDefaultStyles,\n      phrases = dateSingleInputPhrases,\n      placeholder,\n      placement = \"bottom\",\n      showCalendarIcon = true,\n      showClose = true,\n      showResetDate = true,\n      styles,\n      unavailableDates = [],\n      value,\n      vertical = false,\n      weekdayLabelFormat,\n      allowEditableInputs = false,\n    }: DateSingleInputProps,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    const datepickerRef = useRef<DatepickerElement>(null);\n    const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [date, setDate] = useState<InputDate>(\n      value ? new Date(value) : dateProp\n    );\n    const [showDatepicker, setShowDatepicker] = useState(showDatepickerProp);\n\n    useEffect(() => {\n      onChange(date);\n    }, [date, onChange]);\n\n    useEffect(() => {\n      onFocusChange(showDatepicker);\n    }, [onFocusChange, showDatepicker]);\n\n    useEffect(() => {\n      if (typeof window !== \"undefined\") {\n        window.addEventListener(\"click\", onClickOutsideHandler);\n      }\n      return () => {\n        window.removeEventListener(\"click\", onClickOutsideHandler);\n      };\n    });\n\n    function handleOnFocusChange(show: boolean) {\n      setShowDatepicker(show);\n    }\n\n    function onClickOutsideHandler(event: Event) {\n      if (\n        showDatepicker &&\n        datepickerWrapperRef &&\n        datepickerWrapperRef.current &&\n        // @ts-ignore\n        !datepickerWrapperRef.current.contains(event.target)\n      ) {\n        handleOnFocusChange(false);\n      }\n    }\n\n    function handleDatepickerClose() {\n      handleOnFocusChange(false);\n      onClose();\n    }\n\n    function handleOnDatesChange(data: OnDatesChangeProps) {\n      handleOnFocusChange(data.focusedInput !== null);\n      setDate(data.startDate);\n    }\n\n    function handleInputChange(date: Date) {\n      if (\n        datepickerRef &&\n        datepickerRef.current &&\n        datepickerRef.current.onDateSelect\n      ) {\n        datepickerRef.current.onDateSelect(date);\n      }\n    }\n\n    return (\n      <StylesProvider\n        styles={styles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <Box position=\"relative\" ref={datepickerWrapperRef}>\n          <Input\n            ref={ref}\n            id={id}\n            name={name}\n            aria-label={phrases.dateAriaLabel}\n            value={getInputValue(date, displayFormat, \"\")}\n            placeholder={placeholder || phrases.datePlaceholder}\n            dateFormat={displayFormat}\n            showCalendarIcon={showCalendarIcon}\n            isActive={showDatepicker}\n            onChange={handleInputChange}\n            onClick={() => {\n              handleOnFocusChange(true);\n              onClick();\n            }}\n            disableAccessibility={false}\n            iconComponent={iconComponent}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box\n            position=\"absolute\"\n            top={placement === \"bottom\" ? \"45px\" : undefined}\n            bottom={placement === \"top\" ? \"45px\" : undefined}\n          >\n            {showDatepicker && (\n              <Datepicker\n                changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n                dayLabelFormat={dayLabelFormat}\n                displayFormat={displayFormat}\n                endDate={date}\n                exactMinBookingDays\n                firstDayOfWeek={firstDayOfWeek}\n                focusedInput={showDatepicker ? START_DATE : null}\n                initialVisibleMonth={initialVisibleMonth}\n                isDateBlocked={isDateBlocked}\n                maxBookingDate={maxBookingDate}\n                minBookingDate={minBookingDate}\n                minBookingDays={1}\n                monthLabelFormat={monthLabelFormat}\n                numberOfMonths={numberOfMonths}\n                onClose={handleDatepickerClose}\n                onDatesChange={handleOnDatesChange}\n                onDayRender={onDayRender}\n                phrases={phrases}\n                ref={datepickerRef}\n                showClose={showClose}\n                showResetDates={showResetDate}\n                showSelectedDates={false}\n                startDate={date}\n                unavailableDates={unavailableDates}\n                vertical={vertical}\n                weekdayLabelFormat={weekdayLabelFormat}\n              />\n            )}\n          </Box>\n        </Box>\n      </StylesProvider>\n    );\n  }\n);\n","import { InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n} from \"@azure/msal-react\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Text,\n  Table as CTable,\n  Thead,\n  Tbody,\n  Tfoot,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n  Stack,\n  VStack,\n  HStack,\n  Input,\n  IconButton,\n  CloseButton,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Tag,\n  Divider,\n  Portal,\n} from \"@chakra-ui/react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport { TagPicker } from \"rsuite\";\nimport { Table, IconButton as RIconButton } from \"rsuite\";\nimport { msalInstance } from \"../../index\";\nimport {\n  AiOutlineDelete,\n  AiOutlineMinus,\n  AiOutlinePlus,\n  BiPlusMedical,\n} from \"react-icons/all\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useEffect, useState } from \"react\";\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport { RestAPI } from \"../../api/rest\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\n\nconst { ColumnGroup, Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n}\n\ninterface FilterField {\n  column: string;\n  type: string;\n  filter: string;\n  values: any[];\n  selectedValues: any[];\n}\n\nconst filterTypes = {\n  textfield: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  textarea: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  select: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  datetime: [{ label: \"Range\", value: \"range\" }],\n};\n\nexport function TableExplorer(props: Props) {\n  const [project, setProject] = useState<Project>({\n    id: \"\",\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filters, setFilters] = useState<FilterField[]>([]);\n  const [displayedColumns, setDisplayedColumns] = useState<any[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<any[]>([]);\n  const [expandedRowKeys, setExpandedRowKeys] = useState<any[]>([]);\n\n  const handleExpanded = (rowData: any, dataKey: any) => {\n    let open = false;\n    const nextExpandedRowKeys = [];\n\n    expandedRowKeys.forEach((key) => {\n      if (key === rowData[\"id\"]) {\n        open = true;\n      } else {\n        nextExpandedRowKeys.push(key);\n      }\n    });\n\n    if (!open) {\n      nextExpandedRowKeys.push(rowData[\"id\"]);\n    }\n\n    setExpandedRowKeys(nextExpandedRowKeys);\n  };\n\n  useEffect(() => {\n    if (project.id) {\n      RestAPI.getSubmissions(project.id).then((response) => {\n        var subm = response.data;\n        if (subm == null) {\n          subm = [];\n        }\n        subm.reverse();\n        setSubmissions(subm);\n        // project.components.map((component: any) => {\n        //   if (component.type === \"customTable\") {\n        //     subm.map((sub) => {\n        //       if (sub.children === undefined) {\n        //         sub.children = [];\n        //       }\n        //       sub.data[component.key].map((tableRecord: any, index: number) => {\n        //         sub.children.push({\n        //           id: uuidv4(),\n        //           title: `[${index + 1}] ${component.label}`,\n        //           data: tableRecord,\n        //         });\n        //       });\n        //     });\n        //   }\n        // });\n        setFilteredSubmissions(subm);\n      });\n    }\n  }, [project]);\n\n  useEffect(() => {\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    var filtered: Submission[] = [];\n    if (filters.length > 0) {\n      submissions.map((submission) => {\n        var valid = true;\n        filters.map((filter) => {\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            // filter\n            var value = submission.data[filter.column];\n            switch (filter.type) {\n              case \"textfield\":\n              case \"textarea\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"select\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    filter.selectedValues.map((filterValue) => {\n                      var exists = false;\n                      value.map((v: any) => {\n                        if (v.toString() === filterValue) {\n                          exists = true;\n                        }\n                      });\n                      if (!exists) {\n                        valid = false;\n                      }\n                    });\n                    break;\n                  case \"includes\":\n                    valid = filter.selectedValues.some((fv) =>\n                      value.includes(fv)\n                    );\n                    break;\n                }\n                break;\n              case \"datetime\":\n                if (\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2\n                ) {\n                  var v = new Date(value);\n                  valid =\n                    v >= filter.selectedValues[0] &&\n                    v <= filter.selectedValues[1];\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          filtered.push(submission);\n        }\n      });\n    }\n    setFilteredSubmissions(filtered);\n  }, [filters]);\n\n  return (\n    <>\n      {/* <AuthenticatedTemplate> */}\n      <div>\n        <Box mb=\"3em\" float=\"right\" w={{ base: \"100%\", md: \"400px\" }}>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: project.title,\n              value: project.id,\n              project: project,\n            }}\n            onChange={(value: any) => {\n              setProject(value.project);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projects\"\n            options={projects.map((project) => {\n              return {\n                label: project.title,\n                value: project.id,\n                project: project,\n              };\n            })}\n          />\n        </Box>\n\n        <VStack mb={\"2em\"} w=\"100%\" spacing={\"2em\"}>\n          <Box w=\"100%\" boxShadow={\"md\"} rounded={\"md\"} bg=\"white\" p=\"2em\">\n            <Stack\n              mb={\"1em\"}\n              w=\"100%\"\n              spacing={{ base: \"2em\", xl: \"4em\" }}\n              direction={{ base: \"column\", lg: \"row\" }}\n              color={\"gray.500\"}\n            >\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Displayed Columns</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  value={displayedColumns}\n                  onChange={(values) => {\n                    setDisplayedColumns(values);\n                  }}\n                  data={project.components\n                    .filter(\n                      (component: any) =>\n                        component.input && component.type !== \"button\"\n                    )\n                    .map((component: any) => {\n                      return { label: component.label, value: component.key };\n                    })}\n                  block\n                />\n              </Box>\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Submission Date</Text>\n                <DateRangeInput\n                  allowEditableInputs={true}\n                  displayFormat=\"dd.MM.yyyy\"\n                  maxBookingDate={new Date()}\n                />\n              </Box>\n            </Stack>\n            <Stack\n              w=\"100%\"\n              spacing={{ base: \"2em\", xl: \"4em\" }}\n              direction={{ base: \"column\", lg: \"row\" }}\n              color={\"gray.500\"}\n            >\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Statuses</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  data={\n                    project.statuses\n                      ? project.statuses.map((status) => {\n                          return { label: status, value: status };\n                        })\n                      : []\n                  }\n                  block\n                />\n              </Box>\n              <Box w=\"100%\">\n                <Text mb=\"8px\">Authors</Text>\n                <TagPicker\n                  cleanable\n                  style={{\n                    minHeight: \"40px\",\n                    paddingTop: \"2px\",\n                  }}\n                  data={[]}\n                  block\n                />\n              </Box>\n            </Stack>\n          </Box>\n\n          <Box\n            shadow=\"md\"\n            color=\"gray.600\"\n            backgroundColor=\"white\"\n            mb={10}\n            p={8}\n            pb={0}\n            rounded=\"md\"\n            w={\"100%\"}\n          >\n            <VStack\n              spacing={8}\n              fontSize=\"md\"\n              align=\"stretch\"\n              color={\"gray.500\"}\n            >\n              <Box w={\"100%\"}>\n                <Box w={\"100%\"}>\n                  {filters.map((filter, index) => {\n                    var valuesField: JSX.Element = <div></div>;\n\n                    switch (filter.type) {\n                      case \"textfield\":\n                      case \"textarea\":\n                        valuesField = (\n                          <Input\n                            onChange={(event) => {\n                              var temp = [...filters];\n                              temp[index!].selectedValues[0] =\n                                event.target.value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                          />\n                        );\n                        break;\n                      case \"number\":\n                        switch (filter.filter) {\n                          case \"exact\":\n                            valuesField = (\n                              <NumberInput\n                                onChange={(_, value) => {\n                                  var temp = [...filters];\n                                  temp[index!].selectedValues[0] = value;\n                                  setFilters(temp);\n                                }}\n                                value={filter.selectedValues[0]}\n                                w=\"100%\"\n                              >\n                                <NumberInputField />\n                                <NumberInputStepper>\n                                  <NumberIncrementStepper />\n                                  <NumberDecrementStepper />\n                                </NumberInputStepper>\n                              </NumberInput>\n                            );\n                            break;\n                          case \"range\":\n                            valuesField = (\n                              <Stack direction={{ base: \"column\", md: \"row\" }}>\n                                <NumberInput\n                                  w=\"100%\"\n                                  onChange={(_, value) => {\n                                    var temp = [...filters];\n                                    temp[index!].selectedValues[0] = value;\n                                    setFilters(temp);\n                                  }}\n                                  value={filter.selectedValues[0]}\n                                >\n                                  <NumberInputField />\n                                  <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                  </NumberInputStepper>\n                                </NumberInput>\n                                <Box textAlign=\"center\" w=\"20px\">\n                                  <ArrowForwardIcon\n                                    alignSelf=\"center\"\n                                    w={5}\n                                    h=\"100%\"\n                                  />\n                                </Box>\n                                <NumberInput\n                                  w=\"100%\"\n                                  onChange={(_, value) => {\n                                    var temp = [...filters];\n                                    temp[index!].selectedValues[1] = value;\n                                    setFilters(temp);\n                                  }}\n                                  value={filter.selectedValues[1]}\n                                >\n                                  <NumberInputField />\n                                  <NumberInputStepper>\n                                    <NumberIncrementStepper />\n                                    <NumberDecrementStepper />\n                                  </NumberInputStepper>\n                                </NumberInput>\n                              </Stack>\n                            );\n                            break;\n                        }\n                        break;\n                      case \"select\":\n                        valuesField = (\n                          <TagPicker\n                            cleanable\n                            style={{\n                              minHeight: \"40px\",\n                              paddingTop: \"2px\",\n                            }}\n                            onChange={(value) => {\n                              var temp = [...filters];\n                              temp[index!].selectedValues = value;\n                              setFilters(temp);\n                            }}\n                            data={filter.selectedValues}\n                            block\n                          />\n                        );\n                        break;\n                      case \"datetime\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                          />\n                        );\n                    }\n\n                    return (\n                      <Box\n                        w={\"100%\"}\n                        backgroundColor=\"white\"\n                        p={4}\n                        mb={5}\n                        border=\"1px\"\n                        rounded=\"md\"\n                        borderColor=\"gray.100\"\n                      >\n                        <CloseButton\n                          onClick={() => {\n                            var temp = [...filters];\n                            temp.splice(index, 1);\n                            setFilters(temp);\n                          }}\n                          float=\"right\"\n                        />\n                        <VStack\n                          mt={\"20px\"}\n                          spacing={8}\n                          fontSize=\"md\"\n                          align=\"stretch\"\n                          color={\"gray.500\"}\n                        >\n                          <Box>\n                            <Stack\n                              direction={{ base: \"column\", xl: \"row\" }}\n                              w=\"100%\"\n                              spacing={{ base: \"20px\", xl: \"50px\" }}\n                            >\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Column</Text>\n                                <Select\n                                  styles={{\n                                    menu: (provided) => ({\n                                      ...provided,\n                                      zIndex: 1000000,\n                                    }),\n                                    singleValue: (provided) => ({\n                                      ...provided,\n                                      color: \"#718196\",\n                                    }),\n                                    control: (base, state) => ({\n                                      ...base,\n                                      minHeight: 40,\n                                      border: \"1px solid #E2E8F0\",\n                                      transition: \"0.3s\",\n                                      \"&:hover\": {\n                                        border: \"1px solid #CBD5E0\",\n                                      },\n                                    }),\n                                  }}\n                                  theme={(theme) => ({\n                                    ...theme,\n                                    borderRadius: 6,\n                                    colors: {\n                                      ...theme.colors,\n                                      primary: \"#3082CE\",\n                                    },\n                                  })}\n                                  value={{\n                                    label: filter.column,\n                                    value: filter.column,\n                                  }}\n                                  onChange={(value: any) => {\n                                    var temp = [...filters];\n                                    temp[index!].column = value.value;\n                                    temp[index!].type = value.type;\n                                    var tv: any = [];\n                                    switch (value.type) {\n                                      case \"textfield\":\n                                      case \"textarea\":\n                                        tv = [\"\"];\n                                        break;\n                                      case \"number\":\n                                        if (temp[index!].filter === \"exact\") {\n                                          tv = [0];\n                                        } else {\n                                          tv = [0, 0];\n                                        }\n                                        break;\n                                    }\n                                    temp[index!].selectedValues = tv;\n                                    setFilters(temp);\n                                  }}\n                                  classNamePrefix=\"select\"\n                                  isClearable={false}\n                                  name=\"color\"\n                                  options={project.components\n                                    .filter(\n                                      (component: any) =>\n                                        component.input &&\n                                        component.type !== \"button\"\n                                    )\n                                    .map((component: any) => {\n                                      return {\n                                        label: component.label,\n                                        value: component.key,\n                                        type: component.type,\n                                      };\n                                    })}\n                                />\n                              </Box>\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Type</Text>\n                                <Input\n                                  onChange={() => {}}\n                                  value={filter.type}\n                                  readOnly\n                                />\n                              </Box>\n                              <Box w=\"100%\">\n                                <Text mb=\"8px\">Filter</Text>\n                                <Select\n                                  styles={{\n                                    menu: (provided) => ({\n                                      ...provided,\n                                      zIndex: 1000000,\n                                    }),\n                                    singleValue: (provided) => ({\n                                      ...provided,\n                                      color: \"#718196\",\n                                    }),\n                                    control: (base, state) => ({\n                                      ...base,\n                                      minHeight: 40,\n                                      border: \"1px solid #E2E8F0\",\n                                      transition: \"0.3s\",\n                                      \"&:hover\": {\n                                        border: \"1px solid #CBD5E0\",\n                                      },\n                                    }),\n                                  }}\n                                  theme={(theme) => ({\n                                    ...theme,\n                                    borderRadius: 6,\n                                    colors: {\n                                      ...theme.colors,\n                                      primary: \"#3082CE\",\n                                    },\n                                  })}\n                                  value={{\n                                    label:\n                                      filter.filter.charAt(0).toUpperCase() +\n                                      filter.filter.slice(1),\n                                    value: filter.filter,\n                                  }}\n                                  onChange={(value: any) => {\n                                    var temp = [...filters];\n                                    temp[index!].filter = value.value;\n                                    setFilters(temp);\n                                  }}\n                                  classNamePrefix=\"select\"\n                                  isClearable={false}\n                                  name=\"filter\"\n                                  options={\n                                    filterTypes[\n                                      filter.type as keyof typeof filterTypes\n                                    ]\n                                  }\n                                />\n                              </Box>\n                            </Stack>\n                          </Box>\n                          <Stack\n                            direction={{ base: \"column\", xl: \"row\" }}\n                            w=\"100%\"\n                            spacing={{ base: \"20px\", xl: \"50px\" }}\n                          >\n                            <Box w=\"100%\">\n                              <Text mb=\"8px\">Values</Text>\n                              {valuesField}\n                            </Box>\n                          </Stack>\n                        </VStack>\n                      </Box>\n                    );\n                  })}\n                  <IconButton\n                    onClick={() => {\n                      setFilters([\n                        ...filters,\n                        {\n                          column: \"\",\n                          type: \"\",\n                          filter: \"exact\",\n                          values: [],\n                          selectedValues: [],\n                        } as FilterField,\n                      ]);\n                    }}\n                    my={5}\n                    float=\"right\"\n                    variant=\"outline\"\n                    aria-label=\"add-port\"\n                    icon={<BiPlusMedical />}\n                  />\n                </Box>\n              </Box>\n            </VStack>\n          </Box>\n\n          {/* <Box\n            color={\"gray.500\"}\n            w=\"100%\"\n            boxShadow={\"md\"}\n            rounded={\"md\"}\n            bg=\"white\"\n            p=\"2em\"\n          >\n            <Text mb={\"40px\"} color=\"gray.700\" fontWeight={400} fontSize=\"sm\">\n              <b>\n                {filteredSubmissions.length} of {submissions.length}\n              </b>{\" \"}\n              items\n            </Text>\n            <Table\n              headerHeight={80}\n              isTree\n              defaultExpandAllRows\n              bordered\n              cellBordered\n              rowKey=\"id\"\n              shouldUpdateScroll={false}\n              onExpandChange={(isOpen, rowData) => {\n                console.log(isOpen, rowData);\n              }}\n              renderTreeToggle={(icon, rowData) => {\n                return icon;\n              }}\n              autoHeight\n              data={filteredSubmissions}\n            >\n              <Column width={200} fixed=\"left\" align=\"left\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Title</HeaderCell>\n                <Cell dataKey=\"title\" />\n              </Column>\n              <Column width={110} align=\"center\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Status</HeaderCell>\n                <Cell dataKey=\"status\">\n                  {(row: any, index: number) => {\n                    if (row.status) {\n                      return <Tag colorScheme=\"cyan\">{row.status}</Tag>;\n                    }\n                  }}\n                </Cell>\n              </Column>\n\n              <Column width={110} align=\"center\" resizable>\n                <HeaderCell verticalAlign=\"middle\">Created</HeaderCell>\n                <Cell dataKey=\"created\">\n                  {(row: any, index: number) => {\n                    if (row.created) {\n                      return moment(new Date(row.created)).fromNow();\n                    }\n                  }}\n                </Cell>\n              </Column>\n              {project.components.map((component: any) => {\n                if (\n                  displayedColumns === null ||\n                  displayedColumns.length < 1 ||\n                  displayedColumns.includes(component.key)\n                ) {\n                  if (component.type === \"customTable\") {\n                    var columns: any[] = [];\n                    Object.keys(component.columns).map((key) => {\n                      console.log(key);\n                      columns.push(\n                        <Column\n                          colSpan={0}\n                          width={200}\n                          align=\"center\"\n                          resizable\n                        >\n                          <HeaderCell\n                            style={{\n                              backgroundColor: \"#EDF2F6\",\n                              color: \"#718196\",\n                            }}\n                          >\n                            {component.columns[key]}\n                          </HeaderCell>\n                          <Cell dataKey={key}>\n                            {(row: any, index: number) => {\n                              if (row.data && row.data[key]) {\n                                return row.data[key];\n                              }\n                            }}\n                          </Cell>\n                        </Column>\n                      );\n                    });\n                    return (\n                      <ColumnGroup\n                        align=\"left\"\n                        header={<Text as=\"b\">{component.label}</Text>}\n                      >\n                        {columns}\n                      </ColumnGroup>\n                    );\n                  }\n                  if (component.type !== \"button\") {\n                    return (\n                      <Column width={200} align=\"center\" resizable>\n                        <HeaderCell verticalAlign=\"middle\">\n                          {component.label}\n                        </HeaderCell>\n                        <Cell dataKey={component.key}>\n                          {(row: any, index: number) => {\n                            if (row.data) {\n                              var value = row.data[component.key];\n                              switch (typeof value) {\n                                case \"number\":\n                                  return value.toFixed(2);\n                                case \"object\":\n                                  var tags: any[] = [];\n                                  value.map((element: any) => {\n                                    tags.push(<Tag mr={\"5px\"}>{element}</Tag>);\n                                  });\n                                  return tags;\n                                default:\n                                  if (component.type === \"datetime\" && value) {\n                                    var d = new Date(value);\n                                    return d.toLocaleString();\n                                  }\n                                  return value;\n                              }\n                            }\n                          }}\n                        </Cell>\n                      </Column>\n                    );\n                  }\n                }\n              })}\n              <Column width={150}>\n                <HeaderCell verticalAlign=\"middle\">Actions</HeaderCell>\n                <Cell dataKey=\"actions\">\n                  {(row: any, index: number) => {\n                    return (\n                      <HStack>\n                        <Text color=\"#4399E1\" cursor=\"pointer\">\n                          Edit\n                        </Text>\n                        <Divider height=\"10px\" orientation=\"vertical\" />\n                        <Text color=\"#4399E1\" cursor=\"pointer\">\n                          Remove\n                        </Text>\n                      </HStack>\n                    );\n                  }}\n                </Cell>\n              </Column>\n            </Table>\n          </Box> */}\n          <Box\n            color={\"gray.500\"}\n            w=\"100%\"\n            boxShadow={\"md\"}\n            rounded={\"md\"}\n            bg=\"white\"\n            p=\"2em\"\n          >\n            <Text mb={\"40px\"} color=\"gray.700\" fontWeight={400} fontSize=\"sm\">\n              <b>\n                {filteredSubmissions.length} of {submissions.length}\n              </b>{\" \"}\n              items\n            </Text>\n            <Table\n              // virtualized\n              headerHeight={80}\n              isTree\n              defaultExpandAllRows\n              bordered\n              cellBordered\n              rowKey=\"id\"\n              shouldUpdateScroll={false}\n              onExpandChange={(isOpen, rowData) => {\n                console.log(isOpen, rowData);\n              }}\n              renderTreeToggle={(icon, rowData) => {\n                return icon;\n              }}\n              autoHeight\n              data={[]}\n            >\n              <ColumnGroup header={<Text as=\"b\">General Information</Text>}>\n                <Column width={50} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#EDF2F6\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Company Code</HeaderCell>\n                  <Cell dataKey=\"companyCode\" />\n                </Column>\n\n                <Column width={200} resizable>\n                  <HeaderCell>Project Number</HeaderCell>\n                  <Cell dataKey=\"projectNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Campaign Start Date</HeaderCell>\n                  <Cell dataKey=\"campaignStartDate\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Project Type</HeaderCell>\n                  <Cell dataKey=\"projectType\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Project Information</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f2f6ed\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Country</HeaderCell>\n                  <Cell dataKey=\"country\" />\n                </Column>\n\n                <Column width={150} resizable>\n                  <HeaderCell>Country Share %</HeaderCell>\n                  <Cell dataKey=\"countryShare\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Country Budget Contribution (EUR)</HeaderCell>\n                  <Cell dataKey=\"countryBudgetContributionEur\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Country Cost Estimation (EUR)</HeaderCell>\n                  <Cell dataKey=\"countryCostEstimationEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Manufacturer Number</HeaderCell>\n                  <Cell dataKey=\"manufacturerNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Vendor Name</HeaderCell>\n                  <Cell dataKey=\"vendorName\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>SAP Debitor Number</HeaderCell>\n                  <Cell dataKey=\"sapDebitorNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>SAP Creditor Number</HeaderCell>\n                  <Cell dataKey=\"sapCreditorNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>MDF Level</HeaderCell>\n                  <Cell dataKey=\"mdfLevel\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Budget Currency</HeaderCell>\n                  <Cell dataKey=\"budgetCurrency\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Income (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedIncomeBC\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Costs (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedCostsBC\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Estimated Result (Budget Currency)</HeaderCell>\n                  <Cell dataKey=\"estimatedResultBC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Income (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedIncomeEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Costs (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedCostsEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Estimated Result (EUR)</HeaderCell>\n                  <Cell dataKey=\"estimatedResultEur\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Vendor Share %</HeaderCell>\n                  <Cell dataKey=\"vendorShare\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Business Unit</HeaderCell>\n                  <Cell dataKey=\"bu\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>PH1</HeaderCell>\n                  <Cell dataKey=\"ph1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Campaign Channel</HeaderCell>\n                  <Cell dataKey=\"campaignChannel\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Target Audience</HeaderCell>\n                  <Cell dataKey=\"targetAudience\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Marketing Responsible</HeaderCell>\n                  <Cell dataKey=\"marketingResponsible\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Production Project Manager</HeaderCell>\n                  <Cell dataKey=\"productionProjectManager\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Project Approver</HeaderCell>\n                  <Cell dataKey=\"projectApprover\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Purchase Order</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f6edf2\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Purchase Order Service Provider</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderServiceProvider\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Net Value of Service Ordered (LC)</HeaderCell>\n                  <Cell dataKey=\"netValueOfServiceOrderedLC\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Local Currency</HeaderCell>\n                  <Cell dataKey=\"localCurrency\" />\n                </Column>\n                <Column width={250} resizable>\n                  <HeaderCell>Net Value (Purchase Order Currency)</HeaderCell>\n                  <Cell dataKey=\"netValuePOC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Purchase Order Currency</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderCurrency\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Net Value (EUR)</HeaderCell>\n                  <Cell dataKey=\"netValueEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Purchase Order Status</HeaderCell>\n                  <Cell dataKey=\"purchaseOrderStatus\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Cost Actuals</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f1edf6\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonth\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentType\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDate\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDate\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Invoice Number</HeaderCell>\n                  <Cell dataKey=\"invoiceNumber\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Account</HeaderCell>\n                  <Cell dataKey=\"costAccount\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Name 1</HeaderCell>\n                  <Cell dataKey=\"name1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"costAmountLC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"costAmountDC\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dc\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Status</HeaderCell>\n                  <Cell dataKey=\"costStatus\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Sales Actuals</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f5f4ec\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Invoice Number</HeaderCell>\n                  <Cell dataKey=\"invoiceNumberSA\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Account</HeaderCell>\n                  <Cell dataKey=\"incomeAccount\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Name 1</HeaderCell>\n                  <Cell dataKey=\"name1\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountLC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountDC\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Status</HeaderCell>\n                  <Cell dataKey=\"incomeStatus\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Actual Result (LC)</HeaderCell>\n                  <Cell dataKey=\"actualResult\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Actuals in EUR</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f5eced\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"costAmountEur\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Actual Result (EUR)</HeaderCell>\n                  <Cell dataKey=\"actualResult\" />\n                </Column>\n              </ColumnGroup>\n              <ColumnGroup header={<Text as=\"b\">Cost GL Postings</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#f0f0f0\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Account</HeaderCell>\n                  <Cell dataKey=\"costAccountCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"costAmountLCCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"costAmountDCCostGL\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dcCostGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Cost Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"costAmountEurCostGL\" />\n                </Column>\n              </ColumnGroup>\n\n              <ColumnGroup header={<Text as=\"b\">Income GL Postings</Text>}>\n                <Column width={0} resizable>\n                  <HeaderCell\n                    style={{\n                      backgroundColor: \"#dceee4\",\n                      color: \"#718196\",\n                    }}\n                  >\n                    <div></div>\n                  </HeaderCell>\n                  <Cell dataKey=\"none\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>Year / Month</HeaderCell>\n                  <Cell dataKey=\"yearMonthIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Type</HeaderCell>\n                  <Cell dataKey=\"documentTypeIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Posting Date</HeaderCell>\n                  <Cell dataKey=\"postingDateIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Date</HeaderCell>\n                  <Cell dataKey=\"documentDateIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Document Number</HeaderCell>\n                  <Cell dataKey=\"documentNumberIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Account</HeaderCell>\n                  <Cell dataKey=\"incomeAccountIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (LC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountLCIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (DC)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountDCIncomeGL\" />\n                </Column>\n                <Column width={150} resizable>\n                  <HeaderCell>DC</HeaderCell>\n                  <Cell dataKey=\"dcIncomeGL\" />\n                </Column>\n                <Column width={200} resizable>\n                  <HeaderCell>Income Amount (EUR)</HeaderCell>\n                  <Cell dataKey=\"incomeAmountEurIncomeGL\" />\n                </Column>\n              </ColumnGroup>\n              <Column width={0} align=\"left\" resizable>\n                <HeaderCell verticalAlign=\"middle\">\n                  <div></div>\n                </HeaderCell>\n                <Cell dataKey=\"none\" />\n              </Column>\n            </Table>\n          </Box>\n        </VStack>\n      </div>\n      {/* </AuthenticatedTemplate> */}\n      {/* <UnauthenticatedTemplate>\n        <Box boxShadow=\"md\" bg=\"white\" p=\"2em\" h=\"80vh\"></Box>\n      </UnauthenticatedTemplate> */}\n    </>\n  );\n}\n\nexport default TableExplorer;\n","export function numberWithCommas(x: any) {\n  return !isNaN(x) && typeof x === \"number\"\n    ? x\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    : \"\";\n}\n","import { Button, Tag } from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Creatable from \"react-select/creatable\";\nimport { numberWithCommas } from \"../utils/utils\";\n\nconst numRegex = /[0-9.\\-/]|\\./;\n\nfunction isValidDate(d: any) {\n  return d instanceof Date && !isNaN(d as any);\n}\n\nclass EditableTableCell extends React.Component<\n  {\n    onUpdate: any;\n    rowIndex: number;\n    rowData: any;\n    columnKey: string | undefined;\n    loadOptions?: any;\n    type: string;\n    initialValue: any;\n    textColor?: any;\n    backgroundColor?: string;\n    readonly?: boolean;\n    bold?: boolean;\n    maxLength?: number;\n    invoiced?: boolean;\n  },\n  {\n    cellValue: any;\n    options: any[];\n    editing: boolean;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      options: [],\n      cellValue: undefined,\n      editing: false,\n    };\n  }\n  componentDidUpdate(prevProps: any) {\n    if (prevProps.initialValue !== this.props.initialValue) {\n      if (this.props.type === \"number\" && isNaN(this.props.initialValue)) {\n        return;\n      }\n      this.setState({ cellValue: this.props.initialValue });\n    }\n  }\n\n  componentDidMount() {\n    var value: any = undefined;\n    if (this.props.rowData.id === \"total\") {\n      value = this.props.initialValue ? this.props.initialValue : \"\";\n    } else {\n      switch (this.props.type) {\n        case \"text\":\n        case \"button\":\n          value = this.props.initialValue\n            ? this.props.initialValue.toString()\n            : \"\";\n          break;\n        case \"number\":\n          value =\n            typeof this.props.initialValue === \"number\"\n              ? numberWithCommas(this.props.initialValue)\n              : \"\";\n          break;\n        case \"tags\":\n          value = this.props.initialValue;\n          break;\n        case \"date\":\n          value =\n            this.props.initialValue && this.props.initialValue !== null\n              ? new Date(this.props.initialValue)\n              : null;\n          break;\n        case \"dropdown\":\n          value =\n            typeof this.props.initialValue === \"string\"\n              ? {\n                  label: this.props.initialValue,\n                  value: this.props.initialValue,\n                }\n              : { label: \"\", value: \"\" };\n          break;\n        case \"multiple-dropdown\":\n          value = [];\n          if (\n            this.props.initialValue &&\n            Array.isArray(this.props.initialValue)\n          ) {\n            this.props.initialValue.forEach((value: any) => {\n              value.push({ label: value, value: value });\n            });\n          }\n          break;\n        case \"menu\":\n          value = this.props.initialValue\n            ? this.props.initialValue.toString()\n            : \"\";\n          break;\n        default:\n          break;\n      }\n    }\n    this.setState({ cellValue: value });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          fontWeight: this.props.bold ? \"bold\" : \"normal\",\n          textAlign: this.props.type === \"button\" ? \"center\" : \"inherit\",\n          backgroundColor:\n            this.props.rowData.id === \"total\"\n              ? \"white\"\n              : this.props.backgroundColor\n              ? this.props.backgroundColor\n              : \"\",\n        }}\n        className={\n          this.state.editing\n            ? \"vendors-table-cell active\"\n            : `content-preview ${\n                this.props.textColor ? this.props.textColor : \"\"\n              } ${\n                this.props.readonly || this.props.invoiced === true\n                  ? \"readonly\"\n                  : \"\"\n              }`\n        }\n        onClick={() => {\n          if (\n            !this.state.editing &&\n            !this.props.readonly &&\n            this.props.invoiced !== true &&\n            this.props.rowData.id !== \"total\"\n          ) {\n            this.setState({ editing: true });\n          }\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          this.setState({ editing: false });\n        }}\n      >\n        {!this.state.editing ? (\n          this.props.type === \"tags\" ? (\n            this.state.cellValue ? (\n              this.state.cellValue.map((cv: any) => {\n                if (cv) {\n                  return (\n                    <Tag colorScheme={this.props.textColor} mb=\"5px\" mr={\"5px\"}>\n                      {cv}\n                    </Tag>\n                  );\n                }\n              })\n            ) : (\n              \"\"\n            )\n          ) : this.props.type === \"date\" ? (\n            this.state.cellValue && this.state.cellValue !== null ? (\n              moment(this.state.cellValue).format(\"DD.MM.yyyy\")\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"object\" ? (\n            this.state.cellValue !== null ? (\n              `${this.state.cellValue.label}`\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"number\" ? (\n            `${numberWithCommas(this.state.cellValue)}`\n          ) : (\n            `${this.state.cellValue}`\n          )\n        ) : this.props.type === \"text\" || this.props.type === \"number\" ? (\n          <textarea\n            autoFocus\n            style={{ resize: \"none\" }}\n            value={this.state.cellValue ?? \"\"}\n            onChange={(event) => {\n              if (\n                this.props.maxLength !== undefined &&\n                event.target.value.length > this.props.maxLength\n              ) {\n                return;\n              }\n              this.setState({ cellValue: event.target.value });\n            }}\n            onFocus={(e) => {\n              setTimeout(() => {\n                document.execCommand(\"selectAll\", false);\n              }, 0);\n            }}\n            onKeyPress={\n              this.props.type === \"number\"\n                ? (event) => {\n                    const keyCode = event.keyCode || event.which;\n                    const string = String.fromCharCode(keyCode);\n                    if (!numRegex.test(string)) {\n                      event.defaultPrevented = false;\n                      if (event.preventDefault) event.preventDefault();\n                    }\n                  }\n                : undefined\n            }\n            onBlur={(event) => {\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                this.props.type === \"number\"\n                  ? Number(this.state.cellValue)\n                  : this.state.cellValue\n              );\n              this.setState({ editing: false });\n            }}\n            className=\"content-editable\"\n          />\n        ) : this.props.type === \"date\" ? (\n          <DatePicker\n            autoFocus\n            isClearable\n            selected={\n              isValidDate(this.state.cellValue)\n                ? moment(this.state.cellValue).toDate()\n                : null\n            }\n            customInput={<input className=\"datepicker-input\"></input>}\n            onChange={(date) => {\n              this.setState({ cellValue: date, editing: false });\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                date !== null ? date.toString() : null\n              );\n            }}\n            onCalendarClose={() => {\n              this.setState({ editing: false });\n            }}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n        ) : this.props.type === \"dropdown\" ||\n          this.props.type === \"multiple-dropdown\" ? (\n          <Creatable\n            menuPortalTarget={document.body}\n            menuIsOpen={this.state.editing}\n            autoFocus\n            isMulti={this.props.type === \"multiple-dropdown\"}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 1000000 }),\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n                minWidth: \"200px\",\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"black\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                paddingLeft: \"5px\",\n                boxShadow: \"none\",\n                outlineWidth: 0,\n                border: 0,\n                minHeight: 52,\n                backgroundColor: \"transparent\",\n                transition: \"0.3s\",\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 0,\n              colors: {\n                ...theme.colors,\n                primary: \"#a0bfe3\",\n              },\n            })}\n            value={this.state.cellValue}\n            onChange={(value) => {\n              this.setState({\n                cellValue: value !== null ? value : { label: \"\", value: \"\" },\n              });\n              var v: any = \"\";\n              if (value !== null && Array.isArray(value)) {\n                v = [];\n                value.map((dv: any) => v.push(dv.label));\n              }\n              if (value !== null && !Array.isArray(value)) {\n                v = value.label;\n              }\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                v\n              );\n              this.setState({ editing: false });\n            }}\n            onFocus={async () => {\n              this.setState({\n                options: this.props.loadOptions(this.props.columnKey ?? \"\"),\n              });\n            }}\n            onBlur={() => {\n              this.setState({\n                options: [],\n                editing: false,\n              });\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"table-select\"\n            isClearable\n            isSearchable\n            options={this.state.options}\n          />\n        ) : this.props.type === \"button\" ? (\n          <div className=\"table-button-container\">\n            <Button\n              colorScheme={this.props.textColor}\n              onClick={() => {\n                this.props.onUpdate(\n                  this.props.rowData.id,\n                  this.props.columnKey,\n                  this.state.cellValue\n                );\n                this.setState({ editing: false });\n              }}\n              size=\"sm\"\n              color=\"white\"\n              className=\"table-button\"\n            >\n              {this.state.cellValue}\n            </Button>\n          </div>\n        ) : (\n          <div>unknown</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditableTableCell;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Button,\n  HStack,\n  Input,\n  Text,\n  useColorModeValue,\n  Divider,\n  IconButton,\n  Stack,\n  VStack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  CloseButton,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport {\n  cloneElement,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport EditableTableCell from \"../../components/EditableTableCell\";\nimport Creatable from \"react-select/creatable\";\n\nimport { useFps } from \"react-fps\";\nimport Select from \"react-select\";\nimport { Submission } from \"../../types/submission\";\nimport styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport Toast from \"../../components/Toast\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\n\nimport BaseTable, {\n  AutoResizer,\n  Column,\n  ColumnShape,\n  unflatten,\n} from \"react-base-table\";\nimport \"react-base-table/styles.css\";\nimport { RestAPI } from \"../../api/rest\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  BiPlusMedical,\n  RiFileExcel2Line,\n  RiUserFill,\n  RiGroupFill,\n  IoSave,\n} from \"react-icons/all\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { CheckTreePicker, TagPicker } from \"rsuite\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport { numberWithCommas } from \"../../utils/utils\";\n\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { FilterField, Template } from \"../../types/template\";\n\ninterface Props {\n  history: any;\n}\n\nconst numRegex = /[0-9]|\\./;\n\nconst DebugOverlay = styled.div`\n  width: 300px;\n  background: lightgray;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  padding: 5px 15px;\n  border-radius: 10px;\n  color: white;\n`;\n\nvar ProjectType: any[] = [];\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\nvar SapStatus: any[] = [\n  { label: \"Created\", value: \"created\" },\n  { label: \"None\", value: \"none\" },\n];\nvar CostStatuses: any[] = [\n  { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n  { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n  { label: \"Not Relevant\", value: \"Not Relevant\" },\n];\n\nvar defaultColumns = [\n  \"generalInformation\",\n  \"projectInformation\",\n  \"purchaseOrder\",\n  \"costInvoices\",\n  \"salesInvoices\",\n  \"costGlPostings\",\n  \"incomeGlPostings\",\n  \"projectResults\",\n  \"controlChecks\",\n  \"CMCT\",\n  \"LMD\",\n];\n\nasync function fetchDropdowns() {\n  var dropdownsIds: string[] = [\n    \"619b630a9a5a2bb37a93b23b\",\n    \"619b61419a5a2bb37a93b237\",\n    \"619b63429a5a2bb37a93b23d\",\n    \"619b62d79a5a2bb37a93b239\",\n    \"619b632c9a5a2bb37a93b23c\",\n    \"619b62959a5a2bb37a93b238\",\n    \"619b62f29a5a2bb37a93b23a\",\n    \"619b66defe27d06ad17d75ac\",\n    \"619b6754fe27d06ad17d75ad\",\n    \"619b6799fe27d06ad17d75ae\",\n    \"619b7b9efe27d06ad17d75af\",\n    \"619b7b9efe27d06ad17d75af\",\n  ];\n  var responses = await Promise.all(\n    dropdownsIds.map((di) => {\n      return RestAPI.getDropdownValues(di);\n    })\n  );\n  PH1 = responses[0].data;\n  Companies = responses[1].data;\n  VendorsNames = responses[2].data;\n  CampaignChannel = responses[3].data;\n  TargetAudience = responses[4].data;\n  Budget = responses[5].data;\n  ExchangeRates = responses[6].data;\n  FiscalQuarter = responses[7].data;\n  Year = responses[8].data;\n  ProjectStartQuarter = responses[9].data;\n  ProjectType = responses[10].data;\n}\n\nconst loadOptions = (identifier: string) => {\n  switch (identifier) {\n    case \"data.budgetSource\":\n      return Budget;\n    case \"data.projectType\":\n      return ProjectType;\n    case \"data.ph1\":\n      return PH1;\n    case \"data.campaignChannel\":\n      return CampaignChannel;\n    case \"data.targetAudience\":\n      return TargetAudience;\n    case \"data.budgetCurrency\" ||\n      \"data.vendorBudgetCurrency\" ||\n      \"data.campaignCurrency\":\n      return ExchangeRates;\n    case \"data.sapStatus\":\n      return SapStatus;\n    case \"data.caVendorName\":\n    case \"data.vendorName\":\n    case \"data.vendorNameSA\":\n      return VendorsNames;\n    case \"data.statusLMD\":\n      return [\n        { label: \"OK FOR INVOICING\", value: \"OK FOR INVOICING\" },\n        { label: \"FUTURE INVOICE\", value: \"FUTURE INVOICE\" },\n        { label: \"INVOICED\", value: \"INVOICED\" },\n        { label: \"INCOMPLETE\", value: \"INCOMPLETE\" },\n        { label: \"OK FOR CANCELLATION\", value: \"OK FOR CANCELLATION\" },\n        { label: \"CANCELLED\", value: \"CANCELLED\" },\n      ];\n    case \"data.purchaseOrderStatus\":\n      return [\n        { label: \"Invoice Received\", value: \"Invoice Received\" },\n        { label: \"Invoice Not Received\", value: \"Invoice Not Received\" },\n      ];\n    case \"data.costStatus\":\n      return [\n        { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n        { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n      ];\n    case \"data.invoiceStatusSI\":\n      return [\n        { label: \"Paid\", value: \"Paid\" },\n        { label: \"Not Paid\", value: \"Not Paid\" },\n      ];\n  }\n  return [];\n};\n\nfunction bytesToSize(bytes: number) {\n  var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  if (bytes == 0) return \"0 Byte\";\n  var i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, i)).toFixed(2) + \" \" + sizes[i];\n}\n\nconst filterTypes = {\n  string: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  dropdown: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  \"multiple-dropdown\": [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  date: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n};\n\nconst DisplayedColumnsList = [\n  {\n    label: \"General Information\",\n    value: \"generalInformation\",\n    children: [\n      { label: \"Company Code\", value: \"data.companyCode\", type: \"string\" },\n      { label: \"Project Number\", value: \"data.projectNumber\", type: \"string\" },\n      { label: \"Project Name\", value: \"data.projectName\", type: \"string\" },\n      {\n        label: \"Campaign Start Date\",\n        value: \"data.campaignStartDate\",\n        type: \"date\",\n      },\n      {\n        label: \"Campaign End Date\",\n        value: \"data.campaignEndDate\",\n        type: \"date\",\n      },\n      { label: \"Project Type\", value: \"data.projectType\", type: \"dropdown\" },\n      { label: \"Author\", value: \"author\", type: \"string\" },\n      { label: \"Status\", value: \"data.status\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Project Information\",\n    value: \"projectInformation\",\n    children: [\n      { label: \"Countries EMEA\", value: \"data.country\", type: \"string\" },\n      {\n        label: \"Country Code EMEA\",\n        value: \"data.countryCodeEMEA\",\n        type: \"string\",\n      },\n      {\n        label: \"Mirror Project Number\",\n        value: \"data.mirrorProjectNumber\",\n        type: \"string\",\n      },\n      { label: \"% Country Share\", value: \"data.countryShare\", type: \"number\" },\n      {\n        label: \"Country Budget Contribution (Campaign Currency)\",\n        value: \"data.countryBudgetContributionCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Country Cost Estimation (Campaign Currency)\",\n        value: \"data.countryCostEstimationCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Manufacturer Number\",\n        value: \"data.manufacturerNumber\",\n        type: \"string\",\n      },\n      { label: \"Vendor Name\", value: \"data.vendorName\", type: \"dropdown\" },\n      {\n        label: \"SAP Debitor Number\",\n        value: \"data.debitorNumber\",\n        type: \"string\",\n      },\n      {\n        label: \"SAP Creditor Number\",\n        value: \"data.creditorNumber\",\n        type: \"string\",\n      },\n      { label: \"Budget Source\", value: \"data.budgetSource\", type: \"dropdown\" },\n      {\n        label: \"Vendor Budget Currency\",\n        value: \"data.vendorBudgetCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Vendor Amount\",\n        value: \"data.vendorAmount\",\n        type: \"number\",\n      },\n      {\n        label: \"Campaign Currency\",\n        value: \"data.campaignCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Estimated Income (Campaign Currency)\",\n        value: \"data.estimatedIncomeCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs (Campaign Currency)\",\n        value: \"data.estimatedCostsCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result (Campaign Currency)\",\n        value: \"data.estimatedResultCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Income EUR\",\n        value: \"data.estimatedIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs EUR\",\n        value: \"data.estimatedCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result EUR\",\n        value: \"data.estimatedResultEUR\",\n        type: \"number\",\n      },\n      { label: \"% Vendor Share\", value: \"data.vendorShare\", type: \"number\" },\n      { label: \"Business Unit\", value: \"data.businessUnit\", type: \"string\" },\n      { label: \"PH1\", value: \"data.PH1\", type: \"string\" },\n      {\n        label: \"Campaign Channel\",\n        value: \"data.campaignChannel\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Target Audience\",\n        value: \"data.targetAudience\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Marketing Responsible\",\n        value: \"data.marketingResponsible\",\n        type: \"string\",\n      },\n      {\n        label: \"Project Approver\",\n        value: \"data.projectApprover\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.additionalInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Purchase Order\",\n    value: \"purchaseOrder\",\n    children: [\n      {\n        label: \"Purchase Order Service Provider\",\n        value: \"data.purchaseOrderServiceProvider\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor Name\",\n        value: \"data.vendorNamePO\",\n        type: \"string\",\n      },\n      {\n        label: \"Net Value of Service Ordered (LC)\",\n        value: \"data.netValueOfServiceOrderedLC\",\n        type: \"string\",\n      },\n      { label: \"Local Currency\", value: \"data.localCurrency\", type: \"string\" },\n      {\n        label: \"Net Value (Purchase Order Currency)\",\n        value: \"data.netValuePOC\",\n        type: \"string\",\n      },\n      {\n        label: \"Purchase Order Currency\",\n        value: \"data.purchaseOrderCurrency\",\n        type: \"string\",\n      },\n      { label: \"Net Value (EUR)\", value: \"data.netValueEur\", type: \"string\" },\n      {\n        label: \"Purchase Order Status\",\n        value: \"data.purchaseOrderStatus\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost Invoices\",\n    value: \"costInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonth\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentType\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDate\", type: \"date\" },\n      { label: \"Document Date\", value: \"data.documentDate\", type: \"date\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumber\",\n        type: \"string\",\n      },\n      { label: \"Invoice Number\", value: \"data.invoiceNumber\", type: \"string\" },\n      { label: \"Cost Account\", value: \"data.costAccount\", type: \"string\" },\n      { label: \"Invoice Supplier\", value: \"data.name1\", type: \"string\" },\n      { label: \"Cost Amount (LC)\", value: \"data.costAmountLC\", type: \"string\" },\n      { label: \"Cost Amount (DC)\", value: \"data.costAmountDC\", type: \"string\" },\n      { label: \"DC\", value: \"data.dc\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEUR\",\n        type: \"number\",\n      },\n      { label: \"Cost Status\", value: \"data.costStatus\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Sales Invoices\",\n    value: \"salesInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthSI\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentTypeSI\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDateSI\", type: \"date\" },\n      { label: \"Document Date\", value: \"data.documentDateSI\", type: \"date\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberSI\",\n        type: \"string\",\n      },\n\n      {\n        label: \"Invoice Number\",\n        value: \"data.invoiceNumberSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountSI\",\n        type: \"string\",\n      },\n      { label: \"Invoice Recipient\", value: \"data.name1SI\", type: \"string\" },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCSI\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcSI\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEURSI\",\n        type: \"number\",\n      },\n      {\n        label: \"Invoice Status (Paid/Not Paid)\",\n        value: \"data.invoiceStatusSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Activity ID for Portal Vendors\",\n        value: \"data.activityIdSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Marketing Information\",\n        value: \"data.additionalMarketingInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost GL Postings\",\n    value: \"costGlPostings\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthCostGL\", type: \"string\" },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateCostGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateCostGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Account\",\n        value: \"data.costAccountCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (LC)\",\n        value: \"data.costAmountLCCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (DC)\",\n        value: \"data.costAmountDCCostGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcCostGL\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEURCostGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Income GL Postings\",\n    value: \"incomeGlPostings\",\n    children: [\n      {\n        label: \"Year / Month\",\n        value: \"data.yearMonthIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateIncomeGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateIncomeGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCIncomeGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcIncomeGL\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEurIncomeGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Project Results\",\n    value: \"projectResults\",\n    children: [\n      {\n        label: \"Total Income (LC)\",\n        value: \"data.totalIncomeLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs (LC)\",\n        value: \"data.totalCostsLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Profit (LC)\",\n        value: \"data.totalProfitLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Loss (LC)\",\n        value: \"data.totalLossLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income (EUR)\",\n        value: \"data.totalIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs (EUR)\",\n        value: \"data.totalCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Profit (EUR)\",\n        value: \"data.totalProfitEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Loss (EUR)\",\n        value: \"data.totalLossEUR\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Control Checks\",\n    value: \"controlChecks\",\n    children: [\n      {\n        label: \"Total Costs In Tool (LC)\",\n        value: \"data.totalCostsTool\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs in SAP (LC)\",\n        value: \"data.totalCostsSAP\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income in Tool (LC)\",\n        value: \"data.totalIncomeTool\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income in SAP (LC)\",\n        value: \"data.totalIncomeSAP\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Input of Central Marketing Controlling Team\",\n    value: \"CMCT\",\n    children: [\n      {\n        label: \"Status\",\n        value: \"data.statusCMCT\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"SAP Document Number\",\n        value: \"data.documentNumberCMCT\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.infoCMCT\",\n        type: \"string\",\n      },\n      {\n        label: \"Date\",\n        value: \"data.dateCMCT\",\n        type: \"date\",\n      },\n      {\n        label: \"Operator\",\n        value: \"data.operatorCMCT\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Input of Local Marketing Department\",\n    value: \"LMD\",\n    children: [\n      {\n        label: \"Status\",\n        value: \"data.statusLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Date of Invoicing\",\n        value: \"data.invoicingDateLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Requestor\",\n        value: \"data.requestorLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor\",\n        value: \"data.vendorLMD\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"VOD\",\n        value: \"data.vodLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"BU\",\n        value: \"data.buLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Request Date\",\n        value: \"data.requestDateLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Invoice Type\",\n        value: \"data.invoiceTypeLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Cancellation Information\",\n        value: \"data.cancellationInfoLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Currency\",\n        value: \"data.documentCurrencyLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Material Number\",\n        value: \"data.materialNumberLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Reason\",\n        value: \"data.reasonLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Amount\",\n        value: \"data.amountLMD\",\n        type: \"number\",\n      },\n      {\n        label: \"Additional Info on Invoice\",\n        value: \"data.additionalInvoiceInfoLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Dunning Stop?\",\n        value: \"data.dunningStopLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Payment Method\",\n        value: \"data.paymentMethodLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Deposit Number\",\n        value: \"data.depositNumberLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Send to\",\n        value: \"data.sendToLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Comment\",\n        value: \"data.additionalCommentLMD\",\n        type: \"string\",\n      },\n    ],\n  },\n];\n\nconst DisplayedColumnsListOptions = DisplayedColumnsList.map((group: any) => {\n  return group.children.map((column: any) => {\n    return {\n      label: `${column.label} (${group.label})`,\n      value: column.value,\n      type: column.type,\n    };\n  });\n}).flat(1);\n\nexport function VendorsTable(props: Props) {\n  const [selectedTemplate, setSelectedTemplate] = useState(\"local\");\n  const [templates, setTemplates] = useState<Template[]>([]);\n  const [sourceSubmissions, setSourceSubmissions] = useState(new Map());\n  const [currentUser, setCurrentUser] = useState({ displayName: \"unknown\" });\n  const [debugOverlayHidden, hideDebugOverlay] = useState(true);\n  const [filters, setFilters] = useState<FilterField[]>([]);\n  const [displayedColumns, setDisplayedColumns] =\n    useState<string[]>(defaultColumns);\n  const [totalCostAmount, setTotalCostAmount] = useState(0);\n  const [totalCostAmountCostGL, setTotalCostAmountCostGL] = useState(0);\n  const [totalCostAmountLC, setTotalCostAmountLC] = useState(0);\n  const [totalCostAmountLCCostGL, setTotalCostAmountLCCostGL] = useState(0);\n  const [totalIncomeAmount, setTotalIncomeAmount] = useState(0);\n  const [totalIncomeAmountLCIncomeGL, setTotalIncomeAmountLCIncomeGL] =\n    useState(0);\n  const [totalIncomeAmountIncomeGL, setTotalIncomeAmountIncomeGL] = useState(0);\n  const [totalIncomeAmountLC, setTotalIncomeAmountLC] = useState(0);\n  const [totalCostsInTool, setTotalCostsInTool] = useState(0);\n  const [totalIncomeInTool, setTotalIncomeInTool] = useState(0);\n  const [totalCostsInToolEUR, setTotalCostsInToolEUR] = useState(0);\n  const [totalIncomeInToolEUR, setTotalIncomeInToolEUR] = useState(0);\n  // const { fps, avgFps } = useFps(20);\n  const [tableWidth, setTableWidth] = useState(1000);\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<Submission[]>(\n    []\n  );\n  const [\n    filteredCommunicationSubmissions,\n    setFilteredCommunicationSubmissions,\n  ] = useState<Submission[]>([]);\n  const [communicationSubmissions, setCommunicationSubmissions] = useState<\n    Submission[]\n  >([]);\n  const [onlyMine, setOnlyMine] = useState(false);\n  const [scrollLeft, setScrollLeft] = React.useState(0);\n  const [defaultColumnsWidth, setDefaultColumnsWidth] = useState({});\n  const onScroll = React.useCallback(\n    (args) => {\n      if (args.scrollLeft !== scrollLeft) {\n        setScrollLeft(args.scrollLeft);\n      }\n    },\n    [scrollLeft]\n  );\n  // const [heapInfo, setHeapInfo] = useState<any>({\n  //   total: 0,\n  //   allocated: 0,\n  //   current: 0,\n  //   domSize: 0,\n  // });\n  const [totalRequests, setTotalRequests] = useState(1);\n\n  useEffect(() => {\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  // useEffect(() => {\n  //   getHeapInfo();\n  //   const interval = setInterval(() => {\n  //     getHeapInfo();\n  //   }, 5000);\n\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  useEffect(() => {\n    let tca = 0;\n    let tcal = 0;\n    let tcit = 0;\n    let tiit = 0;\n    let tcite = 0;\n    let tiite = 0;\n    let tcacgl = 0;\n    let tia = 0;\n    let tial = 0;\n    let tcalcgl = 0;\n    let tialigl = 0;\n    let tiaigl = 0;\n    filteredSubmissions.forEach((subm) => {\n      if (subm.parentId !== null) {\n        tca += subm.data.costAmountEUR || 0;\n        tcacgl += subm.data.costAmountEURCostGL || 0;\n        tcal += subm.data.costAmountLC || 0;\n        tia += subm.data.incomeAmountEURSI || 0;\n        tial += subm.data.incomeAmountLCSI || 0;\n        tcalcgl += subm.data.costAmountLCCostGL || 0;\n        tialigl += subm.data.incomeAmountLCIncomeGL || 0;\n        tiaigl += subm.data.incomeAmountEurIncomeGL || 0;\n      }\n    });\n    tcit = -(tcal + tcalcgl);\n    tiit = -(tial + tialigl);\n    tcite = -(tca + tcacgl);\n    tiite = -(tia + tiaigl);\n    setTotalCostAmount(tca);\n    setTotalCostAmountCostGL(tcacgl);\n    setTotalCostAmountLC(tcal);\n    setTotalCostAmountLCCostGL(tcalcgl);\n    setTotalIncomeAmount(tia);\n    setTotalIncomeAmountLCIncomeGL(tialigl);\n    setTotalIncomeAmountLC(tial);\n    setTotalIncomeAmountIncomeGL(tiaigl);\n    setTotalCostsInTool(tcit);\n    setTotalIncomeInTool(tiit);\n    setTotalCostsInToolEUR(tcite);\n    setTotalIncomeInToolEUR(tiite);\n    forceUpdate();\n  }, [filteredSubmissions]);\n\n  useEffect(() => {\n    var filteredMap = new Map();\n    var filtered: Submission[] = [];\n    var cFilteredMap = new Map();\n    var filteredCommunication: Submission[] = [];\n\n    var f: FilterField[] = JSON.parse(JSON.stringify(filters));\n\n    if (onlyMine) {\n      f.push({\n        columnValue: \"author\",\n        columnLabel: \"Author\",\n        type: \"string\",\n        filter: \"exact\",\n        values: [],\n        selectedValues: [currentUser.displayName],\n      } as FilterField);\n    }\n    if (f.length > 0 && submissions.length > 0) {\n      submissions.forEach((submission) => {\n        var valid = true;\n\n        for (let filter of f) {\n          if (\n            filter.columnLabel.includes(\n              \"Input of Local Marketing Department\"\n            ) ||\n            filter.columnLabel.includes(\n              \"Input of Central Marketing Controlling Team\"\n            )\n          ) {\n            return;\n          }\n\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"string\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    if (\n                      filter.columnValue === \"data.documentNumber\" ||\n                      filter.columnValue === \"data.costAccount\" ||\n                      filter.columnValue === \"data.documentNumberSI\" ||\n                      filter.columnValue === \"data.incomeAccountSI\" ||\n                      filter.columnValue === \"data.documentNumberCostGL\" ||\n                      filter.columnValue === \"data.costAccountCostGL\" ||\n                      filter.columnValue === \"data.documentNumberIncomeGL\" ||\n                      filter.columnValue === \"data.incomeAccountIncomeGL\"\n                    ) {\n                      valid = value\n                        .toString()\n                        .endsWith(filter.selectedValues[0].toString());\n                    } else {\n                      valid =\n                        filter.selectedValues[0].toString() ===\n                        value.toString();\n                    }\n                    break;\n                  case \"includes\":\n                    if (\n                      !value\n                        .toString()\n                        .includes(filter.selectedValues[0].toString())\n                    ) {\n                      valid = false;\n                    }\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    // eslint-disable-next-line no-loop-func\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n          if (!valid) {\n            return;\n          }\n        }\n\n        if (valid) {\n          if (submission.parentId !== null) {\n            var parent = sourceSubmissions.get(submission.parentId);\n            if (parent !== undefined && parent.id !== undefined) {\n              filteredMap.set(parent.id, parent);\n            }\n            submissions.forEach((s) => {\n              if (s.parentId === submission.parentId) {\n                filteredMap.set(s.id, s);\n              }\n            });\n          }\n          filteredMap.set(submission.id, submission);\n        }\n      });\n      ///\n      communicationSubmissions.forEach((submission) => {\n        var valid = true;\n        filters.forEach((filter) => {\n          if (\n            !filter.columnLabel.includes(\n              \"Input of Local Marketing Department\"\n            ) &&\n            !filter.columnLabel.includes(\n              \"Input of Central Marketing Controlling Team\"\n            )\n          ) {\n            return;\n          }\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"string\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          if (submission.parentId !== null) {\n            var parent = sourceSubmissions.get(submission.parentId);\n            if (parent !== undefined && parent.id !== undefined) {\n              cFilteredMap.set(parent.id, parent);\n            }\n          }\n          cFilteredMap.set(submission.id, submission);\n        }\n      });\n      ///\n\n      cFilteredMap.forEach((value) => {\n        filteredCommunication.push(value);\n      });\n      filteredMap.forEach((value) => {\n        filtered.push(value);\n      });\n\n      setFilteredCommunicationSubmissions(filteredCommunication);\n      setFilteredSubmissions(filtered);\n    } else {\n      setFilteredSubmissions(submissions);\n      setFilteredCommunicationSubmissions(communicationSubmissions);\n    }\n  }, [filters, submissions, communicationSubmissions, onlyMine]);\n\n  // const getHeapInfo = () => {\n  //   var memory = (window.performance as any).memory;\n  //   if (memory !== undefined) {\n  //     var info: any = {\n  //       total: memory.jsHeapSizeLimit,\n  //       allocated: memory.totalJSHeapSize,\n  //       current: memory.usedJSHeapSize,\n  //       domSize: document.getElementsByTagName(\"*\").length,\n  //     };\n  //     setHeapInfo(info);\n  //   }\n  // };\n  const getVisibleColumnIndices = (offset: number, columns: any) => {\n    var netOffsets: any[] = [],\n      offsetSum = 0,\n      leftBound = offset - 200,\n      rightBound = offset + tableWidth,\n      visibleIndices: any[] = [];\n\n    columns.forEach((col: any) => {\n      netOffsets.push(offsetSum);\n      offsetSum += col.width;\n    });\n\n    netOffsets.forEach((columnOffset, colIdx) => {\n      var isOutside = columnOffset < leftBound || columnOffset > rightBound;\n      if (!isOutside) {\n        visibleIndices.push(colIdx);\n      }\n    });\n\n    return visibleIndices;\n  };\n  // ________________________________\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // --------------------------------\n\n  // // rightBound = offset+tableWidth;\n  //  <-------------*--------------->\n  //  <-------------************---->\n\n  //  // leftBound = offset;\n  //  <-------------*--------------->\n  //  <--************--------------->\n\n  // leftBound = offset - maxColumnWidth;\n\n  //                 offset ->\n  // ********<---------------|--------------->*********\n  //         leftBound       -      rightBound\n\n  // leftBound = offset;\n  // rightBound = tableWidth;\n\n  // isOutside = columnOffset < leftBound || columnOffset > rightBound;\n\n  // if (!isOutside) {\n  //     // render column\n  // } else {\n  //     // remove from DOM\n  // }\n  const rowRenderer = React.useCallback(\n    ({ cells, columns }) => {\n      // null out hidden content on scroll\n      if (cells.length === 89) {\n        const visibleIndices = getVisibleColumnIndices(scrollLeft, columns);\n        const startIndex = visibleIndices[0];\n        const visibleCells = visibleIndices.map((x) => cells[x]);\n\n        if (startIndex > 0) {\n          let width = 0;\n          for (let i = 0; i < visibleIndices[0]; i++) {\n            width += cells[i].props.style.width;\n          }\n\n          const placeholder = <div key=\"placeholder\" style={{ width }} />;\n          return [placeholder, visibleCells];\n        }\n        return visibleCells;\n      }\n\n      return cells;\n    },\n    [scrollLeft]\n  );\n\n  async function partialUpdate(submission: string, path: string, value: any) {\n    setTotalRequests(totalRequests + 1);\n    if (path.includes(\"[\")) {\n      var s = path.split(\".\");\n      s.shift();\n      path = s.join(\".\");\n    }\n    RestAPI.updateSubmissionPartial(submission, path, value);\n  }\n\n  function handleCellUpdate(submission: string, path: string, value: any) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submission);\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n      if (_.get(submissions, path) !== value) {\n        _.set(submissions, path, value);\n        partialUpdate(submission, path, value);\n      }\n    }\n  }\n  function handleCommunicationCellUpdate(\n    submission: string,\n    path: string,\n    value: any\n  ) {\n    var submissionIndex = communicationSubmissions.findIndex(\n      (s) => s.id === submission\n    );\n\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n\n      if (_.get(communicationSubmissions, path) !== value) {\n        _.set(communicationSubmissions, path, value);\n        partialUpdate(submission, path, value);\n        var datePath = `[${submissionIndex}].data.entryDateLMD`;\n        if (_.get(communicationSubmissions, datePath) === undefined) {\n          _.set(communicationSubmissions, datePath, new Date());\n          partialUpdate(submission, datePath, new Date().toString());\n        }\n      }\n    }\n  }\n  function deleteSubmission(submissionId: string) {\n    var tbd: string[] = [submissionId];\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp.splice(submissionIndex, 1);\n      temp.map((s, index) => {\n        if (s.parentId !== null && s.parentId === submissionId) {\n          if (s.id) {\n            temp.splice(index, 1);\n            tbd.push(s.id);\n          }\n        }\n      });\n      setSubmissions(temp);\n      RestAPI.deleteSubmission(submissionId);\n    }\n  }\n  function parentizeSubmission(submissionId: string) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp[submissionIndex].parentId = null;\n      partialUpdate(submissionId, \"parentId\", null);\n      setSubmissions(temp);\n    }\n  }\n  function callSap(submissionId: string) {\n    RestAPI.callSapSubmission(submissionId)\n      .then((response) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div dangerouslySetInnerHTML={{ __html: response.data }} />\n            }\n            type={\"success\"}\n          />\n        );\n        var submissionIndex = submissions.findIndex(\n          (s) => s.id === submissionId\n        );\n        if (submissionIndex > -1) {\n          var temp = [...submissions];\n          temp[submissionIndex].data[\"sapStatus\"] = \"created\";\n          partialUpdate(submissionId, \"data.sapStatus\", \"created\");\n          setSubmissions(temp);\n        }\n      })\n      .catch((error) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div dangerouslySetInnerHTML={{ __html: error.response.data }} />\n            }\n            type={\"error\"}\n          />\n        );\n      });\n  }\n\n  async function handleResize(column: string, width: number) {\n    var c = localStorage.getItem(\"vendors.columns\");\n    var columns = {} as any;\n    if (c !== null) {\n      columns = JSON.parse(c);\n    }\n    columns[column] = width;\n    localStorage.setItem(\"vendors.columns\", JSON.stringify(columns));\n  }\n\n  function columnWidth(column: string, dw: number) {\n    var sd = (defaultColumnsWidth as any)[column];\n    return sd ? sd : dw;\n  }\n  //   async function saveCellWidth(cell: string, width: number) {\n  //     localStorage.setItem(cell, width.toString());\n  //   }\n  //   function getCellWidth(cell: string, defaultWidth: number) {\n  //     console.log(\"get\");\n  //     var value = localStorage.getItem(cell);\n  //     if (value !== null) {\n  //       return Number(value);\n  //     }\n  //     return defaultWidth;\n  //   }\n\n  useEffect(() => {\n    var selected = localStorage.getItem(\"template\") || \"local\";\n    setSelectedTemplate(selected);\n    var template = templates.find((t) => t.name == selected);\n    if (template) {\n      setDisplayedColumns(template.columns);\n      setFilters(template.filters);\n    }\n  }, [templates]);\n\n  useEffect(() => {\n    localStorage.setItem(\"template\", selectedTemplate);\n  }, [selectedTemplate]);\n\n  useEffect(() => {\n    RestAPI.getTemplates().then((response) => setTemplates(response.data));\n    RestAPI.getSubmissions().then((response) => {\n      var vSubs: Submission[] = [];\n      var subs = response.data;\n      var ss = new Map();\n      var cSubs: Submission[] = [];\n\n      subs.forEach((sub) => {\n        if (sub.group === \"communication\") {\n          cSubs.push(sub);\n        } else {\n          vSubs.push(sub);\n        }\n        ss.set(sub.id, sub);\n      });\n\n      vSubs.map((sub) => {\n        if (sub.parentId === null) {\n          sub.data.costAmountLC = 0;\n          sub.data.costAmountEUR = 0;\n          sub.data.incomeAmountLCSI = 0;\n          sub.data.incomeAmountEURSI = 0;\n          sub.data.costAmountLCCostGL = 0;\n          sub.data.costAmountEURCostGL = 0;\n          sub.data.incomeAmountLCIncomeGL = 0;\n          sub.data.incomeAmountEurIncomeGL = 0;\n          sub.data.totalIncomeLC = 0;\n          sub.data.totalCostsLC = 0;\n          sub.data.totalIncomeEUR = 0;\n          sub.data.totalCostsEUR = 0;\n          sub.data.totalCostsTool = 0;\n          sub.data.totalIncomeTool = 0;\n          vSubs\n            .filter((s) => s.parentId === sub.id)\n            .forEach((cs) => {\n              sub.data.costAmountLC += cs.data.costAmountLC || 0;\n              sub.data.costAmountEUR += cs.data.costAmountEUR || 0;\n              sub.data.incomeAmountLCSI += cs.data.incomeAmountLCSI || 0;\n              sub.data.incomeAmountEURSI += cs.data.incomeAmountEURSI || 0;\n              sub.data.costAmountLCCostGL += cs.data.costAmountLCCostGL || 0;\n              sub.data.costAmountEURCostGL += cs.data.costAmountEURCostGL || 0;\n              sub.data.incomeAmountLCIncomeGL +=\n                cs.data.incomeAmountLCIncomeGL || 0;\n              sub.data.incomeAmountEurIncomeGL +=\n                cs.data.incomeAmountEurIncomeGL || 0;\n              sub.data.totalIncomeLC += -(\n                cs.data.incomeAmountLCSI ||\n                0 + cs.data.incomeAmountLCIncomeGL ||\n                0\n              );\n              sub.data.totalCostsLC += -(\n                cs.data.costAmountLC ||\n                0 + cs.data.costAmountLCCostGL ||\n                0\n              );\n              sub.data.totalIncomeEUR += -(\n                cs.data.incomeAmountEURSI ||\n                0 + cs.data.incomeAmountEURIncomeGL ||\n                0\n              );\n              sub.data.totalCostsEUR += -(\n                cs.data.costAmountEUR ||\n                0 + cs.data.costAmountEURCostGL ||\n                0\n              );\n              sub.data.totalCostsTool +=\n                cs.data.costAmountLC || 0 + cs.data.costAmountLCCostGL || 0;\n              sub.data.totalIncomeTool +=\n                cs.data.incomeAmountLCSI ||\n                0 + cs.data.incomeAmountLCIncomeGL ||\n                0;\n            });\n        }\n      });\n\n      setCommunicationSubmissions(cSubs);\n      setFilteredCommunicationSubmissions(cSubs);\n      setSourceSubmissions(ss);\n      setSubmissions(vSubs);\n      setFilteredSubmissions(vSubs);\n    });\n  }, []);\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setCurrentUser(response);\n      }\n    });\n  }, []);\n\n  function findSubmissionsByPO(po: string) {\n    var s: Submission[] = [];\n    var parent = submissions.find(\n      (submission) =>\n        submission.data.projectNumber === po && submission.parentId === null\n    );\n    if (parent !== undefined) {\n      s.push(parent);\n      s.push(...submissions.filter((sub) => sub.parentId === parent?.id));\n    }\n    return s;\n  }\n\n  function visibilityController(group: string, key: string) {\n    return !displayedColumns.includes(group) && !displayedColumns.includes(key);\n  }\n\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.companyCode\",\n      dataKey: \"data.companyCode\",\n      title: \"Company Code\",\n      header: \"General Information\",\n      group: \"General Information\",\n      width: columnWidth(\"data.companyCode\", 150),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.companyCode\"),\n      type: \"number\",\n      // className: \"dark-green-3-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectNumber\",\n      dataKey: \"data.projectNumber\",\n      title: \"Project Number\",\n      width: columnWidth(\"data.projectNumber\", 150),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\"generalInformation\", \"data.projectNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectName\",\n      dataKey: \"data.projectName\",\n      title: \"Project Name\",\n      width: columnWidth(\"data.projectName\", 200),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\"generalInformation\", \"data.projectName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignStartDate\",\n      dataKey: \"data.campaignStartDate\",\n      title: \"Campaign Start Date\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.campaignStartDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.campaignStartDate\"\n      ),\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignEndDate\",\n      dataKey: \"data.campaignEndDate\",\n      title: \"Campaign End Date\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.campaignEndDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.campaignEndDate\"\n      ),\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectType\",\n      dataKey: \"data.projectType\",\n      title: \"Project Type\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.projectType\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.projectType\"),\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          loadOptions={loadOptions}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"author\",\n      dataKey: \"author\",\n      title: \"Author\",\n      group: \"General Information\",\n      width: columnWidth(\"author\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"author\"),\n      type: \"text\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.status\",\n      dataKey: \"data.status\",\n      title: \"Status\",\n      group: \"General Information\",\n      width: columnWidth(\"data.status\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.status\"),\n      type: \"text\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.country\",\n      dataKey: \"data.country\",\n      title: \"Countries EMEA\",\n      header: \"Project Information\",\n      width: columnWidth(\"data.country\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.country\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCodeEMEA\",\n      dataKey: \"data.countryCodeEMEA\",\n      title: \"Country Code EMEA\",\n      width: columnWidth(\"data.countryCodeEMEA\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCodeEMEA\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.mirrorProjectNumber\",\n      dataKey: \"data.mirrorProjectNumber\",\n      title: \"Mirror Project Number\",\n      width: columnWidth(\"data.mirrorProjectNumber\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.mirrorProjectNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.countryShare\",\n      dataKey: \"data.countryShare\",\n      title: \"% Country Share\",\n      width: columnWidth(\"data.countryShare\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.countryShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryBudgetContributionCC\",\n      dataKey: \"data.countryBudgetContributionCC\",\n      title: \"Country Budget Contribution (CC)\",\n      width: columnWidth(\"data.countryBudgetContributionCC\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryBudgetContributionCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCostEstimationCC\",\n      dataKey: \"data.countryCostEstimationCC\",\n      title: \"Country Cost Estimation (CC)\",\n      width: columnWidth(\"data.countryCostEstimationCC\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCostEstimationCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.manufacturerNumber\",\n      dataKey: \"data.manufacturerNumber\",\n      title: \"Manufacturer Number\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.manufacturerNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.manufacturerNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.status !== \"Incomplete\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorName\",\n      dataKey: \"data.vendorName\",\n      group: \"Project Information\",\n\n      title: \"Vendor Name\",\n      width: columnWidth(\"data.vendorName\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.debitorNumber\",\n      dataKey: \"data.debitorNumber\",\n      title: \"SAP Debitor Number\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.debitorNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.debitorNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.status !== \"Incomplete\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.creditorNumber\",\n      dataKey: \"data.creditorNumber\",\n      group: \"Project Information\",\n\n      title: \"SAP Creditor Number\",\n      width: columnWidth(\"data.creditorNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.creditorNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.status !== \"Incomplete\"}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.budgetSource\",\n      dataKey: \"data.budgetSource\",\n      title: \"Budget Source\",\n      width: columnWidth(\"data.budgetSource\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.budgetSource\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorBudgetCurrency\",\n      dataKey: \"data.vendorBudgetCurrency\",\n      title: \"Vendor Budget Currency\",\n      width: columnWidth(\"data.vendorBudgetCurrency\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.vendorBudgetCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorAmount\",\n      dataKey: \"data.vendorAmount\",\n      group: \"Project Information\",\n\n      title: \"Vendor Amount\",\n      width: columnWidth(\"data.vendorAmount\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorAmount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignCurrency\",\n      dataKey: \"data.campaignCurrency\",\n      title: \"Campaign Currency\",\n      width: columnWidth(\"data.campaignCurrency\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeCC\",\n      group: \"Project Information\",\n\n      dataKey: \"data.estimatedIncomeCC\",\n      title: \"Estimated Income (Campaign Currency)\",\n      width: columnWidth(\"data.estimatedIncomeCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsCC\",\n      group: \"Project Information\",\n\n      dataKey: \"data.estimatedCostsCC\",\n      title: \"Estimated Costs (Campaign Currency)\",\n      width: columnWidth(\"data.estimatedCostsCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.estimatedResultCC\",\n      dataKey: \"data.estimatedResultCC\",\n      title: \"Estimated Result (Campaign Currency)\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedResultCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeEUR\",\n      dataKey: \"data.estimatedIncomeEUR\",\n      title: \"Estimated Income EUR\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedIncomeEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsEUR\",\n      dataKey: \"data.estimatedCostsEUR\",\n      title: \"Estimated Costs EUR\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedCostsEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultEUR\",\n      dataKey: \"data.estimatedResultEUR\",\n      title: \"Estimated Result EUR\",\n      width: columnWidth(\"data.estimatedResultEUR\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorShare\",\n      dataKey: \"data.vendorShare\",\n      title: \"% Vendor Share\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.vendorShare\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.businessUnit\",\n      dataKey: \"data.businessUnit\",\n      group: \"Project Information\",\n\n      title: \"Business Unit\",\n      width: columnWidth(\"data.businessUnit\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.businessUnit\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.PH1\",\n      dataKey: \"data.PH1\",\n      title: \"PH1\",\n      width: columnWidth(\"data.PH1\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.PH1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignChannel\",\n      dataKey: \"data.campaignChannel\",\n      title: \"Campaign Channel\",\n      width: columnWidth(\"data.campaignChannel\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignChannel\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.targetAudience\",\n      dataKey: \"data.targetAudience\",\n      title: \"Target Audience\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.targetAudience\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.targetAudience\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.marketingResponsible\",\n      group: \"Project Information\",\n      dataKey: \"data.marketingResponsible\",\n      title: \"Marketing Responsible\",\n      width: columnWidth(\"data.marketingResponsible\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.marketingResponsible\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectApprover\",\n      dataKey: \"data.projectApprover\",\n      group: \"Project Information\",\n      title: \"Project Approver\",\n      width: columnWidth(\"data.projectApprover\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.projectApprover\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalInformation\",\n      dataKey: \"data.additionalInformation\",\n      title: \"Additional Information\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.additionalInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.additionalInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderServiceProvider\",\n      dataKey: \"data.purchaseOrderServiceProvider\",\n      title: \"Purchase Order Service Provider\",\n      group: \"Purchase Order\",\n\n      header: \"Purchase Order\",\n      width: columnWidth(\"data.purchaseOrderServiceProvider\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderServiceProvider\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorNamePO\",\n      dataKey: \"data.vendorNamePO\",\n      title: \"Vendor Name\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.vendorNamePO\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.vendorNamePO\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueOfServiceOrderedLC\",\n      dataKey: \"data.netValueOfServiceOrderedLC\",\n      group: \"Purchase Order\",\n\n      title: \"Net Value of Service Ordered (LC)\",\n      width: columnWidth(\"data.netValueOfServiceOrderedLC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.netValueOfServiceOrderedLC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localCurrency\",\n      dataKey: \"data.localCurrency\",\n      title: \"Local Currency\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.localCurrency\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.localCurrency\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValuePOC\",\n      dataKey: \"data.netValuePOC\",\n      title: \"Net Value (Purchase Order Currency)\",\n      width: columnWidth(\"data.netValuePOC\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValuePOC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderCurrency\",\n      dataKey: \"data.purchaseOrderCurrency\",\n      title: \"Purchase Order Currency\",\n      width: columnWidth(\"data.purchaseOrderCurrency\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueEur\",\n      dataKey: \"data.netValueEur\",\n      title: \"Net Value (EUR)\",\n      width: columnWidth(\"data.netValueEur\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValueEur\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderStatus\",\n      dataKey: \"data.purchaseOrderStatus\",\n      title: \"Purchase Order Status\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.purchaseOrderStatus\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.purchaseOrderStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonth\",\n      dataKey: \"data.yearMonth\",\n      title: \"Year / Month\",\n      header: \"Cost Invoices\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.yearMonth\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.yearMonth\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentType\",\n      dataKey: \"data.documentType\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentType\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentType\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDate\",\n      dataKey: \"data.postingDate\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDate\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.postingDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDate\",\n      dataKey: \"data.documentDate\",\n      title: \"Document Date\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.documentDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumber\",\n      dataKey: \"data.documentNumber\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumber\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.documentNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumber\",\n      dataKey: \"data.invoiceNumber\",\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumber\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.invoiceNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.budgetSource === \"No budget\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccount\",\n      dataKey: \"data.costAccount\",\n      title: \"Cost Account\",\n      width: columnWidth(\"data.costAccount\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costAccount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1\",\n      dataKey: \"data.name1\",\n      title: \"Invoice Supplier\",\n      width: columnWidth(\"data.name1\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.name1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLC\",\n      dataKey: \"data.costAmountLC\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLC\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountLC)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDC\",\n      dataKey: \"data.costAmountDC\",\n      title: \"Cost Amount (DC)\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.costAmountDC\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountDC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dc\",\n      dataKey: \"data.dc\",\n      title: \"DC\",\n      width: columnWidth(\"data.dc\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.dc\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEUR\",\n      dataKey: \"data.costAmountEUR\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEUR\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f2fcfc\"\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmount)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costStatus\",\n      dataKey: \"data.costStatus\",\n      title: \"Cost Status\",\n      width: columnWidth(\"data.costStatus\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthSI\",\n      dataKey: \"data.yearMonthSI\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthSI\", 200),\n      group: \"Sales Invoices\",\n\n      header: \"Sales Invoices\",\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.yearMonthSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeSI\",\n      dataKey: \"data.documentTypeSI\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentTypeSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateSI\",\n      dataKey: \"data.postingDateSI\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.postingDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateSI\",\n      dataKey: \"data.documentDateSI\",\n      title: \"Document Date\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.documentDateSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberSI\",\n      group: \"Sales Invoices\",\n\n      dataKey: \"data.documentNumberSI\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumberSI\",\n      dataKey: \"data.invoiceNumberSI\",\n      group: \"Sales Invoices\",\n\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.budgetSource === \"No budget\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountSI\",\n      dataKey: \"data.incomeAccountSI\",\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAccountSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1SI\",\n      dataKey: \"data.name1SI\",\n      title: \"Invoice Recipient\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.name1SI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.name1SI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n\n    {\n      key: \"data.incomeAmountLCSI\",\n      dataKey: \"data.incomeAmountLCSI\",\n      title: \"Income Amount (LC)\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.incomeAmountLCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountLCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountLC)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCSI\",\n      dataKey: \"data.incomeAmountDCSI\",\n      title: \"Income Amount (DC)\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.incomeAmountDCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountDCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcSI\",\n      dataKey: \"data.dcSI\",\n      title: \"DC\",\n      width: columnWidth(\"data.dcSI\", 200),\n      resizable: true,\n      group: \"Sales Invoices\",\n\n      hidden: visibilityController(\"salesInvoices\", \"data.dcSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEURSI\",\n      dataKey: \"data.incomeAmountEURSI\",\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEURSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountEURSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmount)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceStatusSI\",\n      dataKey: \"data.invoiceStatusSI\",\n      title: \"Invoice Status (Paid/Not Paid)\",\n      width: columnWidth(\"data.invoiceStatusSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceStatusSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.activityIdSI\",\n      group: \"Sales Invoices\",\n      dataKey: \"data.activityIdSI\",\n      title: \"Activity ID for Portal Vendors\",\n      width: columnWidth(\"data.activityIdSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.activityIdSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalMarketingInformation\",\n      group: \"Sales Invoices\",\n      dataKey: \"data.additionalMarketingInformation\",\n      title: \"Additional Marketing Information\",\n      width: columnWidth(\"data.additionalMarketingInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"salesInvoices\",\n        \"data.additionalMarketingInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthCostGL\",\n      dataKey: \"data.yearMonthCostGL\",\n      title: \"Year / Month\",\n      header: \"Cost GL Postings\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.yearMonthCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.yearMonthCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeCostGL\",\n      dataKey: \"data.documentTypeCostGL\",\n      group: \"Cost GL Postings\",\n\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentTypeCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateCostGL\",\n      group: \"Cost GL Postings\",\n\n      dataKey: \"data.postingDateCostGL\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.postingDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateCostGL\",\n      dataKey: \"data.documentDateCostGL\",\n      title: \"Document Date\",\n      width: columnWidth(\"data.documentDateCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberCostGL\",\n      dataKey: \"data.documentNumberCostGL\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.documentNumberCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.textCostGL\",\n      dataKey: \"data.textCostGL\",\n      title: \"Text\",\n      width: columnWidth(\"data.textCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.textCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccountCostGL\",\n      dataKey: \"data.costAccountCostGL\",\n      title: \"Cost Account\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.costAccountCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAccountCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLCCostGL\",\n      dataKey: \"data.costAmountLCCostGL\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLCCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountLCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountLCCostGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDCCostGL\",\n      dataKey: \"data.costAmountDCCostGL\",\n      title: \"Cost Amount (DC)\",\n      width: columnWidth(\"data.costAmountDCCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountDCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcCostGL\",\n      dataKey: \"data.dcCostGL\",\n      title: \"DC\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.dcCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.dcCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEURCostGL\",\n      dataKey: \"data.costAmountEURCostGL\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEURCostGL\", 200),\n      group: \"Cost GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.costAmountEURCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountCostGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthIncomeGL\",\n      dataKey: \"data.yearMonthIncomeGL\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthIncomeGL\", 200),\n      group: \"Income GL Postings\",\n\n      header: \"Income GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.yearMonthIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeIncomeGL\",\n      dataKey: \"data.documentTypeIncomeGL\",\n      title: \"Document Type\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.documentTypeIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentTypeIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateIncomeGL\",\n      dataKey: \"data.postingDateIncomeGL\",\n      title: \"Posting Date\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.postingDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.postingDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateIncomeGL\",\n      dataKey: \"data.documentDateIncomeGL\",\n      title: \"Document Date\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.documentDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberIncomeGL\",\n      dataKey: \"data.documentNumberIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentNumberIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.textIncomeGL\",\n      dataKey: \"data.textIncomeGL\",\n      group: \"Text\",\n\n      title: \"Document Number\",\n      width: columnWidth(\"data.textIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.textIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountIncomeGL\",\n      dataKey: \"data.incomeAccountIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAccountIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCIncomeGL\",\n      dataKey: \"data.incomeAmountLCIncomeGL\",\n      title: \"Income Amount (LC)\",\n      width: columnWidth(\"data.incomeAmountLCIncomeGL\", 200),\n      resizable: true,\n      group: \"Income GL Postings\",\n\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountLCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountLCIncomeGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCIncomeGL\",\n      dataKey: \"data.incomeAmountDCIncomeGL\",\n      title: \"Income Amount (DC)\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.incomeAmountDCIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountDCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcIncomeGL\",\n      dataKey: \"data.dcIncomeGL\",\n      title: \"DC\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.dcIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.dcIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEurIncomeGL\",\n      dataKey: \"data.incomeAmountEurIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEurIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountEurIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountIncomeGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.totalIncomeLC\",\n      dataKey: \"data.totalIncomeLC\",\n      title: \"Total Income (LC)\",\n      header: \"Project Results\",\n      width: columnWidth(\"data.totalIncomeLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalIncomeLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeInTool)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsLC\",\n      dataKey: \"data.totalCostsLC\",\n      title: \"Total Costs (LC)\",\n      width: columnWidth(\"data.totalCostsLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalCostsLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostsInTool)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalProfitLC\",\n      dataKey: \"data.totalProfitLC\",\n      title: \"Total Profit (LC)\",\n      width: columnWidth(\"data.totalProfitLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalProfitLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInTool + totalCostsInTool >= 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    totalIncomeInTool + totalCostsInTool\n                  )}`\n                : props.rowData.data.totalIncomeLC +\n                  props.rowData.data.totalCostsLC\n              : \"\"\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalLossLC\",\n      dataKey: \"data.totalLossLC\",\n      title: \"Total Loss (LC)\",\n      width: columnWidth(\"data.totalLossLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalLossLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInTool + totalCostsInTool < 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    (totalIncomeInTool + totalCostsInTool) * -1\n                  )}`\n                : (props.rowData.data.totalIncomeLC +\n                    props.rowData.data.totalCostsLC) *\n                  -1\n              : \"\"\n          }\n        />\n      ),\n    },\n\n    {\n      key: \"data.totalIncomeEUR\",\n      dataKey: \"data.totalIncomeEUR\",\n      title: \"Total Income (EUR)\",\n      width: columnWidth(\"data.totalIncomeEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalIncomeEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeInToolEUR)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsEUR\",\n      dataKey: \"data.totalCostsEUR\",\n      title: \"Total Costs (EUR)\",\n      width: columnWidth(\"data.totalCostsEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalCostsEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostsInToolEUR)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalProfitEUR\",\n      dataKey: \"data.totalProfitEUR\",\n      title: \"Total Profit (EUR)\",\n      width: columnWidth(\"data.totalProfitEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalProfitEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInToolEUR + totalCostsInToolEUR >= 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    totalIncomeInToolEUR + totalCostsInToolEUR\n                  )}`\n                : props.rowData.data.totalIncomeEUR +\n                  props.rowData.data.totalCostsEUR\n              : \"\"\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalLossEUR\",\n      dataKey: \"data.totalLossEUR\",\n      title: \"Total Loss (EUR)\",\n      width: columnWidth(\"data.totalLossEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalLossEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInToolEUR + totalCostsInToolEUR < 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    (totalIncomeInToolEUR + totalCostsInToolEUR) * -1\n                  )}`\n                : (props.rowData.data.totalIncomeEUR +\n                    props.rowData.data.totalCostsEUR) *\n                  -1\n              : \"\"\n          }\n        />\n      ),\n    },\n\n    ///\n    {\n      key: \"data.totalCostsTool\",\n      dataKey: \"data.totalCostsTool\",\n      title: \"Total Costs In Tool (LC)\",\n      width: columnWidth(\"data.totalCostsTool\", 200),\n      resizable: true,\n      header: \"Control Checks\",\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalCostAmountLC + totalCostAmountLCCostGL\n                )}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsSAP\",\n      dataKey: \"data.totalCostsSAP\",\n      title: \"Total Costs In SAP (LC)\",\n      width: columnWidth(\"data.totalCostsSAP\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalCostAmountLC + totalCostAmountLCCostGL\n                )}`\n              : props.rowData.data.totalCostsTool\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeTool\",\n      dataKey: \"data.totalIncomeTool\",\n      title: \"Total Income In Tool (LC)\",\n      width: columnWidth(\"data.totalIncomeTool\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n                )}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeSAP\",\n      dataKey: \"data.totalIncomeSAP\",\n      title: \"Total Income In SAP (LC)\",\n      width: columnWidth(\"data.totalIncomeSAP\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n                )}`\n              : props.rowData.data.totalIncomeTool\n          }\n        />\n      ),\n    },\n    ///\n\n    {\n      key: \"__actions.sap\",\n      dataKey: \"__actions.sap\",\n      title: \"SAP\",\n      width: columnWidth(\"__actions.sap\", 100),\n      resizable: true,\n      header: \"Actions\",\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"green\"}\n            onUpdate={callSap}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"create\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.view\",\n      dataKey: \"__actions.view\",\n      title: \"View\",\n      width: columnWidth(\"__actions.view\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"yellow\"}\n            onUpdate={(submissionId: string) => {\n              window.open(\n                \"/submissions/view/\" + submissionId,\n                \"_blank\",\n                \"noopener,noreferrer\"\n              );\n            }}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"view\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.delete\",\n      dataKey: \"__actions.delete\",\n      title: \"Delete\",\n      width: columnWidth(\"__actions.delete\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"button\"}\n          textColor={\"red\"}\n          backgroundColor=\"#fef9fa\"\n          onUpdate={deleteSubmission}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\"delete\"}\n        />\n      ),\n    },\n  ];\n\n  const headerRendererForTable = useCallback(\n    (props: {\n      cells: ReactNode[];\n      columns: ColumnShape<{\n        [k: string]: string;\n      }>;\n      headerIndex: number;\n    }) => {\n      const { headerIndex, columns, cells } = props;\n      if (headerIndex === 0) {\n        return cells.map((cell, index) => {\n          return cloneElement(cell as ReactElement, {\n            className: \"BaseTable__header-cell\",\n            children: (\n              <span style={{ fontWeight: 650 }} key={index}>\n                {columns[index].header ? columns[index].header : \"\"}\n              </span>\n            ),\n          });\n        });\n      }\n      return cells;\n    },\n    []\n  );\n  return (\n    <div>\n      <Box h=\"70px\" textAlign={\"end\"}>\n        <IconButton\n          icon={<IoSave />}\n          isDisabled={\n            selectedTemplate === \"local\"\n            // currentUser.displayName === \"unknown\"\n          }\n          onClick={() => {\n            var template: Template = {\n              name: selectedTemplate,\n              columns: displayedColumns,\n              filters,\n            };\n            RestAPI.updateTemplate(template).then(() => {\n              toast(\n                <Toast\n                  title={\"Preset updated\"}\n                  message={\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: \"Preset successfully saved\",\n                      }}\n                    />\n                  }\n                  type={\"success\"}\n                />\n              );\n            });\n          }}\n          aria-label=\"save\"\n          colorScheme=\"blue\"\n          mr=\"10px\"\n        />\n        <IconButton\n          icon={onlyMine ? <RiUserFill /> : <RiGroupFill />}\n          onClick={() => {\n            setOnlyMine(!onlyMine);\n          }}\n          // isDisabled={currentUser.displayName === \"unknown\"}\n          aria-label=\"filter\"\n          colorScheme=\"blue\"\n          mr=\"10px\"\n        />\n        <IconButton\n          onClick={async () => {\n            interface FD {\n              [key: string]: any;\n            }\n            var formattedData: FD[] = [];\n            let init = false;\n            let header: FD[] = [\n              {\n                ID: \"Summary\",\n                Parent: \"\",\n                Group: \"\",\n                Created: \"\",\n                Title: \"\",\n                Author: \"\",\n              },\n              {\n                ID: \"ID\",\n                Parent: \"Parent\",\n                Group: \"Group\",\n                Created: \"Created\",\n                Title: \"Title\",\n                Author: \"Author\",\n              },\n              {\n                ID: \"\",\n                Parent: \"\",\n                Group: \"\",\n                Created: \"\",\n                Title: \"\",\n                Author: \"\",\n              },\n            ];\n            formattedData = filteredSubmissions.map((s) => {\n              let doc: FD = {\n                ID: s.id || \"unknown\",\n                Parent: s.parentId === null,\n                Group: s.group,\n                Created: s.created,\n                Title: s.title,\n                Author: s.author,\n              };\n              DisplayedColumnsList.forEach((group: any) => {\n                if (group.value === \"CMCT\" || group.value === \"LMD\") {\n                  return;\n                }\n                group.children.map((column: any, index: number) => {\n                  doc[column.value] = _.get(s, column.value);\n                  if (column.type === \"number\") {\n                    doc[column.value] = numberWithCommas(doc[column.value]);\n                  }\n                  if (!init) {\n                    header[0][column.value] = index === 0 ? group.label : \"\";\n                    header[1][column.value] = `${column.label}`;\n                  }\n                });\n              });\n              init = true;\n              return doc;\n            });\n            header[2] = {\n              \"data.costAmountLC\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC\n              )}`,\n              \"data.costAmountEUR\": `TOTAL: ${numberWithCommas(\n                totalCostAmount\n              )}`,\n              \"data.incomeAmountLCSI\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC\n              )}`,\n              \"data.incomeAmountEURSI\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmount\n              )}`,\n              \"data.costAmountLCCostGL\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLCCostGL\n              )}`,\n              \"data.costAmountEURCostGL\": `TOTAL: ${numberWithCommas(\n                totalCostAmountCostGL\n              )}`,\n              \"data.incomeAmountLCIncomeGL\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLCIncomeGL\n              )}`,\n              \"data.incomeAmountEurIncomeGL\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountIncomeGL\n              )}`,\n              \"data.totalIncomeLC\": `TOTAL: ${numberWithCommas(\n                totalIncomeInTool\n              )}`,\n              \"data.totalCostsLC\": `TOTAL: ${numberWithCommas(\n                totalCostsInTool\n              )}`,\n              \"data.totalProfitLC\": `TOTAL: ${numberWithCommas(\n                totalIncomeInTool + totalCostsInTool\n              )}`,\n              \"data.totalLossLC\": `TOTAL: ${numberWithCommas(\n                (totalIncomeInTool + totalCostsInTool) * -1\n              )}`,\n              \"data.totalIncomeEUR\": `TOTAL: ${numberWithCommas(\n                totalIncomeInToolEUR\n              )}`,\n              \"data.totalCostsEUR\": `TOTAL: ${numberWithCommas(\n                totalCostsInToolEUR\n              )}`,\n              \"data.totalProfitEUR\": `TOTAL: ${numberWithCommas(\n                totalIncomeInToolEUR + totalCostsInToolEUR\n              )}`,\n              \"data.totalLossEUR\": `TOTAL: ${numberWithCommas(\n                (totalIncomeInToolEUR + totalCostsInToolEUR) * -1\n              )}`,\n              \"data.totalCostsTool\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC + totalCostAmountLCCostGL\n              )}`,\n              \"data.totalCostsSAP\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC + totalCostAmountLCCostGL\n              )}`,\n              \"data.totalIncomeTool\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n              )}`,\n              \"data.totalIncomeSAP\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n              )}`,\n            };\n            formattedData.unshift(...header);\n            const ws = XLSX.utils.json_to_sheet(formattedData, {\n              skipHeader: true,\n            });\n            ws[\"!cols\"] = Object.keys(formattedData[0]).map(() => {\n              return { wch: 30 };\n            });\n            const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n            const excelBuffer = XLSX.write(wb, {\n              bookType: \"xlsx\",\n              type: \"array\",\n            });\n            const data = new Blob([excelBuffer], {\n              type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n            });\n            FileSaver.saveAs(data, \"test\" + \".xlsx\");\n          }}\n          colorScheme=\"teal\"\n          aria-label=\"export\"\n          icon={<RiFileExcel2Line />}\n        ></IconButton>\n      </Box>\n\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        minH={\"80vh\"}\n        mb={5}\n        mt={\"-20px\"}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n      >\n        <Tabs isLazy={false} variant=\"enclosed\">\n          <TabList>\n            <Tab>Projects</Tab>\n            <Tab>Invoicing</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer\n                onResize={({\n                  width,\n                  height,\n                }: {\n                  width: number;\n                  height: number;\n                }) => {\n                  setTableWidth(width);\n                }}\n              >\n                {({ width, height }) => (\n                  <BaseTable\n                    key={ignored}\n                    scrollLeft={scrollLeft}\n                    onScroll={onScroll}\n                    onColumnResizeEnd={({\n                      column,\n                      width,\n                    }: {\n                      column: any;\n                      width: number;\n                    }) => {\n                      // handleResize(column.dataKey, width);\n                    }}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={10}\n                    ignoreFunctionInColumnCompare={false}\n                    expandColumnKey={\"__expand\"}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={tableCells}\n                    headerRenderer={headerRendererForTable}\n                    headerClassName=\"header-cells\"\n                    frozenData={\n                      [\n                        {\n                          id: \"total\",\n                          data: {},\n                          parentId: null,\n                        },\n                      ] as any[]\n                    }\n                    data={unflatten([...filteredSubmissions] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={[50, 50]}\n                    rowHeight={55}\n                    // overlayRenderer={\n                    //   <div>\n                    //     <DebugOverlay hidden={debugOverlayHidden}>\n                    //       <Box h=\"40px\" w=\"100%\">\n                    //         <CloseButton\n                    //           onClick={() => {\n                    //             hideDebugOverlay(true);\n                    //           }}\n                    //           mr=\"-10px\"\n                    //           float=\"right\"\n                    //         />\n                    //       </Box>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Requested Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.total)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Allocated Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.allocated)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Active Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.current)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           DOM Elements:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.domSize}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Virtualization:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           partial\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Table Mode:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           editable\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Avg FPS:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {avgFps}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           FPS:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {fps[fps.length - 1]}\n                    //         </Text>\n                    //       </HStack>\n                    //       <Divider mt={\"10px\"} />\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Active Sessions:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           1\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Total Requests:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {totalRequests}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Sync Protocol:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           HTTP\n                    //         </Text>\n                    //       </HStack>\n                    //       <VStack align=\"end\" mt=\"10px\">\n                    //         <Button\n                    //           float=\"right\"\n                    //           onClick={() => {\n                    //             RestAPI.updateVendorTableDefaultConfig(\n                    //               JSON.parse(\n                    //                 localStorage.getItem(\n                    //                   \"vendors.displayedColumns\"\n                    //                 ) || \"[]\"\n                    //               ),\n                    //               JSON.parse(\n                    //                 localStorage.getItem(\"vendors.columns\") ||\n                    //                   \"{}\"\n                    //               )\n                    //             );\n                    //           }}\n                    //           colorScheme=\"blue\"\n                    //         >\n                    //           update preset\n                    //         </Button>\n                    //         <Button\n                    //           float=\"left\"\n                    //           onClick={() => {\n                    //             localStorage.removeItem(\n                    //               \"vendors.displayedColumns\"\n                    //             );\n                    //             localStorage.removeItem(\"vendors.columns\");\n                    //             window.location.reload();\n                    //           }}\n                    //           colorScheme=\"red\"\n                    //         >\n                    //           clear cache\n                    //         </Button>\n                    //       </VStack>\n                    //     </DebugOverlay>\n                    //   </div>\n                    // }\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer\n                onResize={({\n                  width,\n                  height,\n                }: {\n                  width: number;\n                  height: number;\n                }) => {\n                  setTableWidth(width);\n                }}\n              >\n                {({ width, height }) => (\n                  <BaseTable\n                    scrollLeft={scrollLeft}\n                    onScroll={onScroll}\n                    onColumnResizeEnd={({\n                      column,\n                      width,\n                    }: {\n                      column: any;\n                      width: number;\n                    }) => {\n                      // handleResize(column.dataKey, width);\n                    }}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={10}\n                    ignoreFunctionInColumnCompare={false}\n                    expandColumnKey={\"__expand\"}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={[\n                      {\n                        key: \"__expand\",\n                        dataKey: \"__expand\",\n                        title: \"\",\n                        width: 50,\n                        frozen: Column.FrozenDirection.LEFT,\n                        resizable: false,\n                        cellRenderer: () => <div />,\n                        className: \"expand\",\n                      },\n                      {\n                        key: \"data.documentNumberCMCT\",\n                        dataKey: \"data.documentNumberCMCT\",\n                        title: \"SAP Document Number\",\n                        group: \"Input of Central Marketing Controlling Team\",\n                        header: \"Input of Central Marketing Controlling Team\",\n                        width: columnWidth(\"data.documentNumberCMCT\", 300),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"CMCT\",\n                          \"data.documentNumberCMCT\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={\n                              props.rowData.data.statusLMD !==\n                                \"OK FOR INVOICING\" &&\n                              props.rowData.data.statusLMD !== \"INVOICED\"\n                            }\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.operatorCMCT\",\n                                currentUser.displayName\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.dateCMCT\",\n                                new Date().toString()\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.statusLMD\",\n                                \"INVOICED\"\n                              );\n\n                              var mi = submissions.findIndex(\n                                (s) => s.data.documentNumberSI === value\n                              );\n                              if (mi > -1) {\n                                handleCellUpdate(\n                                  submissions[mi].id!,\n                                  \"data.activityIdSI\",\n                                  props.rowData.data.activityIdForPortalVendors\n                                );\n                                handleCellUpdate(\n                                  submissions[mi].id!,\n                                  \"data.additionalMarketingInformation\",\n                                  props.rowData.data.additionalInformationLMD\n                                );\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.dateCMCT\",\n                        dataKey: \"data.dateCMCT\",\n                        title: \"Date\",\n                        width: columnWidth(\"data.dateCMCT\", 200),\n                        resizable: true,\n                        group: \"Input of Central Marketing Controlling Team\",\n                        hidden: visibilityController(\"CMCT\", \"data.dateCMCT\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            readonly={true}\n                            backgroundColor=\"#f9f9ff\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.operatorCMCT\",\n                        dataKey: \"data.operatorCMCT\",\n                        title: \"Operator\",\n                        width: columnWidth(\"data.operatorCMCT\", 200),\n                        resizable: true,\n                        group: \"Input of Central Marketing Controlling Team\",\n                        hidden: visibilityController(\n                          \"CMCT\",\n                          \"data.operatorCMCT\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={true}\n                            backgroundColor=\"#f9f9ff\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.statusLMD\",\n                        dataKey: \"data.statusLMD\",\n                        title: \"Status\",\n                        width: columnWidth(\"data.statusLMD\", 300),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n                        header: \"Input of Local Marketing Department\",\n                        hidden: visibilityController(\"LMD\", \"data.statusLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            readonly={true}\n                            loadOptions={loadOptions}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoicingDateLMD\",\n                        dataKey: \"data.invoicingDateLMD\",\n                        title: \"Date of Invoicing\",\n                        width: columnWidth(\"data.invoicingDateLMD\", 200),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoicingDateLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.requestorLMD\",\n                                currentUser.displayName\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.requestorLMD\",\n                        dataKey: \"data.requestorLMD\",\n                        title: \"Requestor\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.requestorLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.requestorLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.vendorLMD\",\n                        dataKey: \"data.vendorLMD\",\n                        title: \"Vendor\",\n                        width: columnWidth(\"data.vendorLMD\", 250),\n                        group: \"Input of Local Marketing Department\",\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.vendorLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            loadOptions={() => {\n                              if (\n                                props.rowData.data\n                                  .alsoMarketingProjectNumberLMD !== undefined\n                              ) {\n                                var vs = findSubmissionsByPO(\n                                  props.rowData.data\n                                    .alsoMarketingProjectNumberLMD\n                                );\n                                if (vs.length > 0) {\n                                  var v: any[] = [];\n                                  vs.forEach((s) => {\n                                    if (s.data.vendorName !== undefined) {\n                                      v.push({\n                                        label: s.data.vendorName,\n                                        value: s.data.vendorName,\n                                      });\n                                    }\n                                  });\n                                  if (v.length > 0) {\n                                    return v;\n                                  }\n                                }\n                              }\n\n                              return VendorsNames;\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              let set = false;\n                              VendorsNames.every((v) => {\n                                if (v.label === value) {\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.vodLMD\",\n                                    v.value.debitorischer\n                                  );\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.buLMD\",\n                                    v.value.bu\n                                  );\n                                  set = true;\n                                  return false;\n                                }\n                                return true;\n                              });\n                              if (!set) {\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.vodLMD\",\n                                  \"\"\n                                );\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.buLMD\",\n                                  \"\"\n                                );\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.vodLMD\",\n                        dataKey: \"data.vodLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"VOD\",\n                        width: columnWidth(\"data.vodLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.vodLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.buLMD\",\n                        dataKey: \"data.buLMD\",\n                        title: \"BU\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.buLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.buLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // FIXME: set after 'refresh status' clicked\n                      {\n                        key: \"data.entryDateLMD\",\n                        dataKey: \"data.entryDateLMD\",\n                        title: \"Entry Date\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.entryDateLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.entryDateLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            readonly\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoiceTypeLMD\",\n                        dataKey: \"data.invoiceTypeLMD\",\n                        title: \"Invoice Type\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.invoiceTypeLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoiceTypeLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            readonly={props.rowData.parentId !== null}\n                            loadOptions={() => {\n                              return [\n                                {\n                                  label: \"Invoice\",\n                                  value: \"Invoice\",\n                                },\n                                { label: \"Pre-Invoice\", value: \"Pre-Invoice\" },\n                                {\n                                  label: \"Internal Invoice\",\n                                  value: \"Internal Invoice\",\n                                },\n                                {\n                                  label: \"Cancellation\",\n                                  value: \"Cancellation\",\n                                },\n                              ];\n                            }}\n                            backgroundColor={\n                              (props.cellData && props.cellData.length > 0) ||\n                              props.rowData.parentId !== null\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              if (value === \"Pre-Invoice\") {\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.materialNumberLMD\",\n                                  \"7000100\"\n                                );\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.alsoMarketingProjectNumberLMD\",\n                                  \"6110VZ01\"\n                                );\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.sendToLMD\",\n                                \"none\"\n                              );\n                            }}\n                            // onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.cancellationInfoLMD\",\n                        dataKey: \"data.cancellationInfoLMD\",\n                        title: \"Cancellation Information\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.cancellationInfoLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.cancellationInfoLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            readonly={\n                              props.rowData.data.invoiceTypeLMD !==\n                              \"Cancellation\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.materialNumberLMD\",\n                        dataKey: \"data.materialNumberLMD\",\n                        title: \"Material Number\",\n                        width: columnWidth(\"data.materialNumberLMD\", 200),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.materialNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            // loadOptions={() => {\n                            //   return VendorsNames.map((vendor) => {\n                            //     return {\n                            //       label: vendor.value.hersteller,\n                            //       value: vendor.value.hersteller,\n                            //     };\n                            //   });\n                            // }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.alsoMarketingProjectNumberLMD\",\n                        dataKey: \"data.alsoMarketingProjectNumberLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"ALSO Marketing Project Number\",\n                        width: columnWidth(\n                          \"data.alsoMarketingProjectNumberLMD\",\n                          250\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.alsoMarketingProjectNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            maxLength={12}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              var vs = findSubmissionsByPO(value);\n                              if (vs.length < 1) {\n                                toast(\n                                  <Toast\n                                    title={\"Unknown Project Number\"}\n                                    message={\"Project Number not found\"}\n                                    type={\"error\"}\n                                  />\n                                );\n                              } else {\n                                var currentVendor =\n                                  props.rowData.data.vendorLMD;\n                                if (typeof currentVendor === \"string\") {\n                                  var valid = false;\n                                  vs.forEach((s) => {\n                                    if (\n                                      s.data.vendorName !== undefined &&\n                                      currentVendor === s.data.vendorName\n                                    ) {\n                                      valid = true;\n                                    }\n                                  });\n                                  if (!valid) {\n                                    handleCommunicationCellUpdate(\n                                      submission,\n                                      \"data.vendorLMD\",\n                                      \"\"\n                                    );\n                                    toast(\n                                      <Toast\n                                        title={\"Unknown Vendor Selected\"}\n                                        message={\n                                          \"Vendor does not exist under this project\"\n                                        }\n                                        type={\"error\"}\n                                      />\n                                    );\n                                  }\n                                }\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.invoiceTextLMD\",\n                                  vs[0].data.campaignDescription\n                                );\n                                var amount = 0;\n                                switch (vs[0].data.projectType) {\n                                  case \"Local One Vendor\" ||\n                                    \"European One Vendor\":\n                                    amount =\n                                      vs[0].data\n                                        .campaignEstimatedIncomeBudgetsCurrency;\n                                    break;\n                                  case \"Local Multi Vendor\" ||\n                                    \"European Multi Vendor\":\n                                    vs.map((s) => {\n                                      if (!isNaN(s.data.vendorBudgetAmount)) {\n                                        amount += Number(\n                                          s.data.vendorBudgetAmount\n                                        );\n                                      }\n                                    });\n                                    break;\n                                  default:\n                                    amount = NaN;\n                                }\n                                if (!isNaN(amount)) {\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.amountLMD\",\n                                    amount\n                                  );\n                                }\n                                toast(\n                                  <Toast\n                                    title={\"Project Found\"}\n                                    message={\"Data copied from parent project\"}\n                                    type={\"success\"}\n                                  />\n                                );\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoiceTextLMD\",\n                        dataKey: \"data.invoiceTextLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Invoice Text\",\n                        width: columnWidth(\"data.invoiceTextLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoiceTextLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.referenceNumberFromVendor\",\n                        dataKey: \"data.referenceNumberFromVendor\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Reference Number From Vendor\",\n                        width: columnWidth(\n                          \"data.referenceNumberFromVendor\",\n                          200\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.referenceNumberFromVendor\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.activityIdForPortalVendors\",\n                        dataKey: \"data.activityIdForPortalVendors\",\n                        group: \"Input of Local Marketing Department\",\n                        title: \"Activity ID for Portal Vendors\",\n                        width: columnWidth(\n                          \"data.activityIdForPortalVendors\",\n                          200\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.activityIdForPortalVendors\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.amountLMD\",\n                        dataKey: \"data.amountLMD\",\n                        title: \"Amount\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.amountLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.amountLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"number\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor={\n                              props.cellData &&\n                              props.cellData !== 0 &&\n                              props.cellData.toString().trim().length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // {\n                      //   key: \"data.additionalInvoiceInfoLMD\",\n                      //   dataKey: \"data.additionalInvoiceInfoLMD\",\n                      //   title: \"Additional Info on Invoice\",\n                      //   group: \"Input of Local Marketing Department\",\n\n                      //   width: columnWidth(\n                      //     \"data.additionalInvoiceInfoLMD\",\n                      //     200\n                      //   ),\n                      //   resizable: true,\n                      //   hidden: visibilityController(\n                      //     \"LMD\",\n                      //     \"data.additionalInvoiceInfoLMD\"\n                      //   ),\n                      //   cellRenderer: (props: any) => (\n                      //     <EditableTableCell\n                      //       type={\"text\"}\n                      //       backgroundColor=\"#F5FAEF\"\n                      //       onUpdate={handleCommunicationCellUpdate}\n                      //       rowIndex={props.rowIndex}\n                      //       columnKey={props.column.dataKey}\n                      //       rowData={props.rowData}\n                      //       initialValue={props.cellData}\n                      //     />\n                      //   ),\n                      // },\n                      {\n                        key: \"data.documentCurrencyLMD\",\n                        dataKey: \"data.documentCurrencyLMD\",\n                        title: \"Document Currency\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.documentCurrencyLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.documentCurrencyLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return ExchangeRates;\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.paymentMethodLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        dataKey: \"data.paymentMethodLMD\",\n                        title: \"Payment Method\",\n                        width: columnWidth(\"data.paymentMethodLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.paymentMethodLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            loadOptions={() => {\n                              return [\n                                { label: \"Payment\", value: \"Payment\" },\n                                {\n                                  label: \"Money in House\",\n                                  value: \"Money in House\",\n                                },\n                                {\n                                  label: \"Credit Note from Vendor\",\n                                  value: \"Credit Note from Vendor\",\n                                },\n                              ];\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              var dunningStop = \"No\";\n                              if (\n                                value === \"Money in House\" ||\n                                value === \"Credit Note from Vendor\"\n                              ) {\n                                dunningStop = \"Yes\";\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.dunningStopLMD\",\n                                dunningStop\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.dunningStopLMD\",\n                        dataKey: \"data.dunningStopLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Dunning Stop?\",\n                        width: columnWidth(\"data.dunningStopLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.dunningStopLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            loadOptions={() => {\n                              return [\n                                { label: \"Yes\", value: \"Yes\" },\n                                { label: \"No\", value: \"No\" },\n                              ];\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.depositNumberLMD\",\n                        dataKey: \"data.depositNumberLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Deposit Number\",\n                        width: columnWidth(\"data.depositNumberLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.depositNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor={\n                              props.rowData.data.paymentMethodLMD ===\n                              \"Money in House\"\n                                ? props.cellData && props.cellData.length > 0\n                                  ? \"#F5FAEF\"\n                                  : \"#f7cdd6\"\n                                : \"#F5FAEF\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.additionalInformationLMD\",\n                        dataKey: \"data.additionalInformationLMD\",\n                        title: \"Additional Information\",\n                        width: columnWidth(\n                          \"data.additionalInformationLMD\",\n                          200\n                        ),\n                        group: \"Input of Local Marketing Department\",\n\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.additionalInformationLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.sendToLMD\",\n                        dataKey: \"data.sendToLMD\",\n                        title: \"Send to\",\n                        width: columnWidth(\"data.sendToLMD\", 200),\n                        group: \"Input of Local Marketing Department\",\n\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.sendToLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            readonly={\n                              props.rowData.data.invoiceTypeLMD ===\n                              \"Internal Invoice\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"__actions.validate\",\n                        dataKey: \"__actions.validate\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.validate\", 100),\n                        resizable: false,\n                        header: \"Actions\",\n                        className: \"red-border\",\n                        cellRenderer: (props: any) =>\n                          props.rowData.parentId === null ? (\n                            <EditableTableCell\n                              invoiced={\n                                props.rowData.data.statusLMD === \"INVOICED\"\n                              }\n                              type={\"button\"}\n                              backgroundColor=\"#fef9fa\"\n                              textColor={\"green\"}\n                              onUpdate={(submissionId: string) => {\n                                var targetSubmissionIndex =\n                                  communicationSubmissions.findIndex(\n                                    (s) => s.id === submissionId\n                                  );\n                                if (targetSubmissionIndex > -1) {\n                                  var is: Submission[] = [];\n                                  is.push(\n                                    communicationSubmissions[\n                                      targetSubmissionIndex\n                                    ]\n                                  );\n\n                                  if (is[0].parentId === null) {\n                                    communicationSubmissions.forEach((s) => {\n                                      if (s.parentId === submissionId) {\n                                        is.push(s);\n                                      }\n                                    });\n                                  }\n\n                                  is.forEach((ts, tsi) => {\n                                    if (\n                                      ts.data.invoicingDateLMD &&\n                                      ts.data.invoicingDateLMD.length > 0 &&\n                                      ts.data.vendorLMD &&\n                                      ts.data.vendorLMD.length > 0 &&\n                                      ts.data.invoiceTypeLMD &&\n                                      ts.data.invoiceTypeLMD.length > 0 &&\n                                      ts.data.materialNumberLMD &&\n                                      ts.data.materialNumberLMD.length > 0 &&\n                                      ts.data.alsoMarketingProjectNumberLMD &&\n                                      ts.data.alsoMarketingProjectNumberLMD\n                                        .length > 0 &&\n                                      ts.data.invoiceTextLMD &&\n                                      ts.data.invoiceTextLMD.length > 0 &&\n                                      ts.data.amountLMD &&\n                                      typeof ts.data.amountLMD === \"number\" &&\n                                      ts.data.documentCurrencyLMD &&\n                                      ts.data.documentCurrencyLMD.length > 0 &&\n                                      ts.data.paymentMethodLMD &&\n                                      ts.data.paymentMethodLMD.length > 0 &&\n                                      ts.data.dunningStopLMD &&\n                                      ts.data.dunningStopLMD.length > 0 &&\n                                      ts.data.sendToLMD &&\n                                      ts.data.sendToLMD.length > 0 &&\n                                      (ts.data.paymentMethodLMD ===\n                                      \"Money in House\"\n                                        ? ts.data.depositNumberLMD &&\n                                          ts.data.depositNumberLMD.length > 0\n                                        : true)\n                                    ) {\n                                      var today = new Date();\n                                      today.setHours(23, 59, 59, 998);\n                                      if (\n                                        ts.data.invoicingDateLMD &&\n                                        new Date(ts.data.invoicingDateLMD) >\n                                          today\n                                      ) {\n                                        handleCommunicationCellUpdate(\n                                          ts.id!,\n                                          \"data.statusLMD\",\n                                          \"FUTURE INVOICE\"\n                                        );\n                                      } else {\n                                        handleCommunicationCellUpdate(\n                                          ts.id!,\n                                          \"data.statusLMD\",\n                                          \"OK FOR INVOICING\"\n                                        );\n                                      }\n                                      toast(\n                                        <Toast\n                                          title={\"Successful Validation\"}\n                                          message={\n                                            (tsi === 0 ? `Parent` : \"Child\") +\n                                            \" submission validated successfully\"\n                                          }\n                                          type={\"success\"}\n                                        />\n                                      );\n                                    } else {\n                                      toast(\n                                        <Toast\n                                          title={\"Incomplete Request\"}\n                                          message={\n                                            (tsi === 0 ? `Parent` : \"Child\") +\n                                            \" submission could not be validated: incomplete data\"\n                                          }\n                                          type={\"error\"}\n                                        />\n                                      );\n\n                                      handleCommunicationCellUpdate(\n                                        ts.id!,\n                                        \"data.statusLMD\",\n                                        \"INCOMPLETE\"\n                                      );\n                                    }\n                                  });\n                                }\n                              }}\n                              rowIndex={props.rowIndex}\n                              columnKey={props.column.dataKey}\n                              rowData={props.rowData}\n                              initialValue={\"validate\"}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                backgroundColor: \"#F7FAFC\",\n                                width: \"100%\",\n                                height: \"100%\",\n                              }}\n                            />\n                          ),\n                      },\n                      {\n                        key: \"__actions.create\",\n                        dataKey: \"__actions.create\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.create\", 100),\n                        resizable: false,\n                        className: \"red-border\",\n                        cellRenderer: (props: any) =>\n                          props.rowData.parentId === null ? (\n                            <EditableTableCell\n                              type={\"button\"}\n                              invoiced={\n                                props.rowData.data.statusLMD === \"INVOICED\"\n                              }\n                              backgroundColor=\"#fef9fa\"\n                              textColor={\"blue\"}\n                              onUpdate={(submissionId: string) => {\n                                var submission: Submission = {\n                                  project: props.rowData.project,\n                                  parentId: submissionId,\n                                  group: \"communication\",\n                                  created: new Date(),\n                                  updated: new Date(),\n                                  title: \"\",\n                                  author: \"\",\n                                  status: \"\",\n                                  data: {},\n                                };\n                                RestAPI.createSubmission(submission).then(\n                                  (response) => {\n                                    var temp = [...communicationSubmissions];\n                                    temp.push(response.data);\n                                    setCommunicationSubmissions(temp);\n                                  }\n                                );\n                              }}\n                              rowIndex={props.rowIndex}\n                              columnKey={props.column.dataKey}\n                              rowData={props.rowData}\n                              initialValue={\"create\"}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                backgroundColor: \"#F7FAFC\",\n                                width: \"100%\",\n                                height: \"100%\",\n                              }}\n                            />\n                          ),\n                      },\n                      {\n                        key: \"__actions.delete\",\n                        dataKey: \"__actions.delete\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.delete\", 100),\n                        resizable: false,\n                        className: \"red-border\",\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"button\"}\n                            textColor={\"red\"}\n                            backgroundColor=\"#fef9fa\"\n                            onUpdate={(submissionId: string) => {\n                              var tbd: string[] = [submissionId];\n                              var submissionIndex =\n                                communicationSubmissions.findIndex(\n                                  (s) => s.id === submissionId\n                                );\n                              if (submissionIndex > -1) {\n                                var temp = [...communicationSubmissions];\n                                temp.splice(submissionIndex, 1);\n                                temp.forEach((s, index) => {\n                                  if (\n                                    s.parentId !== null &&\n                                    s.parentId === submissionId\n                                  ) {\n                                    if (s.id) {\n                                      temp.splice(index, 1);\n                                      tbd.push(s.id);\n                                    }\n                                  }\n                                });\n                                setCommunicationSubmissions(temp);\n                                RestAPI.deleteSubmission(submissionId);\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={\"delete\"}\n                          />\n                        ),\n                      },\n                    ]}\n                    headerRenderer={headerRendererForTable}\n                    headerClassName=\"header-cells\"\n                    data={unflatten([\n                      ...filteredCommunicationSubmissions,\n                    ] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={[50, 50]}\n                    rowHeight={55}\n                    overlayRenderer={\n                      <div\n                        style={{\n                          position: \"absolute\",\n                          width: \"200px\",\n                          bottom: \"20px\",\n                          right: \"20px\",\n                          padding: \"5px 15px\",\n                        }}\n                      >\n                        <Button\n                          onClick={() => {\n                            var submission: Submission = {\n                              // FIXME\n                              project: \"619515b754e61c8dd33daa52\",\n                              parentId: null,\n                              group: \"communication\",\n                              created: new Date(),\n                              updated: new Date(),\n                              title: \"\",\n                              author: \"\",\n                              status: \"\",\n                              data: {\n                                materialNumberLMD: \"7000100\",\n                              },\n                            };\n                            RestAPI.createSubmission(submission).then(\n                              (response) => {\n                                var temp = [...communicationSubmissions];\n                                temp.unshift(response.data);\n                                setCommunicationSubmissions(temp);\n                              }\n                            );\n                          }}\n                        >\n                          Create Submission\n                        </Button>\n                      </div>\n                    }\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        p={4}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n        color={\"gray.500\"}\n      >\n        <Box mb={\"1em\"} w=\"100%\">\n          <Text mb=\"8px\">Displayed Columns</Text>\n          <CheckTreePicker\n            cleanable={false}\n            defaultExpandAll={false}\n            block\n            onChange={(value) => {\n              var values: string[] = [];\n              if (value.length < 1) {\n                values = defaultColumns;\n              } else {\n                value.forEach((v) => {\n                  values.push(v.toString());\n                });\n              }\n\n              if (selectedTemplate === \"local\") {\n                localStorage.setItem(\n                  \"vendors.displayedColumns\",\n                  JSON.stringify(values)\n                );\n              }\n              setDisplayedColumns(values);\n            }}\n            value={displayedColumns}\n            data={DisplayedColumnsList}\n            placeholder=\"Groups\"\n            size=\"lg\"\n          />\n        </Box>\n        <Stack\n          mb={\"1em\"}\n          w=\"100%\"\n          spacing={\"2em\"}\n          direction={{ base: \"column\", lg: \"row\" }}\n        >\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Statuses</Text>\n            <TagPicker\n              cleanable\n              style={{\n                minHeight: \"40px\",\n                paddingTop: \"2px\",\n              }}\n              data={[]}\n              block\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Preset</Text>\n            <Creatable\n              menuPortalTarget={document.body}\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              classNamePrefix=\"select\"\n              isClearable\n              onCreateOption={(name) => {\n                if (name.toLowerCase() === \"local\" || name.trim().length < 1) {\n                  return;\n                }\n                setSelectedTemplate(name);\n                var template: Template = {\n                  name,\n                  columns: displayedColumns,\n                  filters: filters,\n                };\n                RestAPI.updateTemplate(template).then(() => {\n                  setTemplates([...templates, template]);\n                });\n              }}\n              value={{ label: selectedTemplate, value: selectedTemplate }}\n              onChange={(name) => {\n                if (name === null || name.label === \"local\") {\n                  setSelectedTemplate(\"local\");\n                  setDisplayedColumns(defaultColumns);\n                  setFilters([]);\n                  return;\n                }\n                setSelectedTemplate(name.label);\n                var template = templates.find((t) => t.name == name.label);\n                if (template) {\n                  setDisplayedColumns(template.columns);\n                  setFilters(template.filters);\n                }\n              }}\n              name=\"presets\"\n              options={[\n                { label: \"local\", value: \"local\" },\n                ...templates.map((t) => {\n                  return { label: t.name, value: t.name };\n                }),\n              ]}\n            />\n          </Box>\n        </Stack>\n      </Box>\n      <Box\n        shadow=\"md\"\n        color=\"gray.600\"\n        backgroundColor=\"white\"\n        mb={10}\n        p={8}\n        pb={0}\n        rounded=\"md\"\n        w={\"100%\"}\n      >\n        <VStack spacing={8} fontSize=\"md\" align=\"stretch\" color={\"gray.500\"}>\n          <Box w={\"100%\"}>\n            <Box w={\"100%\"}>\n              {filters.map((filter, index) => {\n                var valuesField: JSX.Element = <div></div>;\n\n                switch (filter.type) {\n                  case \"string\":\n                    valuesField = (\n                      <Input\n                        onChange={(event) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues[0] = event.target.value;\n                          setFilters(temp);\n                        }}\n                        value={filter.selectedValues[0]}\n                      />\n                    );\n                    break;\n                  case \"number\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <NumberInput\n                            onChange={(_, value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues[0] = value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                            w=\"100%\"\n                          >\n                            <NumberInputField />\n                            <NumberInputStepper>\n                              <NumberIncrementStepper />\n                              <NumberDecrementStepper />\n                            </NumberInputStepper>\n                          </NumberInput>\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <Stack direction={{ base: \"column\", md: \"row\" }}>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[0] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[0]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                            <Box textAlign=\"center\" w=\"20px\">\n                              <ArrowForwardIcon\n                                alignSelf=\"center\"\n                                w={5}\n                                h=\"100%\"\n                              />\n                            </Box>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[1] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[1]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                          </Stack>\n                        );\n                        break;\n                    }\n                    break;\n                  case \"dropdown\":\n                  case \"multiple-dropdown\":\n                    valuesField = (\n                      <TagPicker\n                        cleanable\n                        style={{\n                          minHeight: \"40px\",\n                          paddingTop: \"2px\",\n                        }}\n                        onChange={(value) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues = value;\n                          setFilters(temp);\n                        }}\n                        value={filters[index].selectedValues}\n                        data={loadOptions(filter.columnValue)}\n                        block\n                      />\n                    );\n                    break;\n                  case \"date\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <DateSingleInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onChange={(value) => {\n                              if (value !== filters[index].selectedValues[0]) {\n                                var temp = [...filters];\n                                temp[index].selectedValues = [value];\n                                setFilters(temp);\n                              }\n                            }}\n                          />\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onDatesChange={(value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues = [\n                                value.startDate,\n                                value.endDate,\n                              ];\n                              setFilters(temp);\n                            }}\n                          />\n                        );\n                        break;\n                    }\n                }\n\n                return (\n                  <Box\n                    w={\"100%\"}\n                    backgroundColor=\"white\"\n                    p={4}\n                    mb={5}\n                    border=\"1px\"\n                    rounded=\"md\"\n                    borderColor=\"gray.100\"\n                  >\n                    <CloseButton\n                      onClick={() => {\n                        var temp = [...filters];\n                        temp.splice(index, 1);\n                        setFilters(temp);\n                      }}\n                      float=\"right\"\n                    />\n                    <VStack\n                      mt={\"20px\"}\n                      spacing={8}\n                      fontSize=\"md\"\n                      align=\"stretch\"\n                      color={\"gray.500\"}\n                    >\n                      <Box>\n                        <Stack\n                          direction={{ base: \"column\", xl: \"row\" }}\n                          w=\"100%\"\n                          spacing={{ base: \"20px\", xl: \"50px\" }}\n                        >\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Column</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label: filter.columnLabel,\n                                value: filter.columnValue,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].columnValue = value.value;\n                                temp[index].columnLabel = value.label;\n                                temp[index].type = value.type;\n                                temp[index].filter = \"exact\";\n                                var tv: any = [];\n                                switch (value.type) {\n                                  case \"string\":\n                                    tv = [\"\"];\n                                    break;\n                                  case \"number\":\n                                    if (temp[index].filter === \"exact\") {\n                                      tv = [0];\n                                    } else {\n                                      tv = [0, 0];\n                                    }\n                                    break;\n                                }\n                                temp[index].selectedValues = tv;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"color\"\n                              options={DisplayedColumnsListOptions}\n                              // options={tableCells\n                              //   .filter((cell: any) => cell.dataKey[0] !== \"_\")\n                              //   .map((cell: any) => {\n                              //     console.log(cell.cellRenderer.arguments[0]);\n                              //     return {\n                              //       label: `${cell.title} (${cell.group})`,\n                              //       value: cell.dataKey,\n                              //       type: cell.type ? cell.type : \"text\",\n                              //     };\n                              //   })}\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Type</Text>\n                            <Input\n                              onChange={() => {}}\n                              value={filter.type}\n                              readOnly\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Filter</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label:\n                                  filter.filter.charAt(0).toUpperCase() +\n                                  filter.filter.slice(1),\n                                value: filter.filter,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].filter = value.value;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"filter\"\n                              options={\n                                filterTypes[\n                                  filter.type as keyof typeof filterTypes\n                                ]\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Box>\n                      <Stack\n                        direction={{ base: \"column\", xl: \"row\" }}\n                        w=\"100%\"\n                        spacing={{ base: \"20px\", xl: \"50px\" }}\n                      >\n                        <Box w=\"100%\">\n                          <Text mb=\"8px\">Values</Text>\n                          {valuesField}\n                        </Box>\n                      </Stack>\n                    </VStack>\n                  </Box>\n                );\n              })}\n              <IconButton\n                onClick={() => {\n                  setFilters([\n                    ...filters,\n                    {\n                      columnValue: \"\",\n                      columnLabel: \"\",\n                      type: \"\",\n                      filter: \"exact\",\n                      values: [],\n                      selectedValues: [],\n                    } as FilterField,\n                  ]);\n                }}\n                my={5}\n                float=\"right\"\n                variant=\"outline\"\n                aria-label=\"add-port\"\n                icon={<BiPlusMedical />}\n              />\n            </Box>\n          </Box>\n        </VStack>\n      </Box>\n    </div>\n  );\n}\n\nexport default VendorsTable;\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Text,\n  Center,\n  Stack,\n  Heading,\n  Avatar,\n  Badge,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Dropdown from \"../types/dropdown\";\n\ninterface Props {\n  history: any;\n  dropdown: Dropdown;\n}\n\nexport default function DropdownCard(props: Props) {\n  return (\n    <Box\n      key={props.dropdown.id}\n      onClick={() => {\n        props.history.push(`/dropdowns/edit/${props.dropdown.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"360px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.dropdown.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.dropdown.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack\n        mt={\"45px\"}\n        direction={\"column\"}\n        textAlign=\"end\"\n        spacing={0}\n        fontSize={\"sm\"}\n        fontWeight={500}\n        color={\"gray.500\"}\n      >\n        <Text>\n          Total Records:{\" \"}\n          {props.dropdown.values !== null ? props.dropdown.values.length : 0}\n        </Text>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={moment(props.dropdown.created).format(\"DD.MM.YYYY HH:mm\")}\n        >\n          <Text>\n            Last Sync:{\" \"}\n            {props.dropdown.type === \"json\"\n              ? \"manual\"\n              : moment(props.dropdown.lastSync).fromNow()}\n          </Text>\n        </Tooltip>\n      </Stack>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport DropdownCard from \"../../components/DropdownCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [dropdowns, setDropdowns] = useState<Dropdown[]>([]);\n\n  useEffect(() => {\n    RestAPI.getDropdowns().then((response) => setDropdowns(response.data));\n  }, []);\n\n  return (\n    <div>\n      <Wrap justify=\"center\" spacing={{ base: \"40px\", lg: \"3em\" }}>\n        {(dropdowns !== null ? dropdowns : []).map((dropdown) => {\n          return (\n            <WrapItem>\n              <DropdownCard history={props.history} dropdown={dropdown} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import { useEffect } from \"react\";\nimport BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function ProjectInformationTable(gprops: any) {\n  useEffect(() => {});\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.country\",\n      dataKey: \"data.country\",\n      title: \"Country\",\n      width: 200,\n      resizable: true,\n      header: \"Project Information\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryShare\",\n      dataKey: \"data.countryShare\",\n      title: \"Country Share %\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryBudgetContributionEur\",\n      dataKey: \"data.countryBudgetContributionEur\",\n      title: \"Country Budget Contribution (EUR)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCostEstimationEur\",\n      dataKey: \"data.countryCostEstimationEur\",\n      title: \"Country Cost Estimation (EUR)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.manufacturerNumber\",\n      dataKey: \"data.manufacturerNumber\",\n      title: \"Manufacturer Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorName\",\n      dataKey: \"data.vendorName\",\n      title: \"Vendor Name\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.sapDebitorNumber\",\n      dataKey: \"data.sapDebitorNumber\",\n      title: \"SAP Debitor Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.sapCreditorNumber\",\n      dataKey: \"data.sapCreditorNumber\",\n      title: \"SAP Creditor Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.mdfLevel\",\n      dataKey: \"data.mdfLevel\",\n      title: \"MDF Level\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.budgetCurrency\",\n      dataKey: \"data.budgetCurrency\",\n      title: \"Budget Currency\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeBC\",\n      dataKey: \"data.estimatedIncomeBC\",\n      title: \"Estimated Income (Budget Currency)\",\n      width: 300,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsBC\",\n      dataKey: \"data.estimatedCostsBC\",\n      title: \"Estimated Costs (Budget Currency)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultBC\",\n      dataKey: \"data.estimatedResultBC\",\n      title: \"Estimated Result (Budget Currency)\",\n      width: 250,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeEur\",\n      dataKey: \"data.estimatedIncomeEur\",\n      title: \"Estimated Income (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsEur\",\n      dataKey: \"data.estimatedCostsEur\",\n      title: \"Estimated Costs (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultEur\",\n      dataKey: \"data.estimatedResultEur\",\n      title: \"Estimated Result (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorShare\",\n      dataKey: \"data.vendorShare\",\n      title: \"Vendor Share %\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.bu\",\n      dataKey: \"data.bu\",\n      title: \"Business Unit\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.ph1\",\n      dataKey: \"data.ph1\",\n      title: \"PH1\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignChannel\",\n      dataKey: \"data.campaignChannel\",\n      title: \"Campaign Channel\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.data.targetAudience\",\n      dataKey: \"data.targetAudience\",\n      title: \"Target Audience\",\n      width: 200,\n      resizable: true,\n\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.marketingResponsible\",\n      dataKey: \"data.marketingResponsible\",\n      title: \"Marketing Responsible\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectApprover\",\n      dataKey: \"data.projectApprover\",\n      title: \"Project Approver\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalInformation\",\n      dataKey: \"data.additionalInformation\",\n      title: \"Additional Information\",\n      width: 300,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function PurchaseOrderTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.purchaseOrderServiceProvider\",\n      dataKey: \"data.purchaseOrderServiceProvider\",\n      title: \"Purchase Order Service Provider\",\n      width: 250,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueOfServiceOrderedLC\",\n      dataKey: \"data.netValueOfServiceOrderedLC\",\n      title: \"Net Value of Service Ordered (LC)\",\n      width: 250,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localCurrency\",\n      dataKey: \"data.localCurrency\",\n      title: \"Local Currency\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValuePOC\",\n      dataKey: \"data.netValuePOC\",\n      title: \"Net Value (Purchase Order Currency)\",\n      width: 300,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderCurrency\",\n      dataKey: \"data.purchaseOrderCurrency\",\n      title: \"Purchase Order Currency\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueEur\",\n      dataKey: \"data.netValueEur\",\n      title: \"Net Value (EUR)\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderStatus\",\n      dataKey: \"data.purchaseOrderStatus\",\n      title: \"Purchase Order Status\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function CostActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonth\",\n      dataKey: \"data.yearMonth\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentType\",\n      dataKey: \"data.documentType\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDate\",\n      dataKey: \"data.postingDate\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDate\",\n      dataKey: \"data.documentDate\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumber\",\n      dataKey: \"data.documentNumber\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumber\",\n      dataKey: \"data.invoiceNumber\",\n      title: \"Invoice Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccount\",\n      dataKey: \"data.costAccount\",\n      title: \"Cost Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1\",\n      dataKey: \"data.name1\",\n      title: \"Name 1\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLC\",\n      dataKey: \"data.costAmountLC\",\n      title: \"Cost Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDC\",\n      dataKey: \"data.costAmountDC\",\n      title: \"Cost Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dc\",\n      dataKey: \"data.dc\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costStatus\",\n      dataKey: \"data.costStatus\",\n      title: \"Cost Status\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function SalesActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthSA\",\n      dataKey: \"data.yearMonthSA\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeSA\",\n      dataKey: \"data.documentTypeSA\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateSA\",\n      dataKey: \"data.postingDateSA\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateSA\",\n      dataKey: \"data.documentDateSA\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberSA\",\n      dataKey: \"data.documentNumberSA\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumberSA\",\n      dataKey: \"data.invoiceNumberSA\",\n      title: \"Invoice Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountSA\",\n      dataKey: \"data.incomeAccountSA\",\n      title: \"Income Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1SA\",\n      dataKey: \"data.name1SA\",\n      title: \"Name 1\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLC\",\n      dataKey: \"data.incomeAmountLC\",\n      title: \"Income Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDC\",\n      dataKey: \"data.incomeAmountDC\",\n      title: \"Income Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeStatus\",\n      dataKey: \"data.incomeStatus\",\n      title: \"Income Status\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.actualResultLC\",\n      dataKey: \"data.actualResultLC\",\n      title: \"Actual Result (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function EurActualsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.incomeAmountEur\",\n      dataKey: \"data.incomeAmountEur\",\n      title: \"Income Amount (EUR)\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEur\",\n      dataKey: \"data.costAmountEur\",\n      title: \"Cost Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.actualResultEur\",\n      dataKey: \"data.actualResultEur\",\n      title: \"Actual Result (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function CostGlPostingsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthCostGL\",\n      dataKey: \"data.yearMonthCostGL\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeCostGL\",\n      dataKey: \"data.documentTypeCostGL\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateCostGL\",\n      dataKey: \"data.postingDateCostGL\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateCostGL\",\n      dataKey: \"data.documentDateCostGL\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberCostGL\",\n      dataKey: \"data.documentNumberCostGL\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccountCostGL\",\n      dataKey: \"data.costAccountCostGL\",\n      title: \"Cost Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLCCostGL\",\n      dataKey: \"data.costAmountLCCostGL\",\n      title: \"Cost Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDCCostGL\",\n      dataKey: \"data.costAmountDCCostGL\",\n      title: \"Cost Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcCostGL\",\n      dataKey: \"data.dcCostGL\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEurCostGL\",\n      dataKey: \"data.costAmountEurCostGL\",\n      title: \"Cost Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","import BaseTable, { AutoResizer, Column, unflatten } from \"react-base-table\";\nimport EditableTableCell from \"../../../components/EditableTableCell\";\n\nexport function IncomeGlPostingsTable(gprops: any) {\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n\n    {\n      key: \"data.yearMonthIncomeGL\",\n      dataKey: \"data.yearMonthIncomeGL\",\n      title: \"Year / Month\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeIncomeGL\",\n      dataKey: \"data.documentTypeIncomeGL\",\n      title: \"Document Type\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateIncomeGL\",\n      dataKey: \"data.postingDateIncomeGL\",\n      title: \"Posting Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateIncomeGL\",\n      dataKey: \"data.documentDateIncomeGL\",\n      title: \"Document Date\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberIncomeGL\",\n      dataKey: \"data.documentNumberIncomeGL\",\n      title: \"Document Number\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountIncomeGL\",\n      dataKey: \"data.incomeAccountIncomeGL\",\n      title: \"Income Account\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCIncomeGL\",\n      dataKey: \"data.incomeAmountLCIncomeGL\",\n      title: \"Income Amount (LC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCIncomeGL\",\n      dataKey: \"data.incomeAmountDCIncomeGL\",\n      title: \"Income Amount (DC)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcIncomeGL\",\n      dataKey: \"data.dcIncomeGL\",\n      title: \"DC\",\n      width: 150,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEurIncomeGL\",\n      dataKey: \"data.incomeAmountEurIncomeGL\",\n      title: \"Income Amount (EUR)\",\n      width: 200,\n      resizable: true,\n\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={gprops.handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <AutoResizer>\n      {({ width, height }) => (\n        <BaseTable\n          ignoreFunctionInColumnCompare={false}\n          defaultExpandedRowKeys={[]}\n          width={width}\n          height={height}\n          expandColumnKey={\"__expand\"}\n          fixed\n          columns={tableCells}\n          headerClassName=\"header-cells\"\n          data={unflatten([...gprops.submissions] as any[])}\n          rowKey=\"id\"\n          headerHeight={50}\n          rowHeight={55}\n        ></BaseTable>\n      )}\n    </AutoResizer>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Button,\n  HStack,\n  Input,\n  Tooltip,\n  Text,\n  useColorModeValue,\n  Divider,\n  IconButton,\n  Stack,\n  VStack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  CloseButton,\n  MenuButton,\n  Menu,\n  MenuList,\n  MenuItem,\n  TabList,\n  Tabs,\n  Tab,\n  TabPanels,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport {\n  cloneElement,\n  createRef,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport { FpsView, useFps } from \"react-fps\";\nimport Select from \"react-select\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { createGlobalStyle } from \"styled-components\";\nimport styled from \"styled-components\";\nimport { Overlay } from \"react-overlays\";\nimport DatePicker from \"react-datepicker\";\nimport Toast from \"../../components/Toast\";\n\nimport BaseTable, {\n  AutoResizer,\n  Column,\n  ColumnShape,\n  unflatten,\n} from \"react-base-table\";\nimport ContentEditable from \"react-contenteditable\";\nimport \"react-base-table/styles.css\";\nimport { RestAPI } from \"../../api/rest\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { ArrowForwardIcon, SearchIcon } from \"@chakra-ui/icons\";\nimport { BiPlusMedical, VscDebugRerun, VscDebugStart } from \"react-icons/all\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { CheckTreePicker, TagPicker } from \"rsuite\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport EditableTableCell from \"../../components/EditableTableCell\";\nimport { ProjectInformationTable } from \"./Tables/ProjectInformation\";\nimport { PurchaseOrderTable } from \"./Tables/PurchaseOrder\";\nimport { CostActualsTable } from \"./Tables/CostActuals\";\nimport { SalesActualsTable } from \"./Tables/SalesActuals\";\nimport { EurActualsTable } from \"./Tables/EurActuals\";\nimport { CostGlPostingsTable } from \"./Tables/CostGlPostings\";\nimport { IncomeGlPostingsTable } from \"./Tables/IncomeGlPostings\";\n\ninterface Props {\n  history: any;\n}\n\nvar ProjectType: any[] = [];\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\nvar SapStatus: any[] = [\n  { label: \"Created\", value: \"created\" },\n  { label: \"None\", value: \"none\" },\n];\n\nasync function fetchDropdowns() {\n  var dropdownsIds: string[] = [\n    \"619b630a9a5a2bb37a93b23b\",\n    \"619b61419a5a2bb37a93b237\",\n    \"619b63429a5a2bb37a93b23d\",\n    \"619b62d79a5a2bb37a93b239\",\n    \"619b632c9a5a2bb37a93b23c\",\n    \"619b62959a5a2bb37a93b238\",\n    \"619b62f29a5a2bb37a93b23a\",\n    \"619b66defe27d06ad17d75ac\",\n    \"619b6754fe27d06ad17d75ad\",\n    \"619b6799fe27d06ad17d75ae\",\n    \"619b7b9efe27d06ad17d75af\",\n  ];\n  var responses = await Promise.all(\n    dropdownsIds.map((di) => {\n      return RestAPI.getDropdownValues(di);\n    })\n  );\n  PH1 = responses[0].data;\n  Companies = responses[1].data;\n  VendorsNames = responses[2].data;\n  CampaignChannel = responses[3].data;\n  TargetAudience = responses[4].data;\n  Budget = responses[5].data;\n  ExchangeRates = responses[6].data;\n  FiscalQuarter = responses[7].data;\n  Year = responses[8].data;\n  ProjectStartQuarter = responses[9].data;\n  ProjectType = responses[10].data;\n}\n\nconst loadOptions = (identifier: string) => {\n  switch (identifier) {\n    case \"data.projectType\":\n      return ProjectType;\n    case \"data.ph1\":\n      return PH1;\n    case \"data.campaignChannel\":\n      return CampaignChannel;\n    case \"data.targetAudience\":\n      return TargetAudience;\n    case \"data.budgetCurrency\":\n      return ExchangeRates;\n    case \"data.sapStatus\":\n      return SapStatus;\n  }\n  return [];\n};\n\ninterface FilterField {\n  columnValue: string;\n  columnLabel: string;\n  type: string;\n  filter: string;\n  values: any[];\n  selectedValues: any[];\n}\nconst filterTypes = {\n  text: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  dropdown: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  \"multiple-dropdown\": [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  date: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n};\n\nexport function SVendorsTable(props: Props) {\n  const [selectedSubmission, setSelectedSubmission] = useState<null | string>(\n    null\n  );\n  const [filters, setFilters] = useState<FilterField[]>([]);\n\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<Submission[]>(\n    []\n  );\n\n  const [totalRequests, setTotalRequests] = useState(1);\n\n  useEffect(() => {\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [forceUpdateCount, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    var filtered: Submission[] = [];\n    if (filters.length > 0 && submissions.length > 0) {\n      submissions.map((submission) => {\n        var valid = true;\n        filters.map((filter) => {\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"text\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    filter.selectedValues.map((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          filtered.push(submission);\n        }\n      });\n      setFilteredSubmissions(filtered);\n    } else {\n      setFilteredSubmissions([...submissions]);\n    }\n  }, [filters, submissions]);\n\n  async function partialUpdate(submission: string, path: string, value: any) {\n    setTotalRequests(totalRequests + 1);\n    if (path.includes(\"[\")) {\n      var s = path.split(\".\");\n      s.shift();\n      path = s.join(\".\");\n    }\n    RestAPI.updateSubmissionPartial(submission, path, value);\n  }\n\n  function handleCellUpdate(submission: string, path: string, value: any) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submission);\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n      if (_.get(submissions, path) !== value) {\n        _.set(submissions, path, value);\n        partialUpdate(submission, path, value);\n      }\n    }\n  }\n  function deleteSubmission(submissionId: string) {\n    var tbd: string[] = [submissionId];\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp.splice(submissionIndex, 1);\n      temp.map((s, index) => {\n        if (s.parentId !== null && s.parentId === submissionId) {\n          if (s.id) {\n            temp.splice(index, 1);\n            tbd.push(s.id);\n          }\n        }\n      });\n      setSubmissions(temp);\n      tbd.forEach((ds) => {\n        RestAPI.deleteSubmission(ds);\n      });\n    }\n  }\n\n  useEffect(() => {\n    RestAPI.getSubmissions().then((response) => {\n      var vSubs: Submission[] = [];\n      var subs = response.data;\n      subs.map((sub) => {\n        if (sub.project === \"619515b754e61c8dd33daa52\") {\n          vSubs.push(sub);\n        }\n      });\n      setSubmissions(vSubs);\n      setFilteredSubmissions(vSubs);\n    });\n  }, []);\n\n  const tableCells = [\n    {\n      key: \"data.companyName\",\n      dataKey: \"data.companyName\",\n      title: \"Company Name\",\n      width: 200,\n      resizable: true,\n      header: \"General Information\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.companyCode\",\n      dataKey: \"data.companyCode\",\n      title: \"Company Code\",\n      width: 150,\n      resizable: true,\n      type: \"number\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectNumber\",\n      dataKey: \"data.projectNumber\",\n      title: \"Project Number\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectName\",\n      dataKey: \"data.projectName\",\n      title: \"Project Name\",\n      width: 150,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignStartDate\",\n      dataKey: \"data.campaignStartDate\",\n      title: \"Campaign Start Date\",\n      width: 200,\n      resizable: true,\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectType\",\n      dataKey: \"data.projectType\",\n      title: \"Project Type\",\n      width: 250,\n      resizable: true,\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"__summary.countries\",\n      dataKey: \"__summary.countries\",\n      title: \"Countries\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"tags\"}\n          readonly\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          textColor=\"red\"\n          initialValue={submissions.map((submission) => {\n            if (submission.parentId === props.rowData.id) {\n              return submission.data.country;\n            }\n          })}\n        />\n      ),\n    },\n    {\n      key: \"__summary.vendors\",\n      dataKey: \"__summary.vendors\",\n      title: \"Vendors\",\n      width: 200,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"tags\"}\n          readonly\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          textColor=\"blue\"\n          initialValue={submissions.map((submission) => {\n            if (submission.parentId === props.rowData.id) {\n              return submission.data.vendorName;\n            }\n          })}\n        />\n      ),\n    },\n    {\n      key: \"__actions.view\",\n      dataKey: \"__actions.view\",\n      title: \"View\",\n      width: 100,\n      resizable: true,\n      header: \"Actions\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            textColor={\"blue\"}\n            onUpdate={(submission: string) => {\n              setSelectedSubmission(submission);\n            }}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"view\"}\n          />\n        ) : null,\n    },\n    {\n      key: \"__actions.delete\",\n      dataKey: \"__actions.delete\",\n      title: \"Delete\",\n      width: 100,\n      resizable: true,\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"button\"}\n          textColor={\"red\"}\n          onUpdate={deleteSubmission}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\"delete\"}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        minH={\"85vh\"}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n        p={\"20px\"}\n      >\n        <Tabs isLazy variant=\"enclosed\" w={\"100%\"}>\n          <TabList align=\"start\">\n            <Tab>General Information</Tab>\n            <Tab hidden={selectedSubmission === null}>Project Information</Tab>\n            <Tab hidden={selectedSubmission === null}>Purchase Order</Tab>\n            <Tab hidden={selectedSubmission === null}>Cost Actuals</Tab>\n            <Tab hidden={selectedSubmission === null}>Sales Actuals</Tab>\n            <Tab hidden={selectedSubmission === null}>Actuals in EUR</Tab>\n            <Tab hidden={selectedSubmission === null}>Cost GL Postings</Tab>\n            <Tab hidden={selectedSubmission === null}>Income GL Postings</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer>\n                {({ width, height }) => (\n                  <BaseTable\n                    ignoreFunctionInColumnCompare={false}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={tableCells}\n                    headerClassName=\"header-cells\"\n                    data={unflatten([...filteredSubmissions] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={50}\n                    rowHeight={55}\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <ProjectInformationTable\n                submissions={\n                  [\n                    ...filteredSubmissions.filter((s) => {\n                      return (\n                        s.id === selectedSubmission ||\n                        (s.parentId === selectedSubmission &&\n                          s.group === \"projectInformation\")\n                      );\n                    }),\n                  ] as any[]\n                }\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <PurchaseOrderTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"puchaseOrder\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <CostActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"costActuals\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <SalesActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"salesActuals\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <EurActualsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"actualsInEur\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <CostGlPostingsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"costGlPostings\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <IncomeGlPostingsTable\n                submissions={unflatten([\n                  ...filteredSubmissions.filter(\n                    (s) =>\n                      (s.group === \"incomeGlPostings\" &&\n                        s.id === selectedSubmission) ||\n                      s.parentId === selectedSubmission\n                  ),\n                ] as any[])}\n                handleCellUpdate={handleCellUpdate}\n                selectedSubmission={selectedSubmission}\n              />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n      {/* <Box\n        shadow=\"md\"\n        color=\"gray.600\"\n        backgroundColor=\"white\"\n        mb={10}\n        p={8}\n        pb={0}\n        rounded=\"md\"\n        w={\"100%\"}\n      >\n        <VStack spacing={8} fontSize=\"md\" align=\"stretch\" color={\"gray.500\"}>\n          <Box w={\"100%\"}>\n            <Box w={\"100%\"}>\n              {filters.map((filter, index) => {\n                var valuesField: JSX.Element = <div></div>;\n\n                switch (filter.type) {\n                  case \"text\":\n                    valuesField = (\n                      <Input\n                        onChange={(event) => {\n                          var temp = [...filters];\n                          temp[index!].selectedValues[0] = event.target.value;\n                          setFilters(temp);\n                        }}\n                        value={filter.selectedValues[0]}\n                      />\n                    );\n                    break;\n                  case \"number\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <NumberInput\n                            onChange={(vstring, value) => {\n                              var temp = [...filters];\n                              temp[index!].selectedValues[0] = value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                            w=\"100%\"\n                          >\n                            <NumberInputField />\n                            <NumberInputStepper>\n                              <NumberIncrementStepper />\n                              <NumberDecrementStepper />\n                            </NumberInputStepper>\n                          </NumberInput>\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <Stack direction={{ base: \"column\", md: \"row\" }}>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(vstring, value) => {\n                                var temp = [...filters];\n                                temp[index!].selectedValues[0] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[0]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                            <Box textAlign=\"center\" w=\"20px\">\n                              <ArrowForwardIcon\n                                alignSelf=\"center\"\n                                w={5}\n                                h=\"100%\"\n                              />\n                            </Box>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(vstring, value) => {\n                                var temp = [...filters];\n                                temp[index!].selectedValues[1] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[1]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                          </Stack>\n                        );\n                        break;\n                    }\n                    break;\n                  case \"dropdown\":\n                  case \"multiple-dropdown\":\n                    valuesField = (\n                      <TagPicker\n                        cleanable\n                        style={{\n                          minHeight: \"40px\",\n                          paddingTop: \"2px\",\n                        }}\n                        onChange={(value) => {\n                          console.log(value);\n                          var temp = [...filters];\n                          temp[index!].selectedValues = value;\n                          setFilters(temp);\n                        }}\n                        data={loadOptions(filter.columnValue)}\n                        block\n                      />\n                    );\n                    break;\n                  case \"date\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <DateSingleInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onChange={(value) => {\n                              if (value !== filters[index].selectedValues[0]) {\n                                var temp = [...filters];\n                                temp[index!].selectedValues = [value];\n                                setFilters(temp);\n                              }\n                            }}\n                          />\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onDatesChange={(value) => {\n                              var temp = [...filters];\n                              temp[index!].selectedValues = [\n                                value.startDate,\n                                value.endDate,\n                              ];\n                              setFilters(temp);\n                            }}\n                          />\n                        );\n                        break;\n                    }\n                }\n\n                return (\n                  <Box\n                    w={\"100%\"}\n                    backgroundColor=\"white\"\n                    p={4}\n                    mb={5}\n                    border=\"1px\"\n                    rounded=\"md\"\n                    borderColor=\"gray.100\"\n                  >\n                    <CloseButton\n                      onClick={() => {\n                        var temp = [...filters];\n                        temp.splice(index, 1);\n                        setFilters(temp);\n                      }}\n                      float=\"right\"\n                    />\n                    <VStack\n                      mt={\"20px\"}\n                      spacing={8}\n                      fontSize=\"md\"\n                      align=\"stretch\"\n                      color={\"gray.500\"}\n                    >\n                      <Box>\n                        <Stack\n                          direction={{ base: \"column\", xl: \"row\" }}\n                          w=\"100%\"\n                          spacing={{ base: \"20px\", xl: \"50px\" }}\n                        >\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Column</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label: filter.columnLabel,\n                                value: filter.columnValue,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index!].columnValue = value.value;\n                                temp[index!].columnLabel = value.label;\n                                temp[index!].type = value.type;\n                                temp[index!].filter = \"exact\";\n                                var tv: any = [];\n                                switch (value.type) {\n                                  case \"text\":\n                                    tv = [\"\"];\n                                    break;\n                                  case \"number\":\n                                    if (temp[index!].filter === \"exact\") {\n                                      tv = [0];\n                                    } else {\n                                      tv = [0, 0];\n                                    }\n                                    break;\n                                }\n                                temp[index!].selectedValues = tv;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"color\"\n                              options={tableCells\n                                .filter((cell: any) => cell.dataKey[0] !== \"_\")\n                                .map((cell: any) => {\n                                  return {\n                                    label: cell.title,\n                                    value: cell.dataKey,\n                                    type: cell.type ? cell.type : \"text\",\n                                  };\n                                })}\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Type</Text>\n                            <Input\n                              onChange={() => {}}\n                              value={filter.type}\n                              readOnly\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Filter</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label:\n                                  filter.filter.charAt(0).toUpperCase() +\n                                  filter.filter.slice(1),\n                                value: filter.filter,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index!].filter = value.value;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"filter\"\n                              options={\n                                filterTypes[\n                                  filter.type as keyof typeof filterTypes\n                                ]\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Box>\n                      <Stack\n                        direction={{ base: \"column\", xl: \"row\" }}\n                        w=\"100%\"\n                        spacing={{ base: \"20px\", xl: \"50px\" }}\n                      >\n                        <Box w=\"100%\">\n                          <Text mb=\"8px\">Values</Text>\n                          {valuesField}\n                        </Box>\n                      </Stack>\n                    </VStack>\n                  </Box>\n                );\n              })}\n              <IconButton\n                onClick={() => {\n                  setFilters([\n                    ...filters,\n                    {\n                      columnValue: \"\",\n                      columnLabel: \"\",\n                      type: \"\",\n                      filter: \"exact\",\n                      values: [],\n                      selectedValues: [],\n                    } as FilterField,\n                  ]);\n                }}\n                my={5}\n                float=\"right\"\n                variant=\"outline\"\n                aria-label=\"add-port\"\n                icon={<BiPlusMedical />}\n              />\n            </Box>\n          </Box>\n        </VStack>\n      </Box> */}\n    </div>\n  );\n}\n\nexport default SVendorsTable;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\n\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\nimport { CustomNavigationClient } from \"./utils/NavigationClient\";\n\nimport { Explorer } from \"./pages/Explorer\";\nimport { Profile } from \"./pages/Profile\";\nimport Layout from \"./components/Layout\";\nimport Dashboard from \"./pages/Dashboard\";\n\nimport ProjectExplorer from \"./pages/Projects/Explorer\";\nimport ProjectEditor from \"./pages/Projects/Editor\";\nimport ProjectViewer from \"./pages/Projects/Viewer\";\n\nimport DraftExplorer from \"./pages/Drafts/Explorer\";\n\nimport SubmissionViewer from \"./pages/Submissions/Viewer\";\n\nimport SubmissionsTableExplorer from \"./pages/Submissions/TableExplorer\";\n\nimport VendorsTable from \"./pages/Submissions/Vendors\";\n\nimport DropdownExplorer from \"./pages/Dropdowns/Explorer\";\nimport DropdownEditor from \"./pages/Dropdowns/Editor\";\nimport { RestAPI } from \"./api/rest\";\nimport { ToastContainer, Slide } from \"react-toastify\";\nimport SVendorsTable from \"./pages/Submissions/SVendors\";\n\ntype AppProps = {\n  pca: IPublicClientApplication;\n};\n\nfunction App({ pca }: AppProps) {\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  const [isAdmin, setAdminRole] = useState(false);\n  pca.setNavigationClient(navigationClient);\n\n  useEffect(() => {\n    RestAPI.getRoles().then((response) =>\n      setAdminRole(response.data.includes(\"administrator\"))\n    );\n  }, []);\n\n  return (\n    <MsalProvider instance={pca}>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={true}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        closeButton={false}\n        transition={Slide}\n      />\n      <Switch>\n        <Layout>\n          {/* <Route exact path=\"/\" component={Dashboard} /> */}\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => <ProjectExplorer isAdmin={isAdmin} {...props} />}\n          />\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/explorer\">\n            <Explorer />\n          </Route>\n          <Route\n            exact\n            path=\"/projects\"\n            render={(props) => <ProjectExplorer isAdmin={isAdmin} {...props} />}\n          />\n          <Route\n            path=\"/projects/create\"\n            render={(props) => <ProjectEditor create={true} {...props} />}\n          />\n          <Route\n            path=\"/projects/edit/:id\"\n            render={(props) => <ProjectEditor create={false} {...props} />}\n          />\n          <Route\n            path=\"/projects/view/:id\"\n            render={(props) => (\n              <ProjectViewer isAdmin={isAdmin} create={false} {...props} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/drafts\"\n            render={(props) => <DraftExplorer isAdmin={isAdmin} {...props} />}\n          />\n          <Route\n            exact\n            path=\"/submissions\"\n            render={(props) => <SubmissionsTableExplorer {...props} />}\n          />\n          <Route\n            path=\"/submissions/view/:id\"\n            render={(props) => (\n              <SubmissionViewer isAdmin={isAdmin} create={false} {...props} />\n            )}\n          />\n          <Route\n            path=\"/drafts/view/:id\"\n            render={(props) => (\n              <SubmissionViewer\n                isDraft={true}\n                isAdmin={isAdmin}\n                create={true}\n                {...props}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/vendors\"\n            render={(props) => <VendorsTable {...props} />}\n          />\n          <Route\n            exact\n            path=\"/vendors/new\"\n            render={(props) => <SVendorsTable {...props} />}\n          />\n          <Route\n            exact\n            path=\"/dropdowns\"\n            render={(props) => (\n              <DropdownExplorer isAdmin={isAdmin} {...props} />\n            )}\n          />\n          <Route\n            path=\"/dropdowns/create\"\n            render={(props) => <DropdownEditor create={true} {...props} />}\n          />\n          <Route\n            path=\"/dropdowns/edit/:id\"\n            render={(props) => <DropdownEditor create={false} {...props} />}\n          />\n        </Layout>\n      </Switch>\n    </MsalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport \"focus-visible/dist/focus-visible\";\nimport { Global, css } from \"@emotion/react\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\n\n// MSAL imports\nimport {\n  PublicClientApplication,\n  EventType,\n  EventMessage,\n  AuthenticationResult,\n} from \"@azure/msal-browser\";\nimport { loginRequest, msalConfig } from \"./authConfig\";\n\nconst GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus    via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\n// Account selection logic is app dependent. Adjust as needed for different use cases.\nconst accounts = msalInstance.getAllAccounts();\nif (accounts.length > 0) {\n  msalInstance.setActiveAccount(accounts[0]);\n}\n\nmsalInstance.addEventCallback((event: EventMessage) => {\n  if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n    const payload = event.payload as AuthenticationResult;\n    const account = payload.account;\n    msalInstance.setActiveAccount(account);\n  }\n});\n\naxios.interceptors.request.use(async (config: any) => {\n  const account = msalInstance.getActiveAccount();\n  if (account) {\n    const response = await msalInstance.acquireTokenSilent({\n      ...loginRequest,\n      account: account,\n    });\n    config.headers.Authorization = `Bearer ${response.idToken}`;\n  }\n  return config;\n});\n\nReactDOM.render(\n  <ChakraProvider\n    theme={extendTheme({\n      styles: {\n        global: (props: any) => ({\n          body: {\n            bg: mode(\"#f7fafc\", \"#282C34\")(props),\n            color: mode(\"gray.800\", \"#ABB2BF\")(props),\n          },\n        }),\n      },\n    })}\n  >\n    <Global styles={GlobalStyles} />\n    <Router>\n      {/* <ColorModeProvider options={{ initialColorMode: \"dark\" }}> */}\n      <App pca={msalInstance} />\n      {/* </ColorModeProvider> */}\n    </Router>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n","import axios, { AxiosResponse } from \"axios\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { Template } from \"../../types/template\";\n\nexport class API {\n  public baseUrl =\n    process.env.NODE_ENV === \"production\"\n      ? \"/api\"\n      : \"http://localhost:7000/api\";\n  public usersUrl = `${this.baseUrl}/users/`;\n  public projectsUrl = `${this.baseUrl}/projects/`;\n  public bookmarksUrl = `${this.baseUrl}/bookmarks/`;\n  public submissionsUrl = `${this.baseUrl}/submissions/`;\n  public dropdownsUrl = `${this.baseUrl}/dropdowns/`;\n  public templatesUrl = `${this.baseUrl}/templates/`;\n  public draftsUrl = `${this.baseUrl}/drafts/`;\n\n  getRoles(): Promise<AxiosResponse<string[]>> {\n    return axios.get(`${this.usersUrl}roles`);\n  }\n  getProjects(): Promise<AxiosResponse<Project[]>> {\n    return axios.get<Project[]>(this.projectsUrl);\n  }\n  getProject(id: string): Promise<AxiosResponse<Project>> {\n    return axios.get<Project>(`${this.projectsUrl}${id}`);\n  }\n  createProject(project: Project): Promise<AxiosResponse<Project>> {\n    return axios.post<Project>(`${this.projectsUrl}`, JSON.stringify(project));\n  }\n  updateProject(project: Project): Promise<AxiosResponse> {\n    return axios.put<Project>(\n      `${this.projectsUrl}${project.id}`,\n      JSON.stringify(project)\n    );\n  }\n  deleteProject(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.projectsUrl}${id}`);\n  }\n\n  getBookmarks(): Promise<AxiosResponse<Bookmark[]>> {\n    return axios.get<Bookmark[]>(this.bookmarksUrl);\n  }\n  createBookmark(bookmark: Bookmark): Promise<AxiosResponse<Bookmark>> {\n    return axios.post<Bookmark>(this.bookmarksUrl, JSON.stringify(bookmark));\n  }\n  deleteBookmark(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.bookmarksUrl}${id}`);\n  }\n\n  getSubmissions(project?: string): Promise<AxiosResponse<Submission[]>> {\n    const params = new URLSearchParams([]);\n    if (project) {\n      params.set(\"project\", project);\n    }\n    return axios.get<Submission[]>(this.submissionsUrl, { params });\n  }\n  getSubmissionWithChildren(\n    id: string\n  ): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.get<SubmissionWithChildren>(`${this.submissionsUrl}${id}`);\n  }\n  createSubmission(submission: Submission): Promise<AxiosResponse<Submission>> {\n    return axios.post<Submission>(\n      `${this.submissionsUrl}`,\n      JSON.stringify(submission)\n    );\n  }\n  createSubmissionWithChildren(\n    submission: SubmissionWithChildren\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}children`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmission(submission: Submission): Promise<AxiosResponse> {\n    return axios.put<Submission>(\n      `${this.submissionsUrl}${submission.id}`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmissionPartial(\n    submission: string,\n    path: string,\n    value: any\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}partial`,\n      JSON.stringify({\n        submission,\n        path,\n        value,\n      })\n    );\n  }\n  callSapSubmission(submission: string): Promise<AxiosResponse> {\n    return axios.get(`${this.submissionsUrl}${submission}/sap`);\n  }\n  deleteSubmission(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.submissionsUrl}${id}`);\n  }\n\n  getDropdowns(): Promise<AxiosResponse<Dropdown[]>> {\n    return axios.get<Dropdown[]>(this.dropdownsUrl);\n  }\n  getDropdown(id: string): Promise<AxiosResponse<Dropdown>> {\n    return axios.get<Dropdown>(`${this.dropdownsUrl}${id}`);\n  }\n  getDropdownValues(id: string): Promise<AxiosResponse<any[]>> {\n    return axios.get<any[]>(`${this.dropdownsUrl}${id}/values`);\n  }\n  syncDropdown(id: string): Promise<AxiosResponse> {\n    return axios.get(`${this.dropdownsUrl}sync/${id}`);\n  }\n  createDropdown(dropdown: Dropdown): Promise<AxiosResponse<Dropdown>> {\n    return axios.post<Dropdown>(\n      `${this.dropdownsUrl}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  updateDropdown(dropdown: Dropdown): Promise<AxiosResponse> {\n    return axios.put<Dropdown>(\n      `${this.dropdownsUrl}${dropdown.id}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  deleteDropdown(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.dropdownsUrl}${id}`);\n  }\n\n  getVendorTableDefaultConfig(): Promise<AxiosResponse<any>> {\n    return axios.get<any>(`${this.submissionsUrl}vendorTable`);\n  }\n\n  getTemplates(): Promise<AxiosResponse<Template[]>> {\n    return axios.get<Template[]>(this.templatesUrl);\n  }\n  updateTemplate(template: Template): Promise<AxiosResponse> {\n    return axios.put<Template>(\n      `${this.templatesUrl}${template.name}`,\n      JSON.stringify(template)\n    );\n  }\n\n  getDrafts(): Promise<AxiosResponse<Submission[]>> {\n    return axios.get<Submission[]>(this.draftsUrl);\n  }\n  getDraft(id: string): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.get<SubmissionWithChildren>(`${this.draftsUrl}${id}`);\n  }\n  createDraft(\n    draft: SubmissionWithChildren\n  ): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.post<SubmissionWithChildren>(\n      `${this.draftsUrl}`,\n      JSON.stringify(draft)\n    );\n  }\n  updateDraft(draft: SubmissionWithChildren): Promise<AxiosResponse> {\n    return axios.put<SubmissionWithChildren>(\n      `${this.draftsUrl}${draft.submission.id}`,\n      JSON.stringify(draft)\n    );\n  }\n  deleteDraft(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.draftsUrl}${id}`);\n  }\n\n  updateVendorTableDefaultConfig(\n    displayedColumns: string[],\n    columnsWidth: any\n  ): Promise<AxiosResponse> {\n    return axios.put<any>(\n      `${this.submissionsUrl}vendorTable`,\n      JSON.stringify({\n        displayedColumns: displayedColumns,\n        columnsWidth: columnsWidth,\n      })\n    );\n  }\n\n  getEntityIdFromUrl(url: string): number {\n    const urlSegments = url.split(\"/\").filter((x) => x !== \"\");\n    return parseInt(urlSegments[urlSegments.length - 1]);\n  }\n}\n\nexport const RestAPI = new API();\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Center,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2, VscDebugStart } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/snippets/javascript\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport Dropdown from \"../../types/dropdown\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [debug, setDebug] = useState(\"\");\n  const [rawValues, setRawValues] = useState(\"\");\n  const [dropdown, setDropdown] = useState<Dropdown>({\n    title: \"\",\n    created: new Date(),\n    description: \"\",\n    type: \"js\",\n    url: \"\",\n    processor: \"\",\n    values: [] as any[],\n    syncInterval: 60,\n    lastSync: new Date(),\n    private: false,\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getDropdown(props.match.params.id).then((response) => {\n        setDropdown(response.data);\n        setRawValues(JSON.stringify(response.data.values, null, 2));\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={dropdown.title}\n              onChange={(event) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              placeholder=\"\"\n              onChange={(value: any) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              value={{ label: dropdown.type, value: dropdown.type }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"dropdownType\"\n              options={[\n                { label: \"js\", value: \"js\" },\n                { label: \"json\", value: \"json\" },\n              ]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Sync Interval (minutes)</Text>\n            <NumberInput\n              value={dropdown.syncInterval}\n              onChange={(_, value) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  syncInterval: value,\n                }));\n              }}\n              min={5}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={dropdown.description}\n            onChange={(event) => {\n              setDropdown((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      <Box mb={5} display={dropdown.type === \"json\" ? \"flex\" : \"none\"} w=\"100%\">\n        <AceEditor\n          width=\"100%\"\n          height=\"900px\"\n          style={{\n            borderRadius: \"5px\",\n          }}\n          mode=\"json\"\n          theme=\"tomorrow\"\n          name=\"json-editor\"\n          onChange={(value) => {\n            setRawValues(value);\n          }}\n          fontSize={14}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={rawValues}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            showLineNumbers: true,\n            tabSize: 2,\n          }}\n        />\n      </Box>\n      <Stack\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        spacing={4}\n        mb={4}\n        direction={{ base: \"column\", xl: \"row\" }}\n      >\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"javascript\"\n            theme=\"tomorrow\"\n            name=\"js-editor\"\n            onChange={(value) => {\n              setDropdown((prev) => ({\n                ...prev,\n                processor: value,\n              }));\n            }}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            value={dropdown.processor}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"json\"\n            theme=\"tomorrow\"\n            name=\"console\"\n            fontSize={12}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={debug}\n            readOnly={true}\n            setOptions={{\n              tabSize: 2,\n            }}\n          />\n        </Box>\n      </Stack>\n      <Center\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        mt={\"10px\"}\n        mb=\"60px\"\n        h=\"60px\"\n        w=\"100%\"\n      >\n        <IconButton\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          aria-label=\"Debug\"\n          icon={<VscDebugStart />}\n          onClick={async () => {\n            setDebug(\"\");\n            var result = eval(dropdown.processor);\n            if (typeof result === \"object\") {\n              setDebug(JSON.stringify(result, null, 4));\n            } else {\n              setDebug(String(result));\n            }\n          }}\n        />\n      </Center>\n\n      <HStack mb={\"40px\"} spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            if (dropdown.type === \"json\") {\n              dropdown.values = JSON.parse(rawValues);\n            }\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createDropdown(dropdown);\n              if (response.data.id) {\n                props.history.push(`/dropdowns/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateDropdown(dropdown)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={\n                        <div>Dropdown has been successfully updated</div>\n                      }\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update dropdown\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n","import { Box, chakra, Flex, Icon, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {\n  AiFillInfoCircle,\n  BsLightningFill,\n  IoMdCheckmarkCircle,\n  MdError,\n} from \"react-icons/all\";\n\nexport declare type ToastType = \"info\" | \"success\" | \"warning\" | \"error\";\n\ninterface Props {\n  title: string;\n  message: any;\n  type: ToastType;\n}\n\nconst Toast: React.FunctionComponent<Props> = (props) => {\n  return (\n    <Flex\n      w=\"350px\"\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      shadow=\"md\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n    >\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        w={12}\n        bg={\n          props.type === \"success\"\n            ? \"green.500\"\n            : props.type === \"error\"\n            ? \"red.500\"\n            : props.type === \"warning\"\n            ? \"yellow.500\"\n            : \"blue.500\"\n        }\n      >\n        <Icon\n          as={\n            props.type === \"success\"\n              ? IoMdCheckmarkCircle\n              : props.type === \"error\"\n              ? BsLightningFill\n              : props.type === \"warning\"\n              ? MdError\n              : AiFillInfoCircle\n          }\n          color=\"white\"\n          boxSize={6}\n        />\n      </Flex>\n\n      <Box mx={-3} py={2} px={4}>\n        <Box mx={3}>\n          <chakra.span\n            color={\n              props.type === \"success\"\n                ? \"green.500\"\n                : props.type === \"error\"\n                ? \"red.500\"\n                : props.type === \"warning\"\n                ? \"yellow.500\"\n                : \"blue.500\"\n            }\n            fontWeight=\"bold\"\n            fontSize=\"md\"\n          >\n            {props.title}\n          </chakra.span>\n          <chakra.div color={\"gray.600\"} fontSize=\"sm\">\n            {props.message}\n          </chakra.div>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Toast;\n"],"sourceRoot":""}