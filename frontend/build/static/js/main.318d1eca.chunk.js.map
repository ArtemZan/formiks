{"version":3,"sources":["utils/NavigationClient.tsx","components/AllowCookies.tsx","components/Layout.tsx","utils/Color.ts","components/CreateBookmark.tsx","components/ProjectCard.tsx","pages/Projects/Explorer.tsx","pages/Projects/Editor.tsx","authConfig.tsx","utils/MsGraphApiCall.ts","components/projects/cerov.tsx","components/projects/ermv.tsx","components/projects/erov.tsx","components/projects/elmv.tsx","components/projects/elov.tsx","components/projects/por.tsx","pages/Projects/Viewer.tsx","pages/Drafts/Explorer.tsx","pages/Submissions/Viewer.tsx","utils/utils.ts","components/EditableTableCell.tsx","components/DatePicker/utils/deepmerge.ts","components/DatePicker/utils/pick.ts","components/DatePicker/context/StylesContext.tsx","components/DatePicker/components/ActionButton.tsx","components/DatePicker/components/CloseButton.tsx","components/DatePicker/phrases.ts","components/DatePicker/utils/formatters.ts","components/DatePicker/context/DatepickerContext.tsx","components/DatePicker/components/Day.tsx","components/DatePicker/utils/getStateStyle.ts","components/DatePicker/components/Input.tsx","components/DatePicker/components/Month.tsx","components/DatePicker/components/ResetDatesButton.tsx","components/DatePicker/components/SelectedDate.tsx","components/DatePicker/Datepicker.tsx","components/DatePicker/DateRangeInput.tsx","components/DatePicker/DateSingleInput.tsx","pages/Submissions/Table.tsx","components/DropdownCard.tsx","pages/Dropdowns/Explorer.tsx","App.tsx","index.tsx","api/rest/index.tsx","pages/Dropdowns/Editor.tsx","components/Toast.tsx"],"names":["CustomNavigationClient","history","url","options","a","relativePath","replace","window","location","origin","noHistory","this","push","NavigationClient","CookiePreference","props","position","bottom","left","right","width","p","boxShadow","bg","useColorModeValue","ml","mr","mb","borderRadius","zIndex","direction","alignItems","fontWeight","base","md","justifyContent","fontSize","textAlign","variant","colorScheme","color","_hover","onClick","onAllow","localStorage","setItem","DesktopNav","useHistory","linkColor","linkHoverColor","popoverContentBgColor","spacing","NAV_ITEMS","map","navItem","trigger","placement","isOpen","onClose","href","textDecoration","label","children","border","rounded","minW","mt","child","DesktopSubNav","subLabel","role","display","align","transition","_groupHover","transform","opacity","justify","flex","w","h","as","ChevronRightIcon","MobileNav","closeMenu","MobileNavItem","useDisclosure","onToggle","py","Link","ChevronDownIcon","in","animateOpacity","style","marginTop","pl","borderLeft","borderStyle","borderColor","isAdmin","Layout","useMsal","instance","inProgress","useState","cookieConsent","setCookieConsent","roles","setRoles","isAuthenticated","useIsAuthenticated","useEffect","getItem","RestAPI","getRoles","then","response","data","sort","useColorMode","colorMode","toggleColorMode","minH","px","borderBottom","icon","Close","Hamburger","useBreakpointValue","fontFamily","cursor","Moon","Sun","name","msalInstance","getActiveAccount","size","hasArrow","join","marginLeft","m","title","isDisabled","open","sessionStorage","clear","setTimeout","loginRedirect","xl","DefaultSelectStyles","menu","provided","backgroundColor","input","singleValue","menuPortal","control","state","minHeight","option","isSelected","multiValue","styles","multiValueLabel","multiValueRemove","CreateBookmark","matchingProjects","setMatchingProjects","availableTags","setAvailableTags","setTitle","selectedTags","setSelectedTags","tags","projects","project","tag","indexOf","some","item","includes","value","onChange","event","target","placeholder","theme","colors","primary","isMulti","values","element","float","length","bookmarks","bookmark","createBookmark","addBookmark","ProjectCard","id","overflow","whiteSpace","textOverflow","description","author","alt","moment","updated","format","toUpperCase","Explorer","setProjects","filteredProjects","setFilteredProjects","selectedBookmark","setSelectedBookmark","setBookmarks","createBookmarkModal","setCreateBookMarkModal","getBookmarks","getProjects","paddingBottom","old","maxW","lg","undefined","onContextMenu","e","preventDefault","deleteBookmark","filter","b","t","Add","mx","Editor","isSubmitting","setIsSubmitting","created","Date","statuses","defaultStatus","components","type","code","setProject","create","match","params","getProject","goBack","prev","background","isFocused","status","classNamePrefix","isClearable","rows","builder","basic","excelTable","advanced","file","premium","form","schema","console","log","isLoading","createProject","updateProject","toast","Toast","message","catch","loginRequest","scopes","graphConfig","getAccountInfo","account","acquireTokenSilent","headers","Headers","bearer","accessToken","append","method","fetch","json","error","PH1","Companies","VendorsNames","AlsoInternationalVendorsNames","BUs","CampaignChannel","Budget","ExchangeRates","Year","ProjectStartQuarter","Column","Table","HeaderCell","Cell","Cerov","country","requestorsCompanyName","setRequestorsCompanyName","setLocalSubmitted","localExchangeRate","setLocalExchangeRate","campaignName","setCampaignName","campaignDescription","setCampaignDescription","targetAudience","setTargetAudience","campaignChannel","setCampaignChannel","vendorName","setVendorName","year","setYear","projectStartQuarter","setProjectStartQuarter","projectNumber","setProjectNumber","requestorsName","setRequestorsName","projectApproval","fiscalQuarter","setFiscalQuarter","organizingCompany","setOrganizingCompany","startDate","setStartDate","endDate","setEndDate","budgetSource","setBudgetSource","budgetApprovedByVendor","setBudgetApprovedByVendor","exchangeRates","setExchangeRates","estimatedIncomeBudgetCurrency","setEstimatedIncomeBudgetCurrency","estimatedCostsBudgetCurrency","setEstimatedCostsBudgetCurrency","netProfitTargetBudgetCurrency","setNetProfitTargetBudgetCurrency","estimatedIncome","setEstimatedIncome","estimatedCosts","setEstimatedCosts","netProfitTarget","setNetProfitTarget","companiesParticipating","setCompaniesParticipating","comments","setComments","ph","vendor","setVendor","costBreakdown","setCostBreakdown","totalcbShare","setTotalcbShare","totalcbContribution","setTotalcbContribution","totalcbCosts","setTotalcbCosts","totalEstimatedCostsLC","setTotalEstimatedCostsLC","injectionReady","setInjectionReady","dropdownsIds","Promise","all","di","getDropdownValues","responses","submission","companyCode","requestorsCountry","currency","localCurrency","substr","substring","manufacturersFiscalQuarter","campaignStartDate","campaignEndDate","find","campaignBudgetsCurrency","campaignEstimatedIncomeBudgetsCurrency","toString","campaignEstimatedIncomeEur","toFixed","campaignEstimatedCostsEur","campaignNetProfitTargetEur","campaignEstimatedCostsBudgetsCurrency","campaignNetProfitTargetBudgetsCurrency","parseFloat","rate","vs","s","group","projectManager","productionProjectManager","creditor","creditorNumber","debitor","debitorNumber","manufacturer","manufacturerNumber","bu","businessUnit","budgetCurrency","budgetAmount","localBudget","eurBudget","share","estimatedCostsCC","estimatedIncomeCC","estimatedCostsLC","estimatedCostsEUR","netProfitTargetVC","netProfitTargetLC","netProfitTargetEUR","companyName","countryCodeEMEA","countriesEMEA","c","forEach","contactEmail","localProjectNumber","countryShare","contribution","countryBudgetContributionCC","countryCostEstimationCC","displayName","fetchDropdowns","forceUpdate","useReducer","x","company","ex","contributionEur","estimatedCostsEur","totalShare","totalContribution","totalCosts","temp","row","isEqual","alsoMarketingConsultant","kreditor","debitorischer","hersteller","slice","menuPortalTarget","document","body","ler","defaultValue","disabled","selected","maxLength","resize","customInput","date","dateFormat","className","rowClassName","rowData","shouldUpdateScroll","hover","autoHeight","rowHeight","resizable","dataKey","index","projectId","parent","parentId","projectName","projectApprover","campaignCurrency","isNaN","additionalInformation","projectType","vendorBudgetCurrency","vendorAmount","vendorShare","estimatedResultCC","estimatedIncomeEUR","estimatedResultEUR","estimatedResultBC","parentProjectNumber","countryBudgetContributionEur","countryCostEstimationEur","isDraft","deleteDraft","createSubmissionWithChildren","hasChanged","formattedData","v","wb","Sheets","XLSX","aoa_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","updateDraft","createDraft","Ermv","vendorsNames","setVendorsNames","vendors","setVendors","setTotalVendorBudgetInLC","setTotalVendorBudgetInEUR","marketingResponsible","er","vendorBudgetAmount","totalBudgetEur","totalBudgetLC","totalCostsCC","totalIncomeCC","totalCostsLC","totalCostsEur","eb","lb","totalVendorBudgetInLC","totalVendorBudgetInEUR","totalVendorShare","totalEstimatedIncomeInCC","totalEstimatedCostsInCC","totalEstimatedCostsInLC","totalEstimatedCostsInEUR","totalNetProfitTargetInCC","totalNetProfitTargetInLC","totalNetProfitTargetInEUR","vbEur","val","split","invalid","getSubmissions","parentSubmissions","isUnique","pn","found","newSuffix","parseInt","TargetAudience","FiscalQuarter","Erov","setProjectApproval","Uploader","action","draggable","lineHeight","bgColor","Elmv","vendorAmountLC","Elov","setProjectName","serviceProvider","setServiceProvider","services","setServices","serviceType","netValueLC","netValuePO","poCurrencyCode","netValueEUR","externalPurchaseOrderNumber","portalId","purchaseOrderDate","orderingPerson","approvingPerson","contactPerson","contactDetails","subs","targetId","sub","updateSubmissionPartial","service","createSubmission","netValueOfServiceOrderedLC","netValuePOC","purchaseOrderCurrency","netValueEur","Viewer","predefinedProject","setPredefinedProject","setForm","pr","divider","onSubmit","formio","drafts","setDrafts","getDrafts","allowMultiple","pd","draft","pb","_dark","getDraft","getSubmissionWithChildren","flexDirection","height","boxSize","maxWidth","numberWithCommas","numRegex","EditableTableCell","cellValue","editing","prevProps","initialValue","setState","Array","isArray","d","bold","textColor","readonly","invoiced","autoFocus","onFocus","execCommand","onKeyPress","keyCode","which","string","String","fromCharCode","test","defaultPrevented","onBlur","onUpdate","columnKey","Number","toDate","onCalendarClose","menuIsOpen","minWidth","paddingLeft","outlineWidth","dv","loadOptions","isSearchable","cv","React","Component","isObject","obj","Object","getPrototypeOf","prototype","call","merge","objects","reduce","result","current","keys","key","from","Set","concat","pick","ret","emptyStylesObject","actionButton","arrowIcon","buttonsWrapper","closeButton","datepickerContainer","dateRangeInputContainer","dateRangeInputDivider","day","normal","rangeHover","first","firstOrLast","last","dayContainer","inputComponentIcon","active","inputComponentInput","inputComponentInputAddon","inputComponentInputGroup","monthContainer","monthDayGrid","monthMonthLabel","monthsWrapper","monthWeekdayLabel","resetDatesButton","selectDateContainer","selectDateDateText","selectDateText","datepickerFooter","StylesContext","createContext","overwriteDefaultStyles","StylesProvider","Provider","useStyleProps","inlineStyles","useContext","filteredStyles","ActionButton","IconComponent","ChevronLeftIcon","styleProps","ChevronUpIcon","CloseButton","top","datepickerPhrases","datepickerStartDatePlaceholder","datepickerStartDateLabel","datepickerEndDatePlaceholder","datepickerEndDateLabel","resetDates","close","dateRangeInputPhrases","startDateAriaLabel","endDateAriaLabel","startDatePlaceholder","endDatePlaceholder","dateSingleInputPhrases","dateAriaLabel","datePlaceholder","dayLabelFormatFn","defaultDisplayFormat","defaultBase","focusedInput","onDayRender","displayFormat","phrases","defaultFormatters","monthLabelFormat","monthLabelFormatFn","weekdayLabelFormat","weekdayLabelFormatFn","dayLabelFormat","datepickerContextDefaultValue","numberOfMonths","activeMonths","firstDayOfWeek","focusedDate","hoveredDate","goToDate","goToNextMonths","goToNextMonthsByOneMonth","goToNextYear","goToPreviousMonths","goToPreviousMonthsByOneMonth","goToPreviousYear","isDateBlocked","isDateFocused","isDateHovered","isDateSelected","isEndDate","isFirstOrLastSelectedDate","isStartDate","onDateFocus","onDateHover","onDateSelect","onResetDates","DatepickerContext","useDatepickerContext","DatepickerProvider","getColor","isWithinHoverRange","isFirst","isLast","Day","dayRef","useRef","dayProps","useDay","onKeyDown","onMouseEnter","tabIndex","isSelectedStartOrEnd","disabledDate","borderRightRadius","borderLeftRadius","containerStyle","useMemo","buttonStyle","ref","toDateString","getStateStyle","isActive","Input","forwardRef","inputRef","disableAccessibility","iconComponent","CalendarIcon","showCalendarIcon","allowEditableInputs","inputProps","searchString","setSearchString","htmlFor","isReadOnly","autoComplete","_e","dateValue","clearTimeout","parsedDate","parseDate","isValidDate","getDate","Month","month","rowGap","useMonth","days","weekdayLabels","monthLabel","columns","weekdayLabel","dayLabel","ResetDatesButton","text","Repeat","onMouseUp","currentTarget","blur","SelectedDate","getInputValue","Datepicker","changeActiveMonthOnSelect","exactMinBookingDays","initialVisibleMonth","maxBookingDate","minBookingDate","minBookingDays","onDatesChange","showClose","showResetDates","showSelectedDates","customStyles","unavailableDates","dp","useDatepicker","useImperativeHandle","monthGridRef","scrollTopToMonthGrid","vertical","scrollTop","_goToNextMonths","_goToPreviousMonths","isMobile","shadow","my","pt","START_DATE","ArrowForward","END_DATE","isInline","padding","onMouseLeave","DateRangeInput","endDateProp","startDateProp","focusedInputProp","endShowCalendarIcon","showDivider","startShowCalendarIcon","onFocusChange","startIcon","startId","startName","startPlaceholder","startRef","endId","endName","endRef","endIcon","endPlaceholder","datepickerRef","datepickerWrapperRef","setFocusedInput","handleOnFocusChange","_focusedInput","onClickOutsideHandler","contains","handleInputChange","addEventListener","removeEventListener","alignSelf","DateSingleInput","dateProp","showDatepicker","showDatepickerProp","showResetDate","setDate","setShowDatepicker","show","ProjectType","styled","div","InternationalVendorsNames","SapStatus","defaultColumns","identifier","filterTypes","number","dropdown","DisplayedColumnsList","DisplayedColumnsListOptions","column","flat","SubmissionsTable","selectedTemplate","setSelectedTemplate","templates","setTemplates","Map","setSourceSubmissions","currentUser","setCurrentUser","filters","setFilters","displayedColumns","setDisplayedColumns","totalCostAmount","setTotalCostAmount","totalCostAmountCostGL","setTotalCostAmountCostGL","totalCostAmountLC","setTotalCostAmountLC","totalCostAmountLCCostGL","setTotalCostAmountLCCostGL","totalIncomeAmount","setTotalIncomeAmount","totalIncomeAmountLCIncomeGL","setTotalIncomeAmountLCIncomeGL","totalIncomeAmountIncomeGL","setTotalIncomeAmountIncomeGL","totalIncomeAmountLC","setTotalIncomeAmountLC","totalCostsInTool","setTotalCostsInTool","totalIncomeInTool","setTotalIncomeInTool","totalCostsInToolEUR","setTotalCostsInToolEUR","totalIncomeInToolEUR","setTotalIncomeInToolEUR","tableWidth","setTableWidth","submissions","setSubmissions","filteredSubmissions","setFilteredSubmissions","filteredCommunicationSubmissions","setFilteredCommunicationSubmissions","communicationSubmissions","setCommunicationSubmissions","onlyMine","setOnlyMine","scrollLeft","setScrollLeft","defaultColumnsWidth","onScroll","useCallback","args","totalRequests","setTotalRequests","ignored","tcit","tiit","tcite","tiite","tca","tcal","tcacgl","tia","tial","tcalcgl","tialigl","tiaigl","subm","costAmountEUR","costAmountEURCostGL","costAmountLC","incomeAmountEURSI","incomeAmountLCSI","costAmountLCCostGL","incomeAmountLCIncomeGL","incomeAmountEurIncomeGL","filteredMap","filtered","cFilteredMap","filteredCommunication","f","JSON","parse","stringify","columnValue","columnLabel","selectedValues","valid","_","get","endsWith","exists","filterValue","setHours","set","has","rowRenderer","cells","visibleIndices","offset","netOffsets","offsetSum","leftBound","rightBound","col","columnOffset","colIdx","getVisibleColumnIndices","startIndex","visibleCells","i","partialUpdate","path","shift","handleCellUpdate","submissionIndex","findIndex","handleCommunicationCellUpdate","datePath","deleteSubmission","submissionId","tbd","splice","callSap","callSapSubmission","dangerouslySetInnerHTML","__html","columnWidth","dw","sd","findSubmissionsByPO","po","visibilityController","template","getTemplates","vSubs","ss","cSubs","totalIncomeLC","totalIncomeEUR","totalCostsEUR","totalCostsTool","totalIncomeTool","cs","incomeAmountEURIncomeGL","tableCells","frozen","FrozenDirection","LEFT","cellRenderer","header","hidden","rowIndex","cellData","headerRendererForTable","headerIndex","cell","cloneElement","updateTemplate","init","ID","Parent","Group","Created","Title","Author","doc","unshift","ws","json_to_sheet","skipHeader","wch","isLazy","onResize","onColumnResizeEnd","overscanRowCount","ignoreFunctionInColumnCompare","expandColumnKey","fixed","headerRenderer","headerClassName","frozenData","unflatten","rowKey","headerHeight","statusLMD","mi","documentNumberSI","activityIdForPortalVendors","additionalInformationLMD","alsoMarketingProjectNumberLMD","every","invoiceTypeLMD","currentVendor","vendorLMD","amount","NaN","trim","dunningStop","dunningStopLMD","toLowerCase","paymentMethodLMD","targetSubmissionIndex","is","ts","tsi","invoicingDateLMD","materialNumberLMD","invoiceTextLMD","amountLMD","documentCurrencyLMD","sendToLMD","depositNumberLMD","today","overlayRenderer","CheckTreePicker","cleanable","defaultExpandAll","block","TagPicker","paddingTop","onCreateOption","valuesField","tv","readOnly","charAt","DropdownCard","lastSync","fromNow","dropdowns","setDropdowns","getDropdowns","App","pca","navigationClient","setAdminRole","setNavigationClient","interactionType","InteractionType","Redirect","authenticationRequest","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","Slide","exact","render","GlobalStyles","css","PublicClientApplication","auth","clientId","redirectUri","postLogoutRedirectUri","addEventCallback","eventType","EventType","LOGIN_SUCCESS","payload","setActiveAccount","axios","interceptors","request","use","config","Authorization","idToken","ReactDOM","extendTheme","global","mode","initialColorMode","getElementById","baseUrl","usersUrl","projectsUrl","bookmarksUrl","submissionsUrl","dropdownsUrl","templatesUrl","draftsUrl","post","put","delete","URLSearchParams","columnsWidth","urlSegments","debug","setDebug","rawValues","setRawValues","processor","syncInterval","private","setDropdown","getDropdown","min","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","tabSize","enableSnippets","eval","createDropdown","updateDropdown","IoMdCheckmarkCircle","BsLightningFill","MdError","AiFillInfoCircle","span"],"mappings":"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","file":"static/js/main.318d1eca.chunk.js","sourcesContent":["import { NavigationClient, NavigationOptions } from \"@azure/msal-browser\";\nimport { History } from \"history\";\n\n/**\n * This is an example for overriding the default function MSAL uses to navigate to other urls in your webpage\n */\nexport class CustomNavigationClient extends NavigationClient {\n  private history: History;\n\n  constructor(history: History) {\n    super();\n    this.history = history;\n  }\n\n  /**\n   * Navigates to other pages within the same web application\n   * You can use the useHistory hook provided by react-router-dom to take advantage of client-side routing\n   * @param url\n   * @param options\n   */\n  async navigateInternal(url: string, options: NavigationOptions) {\n    const relativePath = url.replace(window.location.origin, \"\");\n    if (options.noHistory) {\n      this.history.replace(relativePath);\n    } else {\n      this.history.push(relativePath);\n    }\n\n    return false;\n  }\n}\n","import React from \"react\";\nimport { Stack, Text, Button, useColorModeValue } from \"@chakra-ui/react\";\n\nexport default function CookiePreference(props: any) {\n  return (\n    <Stack\n      position=\"fixed\"\n      bottom=\"0\"\n      left=\"0\"\n      right=\"0\"\n      width=\"90%\"\n      p=\"6\"\n      boxShadow=\"lg\"\n      bg={useColorModeValue(\"white\", \"#464A51\")}\n      ml=\"auto\"\n      mr=\"auto\"\n      mb={\"3vh\"}\n      borderRadius=\"md\"\n      zIndex={10000}\n    >\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Text fontWeight=\"semibold\">Your Privary</Text>\n      </Stack>\n\n      <Stack\n        direction={{ base: \"column\", md: \"row\" }}\n        justifyContent=\"space-between\"\n      >\n        <Text fontSize={{ base: \"sm\" }} textAlign={\"left\"}>\n          We use cookies and similar technologies to help personalise content\n          and provide a better experience. By clicking OK or turning an option\n          on in Cookie Preferences, you agree to this, as outlined in our Cookie\n          Policy. <br />\n          To change preferences or withdraw consent, please update your Cookie\n          Preferences.\n        </Text>\n        <Stack direction={{ base: \"column\", md: \"row\" }}>\n          <Button variant=\"outline\" colorScheme=\"twitter\">\n            Cookie Preferences\n          </Button>\n          <Button\n            color={\"white\"}\n            bg={\"blue.400\"}\n            _hover={{\n              bg: \"blue.300\",\n            }}\n            onClick={() => {\n              props.onAllow();\n              localStorage.setItem(\"cookieConsent\", \"allowed\");\n            }}\n          >\n            Allow\n          </Button>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Link,\n  Avatar,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuGroup,\n  MenuItem,\n  MenuDivider,\n  HStack,\n  VStack,\n  useColorMode,\n  Center,\n  Tooltip,\n  PopoverArrow,\n} from \"@chakra-ui/react\";\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  MoonIcon,\n  SunIcon,\n} from \"@chakra-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useIsAuthenticated,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { FiChevronDown } from \"react-icons/all\";\nimport CookiePreference from \"./AllowCookies\";\nimport { msalInstance } from \"../index\";\nimport { InteractionStatus } from \"@azure/msal-browser\";\nimport { RestAPI } from \"../api/rest\";\nimport { loginRequest } from \"../authConfig\";\n\nfunction Layout(props: any) {\n  const { instance, inProgress } = useMsal();\n\n  const [cookieConsent, setCookieConsent] = useState(false);\n  const [roles, setRoles] = useState<string[]>([]);\n  const isAuthenticated = useIsAuthenticated();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cookieConsent\") === \"allowed\") {\n      setCookieConsent(true);\n    }\n    RestAPI.getRoles().then((response) => setRoles(response.data.sort()));\n  }, [isAuthenticated]);\n\n  const { children } = props;\n  const { isOpen, onToggle } = useDisclosure();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Box minH=\"100vh\">\n      {!cookieConsent ? (\n        <CookiePreference\n          onAllow={() => {\n            setCookieConsent(true);\n            localStorage.setItem(\"cookieConsent\", \"allowed\");\n          }}\n        />\n      ) : null}\n\n      <Box>\n        <Flex\n          bg={useColorModeValue(\"white\", \"#21252A\")}\n          color={useColorModeValue(\"gray.600\", \"#ABB2BF\")}\n          minH={\"60px\"}\n          py={{ base: 2 }}\n          px={{ base: 4 }}\n          borderBottom={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n          align={\"center\"}\n        >\n          <Flex\n            flex={{ base: 1, md: \"auto\" }}\n            ml={{ base: -2 }}\n            display={{ base: \"flex\", md: \"none\" }}\n          >\n            <IconButton\n              onClick={onToggle}\n              icon={\n                isOpen ? (\n                  <CloseIcon w={3} h={3} />\n                ) : (\n                  <HamburgerIcon w={5} h={5} />\n                )\n              }\n              variant={\"ghost\"}\n              aria-label={\"Toggle Navigation\"}\n            />\n          </Flex>\n          <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n            <Text\n              mt={\"2px\"}\n              ml={{ base: \"0\", md: \"10px\" }}\n              textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\n              fontFamily={\"heading\"}\n              fontWeight=\"bold\"\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              cursor=\"pointer\"\n              onClick={() => {\n                history.push(\"/projects\");\n              }}\n              fontSize=\"lg\"\n            >\n              Formiks\n            </Text>\n\n            <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\n              <DesktopNav />\n            </Flex>\n          </Flex>\n\n          <Stack\n            flex={{ base: 1, md: 1 }}\n            justify={\"flex-end\"}\n            direction={\"row\"}\n            spacing={6}\n          >\n            <Button\n              display={{ base: \"none\", md: \"flex\" }}\n              variant=\"ghost\"\n              onClick={toggleColorMode}\n            >\n              {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n            </Button>\n            <AuthenticatedTemplate>\n              <Menu>\n                <MenuButton>\n                  <HStack>\n                    <Avatar\n                      name={msalInstance.getActiveAccount()?.name}\n                      mr={\"10px\"}\n                      size={\"sm\"}\n                    />\n                    <VStack\n                      display={{ base: \"none\", md: \"flex\" }}\n                      alignItems=\"flex-start\"\n                      spacing=\"1px\"\n                      ml={{ base: 0, md: \"2\" }}\n                    >\n                      <Text\n                        color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                        fontWeight={500}\n                        fontSize=\"sm\"\n                      >\n                        {msalInstance.getActiveAccount()?.name}\n                      </Text>\n\n                      <Text fontSize=\"xs\" color=\"gray.500\">\n                        <Tooltip hasArrow label=\"Settings\">\n                          {roles.join(\", \")}\n                        </Tooltip>\n                      </Text>\n                    </VStack>\n                    <Box display={{ base: \"none\", md: \"flex\" }}>\n                      <FiChevronDown style={{ marginLeft: \"5px\" }} />\n                    </Box>\n                  </HStack>\n                </MenuButton>\n\n                <MenuList\n                  m={0}\n                  mr={-3.0}\n                  bg={useColorModeValue(\"white\", \"#21252A\")}\n                  borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n                  boxShadow=\"none\"\n                  zIndex={2000000}\n                >\n                  <MenuGroup title=\"Profile\">\n                    <MenuItem isDisabled onClick={() => {}}>\n                      My Account\n                    </MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuGroup title=\"Help\">\n                    <MenuItem onClick={() => {}}>Documentation</MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        window.open(\n                          `mailto:sk@innovatio.lv,sp@innovatio.lv?subject=Formiks Bug Report&body=Hello! I found the bug while using: ${window.location.href}`,\n                          \"_blank\",\n                          \"noopener,noreferrer\"\n                        );\n                      }}\n                    >\n                      Report a Bug\n                    </MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={async () => {\n                      // instance.logout();\n                      sessionStorage.clear();\n                      setTimeout(() => {\n                        window.location.href = \"/\";\n                      }, 1000);\n                    }}\n                  >\n                    Log Out\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            </AuthenticatedTemplate>\n            <UnauthenticatedTemplate>\n              <Button\n                fontSize={\"sm\"}\n                fontWeight={600}\n                color={\"white\"}\n                bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n                _hover={{\n                  bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n                }}\n                onClick={async () => {\n                  // history.push(\"/login\");\n                  await instance.loginRedirect();\n                  // await instance.acquireTokenPopup({\n                  //   ...loginRequest,\n                  //   account: instance.getActiveAccount()!,\n                  // });\n                  // await instance.loginPopup();\n                }}\n              >\n                Sign In\n              </Button>\n            </UnauthenticatedTemplate>\n          </Stack>\n        </Flex>\n\n        <Collapse in={isOpen} animateOpacity>\n          <MobileNav closeMenu={onToggle} />\n        </Collapse>\n      </Box>\n      <Box m={{ base: \"1em\", xl: \"5em\" }} mt={{ base: \"3em\", xl: \"5em\" }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const history = useHistory();\n  const linkColor = useColorModeValue(\"gray.600\", \"#ABB2BF\");\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n  const popoverContentBgColor = useColorModeValue(\"white\", \"#21252A\");\n\n  return (\n    <Stack direction={\"row\"} spacing={4}>\n      {NAV_ITEMS.map((navItem) => {\n        return (\n          <Box key={navItem.label}>\n            <Popover trigger={\"hover\"} placement={\"bottom-start\"}>\n              {({ isOpen, onClose }) => (\n                <>\n                  <PopoverTrigger>\n                    <Button\n                      variant=\"link\"\n                      p={2}\n                      onClick={() => {\n                        if (navItem.href) {\n                          history.push(navItem.href);\n                        }\n                      }}\n                      fontSize={\"sm\"}\n                      fontWeight={500}\n                      color={linkColor}\n                      _hover={{\n                        textDecoration: \"none\",\n                        color: linkHoverColor,\n                      }}\n                    >\n                      {navItem.label}\n                    </Button>\n                  </PopoverTrigger>\n\n                  {navItem.children && (\n                    <PopoverContent\n                      border={0}\n                      boxShadow={\"xl\"}\n                      bg={popoverContentBgColor}\n                      p={4}\n                      rounded={\"xl\"}\n                      minW={\"sm\"}\n                      mt={\"20px\"}\n                    >\n                      <Stack>\n                        {navItem.children.map((child) => (\n                          <DesktopSubNav\n                            onClose={onClose}\n                            key={child.label}\n                            {...child}\n                          />\n                        ))}\n                      </Stack>\n                    </PopoverContent>\n                  )}\n                </>\n              )}\n            </Popover>\n          </Box>\n        );\n      })}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel, onClose }: NavItem) => {\n  const history = useHistory();\n  return (\n    <Link\n      onClick={() => {\n        if (href) {\n          history.push(href);\n          if (onClose) {\n            onClose();\n          }\n        }\n      }}\n      role={\"group\"}\n      display={\"block\"}\n      p={2}\n      rounded={\"md\"}\n      _hover={{ bg: useColorModeValue(\"blue.50\", \"#1d2024\") }}\n    >\n      <Stack direction={\"row\"} align={\"center\"}>\n        <Box>\n          <Text\n            transition={\"all .3s ease\"}\n            _groupHover={{ color: useColorModeValue(\"blue.400\", \"#cacfd9\") }}\n            fontWeight={600}\n            fontSize=\"md\"\n            ml={2}\n          >\n            {label}\n          </Text>\n          <Text\n            ml={2}\n            fontSize={\"sm\"}\n            color={useColorModeValue(\"#4A5667\", \"#718196\")}\n          >\n            {subLabel}\n          </Text>\n        </Box>\n        <Flex\n          transition={\"all .3s ease\"}\n          transform={\"translateX(-10px)\"}\n          opacity={0}\n          _groupHover={{ opacity: \"100%\", transform: \"translateX(0)\" }}\n          justify={\"flex-end\"}\n          align={\"center\"}\n          flex={1}\n        >\n          <Icon\n            color={useColorModeValue(\"blue.400\", \"#cacfd9\")}\n            w={5}\n            h={5}\n            as={ChevronRightIcon}\n          />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = (props: any) => {\n  return (\n    <Stack\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      p={4}\n      display={{ md: \"none\" }}\n    >\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem\n          closeMenu={props.closeMenu}\n          key={navItem.label}\n          {...navItem}\n        />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href, closeMenu }: any) => {\n  const history = useHistory();\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        onClick={() => {\n          if (href) {\n            history.push(href);\n          }\n        }}\n        justify={\"space-between\"}\n        align={\"center\"}\n        _hover={{\n          textDecoration: \"none\",\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={\"all .25s ease-in-out\"}\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n          align={\"start\"}\n        >\n          {children &&\n            children.map((child: any) => (\n              <Link\n                key={child.label}\n                py={2}\n                onClick={() => {\n                  if (child.href) {\n                    history.push(child.href);\n                    closeMenu();\n                  }\n                }}\n              >\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n  onClose?: any;\n  isAdmin?: boolean;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Projects\",\n    children: [\n      {\n        label: \"Existing Projects\",\n        subLabel: \"Explore existing projects\",\n        href: \"/projects\",\n      },\n      {\n        label: \"New Project\",\n        subLabel: \"Create new project\",\n        href: \"/projects/create\",\n        isAdmin: true,\n      },\n    ],\n  },\n\n  {\n    label: \"Submissions\",\n    children: [\n      {\n        label: \"Submissions Table\",\n        subLabel: \"Explore all active submissions\",\n        href: \"/submissions\",\n      },\n      {\n        label: \"Drafts\",\n        subLabel: \"Explore unpublished submissions\",\n        href: \"/drafts\",\n      },\n    ],\n  },\n  {\n    label: \"Dropdowns\",\n    children: [\n      {\n        label: \"Existing Dropdowns\",\n        subLabel: \"Explore existing adaptive dropdowns\",\n        href: \"/dropdowns\",\n      },\n      {\n        label: \"New Dropdown\",\n        subLabel: \"Create new adaptive dropdown\",\n        href: \"/dropdowns/create\",\n        isAdmin: true,\n      },\n    ],\n  },\n];\n\nexport default Layout;\n","import { useColorModeValue } from \"@chakra-ui/react\";\nimport { StylesConfig } from \"react-select\";\n\nexport function shadeColor(color: string, amount: number) {\n  return (\n    \"#\" +\n    color\n      .replace(/^#/, \"\")\n      .replace(/../g, (color) =>\n        (\n          \"0\" +\n          Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\n        ).substr(-2)\n      )\n  );\n}\n\nexport function DefaultSelectStyles(color: any) {\n  return {\n    menu: (provided: any) => ({\n      ...provided,\n      zIndex: 1000000,\n      backgroundColor: color(\"white\", \"#21252A\"),\n    }),\n    input: (provided: any) => ({\n      ...provided,\n      color: color(\"#718196\", \"#ABB2BF\"),\n    }),\n    singleValue: (provided: any) => ({\n      ...provided,\n      color: color(\"#718196\", \"#ABB2BF\"),\n    }),\n    menuPortal: (base: any) => ({\n      ...base,\n      zIndex: 1000000,\n    }),\n    control: (base: any, state: any) => ({\n      ...base,\n      minHeight: 40,\n      border: `1px solid ${color(\"#E2E8F0\", \"#3E4249\")}`,\n      transition: \"0.3s\",\n      \"&:hover\": {\n        border: `1px solid ${color(\"#CBD5E0\", \"#565e71\")}`,\n      },\n      backgroundColor: color(\"white\", \"#2C313C\"),\n    }),\n    option: (base: any, state: any) => ({\n      ...base,\n      backgroundColor: state.isSelected\n        ? color(\"#3182CE\", \"#565e71\")\n        : color(\"white\", \"#21252A\"),\n      \"&:hover\": {\n        backgroundColor: state.isSelected\n          ? color(\"#3182CE\", \"#565e71\")\n          : color(\"#DEEBFF\", \"#404654\"),\n      },\n    }),\n    multiValue: (styles: any, { data }: any) => {\n      return {\n        ...styles,\n        backgroundColor: color(\"#E6E6E6\", \"#565e71\"),\n      };\n    },\n    multiValueLabel: (styles: any, { data }: any) => ({\n      ...styles,\n      color: color(\"#333333\", \"#ABB2BF\"),\n    }),\n    multiValueRemove: (styles: any, { data }: any) => ({\n      ...styles,\n      \":hover\": {\n        backgroundColor: color(\"#ffcdcd\", \"#70565f\"),\n        color: \"red\",\n      },\n    }),\n  };\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Project from \"../types/project\";\nimport { RestAPI } from \"../api/rest\";\nimport Bookmark from \"../types/bookmark\";\nimport { DefaultSelectStyles } from \"../utils/Color\";\n\ninterface Props {\n  isOpen: boolean;\n  onClose: any;\n  addBookmark: any;\n  projects: Project[];\n  bookmarks: Bookmark[];\n}\n\nexport default function CreateBookmark(props: Props) {\n  const [matchingProjects, setMatchingProjects] = useState(0);\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n  const [title, setTitle] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  useEffect(() => {\n    var tags: string[] = [];\n    props.projects.map((project) => {\n      project.tags.map((tag) => {\n        if (tags.indexOf(tag) === -1) {\n          tags.push(tag);\n        }\n      });\n      setAvailableTags(tags);\n    });\n  }, [props.projects]);\n  useEffect(() => {\n    var matchingProjects = 0;\n    props.projects.map((project) => {\n      if (\n        project.tags &&\n        project.tags.some((item) => selectedTags.includes(item))\n      ) {\n        matchingProjects++;\n      }\n    });\n    setMatchingProjects(matchingProjects);\n  }, [selectedTags]);\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onClose={() => {\n        props.onClose();\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Create new bookmark</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <VStack spacing={4}>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Title</Text>\n              <Input\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                }}\n                bg={useColorModeValue(\"white\", \"#2C313C\")}\n                color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Tags</Text>\n              <CreatableSelect\n                placeholder=\"\"\n                styles={DefaultSelectStyles(useColorModeValue)}\n                theme={(theme) => ({\n                  ...theme,\n                  borderRadius: 6,\n                  colors: {\n                    ...theme.colors,\n                    primary: \"#3082CE\",\n                  },\n                })}\n                isMulti\n                value={selectedTags.map((tag) => {\n                  return { label: tag, value: tag };\n                })}\n                onChange={(values) => {\n                  var tags: string[] = [];\n                  values.map((element: any) => tags.push(element.value));\n                  setSelectedTags(tags);\n                }}\n                options={availableTags.map((tag) => {\n                  return {\n                    label: tag,\n                    value: tag,\n                  };\n                })}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text float=\"right\" color=\"gray.400\" mb=\"10px\">\n                Matching {matchingProjects} projects\n              </Text>\n            </Box>\n          </VStack>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            isDisabled={\n              title.length < 1 ||\n              (props.bookmarks &&\n                props.bookmarks.some((bookmark) => bookmark.title === title))\n            }\n            color={\"white\"}\n            bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              RestAPI.createBookmark({\n                title,\n                tags: selectedTags,\n              } as Bookmark).then((response) => {\n                props.addBookmark(response.data);\n                props.onClose();\n              });\n            }}\n          >\n            Create\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Text,\n  Image,\n  Stack,\n  Heading,\n  Avatar,\n  Badge,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Project from \"../types/project\";\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function ProjectCard(props: Props) {\n  return (\n    <Box\n      key={props.project.id}\n      onClick={() => {\n        props.history.push(`/projects/view/${props.project.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"433px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.project.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.project.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack mt={6} direction={\"row\"} spacing={4} align={\"center\"}>\n        <Avatar name={props.project.author} alt={\"Author\"} />\n        <Stack direction={\"column\"} spacing={0} fontSize={\"sm\"}>\n          <Text fontWeight={600}>{props.project.author}</Text>\n          <Tooltip\n            bg={useColorModeValue(\"white\", \"#373c45\")}\n            color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n            p={4}\n            hasArrow\n            label={moment(props.project.updated).format(\"DD.MM.YYYY HH:mm\")}\n          >\n            <Text color={\"gray.500\"}>\n              {moment(props.project.updated).format(\"MMMM DD, YYYY\")}\n            </Text>\n          </Tooltip>\n        </Stack>\n      </Stack>\n      <Wrap\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        h={\"68px\"}\n        mt={6}\n        justify=\"center\"\n      >\n        {props.project.tags.map((tag) => {\n          return (\n            <WrapItem key={`${props.project.id}-tag-${tag}`}>\n              <Tag fontWeight={\"400\"} size=\"sm\" px={2} cursor=\"pointer\">\n                #{tag.toUpperCase()}\n              </Tag>\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport CreateBookmark from \"../../components/CreateBookmark\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [filteredProjects, setFilteredProjects] = useState<Project[]>([]);\n  const [selectedBookmark, setSelectedBookmark] = useState(\"\");\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [createBookmarkModal, setCreateBookMarkModal] = useState(false);\n\n  useEffect(() => {\n    RestAPI.getBookmarks().then((response) => setBookmarks(response.data));\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n      setFilteredProjects(response.data);\n    });\n  }, []);\n\n  return (\n    <div style={{ paddingBottom: \"3em\" }}>\n      <CreateBookmark\n        isOpen={createBookmarkModal}\n        addBookmark={(bookmark: Bookmark) => {\n          setBookmarks((old) => [...(old ? old : []), bookmark]);\n        }}\n        bookmarks={bookmarks}\n        onClose={() => {\n          setCreateBookMarkModal(false);\n        }}\n        projects={projects}\n      />\n      <Center mb={\"5em\"}>\n        <Wrap maxW={{ base: \"100%\", lg: \"50%\" }} justify=\"center\">\n          {bookmarks\n            ? bookmarks.map((bookmark) => {\n                return (\n                  <WrapItem key={`bookmark-${bookmark.id}`}>\n                    <Tag\n                      fontWeight={\"400\"}\n                      size={\"lg\"}\n                      colorScheme={\n                        selectedBookmark === bookmark.id ? \"cyan\" : undefined\n                      }\n                      cursor=\"pointer\"\n                      key={bookmark.id}\n                      onContextMenu={(e) => {\n                        e.preventDefault();\n                        if (bookmark.id) {\n                          RestAPI.deleteBookmark(bookmark.id);\n                          setBookmarks(\n                            bookmarks.filter((b) => b.id !== bookmark.id)\n                          );\n                        }\n                      }}\n                      onClick={() => {\n                        setSelectedBookmark(\n                          selectedBookmark !== bookmark.id ? bookmark.id! : \"\"\n                        );\n                        setFilteredProjects(\n                          selectedBookmark !== bookmark.id\n                            ? projects.filter((project) =>\n                                project.tags.some((t) =>\n                                  bookmark.tags.includes(t)\n                                )\n                              )\n                            : projects\n                        );\n                      }}\n                    >\n                      {bookmark.title}\n                    </Tag>\n                  </WrapItem>\n                );\n              })\n            : null}\n\n          <WrapItem display={props.isAdmin ? \"grid\" : \"none\"}>\n            <Tag\n              onClick={() => {\n                setCreateBookMarkModal(true);\n              }}\n              fontWeight={\"400\"}\n              size={\"lg\"}\n              cursor=\"pointer\"\n            >\n              <AddIcon w={3} h={3} />\n            </Tag>\n          </WrapItem>\n        </Wrap>\n      </Center>\n      <Wrap\n        justify=\"center\"\n        spacing={{ base: \"40px\", lg: \"3em\" }}\n        mx={{ base: 0, \"2xl\": \"300px\" }}\n      >\n        {filteredProjects.map((project) => {\n          return (\n            <WrapItem key={`wrap-${project.id}`}>\n              <ProjectCard history={props.history} project={project} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { FormBuilder } from \"@formio/react\";\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2 } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [\n      \"New\",\n      \"In Progress\",\n      \"Completed\",\n      \"On Hold\",\n      \"Cancelled\",\n    ] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) =>\n        setProject(response.data)\n      );\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={project.title}\n              onChange={(event) => {\n                setProject((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Tags</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.tags.map((tag) => {\n                return { label: tag, value: tag };\n              })}\n              onChange={(values) => {\n                var tags: string[] = [];\n                values.map((element: any) => tags.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  tags,\n                }));\n              }}\n              options={[]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Roles</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.roles.map((role) => {\n                return { label: role, value: role };\n              })}\n              onChange={(values) => {\n                var roles: string[] = [];\n                values.map((element: any) => roles.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  roles,\n                }));\n              }}\n              options={[\n                { label: \"administrator\", value: \"administrator\" },\n                { label: \"user\", value: \"user\" },\n                { label: \"guest\", value: \"guest\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"66.5%\" }}>\n            <Text mb=\"8px\">Available Statuses</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n              onChange={(values) => {\n                var statuses: string[] = [];\n                values.map((element: any) => statuses.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  statuses,\n                }));\n              }}\n              options={[\n                { label: \"New\", value: \"New\" },\n                { label: \"In Progress\", value: \"In Progress\" },\n                { label: \"Completed\", value: \"Completed\" },\n                { label: \"On Hold\", value: \"On Hold\" },\n                { label: \"Cancelled\", value: \"Cancelled\" },\n              ]}\n            />\n          </Box>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Default Status</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label: project.defaultStatus,\n                value: project.defaultStatus,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  defaultStatus: value.label,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"defaultStatus\"\n              options={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Project Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label:\n                  project.type === \"formio\" ? \"GUI Builder\" : \"Code Builder\",\n                value: project.type,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"projectType\"\n              options={[\n                { label: \"GUI Builder\", value: \"formio\" },\n                { label: \"Code Builder\", value: \"code\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={project.description}\n            onChange={(event) => {\n              setProject((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      {project.type === \"formio\" ? (\n        <FormBuilder\n          options={{\n            builder: {\n              basic: {\n                components: {\n                  excelTable: true,\n                },\n              },\n              advanced: {\n                components: {\n                  file: true,\n                },\n              },\n              premium: false,\n            },\n          }}\n          form={{ display: \"form\", components: project.components }}\n          onChange={(schema: any) => {\n            console.log(schema);\n            setProject((prev) => ({\n              ...prev,\n              components: schema.components,\n            }));\n          }}\n        />\n      ) : null}\n      <HStack mb=\"40px\" spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createProject(project);\n              if (response.data.id) {\n                props.history.push(`/projects/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateProject(project)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={<div>Project has been successfully updated</div>}\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update project\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n","import { Configuration, LogLevel, RedirectRequest } from \"@azure/msal-browser\";\n\n// Config object to be passed to Msal on creation\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: \"c6c34032-5419-4fdf-bbd4-a863814323b7\",\n    redirectUri: \"/\",\n    postLogoutRedirectUri: \"/\",\n  },\n};\n\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest: RedirectRequest = {\n  scopes: [\"User.Read\", \"email\"],\n};\n\n// Add here the endpoints for MS Graph API services you would like to use.\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n};\n","import { loginRequest, graphConfig } from \"../authConfig\";\nimport { msalInstance } from \"../index\";\n\nexport async function getAccountInfo() {\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    return;\n  }\n\n  const response = await msalInstance.acquireTokenSilent({\n    ...loginRequest,\n    account: account,\n  });\n\n  const headers = new Headers();\n  const bearer = `Bearer ${response.accessToken}`;\n\n  headers.append(\"Authorization\", bearer);\n\n  const options = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(graphConfig.graphMeEndpoint, options)\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport moment from \"moment\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { DefaultSelectStyles } from \"../../utils/Color\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar AlsoInternationalVendorsNames: any[] = [];\nvar BUs: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n  isDraft?: boolean;\n}\n\nexport default function Cerov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localSubmitted, setLocalSubmitted] = useState(false);\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [organizingCompany, setOrganizingCompany] = useState(\"\");\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({\n    ph: {\n      label: \"\",\n      value: \"\",\n    },\n  });\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0.00\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [injectionReady, setInjectionReady] = useState(false);\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value:\n          props.submission.data.campaignChannel.length > 0\n            ? props.submission.data.campaignChannel.substr(0, 1)\n            : \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: (props.submission.data.year ?? \"\").substring(2, 4),\n      });\n      setOrganizingCompany(props.submission.data.organizingCompany ?? \"\");\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value:\n          props.submission.data.projectStartQuarter.length > 0\n            ? props.submission.data.projectStartQuarter.substr(0, 2)\n            : \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      if (Budget.length > 0 && props.submission.data.budgetSource !== \"\") {\n        setBudgetSource({\n          label: props.submission.data.budgetSource ?? \"\",\n          value:\n            Budget.find((b) => b.label === props.submission.data.budgetSource)\n              .value ?? \"\",\n        });\n      }\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        props.submission.data.campaignEstimatedIncomeEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCosts(\n        props.submission.data.campaignEstimatedCostsEur.toFixed(2) || \"0.00\"\n      );\n      setNetProfitTarget(\n        props.submission.data.campaignNetProfitTargetEur.toFixed(2) || \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        props.submission.data.totalEstimatedCostsLC.toFixed(2) || \"0.00\"\n      );\n\n      //\n\n      if (props.children && props.children.length > 0) {\n        var vs = props.children.find((s) => s.group === \"vendor\");\n        setVendorName({\n          label: vs.data.vendorName ?? \"\",\n          value: vs.data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: vs.data.vendorName ?? \"\",\n          projectManager: vs.data.productionProjectManager ?? \"\",\n          creditor: vs.data.creditorNumber ?? \"\",\n          debitor: vs.data.debitorNumber ?? \"\",\n          manufacturer: vs.data.manufacturerNumber ?? \"\",\n          bu: vs.data.businessUnit ?? \"\",\n          ph: {\n            label: vs.data.PH1 || \"1\",\n            value: vs.data.PH1 || \"1\",\n          },\n          budgetCurrency: {\n            label: vs.data.budgetCurrency || \"\",\n            value: vs.data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              return {\n                label: s.data.companyName,\n                value: {\n                  code: s.data.countryCodeEMEA,\n                  country: s.data.countriesEMEA,\n                },\n              };\n            })\n        );\n        var c: any[] = [];\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.localProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n      }\n\n      setTimeout(() => {\n        setInjectionReady(true);\n      }, 1000);\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n      \"633e93ed5a7691ac30c977fc\",\n      \"636abbd43927f9c7703b19c4\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n    BUs = responses[10].data;\n    AlsoInternationalVendorsNames = responses[11].data;\n  }\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      var ex = costBreakdown.find(\n        (country: any) => country.companyCode === company.value.code\n      );\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: ex ? ex.contactEmail : \"\",\n        projectNumber:\n          projectNumber.length > 0\n            ? company.value.code + projectNumber.substring(4)\n            : \"\",\n        contribution: ex ? ex.contribution : \"\",\n        estimatedCosts: ex ? ex.estimatedCosts : \"\",\n        contributionEur: ex ? ex.contributionEur : \"\",\n        estimatedCostsEur: ex ? ex.estimatedCostsEur : \"\",\n        share: ex ? ex.share : \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating, projectNumber]);\n\n  useEffect(() => {\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    // contributionEur: \"\",\n    // estimatedCostsEur: \"\",\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n        row.contributionEur = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n        row.contributionEur = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncome)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n      row.estimatedCostsEur = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCosts)\n      ).toFixed(2);\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(2));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: vendorName.value.alsoMarketingConsultant,\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendor.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (organizingCompany === \"\" ? \"??\" : organizingCompany) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [\n    year,\n    organizingCompany,\n    campaignChannel,\n    projectStartQuarter,\n    requestorsCompanyName,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n              setOrganizingCompany(value.value.country);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertDescription>\n            Please note no actual project for 1550 will be created in the tool\n            just yet, this still needs to be done via the usual process. But a\n            project for Switzerland will be created if they are part of the\n            campaign, as they are using the tool. Other countries and 1550 will\n            follow.\n          </AlertDescription>\n        </Alert>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Organizing Company</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: organizingCompany,\n              value: organizingCompany,\n            }}\n            onChange={(selected: any) => {\n              setOrganizingCompany(selected.value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"organizingCompany\"\n            options={Companies.map((company) => {\n              return {\n                label: company.value.country,\n                value: company.value.country,\n              };\n            })}\n          />\n        </Box>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={campaignChannel}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (value.value === \"noBudget\") {\n                setEstimatedIncomeBudgetCurrency(\"\");\n                setEstimatedIncome(\"\");\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={\n              requestorsCompanyName.value.code === \"1550\"\n                ? AlsoInternationalVendorsNames\n                : VendorsNames\n            }\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            value={vendor.debitor}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Select\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: vendor.bu,\n              value:\n                typeof vendor.bu === \"string\" ? vendor.bu.substr(0, 3) : \"\",\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              var temp = { ...vendor };\n              temp.bu = value.label;\n              setVendor(temp);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"BUs\"\n            options={BUs}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            className={`${useColorModeValue(\"\", \"dark-table\")}`}\n            rowClassName={(rowData) =>\n              `${useColorModeValue(\"\", \"dark-table-row\")}`\n            }\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n                contributionEur: estimatedIncome + \" EUR\",\n                estimatedCostsEur: estimatedCosts + \" EUR\",\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget contribution in Euro</HeaderCell>\n              <Cell dataKey=\"budgetContributionEur\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contributionEur}\n                    onChange={(event) => {}}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Total estimated costs in Euro</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEur\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCostsEur}\n                    onChange={(event) => {}}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <VStack alignItems={\"end\"} spacing=\"15px\">\n        <Box>\n          <Button\n            float=\"right\"\n            colorScheme={\"blue\"}\n            onClick={() => {\n              //\n\n              var projectId = \"6246bc93fa2a446faadb8d9a\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency: isNaN(\n                    parseFloat(estimatedIncomeBudgetCurrency)\n                  )\n                    ? 0.0\n                    : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur: isNaN(parseFloat(estimatedIncome))\n                    ? 0.0\n                    : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n\n                  projectType: \"European One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  projectNumber: projectNumber,\n                  companyCode: requestorsCompanyName.value.code,\n                  productionProjectManager: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : exchangeRates.label,\n                  vendorAmount:\n                    isNaN(parseFloat(estimatedIncomeBudgetCurrency)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  projectType: \"European One Vendor\",\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectName: campaignName,\n                    additionalInformation: comments,\n                    campaignChannel: campaignChannel.label,\n                    parentProjectNumber: projectNumber,\n                    projectNumber: projectNumber,\n                    companyCode: company.companyCode,\n                    localProjectNumber: company.projectNumber,\n                    campaignStartDate:\n                      startDate === null ? null : startDate.toString(),\n                    campaignEndDate:\n                      endDate === null ? null : endDate.toString(),\n                    budgetSource: budgetSource.label,\n                    campaignCurrency: exchangeRates.label,\n                    vendorName: vendorName.label,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorShare: 100,\n                    estimatedResultBC:\n                      parseFloat(netProfitTargetBudgetCurrency) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    projectType: \"European One Vendor\",\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    estimatedCostsCC: parseFloat(company.estimatedCosts),\n                    estimatedIncomeCC:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(company.contribution),\n                    estimatedResultCC:\n                      (parseFloat(company.contribution) -\n                        parseFloat(company.estimatedCosts)) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(company.contributionEur),\n                    estimatedCostsEUR: parseFloat(company.estimatedCostsEur),\n                    estimatedResultEUR:\n                      (parseFloat(company.contributionEur) -\n                        parseFloat(company.estimatedCostsEur)) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              if (props.isDraft) {\n                RestAPI.deleteDraft(props.submission.id).then(() => {\n                  RestAPI.createSubmissionWithChildren(submission).then(\n                    (response) => {\n                      if (response.data.hasChanged) {\n                        toast(\n                          <Toast\n                            title={\"Project Number has been adjusted\"}\n                            message={\n                              <p>\n                                Project Number changed to:{\" \"}\n                                <b>\n                                  {response.data.submission.data.projectNumber}\n                                </b>\n                              </p>\n                            }\n                            type={\"info\"}\n                          />\n                        );\n                      }\n                      props.history.push(\"/submissions\");\n                    }\n                  );\n                });\n              } else {\n                RestAPI.createSubmissionWithChildren(submission).then(\n                  (response) => {\n                    if (response.data.hasChanged) {\n                      toast(\n                        <Toast\n                          title={\"Project Number has been adjusted\"}\n                          message={\n                            <p>\n                              Project Number changed to:{\" \"}\n                              <b>\n                                {response.data.submission.data.projectNumber}\n                              </b>\n                            </p>\n                          }\n                          type={\"info\"}\n                        />\n                      );\n                    }\n                    props.history.push(\"/submissions\");\n                  }\n                );\n              }\n            }}\n            isDisabled={\n              requestorsCompanyName.value.code !== \"6110\" ||\n              (props.submission && !props.isDraft)\n            }\n          >\n            Step 2-Submit\n          </Button>\n          <Button\n            float=\"right\"\n            mr=\"15px\"\n            color={\"white\"}\n            bg={useColorModeValue(\"teal.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"teal.300\", \"#377bbf\"),\n            }}\n            isDisabled={\n              !costBreakdown.some(\n                (company: any) => company.companyCode === \"6110\"\n              ) || requestorsCompanyName.value.code === \"6110\"\n            }\n            onClick={() => {\n              var company = costBreakdown.find(\n                (c: any) => c.companyCode === \"6110\"\n              );\n              if (company === undefined) {\n                return;\n              }\n              var parent = {\n                project: \"6246bc93fa2a446faadb8d9a\",\n                title: \"\",\n                parentId: null,\n                group: \"country\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"Incomplete\",\n                author: requestorsName,\n                data: {\n                  status: \"Incomplete\",\n                  projectName: campaignName,\n                  additionalInformation: comments,\n                  campaignChannel: campaignChannel.label,\n                  parentProjectNumber: projectNumber,\n                  projectNumber: company.projectNumber,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  campaignCurrency: exchangeRates.label,\n                  vendorName: vendorName.label,\n                  businessUnit: vendor.bu,\n                  // manufacturerNumber: vendor.manufacturer,\n                  // debitorNumber: vendor.debitor,\n                  estimatedCostsCC: parseFloat(company.estimatedCosts),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                  estimatedResultCC:\n                    (parseFloat(company.contribution) -\n                      parseFloat(company.estimatedCosts)) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(company.contributionEur),\n                  estimatedCostsEUR: parseFloat(company.estimatedCostsEur),\n                  estimatedResultEUR:\n                    (parseFloat(company.contributionEur) -\n                      parseFloat(company.estimatedCostsEur)) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : exchangeRates.label,\n                  vendorAmount:\n                    isNaN(parseFloat(estimatedIncomeBudgetCurrency)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  vendorShare: 100,\n                  projectType: \"European One Vendor\",\n                  companyName: company.companyName,\n                  companyCode: company.companyCode,\n                  country: company.country,\n                  countriesEMEA: company.country,\n                  productionProjectManager: company.contactEmail,\n                  countryShare: parseFloat(company.share),\n                  countryBudgetContributionEur: company.contribution,\n                  countryCostEstimationEur: company.estimatedCosts,\n                  countryBudgetContributionCC: isNaN(\n                    parseFloat(company.contribution)\n                  )\n                    ? 0.0\n                    : parseFloat(company.contribution),\n                  countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                },\n              };\n\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children: [],\n              };\n\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  if (response.data.hasChanged) {\n                    toast(\n                      <Toast\n                        title={\"Project Number has been adjusted\"}\n                        message={`Project Number was adjusted, to remain unique`}\n                        type={\"info\"}\n                      />\n                    );\n                  }\n                  setLocalSubmitted(true);\n                  toast(\n                    <Toast\n                      title={\"Project Created\"}\n                      message={`Local project with number has been created.`}\n                      type={\"success\"}\n                    />\n                  );\n                  // props.history.push(\"/submissions\");\n                }\n              );\n            }}\n          >\n            Step 1-Local\n          </Button>\n        </Box>\n        <Box>\n          <Button\n            float=\"right\"\n            color={\"white\"}\n            bg={useColorModeValue(\"green.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"green.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              interface FD {\n                [key: string]: any;\n              }\n\n              var formattedData = [];\n              formattedData.push([\"Request\", \"European One Vendor\"]);\n              formattedData.push([\n                \"Requestor`s Company Name\",\n                requestorsCompanyName.label,\n              ]);\n              formattedData.push([\n                \"Requestor`s Company Code\",\n                requestorsCompanyName.value.code,\n              ]);\n              formattedData.push([\n                \"Requestor`s Country\",\n                requestorsCompanyName.value.country,\n              ]);\n              formattedData.push([\"Organizing Company\", organizingCompany]);\n              formattedData.push([\"Campaign Name\", campaignName]);\n              formattedData.push([\"Campaign Description\", campaignDescription]);\n              formattedData.push([\"Campaign Channel\", campaignChannel.label]);\n              formattedData.push([\"Year\", year.label]);\n              formattedData.push([\n                \"Campaign/Project Start Quarter (ALSO Quarter)\",\n                projectStartQuarter.label,\n              ]);\n              formattedData.push([\"Project Number\", projectNumber]);\n              formattedData.push([\"Requestor`s Name\", requestorsName]);\n              formattedData.push([\n                \"Campaign Start Date\",\n                moment(startDate).format(\"DD.MM.yyyy\"),\n              ]);\n              formattedData.push([\n                \"Campaign End Date\",\n                moment(endDate).format(\"DD.MM.yyyy\"),\n              ]);\n              formattedData.push([\"Budget Source\", budgetSource.label]);\n              formattedData.push([\n                \"Local Currency\",\n                requestorsCompanyName.value.currency,\n              ]);\n              formattedData.push([\"Campaign Currency\", exchangeRates.label]);\n              formattedData.push([\n                \"Campaign Estimated Income in Campaign Currency\",\n                budgetSource.value === \"noBudget\"\n                  ? \"N/A\"\n                  : estimatedIncomeBudgetCurrency,\n              ]);\n              formattedData.push([\n                \"Campaign Estimated Costs in Campaign Currency\",\n                estimatedCostsBudgetCurrency,\n              ]);\n              formattedData.push([\n                budgetSource.value === \"noBudget\"\n                  ? \"Campaign Loss in Campaign currency\"\n                  : \"Campaign Net Profit Target in Campaign Currency\",\n                netProfitTargetBudgetCurrency,\n              ]);\n              formattedData.push([\n                \"Campaign Estimated Income in EUR\",\n                estimatedIncome === \"\" ? \"N/A\" : estimatedIncome,\n              ]);\n              formattedData.push([\n                \"Campaign Estimated Costs in EUR\",\n                estimatedCosts,\n              ]);\n              formattedData.push([\n                budgetSource.value === \"noBudget\"\n                  ? \"Campaign Loss in EUR\"\n                  : \"Campaign Net Profit Target in EUR\",\n                netProfitTarget,\n              ]);\n              formattedData.push([\n                \"Total Estimated Costs in Local Currency\",\n                totalEstimatedCostsLC,\n              ]);\n              formattedData.push([\"Vendor Name\", vendorName.label]);\n              formattedData.push([\"VOD\", vendor.debitor]);\n              formattedData.push([\"Creditor\", vendor.creditor]);\n              formattedData.push([\"Manufacturer\", vendor.manufacturer]);\n              formattedData.push([\"Business Unit\", vendor.bu]);\n              formattedData.push([\"PH1\", vendor.ph.label]);\n              formattedData.push([\"Comments\", comments]);\n              formattedData.push([\n                \"Companies Participating\",\n                companiesParticipating.map((v: any) => v.label).join(\", \"),\n              ]);\n              formattedData.push([]);\n              formattedData.push([\n                \"Company Name\",\n                \"Company Code\",\n                \"Country\",\n                \"Contact Person's Email\",\n                \"Local Project Number\",\n                \"Share %\",\n                \"Budget Contribution in Campaign Currency\",\n                \"Total Estimated Costs in Campaign Currency\",\n                \"Budget Contribution in EUR\",\n                \"Total Estimated Costs in EUR\",\n              ]);\n              costBreakdown.forEach((company: any) => {\n                formattedData.push([\n                  company.companyName,\n                  company.companyCode,\n                  company.country,\n                  company.contactEmail,\n                  company.projectNumber,\n                  company.share,\n                  company.contribution,\n                  company.estimatedCosts,\n                  company.contributionEur,\n                  company.estimatedCostsEur,\n                ]);\n              });\n              formattedData.push([\n                \"TOTAL\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                totalcbShare + \"%\",\n                totalcbContribution + \" \" + exchangeRates.label,\n                totalcbCosts + \" \" + exchangeRates.label,\n                estimatedIncome + \" EUR\",\n                estimatedCosts + \" EUR\",\n              ]);\n              var ws = XLSX.utils.aoa_to_sheet(formattedData);\n              const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n              const excelBuffer = XLSX.write(wb, {\n                bookType: \"xlsx\",\n                type: \"array\",\n              });\n              const data = new Blob([excelBuffer], {\n                type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n              });\n              FileSaver.saveAs(data, campaignName + \".xlsx\");\n            }}\n          >\n            Export\n          </Button>\n          <Button\n            float=\"right\"\n            mr=\"15px\"\n            color={\"white\"}\n            bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              var projectId = \"629dfb3f55d209262194a3e6\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  organizingCompany: organizingCompany,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency: isNaN(\n                    parseFloat(estimatedIncomeBudgetCurrency)\n                  )\n                    ? 0.0\n                    : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: isNaN(\n                    parseFloat(estimatedCostsBudgetCurrency)\n                  )\n                    ? 0.0\n                    : parseFloat(estimatedCostsBudgetCurrency),\n                  campaignNetProfitTargetBudgetsCurrency: isNaN(\n                    parseFloat(netProfitTargetBudgetCurrency)\n                  )\n                    ? 0.0\n                    : parseFloat(netProfitTargetBudgetCurrency),\n                  campaignEstimatedIncomeEur: isNaN(parseFloat(estimatedIncome))\n                    ? 0.0\n                    : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: isNaN(parseFloat(estimatedCosts))\n                    ? 0.0\n                    : parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: isNaN(parseFloat(netProfitTarget))\n                    ? 0.0\n                    : parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: isNaN(\n                    parseFloat(totalEstimatedCostsLC)\n                  )\n                    ? 0.0\n                    : parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n\n                  projectType: \"European One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  projectNumber: projectNumber,\n                  productionProjectManager: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : vendor.budgetCurrency.label,\n                  vendorAmount:\n                    isNaN(parseFloat(vendor.localBudget)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(vendor.localBudget),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  projectType: \"European One Vendor\",\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectName: campaignName,\n                    additionalInformation: comments,\n                    campaignChannel: campaignChannel.label,\n                    parentProjectNumber: projectNumber,\n                    projectNumber: projectNumber,\n                    localProjectNumber: company.projectNumber,\n                    campaignStartDate:\n                      startDate === null ? null : startDate.toString(),\n                    campaignEndDate:\n                      endDate === null ? null : endDate.toString(),\n                    budgetSource: budgetSource.label,\n                    campaignCurrency: exchangeRates.label,\n                    vendorName: vendorName.label,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorShare: 100,\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(estimatedIncome),\n                    estimatedCostsEUR: parseFloat(estimatedCosts),\n                    estimatedResultEUR:\n                      parseFloat(netProfitTarget) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    estimatedResultBC:\n                      parseFloat(netProfitTargetBudgetCurrency) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    projectType: \"European One Vendor\",\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              if (props.isDraft) {\n                submission.submission.id = props.submission.id;\n                RestAPI.updateDraft(submission).then((response) => {\n                  toast(\n                    <Toast\n                      title={\"Draft save\"}\n                      message={`Draft has been successfully saved.`}\n                      type={\"info\"}\n                    />\n                  );\n                });\n              } else {\n                RestAPI.createDraft(submission).then((response) => {\n                  toast(\n                    <Toast\n                      title={\"Draft save\"}\n                      message={`Draft has been successfully saved.`}\n                      type={\"info\"}\n                    />\n                  );\n                });\n              }\n            }}\n          >\n            {props.isDraft ? \"Update\" : \"Draft\"}\n          </Button>\n        </Box>\n      </VStack>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Ermv(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorsNames(\n          props.children\n            .filter((s) => s.group === \"vendor\")\n            .map((s) => {\n              return { label: s.data.vendorName, value: s.data.vendorName };\n            })\n        );\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var v: any[] = [];\n        var c: any[] = [];\n\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.parentProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n\n        props.children\n          .filter((s) => s.group === \"vendor\")\n          .forEach((s) => {\n            v.push({\n              vendor: s.data.vendorName,\n              projectManager: s.data.marketingResponsible,\n              creditor: s.data.creditorNumber,\n              debitor: s.data.debitorNumber,\n              manufacturer: s.data.manufacturerNumber,\n              bu: s.data.businessUnit,\n              ph: { label: s.data.PH1, value: s.data.PH1 },\n              budgetCurrency: {\n                label: s.data.vendorBudgetCurrency,\n                value: (\n                  ExchangeRates.find(\n                    (er) => er.label === s.data.vendorBudgetCurrency\n                  ) || { value: \"\" }\n                ).value,\n              },\n              budgetAmount: (s.data.vendorBudgetAmount || 0).toFixed(2),\n              localBudget: (s.data.vendorAmount || 0).toFixed(2),\n              eurBudget: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n              share: s.data.vendorShare.toFixed(0) || \"0\",\n              estimatedCostsCC: (s.data.estimatedCostsCC || 0).toFixed(2),\n              estimatedIncomeCC: (s.data.estimatedIncomeCC || 0).toFixed(2),\n              estimatedCostsLC: \"0.00\",\n              estimatedCostsEUR: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              netProfitTargetVC: (s.data.estimatedResultCC || 0).toFixed(2),\n              netProfitTargetLC: (s.data.estimatedResultBC || 0).toFixed(2),\n              netProfitTargetEUR: (s.data.estimatedResultEUR || 0).toFixed(2),\n            });\n          });\n        v.push({\n          vendor: \"TOTAL\",\n          projectManager: \"\",\n          creditor: \"\",\n          debitor: \"\",\n          manufacturer: \"\",\n          bu: \"\",\n          ph: { label: \"\", value: \"\" },\n          budgetCurrency: { label: \"\", value: \"\" },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setVendors([...v]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: vendor.value.alsoMarketingConsultant,\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: vendor.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    data.push({\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: \"\",\n      eurBudget: \"\",\n      share: \"\",\n      estimatedCostsCC: \"\",\n      estimatedIncomeCC: \"\",\n      estimatedCostsLC: \"\",\n      estimatedCostsEUR: \"\",\n      netProfitTargetVC: \"\",\n      netProfitTargetLC: \"\",\n      netProfitTargetEUR: \"\",\n    });\n    setVendors(data);\n  }, [vendorsNames]);\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    // if (props.submission) {\n    //   return;\n    // }\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(0));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    // if (props.submission) {\n    //   return;\n    // }\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n\n    var temp = [...vendors];\n    temp.slice(0, -1).forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    var totalVendorBudgetInLC = 0;\n    var totalVendorBudgetInEUR = 0;\n    var totalVendorShare = 0;\n    var totalEstimatedIncomeInCC = 0;\n    var totalEstimatedCostsInCC = 0;\n    var totalEstimatedCostsInLC = 0;\n    var totalEstimatedCostsInEUR = 0;\n    var totalNetProfitTargetInCC = 0;\n    var totalNetProfitTargetInLC = 0;\n    var totalNetProfitTargetInEUR = 0;\n    temp.slice(0, -1).forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 2)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (parseFloat(row.eurBudget) - parseFloat(row.estimatedCostsEUR)).toFixed(\n          2\n        );\n\n      row.netProfitTargetLC = (\n        parseFloat(row.localBudget) - parseFloat(row.estimatedCostsLC)\n      ).toFixed(2);\n\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n      totalVendorBudgetInLC += parseFloat(row.localBudget);\n      totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n      totalVendorShare += parseFloat(row.share);\n      totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n      totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n      totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n      totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n      totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n      totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n      totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n    });\n\n    temp[temp.length - 1] = {\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: totalVendorBudgetInLC.toFixed(2),\n      eurBudget: totalVendorBudgetInEUR.toFixed(2),\n      share: totalVendorShare.toFixed(2),\n      estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n      estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n      estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n      estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n      netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n      netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n      netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n    };\n\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Alert\n            status=\"error\"\n            display={\n              requestorsCompanyName.value.code !== \"6110\" &&\n              requestorsCompanyName.value.code !== \"\"\n                ? \"flex\"\n                : \"none\"\n            }\n          >\n            <AlertIcon />\n            <AlertDescription>\n              Please note no actual project for 1550 will be created in the tool\n              just yet, this still needs to be done via the usual process. But a\n              project for Switzerland will be created if they are part of the\n              campaign, as they are using the tool. Other countries and 1550\n              will follow.\n            </AlertDescription>\n          </Alert>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (value.value === \"noBudget\") {\n                setEstimatedIncomeBudgetCurrency(\"\");\n                setEstimatedIncome(\"\");\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              var val: any = value;\n              if (value !== null && value.length > 0) {\n                val = val.map((v: any) => {\n                  v.label = value.label.split(\"(\")[0];\n                  return v;\n                });\n              }\n              setVendorsNames(val);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames.map((option) => {\n              return {\n                label: `${option.label} (${option.value.debitorischer} - ${option.value.bu})`,\n                value: option.value,\n              };\n            })}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table hover={false} autoHeight rowHeight={65} data={vendors}>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    isDisabled\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.bu}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].bu = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    isDisabled={budgetSource.value === \"noBudget\"}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 10000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            // classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                invalid: totalcbShare === \"100\" ? false : true,\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    color={rowData.invalid && \"red\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}. Press submit again.`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"619515b754e61c8dd33daa52\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n                    estimatedIncomeBudgetCurrency\n                  ),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n                  projectType: \"European Multi Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              vendors.slice(0, -1).forEach((vendor: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectType: \"European Multi Vendor\",\n                    vendorName: vendor.vendor,\n                    projectNumber: projectNumber,\n                    marketingResponsible: vendor.projectManager,\n                    creditorNumber: vendor.creditor,\n                    debitorNumber: vendor.debitor,\n                    manufacturerNumber: vendor.manufacturer,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorBudgetCurrency:\n                      budgetSource.value === \"noBudget\"\n                        ? \"N/A\"\n                        : vendor.budgetCurrency.label,\n                    vendorAmount:\n                      isNaN(parseFloat(vendor.localBudget)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.localBudget),\n                    vendorBudgetAmount:\n                      isNaN(parseFloat(vendor.budgetAmount)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.budgetAmount),\n                    // cbbudgetEur: parseFloat(vendor.eurBudget),\n                    vendorShare: parseFloat(vendor.share),\n                    estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                    estimatedIncomeCC:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.estimatedIncomeCC),\n                    estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n                    // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.eurBudget),\n                    estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n                    estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n                    estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n                  },\n                });\n              });\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: null,\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectName: campaignName,\n                    additionalInformation: comments,\n                    campaignChannel: campaignChannel.label,\n                    parentProjectNumber:\n                      company.companyCode + projectNumber.substring(4),\n                    projectNumber: company.projectNumber,\n                    campaignStartDate:\n                      startDate === null ? null : startDate.toString(),\n                    campaignEndDate:\n                      endDate === null ? null : endDate.toString(),\n                    budgetSource: budgetSource.label,\n                    campaignCurrency: exchangeRates.label,\n                    // vendorName: vendorName.label,\n                    // businessUnit: vendor.bu,\n                    // PH1: vendor.ph.label,\n                    vendorShare: 100,\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(estimatedIncome),\n                    estimatedCostsEUR: parseFloat(estimatedCosts),\n                    estimatedResultEUR:\n                      parseFloat(netProfitTarget) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    estimatedResultBC:\n                      parseFloat(netProfitTargetBudgetCurrency) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    projectType: \"European Multi Vendor\",\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/submissions\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Erov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0.00\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n\n      //\n\n      if (props.children && props.children.length > 0) {\n        var vs = props.children.find((s) => s.group === \"vendor\");\n        setVendorName({\n          label: vs.data.vendorName ?? \"\",\n          value: vs.data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: vs.data.vendorName ?? \"\",\n          projectManager: vs.data.productionProjectManager ?? \"\",\n          creditor: vs.data.creditorNumber ?? \"\",\n          debitor: vs.data.debitorNumber ?? \"\",\n          manufacturer: vs.data.manufacturerNumber ?? \"\",\n          bu: vs.data.businessUnit ?? \"\",\n          ph: {\n            label: vs.data.PH1 || \"1\",\n            value: vs.data.PH1 || \"1\",\n          },\n          budgetCurrency: {\n            label: vs.data.budgetCurrency || \"\",\n            value: vs.data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              console.log(s);\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var c: any[] = [];\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            console.log(s);\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.parentProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(2));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: \"\",\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendorName.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  // useEffect(() => {\n  //   var totalBudgetEur = 0;\n  //   var totalBudgetLC = 0;\n  //   var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n  //   var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n  //   var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n  //   var totalCostsEur = parseFloat(estimatedCosts);\n\n  //   var temp = [...vendor];\n  //   temp.slice(0, -1).forEach((row: any) => {\n  //     row.eurBudget = (\n  //       parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n  //     ).toFixed(2);\n  //     row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n  //       2\n  //     );\n\n  //     var eb = parseFloat(row.eurBudget);\n  //     var lb = parseFloat(row.localBudget);\n\n  //     if (!isNaN(eb)) {\n  //       totalBudgetEur += eb;\n  //     }\n  //     if (!isNaN(lb)) {\n  //       totalBudgetLC += lb;\n  //     }\n  //   });\n  //   var totalVendorBudgetInLC = 0;\n  //   var totalVendorBudgetInEUR = 0;\n  //   var totalVendorShare = 0;\n  //   var totalEstimatedIncomeInCC = 0;\n  //   var totalEstimatedCostsInCC = 0;\n  //   var totalEstimatedCostsInLC = 0;\n  //   var totalEstimatedCostsInEUR = 0;\n  //   var totalNetProfitTargetInCC = 0;\n  //   var totalNetProfitTargetInLC = 0;\n  //   var totalNetProfitTargetInEUR = 0;\n  //   temp.slice(0, -1).forEach((row: any, index: number) => {\n  //     var vbEur = parseFloat(row.eurBudget);\n  //     var share = 0;\n  //     if (budgetSource.value === \"noBudget\") {\n  //       row.budgetAmount = \"0.00\";\n  //       row.localBudget = \"0.00\";\n  //       row.eurBudget = \"0.00\";\n  //       row.estimatedIncomeCC = \"0.00\";\n  //       share = parseFloat(row.share) * 0.01;\n\n  //       row.estimatedCostsCC = (\n  //         share * parseFloat(estimatedCostsBudgetCurrency)\n  //       ).toFixed(2);\n\n  //       row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n  //       row.estimatedCostsLC = (\n  //         parseFloat(row.estimatedCostsEUR) * localExchangeRate\n  //       ).toFixed(2);\n  //     } else {\n  //       share = vbEur / totalBudgetEur;\n  //       row.share = (share * 100).toFixed(2);\n  //       if (index === temp.length - 1) {\n  //         var totalShare = 0.0;\n  //         temp\n  //           .slice(0, temp.length - 2)\n  //           .forEach((t) => (totalShare += parseFloat(t.share)));\n  //         row.share = (100 - totalShare).toFixed(2);\n  //         share = (100 - totalShare) * 0.01;\n  //       }\n  //       if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n  //         if (!isNaN(totalCostsCC)) {\n  //           row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalIncomeCC)) {\n  //           row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalCostsLC)) {\n  //           row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n  //         }\n  //         if (!isNaN(totalCostsEur)) {\n  //           row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n  //         }\n  //       }\n  //     }\n  //     row.netProfitTargetEUR =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (parseFloat(row.share) * 0.01 * parseFloat(netProfitTarget)).toFixed(2);\n\n  //     row.netProfitTargetLC =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (parseFloat(row.netProfitTargetEUR) * localExchangeRate).toFixed(2);\n  //     row.netProfitTargetVC =\n  //       `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n  //       (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n  //     totalVendorBudgetInLC += parseFloat(row.localBudget);\n  //     totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n  //     totalVendorShare += parseFloat(row.share);\n  //     totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n  //     totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n  //     totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n  //     totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n  //     totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n  //     totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n  //     totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n  //   });\n\n  //   temp[temp.length - 1] = {\n  //     vendor: \"TOTAL\",\n  //     projectManager: \"\",\n  //     creditor: \"\",\n  //     debitor: \"\",\n  //     manufacturer: \"\",\n  //     bu: \"\",\n  //     ph: { label: \"\", value: \"\" },\n  //     budgetCurrency: { label: \"\", value: \"\" },\n  //     budgetAmount: \"\",\n  //     localBudget: totalVendorBudgetInLC.toFixed(2),\n  //     eurBudget: totalVendorBudgetInEUR.toFixed(2),\n  //     share: totalVendorShare.toFixed(2),\n  //     estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n  //     estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n  //     estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n  //     estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n  //     netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n  //     netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n  //     netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n  //   };\n\n  //   setTotalVendorBudgetInEUR(totalBudgetEur);\n  //   setTotalVendorBudgetInLC(totalBudgetLC);\n  //   if (!isEqual(vendor, temp)) {\n  //     setVendor(temp);\n  //   }\n  // }, [\n  //   vendor,\n  //   estimatedCostsBudgetCurrency,\n  //   totalEstimatedCostsLC,\n  //   budgetSource,\n  // ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">Target Audience</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setTargetAudience(value.label);\n            }}\n            classNamePrefix=\"select\"\n            value={{ label: targetAudience, value: targetAudience }}\n            isClearable={false}\n            name=\"targetAudience\"\n            options={TargetAudience}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={campaignChannel}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">ALSO Project Approver</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: projectApproval, value: projectApproval }}\n            onChange={(value) => {\n              setProjectApproval(value === null ? \"\" : value.label);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectApprover\"\n            options={[]}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">ALSO Project Approval (attachments)</Text>\n          <Uploader action=\"\" draggable>\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">Manufacturer`s Fiscal Period</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={fiscalQuarter}\n            onChange={(value) => {\n              setFiscalQuarter(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={FiscalQuarter}\n          />\n        </Box>\n\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (value.value === \"noBudget\") {\n                setEstimatedIncomeBudgetCurrency(\"\");\n                setEstimatedIncome(\"\");\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">Budget Approved by Vendor (name and surname)</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={budgetApprovedByVendor}\n            onChange={(event) => {\n              setBudgetApprovedByVendor(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">Budget Approved by Vendor (attachments)</Text>\n          <Uploader\n            action=\"\"\n            disabled={budgetSource.value === \"noBudget\"}\n            draggable\n          >\n            <div style={{ lineHeight: \"200px\" }}>\n              Click or Drag files to this area to upload\n            </div>\n          </Uploader>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n        {/*  */}\n        <Box\n          w=\"100%\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" ? \"block\" : \"none\"\n          }\n        >\n          <Text mb=\"8px\">ALSO Marketing Manager</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.projectManager}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.projectManager = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.bu}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.bu = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}. Press submit again.`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"6246bc93fa2a446faadb8d9a\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency:\n                    parseFloat(estimatedIncomeBudgetCurrency) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur:\n                    parseFloat(estimatedIncome) === null\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n\n                  projectType: \"European One Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              children.push({\n                project: projectId,\n                title: \"\",\n                parentId: \"\",\n                group: \"vendor\",\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  vendorName: vendorName.label,\n                  marketingResponsible: vendor.projectManager,\n                  creditorNumber: vendor.creditor,\n                  debitorNumber: vendor.debitor,\n                  manufacturerNumber: vendor.manufacturer,\n                  businessUnit: vendor.bu,\n                  PH1: vendor.ph.label,\n                  vendorBudgetCurrency:\n                    budgetSource.value === \"noBudget\"\n                      ? \"N/A\"\n                      : vendor.budgetCurrency.label,\n                  vendorAmount:\n                    isNaN(parseFloat(vendor.localBudget)) ||\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(vendor.localBudget),\n                  // cbbudgetEur: parseFloat(vendor.eurBudget),\n                  vendorShare: 100,\n                  estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n                  estimatedIncomeCC:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncomeBudgetCurrency),\n                  estimatedResultCC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                  estimatedIncomeEUR:\n                    budgetSource.value === \"noBudget\"\n                      ? 0.0\n                      : parseFloat(estimatedIncome),\n                  estimatedCostsEUR: parseFloat(estimatedCosts),\n                  estimatedResultEUR:\n                    parseFloat(netProfitTarget) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  estimatedResultBC:\n                    parseFloat(netProfitTargetBudgetCurrency) *\n                    (budgetSource.value === \"noBudget\" ? -1 : 1),\n                  // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n                },\n              });\n\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    parentProjectNumber: company.projectNumber,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/submissions\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport moment from \"moment\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar BUs: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n  isDraft?: boolean;\n}\n\nexport default function Elmv(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [organizingCompany, setOrganizingCompany] = useState(\"\");\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n  const [injectionReady, setInjectionReady] = useState(false);\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n      \"633e93ed5a7691ac30c977fc\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n    BUs = responses[10].data;\n  }\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: (props.submission.data.year ?? \"\").substring(2, 4),\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setOrganizingCompany(props.submission.data.organizingCompany ?? \"\");\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      if (Budget.length > 0 && props.submission.data.budgetSource !== \"\") {\n        setBudgetSource({\n          label: props.submission.data.budgetSource ?? \"\",\n          value:\n            Budget.find((b) => b.label === props.submission.data.budgetSource)\n              .value ?? \"\",\n        });\n      }\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorsNames(\n          props.children\n            .filter((s) => s.group === \"vendor\")\n            .map((s) => {\n              return { label: s.data.vendorName, value: s.data.vendorName };\n            })\n        );\n\n        var v: any[] = [];\n\n        props.children\n          .filter((s) => s.group === \"vendor\")\n          .forEach((s) => {\n            v.push({\n              vendor: s.data.vendorName,\n              projectManager: s.data.marketingResponsible,\n              creditor: s.data.creditorNumber,\n              debitor: s.data.debitorNumber,\n              manufacturer: s.data.manufacturerNumber,\n              bu: s.data.businessUnit,\n              ph: { label: s.data.PH1, value: s.data.PH1 },\n              budgetCurrency: {\n                label: s.data.vendorBudgetCurrency,\n                value: (\n                  ExchangeRates.find(\n                    (er) => er.label === s.data.vendorBudgetCurrency\n                  ) || { value: \"\" }\n                ).value,\n              },\n              budgetAmount: (s.data.vendorBudgetAmount || 0).toFixed(2),\n              localBudget: (s.data.vendorAmountLC || 0).toFixed(2),\n              eurBudget: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n              share: s.data.vendorShare.toFixed(0) || \"0\",\n              estimatedCostsCC: (s.data.estimatedCostsCC || 0).toFixed(2),\n              estimatedIncomeCC: (s.data.estimatedIncomeCC || 0).toFixed(2),\n              estimatedCostsLC: \"0.00\",\n              estimatedCostsEUR: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              netProfitTargetVC: (s.data.estimatedResultCC || 0).toFixed(2),\n              netProfitTargetLC: (s.data.estimatedResultBC || 0).toFixed(2),\n              netProfitTargetEUR: (s.data.estimatedResultEUR || 0).toFixed(2),\n            });\n          });\n        v.push({\n          vendor: \"TOTAL\",\n          projectManager: \"\",\n          creditor: \"\",\n          debitor: \"\",\n          manufacturer: \"\",\n          bu: \"\",\n          ph: { label: \"\", value: \"\" },\n          budgetCurrency: { label: \"\", value: \"\" },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setVendors([...v]);\n      }\n    }\n    setTimeout(() => {\n      setInjectionReady(true);\n    }, 1000);\n  }, [props.submission, props.children, ExchangeRates]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: vendor.value.alsoMarketingConsultant,\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: \"\",\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    data.push({\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: \"\",\n      eurBudget: \"\",\n      share: \"\",\n      estimatedCostsCC: \"\",\n      estimatedIncomeCC: \"\",\n      estimatedCostsLC: \"\",\n      estimatedCostsEUR: \"\",\n      netProfitTargetVC: \"\",\n      netProfitTargetLC: \"\",\n      netProfitTargetEUR: \"\",\n    });\n    setVendors(data);\n  }, [vendorsNames]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n    console.log(vendors);\n    var temp = [...vendors];\n    temp.slice(0, -1).forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    var totalVendorBudgetInLC = 0;\n    var totalVendorBudgetInEUR = 0;\n    var totalVendorShare = 0;\n    var totalEstimatedIncomeInCC = 0;\n    var totalEstimatedCostsInCC = 0;\n    var totalEstimatedCostsInLC = 0;\n    var totalEstimatedCostsInEUR = 0;\n    var totalNetProfitTargetInCC = 0;\n    var totalNetProfitTargetInLC = 0;\n    var totalNetProfitTargetInEUR = 0;\n    temp.slice(0, -1).forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 2)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR = (\n        parseFloat(row.eurBudget) - parseFloat(row.estimatedCostsEUR)\n      ).toFixed(2);\n\n      row.netProfitTargetLC = (\n        parseFloat(row.localBudget) - parseFloat(row.estimatedCostsLC)\n      ).toFixed(2);\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n      totalVendorBudgetInLC += parseFloat(row.localBudget);\n      totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n      totalVendorShare += parseFloat(row.share);\n      totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n      totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n      totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n      totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n      totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n      totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n      totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n    });\n\n    temp[temp.length - 1] = {\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: totalVendorBudgetInLC.toFixed(2),\n      eurBudget: totalVendorBudgetInEUR.toFixed(2),\n      share: totalVendorShare.toFixed(2),\n      estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n      estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n      estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n      estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n      netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n      netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n      netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n    };\n\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertDescription>\n            Please note no actual project for 1550 will be created in the tool\n            just yet, this still needs to be done via the usual process. But a\n            project for Switzerland will be created if they are part of the\n            campaign, as they are using the tool. Other countries and 1550 will\n            follow.\n          </AlertDescription>\n        </Alert>\n\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (value.value === \"noBudget\") {\n                setEstimatedIncomeBudgetCurrency(\"\");\n                setEstimatedIncome(\"\");\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={vendors}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={{\n                      label: rowData.bu,\n                      value:\n                        typeof rowData.bu === \"string\"\n                          ? rowData.bu.substr(0, 3)\n                          : \"\",\n                    }}\n                    onChange={(value) => {\n                      if (value !== null) {\n                        var temp = [...vendors];\n                        temp[index!].bu = value.label;\n                        setVendors(temp);\n                      }\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"BUs\"\n                    options={BUs}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    isDisabled={budgetSource.value === \"noBudget\"}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"green.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"green.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          interface FD {\n            [key: string]: any;\n          }\n\n          var formattedData = [];\n          formattedData.push([\"Request\", \"Local Multi Vendor\"]);\n          formattedData.push([\n            \"Requestor`s Company Name\",\n            requestorsCompanyName.label,\n          ]);\n          formattedData.push([\n            \"Requestor`s Company Code\",\n            requestorsCompanyName.value.code,\n          ]);\n          formattedData.push([\n            \"Requestor`s Country\",\n            requestorsCompanyName.value.country,\n          ]);\n          formattedData.push([\"Organizing Company\", organizingCompany]);\n          formattedData.push([\"Campaign Name\", campaignName]);\n          formattedData.push([\"Campaign Description\", campaignDescription]);\n          formattedData.push([\"Campaign Channel\", campaignChannel.label]);\n          formattedData.push([\"Year\", year.label]);\n          formattedData.push([\n            \"Campaign/Project Start Quarter (ALSO Quarter)\",\n            projectStartQuarter.label,\n          ]);\n          formattedData.push([\"Project Number\", projectNumber]);\n          formattedData.push([\"Requestor`s Name\", requestorsName]);\n          formattedData.push([\n            \"Campaign Start Date\",\n            moment(startDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\n            \"Campaign End Date\",\n            moment(endDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\"Budget Source\", budgetSource.label]);\n          formattedData.push([\n            \"Local Currency\",\n            requestorsCompanyName.value.currency,\n          ]);\n          formattedData.push([\"Campaign Currency\", exchangeRates.label]);\n          formattedData.push([\n            \"Campaign Estimated Income in Campaign Currency\",\n            budgetSource.value === \"noBudget\"\n              ? \"N/A\"\n              : estimatedIncomeBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in Campaign Currency\",\n            estimatedCostsBudgetCurrency,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\",\n            netProfitTargetBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Income in EUR\",\n            estimatedIncome === \"\" ? \"N/A\" : estimatedIncome,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in EUR\",\n            estimatedCosts,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\",\n            netProfitTarget,\n          ]);\n          formattedData.push([\n            \"Total Estimated Costs in Local Currency\",\n            totalEstimatedCostsLC,\n          ]);\n          formattedData.push([\"Comments\", comments]);\n          formattedData.push([\n            \"Vendors\",\n            vendorsNames.map((v: any) => v.label).join(\", \"),\n          ]);\n          formattedData.push([]);\n          formattedData.push([\n            \"Vendor Name\",\n            \"VOD\",\n            \"Creditor\",\n            \"Manufacturer\",\n            \"Business Unit\",\n            \"PH1\",\n            \"Vendor Budget Currency\",\n            \"Vendor Budget Amount\",\n            \"Vendor Budget in LC\",\n            \"Vendor Budget in EUR\",\n            \"Share %\",\n            \"Vendor Estimated Income in Campaign Currency\",\n            \"Vendor Estimated Costs in Campaign Currency\",\n            \"Vendor Estimated Costs in LC\",\n            \"Vendor Estimated Costs in EUR\",\n            \"Net Profit Target in Campaign Currency\",\n            \"Net Profit Target in LC\",\n            \"Net Profit Target in EUR\",\n          ]);\n          vendors.forEach((v: any) => {\n            formattedData.push([\n              v.vendor,\n              v.debitor,\n              v.creditor,\n              v.manufacturer,\n              v.bu,\n              v.ph.label,\n              v.budgetCurrency.label,\n              v.budgetAmount,\n              v.localBudget,\n              v.eurBudget,\n              v.share,\n              v.estimatedIncomeCC,\n              v.estimatedCostsCC,\n              v.estimatedCostsLC,\n              v.estimatedCostsEUR,\n              v.netProfitTargetVC,\n              v.netProfitTargetLC,\n              v.netProfitTargetEUR,\n            ]);\n          });\n          var ws = XLSX.utils.aoa_to_sheet(formattedData);\n          const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n          const excelBuffer = XLSX.write(wb, {\n            bookType: \"xlsx\",\n            type: \"array\",\n          });\n          const data = new Blob([excelBuffer], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n          });\n          FileSaver.saveAs(data, campaignName + \".xlsx\");\n        }}\n      >\n        Export\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          var projectId = \"6246ec8efa2a446faadb8d9b\";\n\n          var parent: Submission = {\n            project: projectId,\n            title: campaignName,\n            parentId: null,\n            group: null,\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              requestorsCompanyName: requestorsCompanyName.label,\n              companyCode: requestorsCompanyName.value.code,\n              requestorsCountry: requestorsCompanyName.value.country,\n              campaignName: campaignName,\n              projectName: campaignName,\n              campaignDescription: campaignDescription,\n              targetAudience: targetAudience,\n              campaignChannel: campaignChannel.label,\n              year: year.label,\n              projectStartQuarter: projectStartQuarter.label,\n              projectNumber: projectNumber,\n              requestorsName: requestorsName,\n              projectApprover: projectApproval,\n              projectApproval: projectApproval,\n              manufacturersFiscalQuarter: fiscalQuarter.label,\n              campaignStartDate:\n                startDate === null ? null : startDate.toString(),\n              campaignEndDate: endDate === null ? null : endDate.toString(),\n              budgetSource: budgetSource.label,\n              budgetApprovedByVendor: budgetApprovedByVendor,\n              campaignBudgetsCurrency: exchangeRates.label,\n              campaignCurrency: exchangeRates.label,\n              campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n                estimatedIncomeBudgetCurrency\n              ),\n              campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                estimatedCostsBudgetCurrency\n              ),\n              campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                netProfitTargetBudgetCurrency\n              ),\n              campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n              campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n              campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n              totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n              comments: comments,\n              additionalInformation: comments,\n              localCurrency: requestorsCompanyName.value.currency,\n              projectType: \"Local Multi Vendor\",\n            },\n          };\n          var children: Submission[] = [];\n          vendors.slice(0, -1).forEach((vendor: any) => {\n            children.push({\n              project: projectId,\n              title: \"\",\n              parentId: \"\",\n              group: \"vendor\",\n              created: new Date(),\n              updated: new Date(),\n              status: \"New\",\n              author: requestorsName,\n              data: {\n                vendorName: vendor.vendor,\n                marketingResponsible: vendor.projectManager,\n                companyCode: requestorsCompanyName.value.code,\n                projectNumber: projectNumber,\n                creditorNumber: vendor.creditor,\n                debitorNumber: vendor.debitor,\n                manufacturerNumber: vendor.manufacturer,\n                businessUnit: vendor.bu,\n                PH1: vendor.ph.label,\n                vendorBudgetCurrency:\n                  budgetSource.value === \"noBudget\"\n                    ? \"N/A\"\n                    : vendor.budgetCurrency.label,\n                vendorAmountLC:\n                  isNaN(parseFloat(vendor.localBudget)) ||\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.localBudget),\n                vendorAmount:\n                  isNaN(parseFloat(vendor.budgetAmount)) ||\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.budgetAmount),\n                vendorBudgetAmount:\n                  isNaN(parseFloat(vendor.budgetAmount)) ||\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.budgetAmount),\n                // cbbudgetEur: parseFloat(vendor.eurBudget),\n                vendorShare: parseFloat(vendor.share),\n                estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                estimatedIncomeCC:\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.estimatedIncomeCC),\n                estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n                // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                estimatedIncomeEUR:\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.eurBudget),\n                estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n                estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n                estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n              },\n            });\n          });\n\n          var submission: SubmissionWithChildren = {\n            submission: parent,\n            children,\n          };\n          if (props.isDraft) {\n            RestAPI.deleteDraft(props.submission.id).then(() => {\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  if (response.data.hasChanged) {\n                    toast(\n                      <Toast\n                        title={\"Project Number has been adjusted\"}\n                        message={\n                          <p>\n                            Project Number changed to:{\" \"}\n                            <b>{response.data.submission.data.projectNumber}</b>\n                          </p>\n                        }\n                        type={\"info\"}\n                      />\n                    );\n                  }\n                  props.history.push(\"/submissions\");\n                }\n              );\n            });\n          } else {\n            RestAPI.createSubmissionWithChildren(submission).then(\n              (response) => {\n                if (response.data.hasChanged) {\n                  toast(\n                    <Toast\n                      title={\"Project Number has been adjusted\"}\n                      message={\n                        <p>\n                          Project Number changed to:{\" \"}\n                          <b>{response.data.submission.data.projectNumber}</b>\n                        </p>\n                      }\n                      type={\"info\"}\n                    />\n                  );\n                }\n                props.history.push(\"/submissions\");\n              }\n            );\n          }\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" ||\n          (props.submission && !props.isDraft)\n        }\n      >\n        Submit\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          var projectId = \"6246ec8efa2a446faadb8d9b\";\n\n          var parent: Submission = {\n            project: projectId,\n            title: campaignName,\n            parentId: null,\n            group: null,\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              requestorsCompanyName: requestorsCompanyName.label,\n              companyCode: requestorsCompanyName.value.code,\n              requestorsCountry: requestorsCompanyName.value.country,\n              campaignName: campaignName,\n              projectName: campaignName,\n              campaignDescription: campaignDescription,\n              targetAudience: targetAudience,\n              campaignChannel: campaignChannel.label,\n              year: year.label,\n              organizingCompany: organizingCompany,\n              projectStartQuarter: projectStartQuarter.label,\n              projectNumber: projectNumber,\n              requestorsName: requestorsName,\n              projectApprover: projectApproval,\n              projectApproval: projectApproval,\n              manufacturersFiscalQuarter: fiscalQuarter.label,\n              campaignStartDate:\n                startDate === null ? null : startDate.toString(),\n              campaignEndDate: endDate === null ? null : endDate.toString(),\n              budgetSource: budgetSource.label,\n              budgetApprovedByVendor: budgetApprovedByVendor,\n              campaignBudgetsCurrency: exchangeRates.label,\n              campaignCurrency: exchangeRates.label,\n              campaignEstimatedIncomeBudgetsCurrency: isNaN(\n                parseFloat(estimatedIncomeBudgetCurrency)\n              )\n                ? 0.0\n                : parseFloat(estimatedIncomeBudgetCurrency),\n              campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                estimatedCostsBudgetCurrency\n              ),\n              campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                netProfitTargetBudgetCurrency\n              ),\n              campaignEstimatedIncomeEur: isNaN(parseFloat(estimatedIncome))\n                ? 0.0\n                : parseFloat(estimatedIncome),\n              campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n              campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n              totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n              comments: comments,\n              additionalInformation: comments,\n              localCurrency: requestorsCompanyName.value.currency,\n\n              projectType: \"European One Vendor\",\n            },\n          };\n          var children: Submission[] = [];\n          vendors.slice(0, -1).forEach((vendor: any) => {\n            children.push({\n              project: projectId,\n              title: \"\",\n              parentId: \"\",\n              group: \"vendor\",\n              created: new Date(),\n              updated: new Date(),\n              status: \"New\",\n              author: requestorsName,\n              data: {\n                vendorName: vendor.vendor,\n                marketingResponsible: vendor.projectManager,\n                creditorNumber: vendor.creditor,\n                debitorNumber: vendor.debitor,\n                projectNumber: projectNumber,\n                manufacturerNumber: vendor.manufacturer,\n                businessUnit: vendor.bu,\n                PH1: vendor.ph.label,\n                vendorBudgetCurrency:\n                  budgetSource.value === \"noBudget\"\n                    ? \"N/A\"\n                    : vendor.budgetCurrency.label,\n                vendorAmountLC:\n                  isNaN(parseFloat(vendor.localBudget)) ||\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.localBudget),\n                vendorAmount:\n                  isNaN(parseFloat(vendor.budgetAmount)) ||\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.budgetAmount),\n                vendorBudgetAmount:\n                  isNaN(parseFloat(vendor.budgetAmount)) ||\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.budgetAmount),\n                // cbbudgetEur: parseFloat(vendor.eurBudget),\n                vendorShare: parseFloat(vendor.share),\n                estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                estimatedIncomeCC:\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.estimatedIncomeCC),\n                estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n                // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                estimatedIncomeEUR:\n                  budgetSource.value === \"noBudget\"\n                    ? 0.0\n                    : parseFloat(vendor.eurBudget),\n                estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n                estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n                estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n              },\n            });\n          });\n\n          var submission: SubmissionWithChildren = {\n            submission: parent,\n            children,\n          };\n          if (props.isDraft) {\n            submission.submission.id = props.submission.id;\n            RestAPI.updateDraft(submission).then((response) => {\n              toast(\n                <Toast\n                  title={\"Draft save\"}\n                  message={`Draft has been successfully saved.`}\n                  type={\"info\"}\n                />\n              );\n            });\n          } else {\n            RestAPI.createDraft(submission).then((response) => {\n              toast(\n                <Toast\n                  title={\"Draft save\"}\n                  message={`Draft has been successfully saved.`}\n                  type={\"info\"}\n                />\n              );\n            });\n          }\n        }}\n      >\n        {props.isDraft ? \"Update\" : \"Draft\"}\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport moment from \"moment\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { SubmissionsTransformer } from \"../../utils/SubmissionsTransformer\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar BUs: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n  isDraft?: boolean;\n}\n\nexport default function Elov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({\n    ph: {\n      label: \"\",\n      value: \"\",\n    },\n  });\n\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n  const [organizingCompany, setOrganizingCompany] = useState(\"\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [injectionReady, setInjectionReady] = useState(false);\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: (props.submission.data.year ?? \"\").substring(2, 4),\n      });\n      setOrganizingCompany(props.submission.data.organizingCompany ?? \"\");\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      if (Budget.length > 0 && props.submission.data.budgetSource !== \"\") {\n        setBudgetSource({\n          label: props.submission.data.budgetSource ?? \"\",\n          value:\n            Budget.find((b) => b.label === props.submission.data.budgetSource)\n              .value ?? \"\",\n        });\n      }\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setEstimatedIncomeBudgetCurrency(\n        props.submission.data.campaignEstimatedIncomeBudgetsCurrency.toFixed(\n          2\n        ) || \"0.00\"\n      );\n      setEstimatedIncome(\n        typeof props.submission.data.campaignEstimatedIncomeEur === \"number\"\n          ? props.submission.data.campaignEstimatedIncomeEur.toFixed(2)\n          : \"0.00\"\n      );\n      setEstimatedCosts(\n        typeof props.submission.data.campaignEstimatedCostsEur === \"number\"\n          ? props.submission.data.campaignEstimatedCostsEur.toFixed(2)\n          : \"0.00\"\n      );\n      setNetProfitTarget(\n        typeof props.submission.data.campaignNetProfitTargetEur === \"number\"\n          ? props.submission.data.campaignNetProfitTargetEur.toFixed(2)\n          : \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        typeof props.submission.data.totalEstimatedCostsLC === \"number\"\n          ? props.submission.data.totalEstimatedCostsLC.toFixed(2)\n          : \"0.00\"\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorName({\n          label: props.children[0].data.vendorName ?? \"\",\n          value: props.children[0].data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: props.children[0].data.vendorName ?? \"\",\n          creditor: props.children[0].data.creditorNumber ?? \"\",\n          debitor: props.children[0].data.debitorNumber ?? \"\",\n          manufacturer: props.children[0].data.manufacturerNumber ?? \"\",\n          bu: props.children[0].data.businessUnit ?? \"\",\n          ph: {\n            label: props.children[0].data.PH1 || \"1\",\n            value: props.children[0].data.PH1 || \"1\",\n          },\n          projectManager: props.children[0].productionProjectManager || \"\",\n          budgetCurrency: {\n            label: props.children[0].data.budgetCurrency || \"\",\n            value: props.children[0].data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n      }\n\n      setTimeout(() => {\n        setInjectionReady(true);\n      }, 1000);\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function updateDraft() {\n    var projectId = \"624ac98682eeddf1a9b6a622\";\n\n    var parent: Submission = {\n      project: projectId,\n      title: campaignName,\n      parentId: null,\n      group: null,\n      created: new Date(),\n      updated: new Date(),\n      status: \"New\",\n      author: requestorsName,\n      data: {\n        requestorsCompanyName: requestorsCompanyName.label,\n        companyCode: requestorsCompanyName.value.code,\n        requestorsCountry: requestorsCompanyName.value.country,\n        campaignName: campaignName,\n        projectName: campaignName,\n        campaignDescription: campaignDescription,\n        targetAudience: targetAudience,\n        campaignChannel: campaignChannel.label,\n        year: year.label,\n        organizingCompany: organizingCompany,\n        projectStartQuarter: projectStartQuarter.label,\n        projectNumber: projectNumber,\n        requestorsName: requestorsName,\n        projectApprover: projectApproval,\n        projectApproval: projectApproval,\n        manufacturersFiscalQuarter: fiscalQuarter.label,\n        campaignStartDate: startDate === null ? null : startDate.toString(),\n        campaignEndDate: endDate === null ? null : endDate.toString(),\n        budgetSource: budgetSource.label,\n        budgetApprovedByVendor: budgetApprovedByVendor,\n        campaignBudgetsCurrency: exchangeRates.label,\n        campaignCurrency: exchangeRates.label,\n        campaignEstimatedIncomeBudgetsCurrency: isNaN(\n          parseFloat(estimatedIncomeBudgetCurrency)\n        )\n          ? 0.0\n          : parseFloat(estimatedIncomeBudgetCurrency),\n        campaignEstimatedCostsBudgetsCurrency: parseFloat(\n          estimatedCostsBudgetCurrency\n        ),\n        campaignNetProfitTargetBudgetsCurrency: parseFloat(\n          netProfitTargetBudgetCurrency\n        ),\n        campaignEstimatedIncomeEur: isNaN(parseFloat(estimatedIncome))\n          ? 0.0\n          : parseFloat(estimatedIncome),\n        campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n        campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n        totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n        comments: comments,\n        additionalInformation: comments,\n        localCurrency: requestorsCompanyName.value.currency,\n\n        projectType: \"Local One Vendor\",\n      },\n    };\n    var children: Submission[] = [];\n    children.push({\n      project: projectId,\n      title: \"\",\n      parentId: \"\",\n      group: \"vendor\",\n      created: new Date(),\n      updated: new Date(),\n      status: \"New\",\n      author: requestorsName,\n      data: {\n        vendorName: vendorName.label,\n        projectNumber: projectNumber,\n        productionProjectManager: vendor.projectManager,\n        creditorNumber: vendor.creditor,\n        debitorNumber: vendor.debitor,\n        manufacturerNumber: vendor.manufacturer,\n        businessUnit: vendor.bu,\n        PH1: vendor.ph.label,\n        vendorBudgetCurrency:\n          budgetSource.value === \"noBudget\" ? \"N/A\" : exchangeRates.label,\n        vendorAmount:\n          isNaN(parseFloat(estimatedIncomeBudgetCurrency)) ||\n          budgetSource.value === \"noBudget\"\n            ? 0.0\n            : parseFloat(estimatedIncomeBudgetCurrency),\n        // cbbudgetEur: parseFloat(vendor.eurBudget),\n        vendorShare: 100,\n        estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n        estimatedIncomeCC:\n          budgetSource.value === \"noBudget\"\n            ? 0.0\n            : parseFloat(estimatedIncomeBudgetCurrency),\n        estimatedResultCC:\n          parseFloat(netProfitTargetBudgetCurrency) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n        estimatedIncomeEUR:\n          budgetSource.value === \"noBudget\" ? 0.0 : parseFloat(estimatedIncome),\n        estimatedCostsEUR: parseFloat(estimatedCosts),\n        estimatedResultEUR:\n          parseFloat(netProfitTarget) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        estimatedResultBC:\n          parseFloat(netProfitTargetBudgetCurrency) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        projectType: \"Local One Vendor\",\n        // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n      },\n    });\n\n    var submission: SubmissionWithChildren = {\n      submission: parent,\n      children,\n    };\n    if (props.isDraft) {\n      submission.submission.id = props.submission.id;\n      return RestAPI.updateDraft(submission);\n    } else {\n      return RestAPI.createDraft(submission);\n    }\n  }\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n      \"633e93ed5a7691ac30c977fc\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n    BUs = responses[10].data;\n  }\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: vendorName.value.alsoMarketingConsultant,\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendor.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (organizingCompany === \"\" ? \"??\" : organizingCompany) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [\n    year,\n    organizingCompany,\n    campaignChannel,\n    projectStartQuarter,\n    requestorsCompanyName,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n              setOrganizingCompany(value.value.country);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertDescription>\n            Please note no actual project for 1550 will be created in the tool\n            just yet, this still needs to be done via the usual process. But a\n            project for Switzerland will be created if they are part of the\n            campaign, as they are using the tool. Other countries and 1550 will\n            follow.\n          </AlertDescription>\n        </Alert>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Organizing Company</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: organizingCompany,\n              value: organizingCompany,\n            }}\n            onChange={(selected: any) => {\n              setOrganizingCompany(selected.value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"organizingCompany\"\n            options={Companies.map((company) => {\n              return {\n                label: company.value.country,\n                value: company.value.country,\n              };\n            })}\n          />\n        </Box>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (value.value === \"noBudget\") {\n                setEstimatedIncomeBudgetCurrency(\"\");\n                setEstimatedIncome(\"\");\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: vendor.bu,\n              value:\n                typeof vendor.bu === \"string\" ? vendor.bu.substr(0, 3) : \"\",\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              console.log(value);\n              var temp = { ...vendor };\n              temp.bu = value.label;\n              setVendor(temp);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"BUs\"\n            options={BUs}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"green.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"green.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          interface FD {\n            [key: string]: any;\n          }\n\n          var formattedData = [];\n          formattedData.push([\"Request\", \"Local One Vendor\"]);\n          formattedData.push([\n            \"Requestor`s Company Name\",\n            requestorsCompanyName.label,\n          ]);\n          formattedData.push([\n            \"Requestor`s Company Code\",\n            requestorsCompanyName.value.code,\n          ]);\n          formattedData.push([\n            \"Requestor`s Country\",\n            requestorsCompanyName.value.country,\n          ]);\n          formattedData.push([\"Organizing Company\", organizingCompany]);\n          formattedData.push([\"Campaign Name\", campaignName]);\n          formattedData.push([\"Campaign Description\", campaignDescription]);\n          formattedData.push([\"Campaign Channel\", campaignChannel.label]);\n          formattedData.push([\"Year\", year.label]);\n          formattedData.push([\n            \"Campaign/Project Start Quarter (ALSO Quarter)\",\n            projectStartQuarter.label,\n          ]);\n          formattedData.push([\"Project Number\", projectNumber]);\n          formattedData.push([\"Requestor`s Name\", requestorsName]);\n          formattedData.push([\n            \"Campaign Start Date\",\n            moment(startDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\n            \"Campaign End Date\",\n            moment(endDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\"Budget Source\", budgetSource.label]);\n          formattedData.push([\n            \"Local Currency\",\n            requestorsCompanyName.value.currency,\n          ]);\n          formattedData.push([\"Campaign Currency\", exchangeRates.label]);\n          formattedData.push([\n            \"Campaign Estimated Income in Campaign Currency\",\n            budgetSource.value === \"noBudget\"\n              ? \"N/A\"\n              : estimatedIncomeBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in Campaign Currency\",\n            estimatedCostsBudgetCurrency,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\",\n            netProfitTargetBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Income in EUR\",\n            estimatedIncome === \"\" ? \"N/A\" : estimatedIncome,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in EUR\",\n            estimatedCosts,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\",\n            netProfitTarget,\n          ]);\n          formattedData.push([\n            \"Total Estimated Costs in Local Currency\",\n            totalEstimatedCostsLC,\n          ]);\n          formattedData.push([\"Vendor Name\", vendorName.label]);\n          formattedData.push([\"VOD\", vendor.debitor]);\n          formattedData.push([\"Creditor\", vendor.creditor]);\n          formattedData.push([\"Manufacturer\", vendor.manufacturer]);\n          formattedData.push([\"Business Unit\", vendor.bu]);\n          formattedData.push([\"PH1\", vendor.ph.label]);\n          formattedData.push([\"Comments\", comments]);\n\n          var ws = XLSX.utils.aoa_to_sheet(formattedData);\n          const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n          const excelBuffer = XLSX.write(wb, {\n            bookType: \"xlsx\",\n            type: \"array\",\n          });\n          const data = new Blob([excelBuffer], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n          });\n          FileSaver.saveAs(data, campaignName + \".xlsx\");\n        }}\n      >\n        Export\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          var projectId = \"624ac98682eeddf1a9b6a622\";\n\n          var parent: Submission = {\n            project: projectId,\n            title: campaignName,\n            parentId: null,\n            group: null,\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              requestorsCompanyName: requestorsCompanyName.label,\n              companyCode: requestorsCompanyName.value.code,\n              requestorsCountry: requestorsCompanyName.value.country,\n              campaignName: campaignName,\n              projectName: campaignName,\n              campaignDescription: campaignDescription,\n              targetAudience: targetAudience,\n              campaignChannel: campaignChannel.label,\n              year: year.label,\n              organizingCompany: organizingCompany,\n              projectStartQuarter: projectStartQuarter.label,\n              projectNumber: projectNumber,\n              requestorsName: requestorsName,\n              projectApprover: projectApproval,\n\n              projectApproval: projectApproval,\n              manufacturersFiscalQuarter: fiscalQuarter.label,\n              campaignStartDate:\n                startDate === null ? null : startDate.toString(),\n              campaignEndDate: endDate === null ? null : endDate.toString(),\n              budgetSource: budgetSource.label,\n              budgetApprovedByVendor: budgetApprovedByVendor,\n              campaignBudgetsCurrency: exchangeRates.label,\n              campaignCurrency: exchangeRates.label,\n              campaignEstimatedIncomeBudgetsCurrency:\n                parseFloat(estimatedIncomeBudgetCurrency) === null\n                  ? 0.0\n                  : parseFloat(estimatedIncomeBudgetCurrency),\n              campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                estimatedCostsBudgetCurrency\n              ),\n              campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                netProfitTargetBudgetCurrency\n              ),\n              campaignEstimatedIncomeEur:\n                parseFloat(estimatedIncome) === null\n                  ? 0.0\n                  : parseFloat(estimatedIncome),\n              campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n              campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n              totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n              comments: comments,\n              additionalInformation: comments,\n              localCurrency: requestorsCompanyName.value.currency,\n              projectType: \"Local One Vendor\",\n            },\n          };\n          var children: Submission[] = [];\n\n          children.push({\n            project: projectId,\n            title: \"\",\n            parentId: \"\",\n            group: \"vendor\",\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              vendorName: vendorName.label,\n              companyCode: requestorsCompanyName.value.code,\n              projectNumber: projectNumber,\n              productionProjectManager: vendor.projectManager,\n              creditorNumber: vendor.creditor,\n              debitorNumber: vendor.debitor,\n              manufacturerNumber: vendor.manufacturer,\n              businessUnit: vendor.bu,\n              PH1: vendor.ph.label,\n              vendorBudgetCurrency:\n                budgetSource.value === \"noBudget\" ? \"N/A\" : exchangeRates.label,\n              vendorAmount:\n                isNaN(parseFloat(estimatedIncomeBudgetCurrency)) ||\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncomeBudgetCurrency),\n              // cbbudgetEur: parseFloat(vendor.eurBudget),\n              vendorShare: 100,\n              estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n              estimatedIncomeCC:\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncomeBudgetCurrency),\n              estimatedResultCC:\n                parseFloat(netProfitTargetBudgetCurrency) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n              estimatedIncomeEUR:\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncome),\n              estimatedCostsEUR: parseFloat(estimatedCosts),\n              estimatedResultEUR:\n                parseFloat(netProfitTarget) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              estimatedResultBC:\n                parseFloat(netProfitTargetBudgetCurrency) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n            },\n          });\n\n          var submission: SubmissionWithChildren = {\n            submission: parent,\n            children,\n          };\n          if (props.isDraft) {\n            RestAPI.deleteDraft(props.submission.id).then(() => {\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  if (response.data.hasChanged) {\n                    toast(\n                      <Toast\n                        title={\"Project Number has been adjusted\"}\n                        message={\n                          <p>\n                            Project Number changed to:{\" \"}\n                            <b>{response.data.submission.data.projectNumber}</b>\n                          </p>\n                        }\n                        type={\"info\"}\n                      />\n                    );\n                  }\n                  props.history.push(\"/submissions\");\n                }\n              );\n            });\n          } else {\n            RestAPI.createSubmissionWithChildren(submission).then(\n              (response) => {\n                if (response.data.hasChanged) {\n                  toast(\n                    <Toast\n                      title={\"Project Number has been adjusted\"}\n                      message={\n                        <p>\n                          Project Number changed to:{\" \"}\n                          <b>{response.data.submission.data.projectNumber}</b>\n                        </p>\n                      }\n                      type={\"info\"}\n                    />\n                  );\n                }\n                props.history.push(\"/submissions\");\n              }\n            );\n          }\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" ||\n          (props.submission && !props.isDraft)\n        }\n      >\n        Submit\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          updateDraft().then(() => {\n            toast(\n              <Toast\n                title={\"Draft save\"}\n                message={`Draft has been successfully saved.`}\n                type={\"info\"}\n              />\n            );\n          });\n        }}\n      >\n        {props.isDraft ? \"Update\" : \"Draft\"}\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport isEqual from \"lodash/isEqual\";\nimport DatePicker from \"react-datepicker\";\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { isDisabled } from \"@chakra-ui/utils\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function Elov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [serviceProvider, setServiceProvider] = useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n  const [services, setServices] = useState<any>([]);\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Name</Text>\n          <Input\n            value={projectName}\n            onChange={(event) => setProjectName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsNames\"\n            isMulti\n            options={VendorsNames}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Service Provider</Text>\n          <Input\n            value={serviceProvider}\n            onChange={(event) => setServiceProvider(event.target.value)}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Services</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={services}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Service Type</HeaderCell>\n              <Cell dataKey=\"serviceType\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.serviceType}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].serviceType = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (LC Currency)</HeaderCell>\n              <Cell dataKey=\"netValueLC\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValueLC}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValueLC = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Local Currency</HeaderCell>\n              <Cell dataKey=\"localCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    menuPortalTarget={document.body}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    value={{\n                      label: rowData.localCurrency,\n                      value: rowData.localCurrency,\n                    }}\n                    onChange={(value) => {\n                      var temp = [...services];\n                      temp[index!].localCurrency =\n                        value === null ? \"\" : value.label;\n                      setServices(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"localCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (Purchase Order Currency)</HeaderCell>\n              <Cell dataKey=\"netValuePO\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValuePO}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValuePO = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Purchase Order Currency Code</HeaderCell>\n              <Cell dataKey=\"poCurrencyCode\">\n                {(rowData, index) => (\n                  <Select\n                    menuPortalTarget={document.body}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    value={{\n                      label: rowData.poCurrencyCode,\n                      value: rowData.poCurrencyCode,\n                    }}\n                    onChange={(value) => {\n                      var temp = [...services];\n                      temp[index!].poCurrencyCode =\n                        value === null ? \"\" : value.label;\n                      setServices(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"poCurrencyCode\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (EUR)</HeaderCell>\n              <Cell dataKey=\"netValueEUR\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValueEUR}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValueEUR = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>External Purchase Order Number</HeaderCell>\n              <Cell dataKey=\"externalPurchaseOrderNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.externalPurchaseOrderNumber}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].externalPurchaseOrderNumber =\n                        event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Purchase Order Date</HeaderCell>\n              <Cell dataKey=\"purchaseOrderDate\">\n                {(rowData, index) => (\n                  <DatePicker\n                    portalId=\"root-portal\"\n                    isClearable={false}\n                    selected={rowData.purchaseOrderDate}\n                    customInput={<Input value={rowData.purchaseOrderDate} />}\n                    onChange={(date) => {\n                      var temp = [...services];\n                      temp[index!].purchaseOrderDate = date;\n                      setServices(temp);\n                    }}\n                    dateFormat=\"dd.MM.yyyy\"\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Name of Person Ordering the Service (ALSO)\n              </HeaderCell>\n              <Cell dataKey=\"orderingPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.orderingPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].orderingPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Name of Person Approving the Purchase Order (ALSO)\n              </HeaderCell>\n              <Cell dataKey=\"approvingPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.approvingPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].approvingPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person from Service Provider Side</HeaderCell>\n              <Cell dataKey=\"contactPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].contactPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Contact Details of Person from Service Provider Side (e-mail,\n                phone)\n              </HeaderCell>\n              <Cell dataKey=\"contactDetails\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactDetails}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].contactDetails = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n          <Button\n            float=\"right\"\n            marginTop=\"20px\"\n            onClick={() => {\n              var temp = [...services];\n              temp.push({});\n              setServices(temp);\n            }}\n          >\n            add\n          </Button>\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        // onClick={() => {\n        //   var projectId = \"62610ab73a88d397b05cea12\";\n\n        //   var parent: Submission = {\n        //     project: projectId,\n        //     title: campaignName,\n        //     parentId: null,\n        //     group: null,\n        //     created: new Date(),\n        //     updated: new Date(),\n        //     status: \"New\",\n        //     author: requestorsName,\n        //     data: {\n        //       purchaseOrderServiceProvider: serviceProvider,\n        //       requestorsCompanyName: requestorsCompanyName.label,\n        //       companyCode: requestorsCompanyName.value.code,\n        //       requestorsCountry: requestorsCompanyName.value.country,\n        //       campaignName: campaignName,\n        //       projectNumber: projectNumber,\n        //       projectName: projectName,\n        //       comments: comments,\n        //       projectType: \"Purchase Order Request\",\n        //     },\n        //   };\n        //   var children: Submission[] = [];\n\n        //   services.forEach((service: any) => {\n        //     children.push({\n        //       project: projectId,\n        //       title: \"\",\n        //       parentId: \"\",\n        //       group: \"vendor\",\n        //       created: new Date(),\n        //       updated: new Date(),\n        //       status: \"New\",\n        //       author: requestorsName,\n        //       data: {\n        //         netValueOfServiceOrderedLC: service.netValueLC,\n        //         localCurrency: service.localCurrency,\n        //         netValuePOC: service.netValuePO,\n        //         purchaseOrderCurrency: service.poCurrencyCode,\n        //         netValueEur: service.netValueEUR,\n        //       },\n        //     });\n        //   });\n\n        //   var submission: SubmissionWithChildren = {\n        //     submission: parent,\n        //     children,\n        //   };\n        //   RestAPI.createSubmissionWithChildren(submission).then((response) => {\n        //     props.history.push(\"/submissions\");\n        //   });\n        // }}\n        onClick={async () => {\n          RestAPI.getSubmissions().then((response) => {\n            var subs = response.data;\n            var targetId = \"\";\n            for (let sub of subs) {\n              if (\n                sub.parentId === null &&\n                sub.data.projectNumber === projectNumber\n              ) {\n                targetId = sub.id || \"\";\n                break;\n              }\n            }\n            if (targetId.length > 0) {\n              RestAPI.updateSubmissionPartial(\n                targetId,\n                \"data.purchaseOrderServiceProvider\",\n                serviceProvider\n              );\n              RestAPI.updateSubmissionPartial(\n                targetId,\n                \"data.vendorNamePO\",\n                vendorsNames.map((v: any) => v.label).join(\", \")\n              );\n              services.forEach(async (service: any) => {\n                await RestAPI.createSubmission({\n                  project: \"62610ab73a88d397b05cea12\",\n                  title: \"\",\n                  parentId: targetId,\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    netValueOfServiceOrderedLC: service.netValueLC,\n                    localCurrency: service.localCurrency,\n                    netValuePOC: service.netValuePO,\n                    purchaseOrderCurrency: service.poCurrencyCode,\n                    netValueEur: service.netValueEUR,\n                  },\n                });\n              });\n              setTimeout(() => {\n                props.history.push(\"/submissions\");\n              }, 2000);\n            }\n          });\n        }}\n        isDisabled={requestorsCompanyName.value.code !== \"6110\"}\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","import { Form } from \"@formio/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  StackDivider,\n  VStack,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  Tag,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiSettings, FiRefreshCw } from \"react-icons/all\";\n\nimport Cerov from \"../../components/projects/cerov\";\nimport Ermv from \"../../components/projects/ermv\";\nimport Erov from \"../../components/projects/erov\";\nimport Elmv from \"../../components/projects/elmv\";\nimport Elov from \"../../components/projects/elov\";\nimport Por from \"../../components/projects/por\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPredefinedProject] = useState<any>(null);\n  const [form, setForm] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) => {\n        setProject(response.data);\n        setForm({ display: \"form\", components: response.data.components });\n        if (props.match.params.id === \"619515b754e61c8dd33daa52\") {\n          setPredefinedProject(\n            <Ermv project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"6246bc93fa2a446faadb8d9a\") {\n          setPredefinedProject(\n            <Erov project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"6246ec8efa2a446faadb8d9b\") {\n          setPredefinedProject(\n            <Elmv project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"624ac98682eeddf1a9b6a622\") {\n          setPredefinedProject(\n            <Elov project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"62610ab73a88d397b05cea12\") {\n          setPredefinedProject(\n            <Por project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"629dfb3f55d209262194a3e6\") {\n          setPredefinedProject(\n            <Cerov project={project} history={props.history} />\n          );\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.push(\"/projects\");\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={props.isAdmin ? \"grid\" : \"none\"}\n            onClick={() => {\n              props.history.push(`/projects/edit/${project.id}`);\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            icon={<FiSettings />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.800\", \"#ABB2BF\")} w=\"100%\" mb={10}>\n        <VStack\n          mb={\"40px\"}\n          pr={{ base: 0, md: \"10px\" }}\n          divider={<StackDivider />}\n          spacing={4}\n          fontSize=\"md\"\n          align=\"stretch\"\n        >\n          <Box>\n            <Stack\n              direction={{ base: \"column\", md: \"row\" }}\n              w=\"100%\"\n              spacing={{ base: \"20px\", md: \"100px\" }}\n            >\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Title\n                </Text>\n                <Text float=\"right\">{project.title}</Text>\n              </Box>\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Tags\n                </Text>\n                <HStack spacing={3} float=\"right\">\n                  {project.tags.map((tag) => {\n                    return (\n                      <Tag\n                        key={tag}\n                        fontWeight={\"400\"}\n                        colorScheme=\"cyan\"\n                        cursor=\"pointer\"\n                      >\n                        {tag}\n                      </Tag>\n                    );\n                  })}\n                </HStack>\n              </Box>\n            </Stack>\n          </Box>\n          <Box>\n            <Text as=\"b\">Description</Text>\n            <Text mt={3}>{project.description}</Text>\n          </Box>\n        </VStack>\n      </Box>\n      {predefinedProject === null ? (\n        <Form\n          // onChange={(event: any) => {\n          //   console.log(event);\n          // }}\n          onSubmit={(formio: any) => {\n            delete formio.data[\"submit\"];\n            var submission: Submission = {\n              project: project.id ?? \"\",\n              parentId: null,\n              group: null,\n              created: new Date(),\n              updated: new Date(),\n              title: \"\",\n              author: \"\",\n              status: project.defaultStatus,\n              data: formio.data,\n            };\n            RestAPI.createSubmission(submission).then((response) => {\n              props.history.push(`/submissions/view/${response.data.id}`);\n            });\n          }}\n          form={form}\n        />\n      ) : (\n        predefinedProject\n      )}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  useColorModeValue,\n  ModalCloseButton,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  Text,\n  AccordionIcon,\n  VStack,\n  Heading,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport CreateBookmark from \"../../components/CreateBookmark\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Project from \"../../types/project\";\nimport moment from \"moment\";\nimport { Submission } from \"../../types/submission\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [drafts, setDrafts] = useState<Submission[]>([]);\n\n  useEffect(() => {\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n    RestAPI.getDrafts().then((response) => {\n      console.log(response.data);\n      setDrafts(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Accordion allowMultiple>\n        {projects.map((project) => {\n          var pd = drafts.filter((draft) => draft.project === project.id);\n          return (\n            <AccordionItem key={project.id}>\n              <h2>\n                <AccordionButton>\n                  <Box flex=\"1\" textAlign=\"left\">\n                    {project.title}\n                  </Box>\n                  <AccordionIcon />\n                </AccordionButton>\n              </h2>\n              <AccordionPanel pb={4}>\n                {pd.length > 0 ? (\n                  <VStack w=\"100%\" spacing={\"1.5em\"}>\n                    {pd.map((draft, index) => {\n                      return (\n                        <Box\n                          key={draft.id}\n                          bg=\"white\"\n                          _dark={{ bg: \"#21252A\" }}\n                          w=\"100%\"\n                          p=\"15px\"\n                        >\n                          <Box w=\"100%\" h=\"60px\">\n                            <Heading size=\"lg\" float=\"left\">\n                              {draft.data.requestorsCompanyName} (\n                              {draft.data.campaignName}) #{pd.length - index}\n                            </Heading>\n                            <Button\n                              colorScheme={\"blue\"}\n                              float=\"right\"\n                              onClick={() => {\n                                window.open(\n                                  \"/drafts/view/\" + draft.id,\n                                  \"_self\"\n                                );\n                              }}\n                            >\n                              Edit\n                            </Button>\n                          </Box>\n                          <Box w=\"100%\">\n                            <VStack align={\"start\"} w=\"100%\">\n                              <p>\n                                Requestor`s Company Name:{\" \"}\n                                {draft.data.requestorsCompanyName}\n                              </p>\n                              <p>\n                                Organizing Company:{\" \"}\n                                {draft.data.organizingCompany}\n                              </p>\n                              <p>Campaign Name: {draft.data.campaignName}</p>\n                              <p>Project Number: {draft.data.projectNumber}</p>\n                              <p>Comments: {draft.data.comments}</p>\n                            </VStack>\n                            <VStack float=\"right\">\n                              <p>\n                                Saved:{\" \"}\n                                {moment(draft.created).format(\n                                  \"DD.MM.YYYY HH:mm\"\n                                )}\n                              </p>\n                              <p>Author: {draft.author}</p>\n                            </VStack>\n                          </Box>\n                        </Box>\n                      );\n                    })}\n                  </VStack>\n                ) : (\n                  \"No drafts saved\"\n                )}\n              </AccordionPanel>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import { Form } from \"@formio/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  StackDivider,\n  VStack,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  Tag,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiSettings, FiRefreshCw } from \"react-icons/all\";\n\nimport Ermv from \"../../components/projects/ermv\";\nimport Erov from \"../../components/projects/erov\";\nimport Elmv from \"../../components/projects/elmv\";\nimport Elov from \"../../components/projects/elov\";\nimport Por from \"../../components/projects/por\";\nimport Cerov from \"../../components/projects/cerov\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n  isDraft?: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPredefinedProject] = useState<any>(null);\n  const [form, setForm] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (props.match.params.id) {\n      if (props.isDraft) {\n        RestAPI.getDraft(props.match.params.id).then((response) => {\n          setForm({ display: \"form\", components: [] });\n          if (response.data.submission.project === \"629dfb3f55d209262194a3e6\") {\n            setPredefinedProject(\n              <Cerov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n                isDraft={true}\n              />\n            );\n          }\n          if (response.data.submission.project === \"624ac98682eeddf1a9b6a622\") {\n            setPredefinedProject(\n              <Elov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n                isDraft={true}\n              />\n            );\n          }\n          if (response.data.submission.project === \"6246ec8efa2a446faadb8d9b\") {\n            setPredefinedProject(\n              <Elmv\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n                isDraft={true}\n              />\n            );\n          }\n        });\n      } else {\n        RestAPI.getSubmissionWithChildren(props.match.params.id).then(\n          (response) => {\n            setForm({ display: \"form\", components: [] });\n            if (\n              response.data.submission.project === \"619515b754e61c8dd33daa52\"\n            ) {\n              setPredefinedProject(\n                <Ermv\n                  project={project}\n                  submission={response.data.submission}\n                  children={response.data.children}\n                  history={props.history}\n                />\n              );\n            }\n            if (\n              response.data.submission.project === \"6246bc93fa2a446faadb8d9a\" ||\n              response.data.submission.project === \"629dfb3f55d209262194a3e6\"\n            ) {\n              setPredefinedProject(\n                <Erov\n                  project={project}\n                  submission={response.data.submission}\n                  children={response.data.children}\n                  history={props.history}\n                />\n              );\n            }\n            if (\n              response.data.submission.project === \"6246ec8efa2a446faadb8d9b\"\n            ) {\n              setPredefinedProject(\n                <Elmv\n                  project={project}\n                  submission={response.data.submission}\n                  children={response.data.children}\n                  history={props.history}\n                />\n              );\n            }\n            if (\n              response.data.submission.project === \"624ac98682eeddf1a9b6a622\"\n            ) {\n              setPredefinedProject(\n                <Elov\n                  project={project}\n                  submission={response.data.submission}\n                  children={response.data.children}\n                  history={props.history}\n                />\n              );\n            }\n            if (props.match.params.id === \"62610ab73a88d397b05cea12\") {\n              setPredefinedProject(\n                <Por project={project} history={props.history} />\n              );\n            }\n          }\n        );\n      }\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.push(\"/projects\");\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={props.isAdmin ? \"grid\" : \"none\"}\n            onClick={() => {\n              props.history.push(`/projects/edit/${project.id}`);\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            icon={<FiSettings />}\n          />\n        </Box>\n      </HStack>\n\n      <Alert\n        display={props.isDraft ? \"none\" : \"block\"}\n        status=\"error\"\n        variant=\"subtle\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        height=\"180px\"\n        mb=\"2em\"\n      >\n        <AlertIcon boxSize=\"40px\" mr={0} />\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n          You are viewing existing project!\n        </AlertTitle>\n        <AlertDescription maxWidth=\"sm\">\n          Please note that submitting this form will create a new project\n        </AlertDescription>\n      </Alert>\n\n      {predefinedProject === null ? (\n        <Form\n          onSubmit={(formio: any) => {\n            delete formio.data[\"submit\"];\n            var submission: Submission = {\n              project: project.id ?? \"\",\n              parentId: null,\n              group: null,\n              created: new Date(),\n              updated: new Date(),\n              title: \"\",\n              author: \"\",\n              status: project.defaultStatus,\n              data: formio.data,\n            };\n            RestAPI.createSubmission(submission).then((response) => {\n              props.history.push(`/submissions/view/${response.data.id}`);\n            });\n          }}\n          form={form}\n        />\n      ) : (\n        predefinedProject\n      )}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","export function numberWithCommas(x: any) {\n  return !isNaN(x) && typeof x === \"number\"\n    ? x\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    : \"\";\n}\n","import { Button, Tag } from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Creatable from \"react-select/creatable\";\nimport { numberWithCommas } from \"../utils/utils\";\n\nconst numRegex = /[0-9.\\-/]|\\./;\n\nfunction isValidDate(d: any) {\n  return d instanceof Date && !isNaN(d as any);\n}\n\nclass EditableTableCell extends React.Component<\n  {\n    onUpdate: any;\n    rowIndex: number;\n    rowData: any;\n    columnKey: string | undefined;\n    loadOptions?: any;\n    type: string;\n    initialValue: any;\n    textColor?: any;\n    backgroundColor?: string;\n    readonly?: boolean;\n    bold?: boolean;\n    maxLength?: number;\n    invoiced?: boolean;\n  },\n  {\n    cellValue: any;\n    options: any[];\n    editing: boolean;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      options: [],\n      cellValue: undefined,\n      editing: false,\n    };\n  }\n  componentDidUpdate(prevProps: any) {\n    if (prevProps.initialValue !== this.props.initialValue) {\n      if (this.props.type === \"number\" && isNaN(this.props.initialValue)) {\n        return;\n      }\n      this.setState({ cellValue: this.props.initialValue });\n    }\n  }\n\n  componentDidMount() {\n    var value: any = undefined;\n    if (this.props.rowData.id === \"total\") {\n      value = this.props.initialValue ? this.props.initialValue : \"\";\n    } else {\n      switch (this.props.type) {\n        case \"text\":\n        case \"button\":\n          value = this.props.initialValue\n            ? this.props.initialValue.toString()\n            : \"\";\n          break;\n        case \"number\":\n          value =\n            typeof this.props.initialValue === \"number\"\n              ? numberWithCommas(this.props.initialValue)\n              : \"\";\n          break;\n        case \"tags\":\n          value = this.props.initialValue;\n          break;\n        case \"date\":\n          value =\n            this.props.initialValue && this.props.initialValue !== null\n              ? new Date(this.props.initialValue)\n              : null;\n          break;\n        case \"dropdown\":\n          value =\n            typeof this.props.initialValue === \"string\"\n              ? {\n                  label: this.props.initialValue,\n                  value: this.props.initialValue,\n                }\n              : { label: \"\", value: \"\" };\n          break;\n        case \"value-dropdown\":\n          value =\n            typeof this.props.initialValue === \"string\"\n              ? {\n                  label: this.props.initialValue,\n                  value: this.props.initialValue,\n                }\n              : { label: \"\", value: \"\" };\n          break;\n        case \"multiple-dropdown\":\n          value = [];\n          if (\n            this.props.initialValue &&\n            Array.isArray(this.props.initialValue)\n          ) {\n            this.props.initialValue.forEach((value: any) => {\n              value.push({ label: value, value: value });\n            });\n          }\n          break;\n        case \"menu\":\n          value = this.props.initialValue\n            ? this.props.initialValue.toString()\n            : \"\";\n          break;\n        default:\n          break;\n      }\n    }\n    this.setState({ cellValue: value });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          fontWeight: this.props.bold ? \"bold\" : \"normal\",\n          textAlign: this.props.type === \"button\" ? \"center\" : \"inherit\",\n          backgroundColor:\n            this.props.rowData.id === \"total\"\n              ? \"white\"\n              : this.props.backgroundColor\n              ? this.props.backgroundColor\n              : \"\",\n        }}\n        className={\n          this.state.editing\n            ? \"vendors-table-cell active\"\n            : `content-preview ${\n                this.props.textColor ? this.props.textColor : \"\"\n              } ${\n                this.props.readonly || this.props.invoiced === true\n                  ? \"readonly\"\n                  : \"\"\n              }`\n        }\n        onClick={() => {\n          if (\n            !this.state.editing &&\n            !this.props.readonly &&\n            this.props.invoiced !== true &&\n            this.props.rowData.id !== \"total\"\n          ) {\n            this.setState({ editing: true });\n          }\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          this.setState({ editing: false });\n        }}\n      >\n        {!this.state.editing ? (\n          this.props.type === \"tags\" ? (\n            this.state.cellValue ? (\n              this.state.cellValue.map((cv: any) => {\n                if (cv) {\n                  return (\n                    <Tag colorScheme={this.props.textColor} mb=\"5px\" mr={\"5px\"}>\n                      {cv}\n                    </Tag>\n                  );\n                }\n              })\n            ) : (\n              \"\"\n            )\n          ) : this.props.type === \"date\" ? (\n            this.state.cellValue && this.state.cellValue !== null ? (\n              moment(this.state.cellValue).format(\"DD.MM.yyyy\")\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"object\" ? (\n            this.state.cellValue !== null ? (\n              `${this.state.cellValue.label}`\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"number\" ? (\n            `${numberWithCommas(this.state.cellValue)}`\n          ) : (\n            `${this.state.cellValue}`\n          )\n        ) : this.props.type === \"text\" || this.props.type === \"number\" ? (\n          <textarea\n            autoFocus\n            style={{ resize: \"none\" }}\n            value={this.state.cellValue ?? \"\"}\n            onChange={(event) => {\n              if (\n                this.props.maxLength !== undefined &&\n                event.target.value.length > this.props.maxLength\n              ) {\n                return;\n              }\n              this.setState({ cellValue: event.target.value });\n            }}\n            onFocus={(e) => {\n              setTimeout(() => {\n                document.execCommand(\"selectAll\", false);\n              }, 0);\n            }}\n            onKeyPress={\n              this.props.type === \"number\"\n                ? (event) => {\n                    const keyCode = event.keyCode || event.which;\n                    const string = String.fromCharCode(keyCode);\n                    if (!numRegex.test(string)) {\n                      event.defaultPrevented = false;\n                      if (event.preventDefault) event.preventDefault();\n                    }\n                  }\n                : undefined\n            }\n            onBlur={(event) => {\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                this.props.type === \"number\"\n                  ? Number(this.state.cellValue)\n                  : this.state.cellValue\n              );\n              this.setState({ editing: false });\n            }}\n            className=\"content-editable\"\n          />\n        ) : this.props.type === \"date\" ? (\n          <DatePicker\n            autoFocus\n            isClearable\n            selected={\n              isValidDate(this.state.cellValue)\n                ? moment(this.state.cellValue).toDate()\n                : null\n            }\n            customInput={<input className=\"datepicker-input\"></input>}\n            onChange={(date) => {\n              this.setState({ cellValue: date, editing: false });\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                date !== null ? date.toString() : null\n              );\n            }}\n            onCalendarClose={() => {\n              this.setState({ editing: false });\n            }}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n        ) : this.props.type === \"dropdown\" ||\n          this.props.type === \"value-dropdown\" ||\n          this.props.type === \"multiple-dropdown\" ? (\n          <Creatable\n            menuPortalTarget={document.body}\n            menuIsOpen={this.state.editing}\n            autoFocus\n            isMulti={this.props.type === \"multiple-dropdown\"}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 1000000 }),\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n                minWidth: \"200px\",\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"black\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                paddingLeft: \"5px\",\n                boxShadow: \"none\",\n                outlineWidth: 0,\n                border: 0,\n                minHeight: 52,\n                backgroundColor: \"transparent\",\n                transition: \"0.3s\",\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 0,\n              colors: {\n                ...theme.colors,\n                primary: \"#a0bfe3\",\n              },\n            })}\n            value={this.state.cellValue}\n            onChange={(value) => {\n              this.setState({\n                cellValue: value !== null ? value : { label: \"\", value: \"\" },\n              });\n              var v: any = \"\";\n              if (value !== null && Array.isArray(value)) {\n                v = [];\n                value.map((dv: any) => v.push(dv.label));\n              }\n              if (value !== null && !Array.isArray(value)) {\n                v = value.label;\n                if (this.props.type === \"value-dropdown\") {\n                  v = value.value;\n                }\n              }\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                v\n              );\n              this.setState({ editing: false });\n            }}\n            onFocus={async () => {\n              this.setState({\n                options: this.props.loadOptions(this.props.columnKey ?? \"\"),\n              });\n            }}\n            onBlur={() => {\n              this.setState({\n                options: [],\n                editing: false,\n              });\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"table-select\"\n            isClearable\n            isSearchable\n            options={this.state.options}\n          />\n        ) : this.props.type === \"button\" ? (\n          <div className=\"table-button-container\">\n            <Button\n              colorScheme={this.props.textColor}\n              onClick={() => {\n                this.props.onUpdate(\n                  this.props.rowData.id,\n                  this.props.columnKey,\n                  this.state.cellValue\n                );\n                this.setState({ editing: false });\n              }}\n              size=\"sm\"\n              color=\"white\"\n              className=\"table-button\"\n            >\n              {this.state.cellValue}\n            </Button>\n          </div>\n        ) : (\n          <div>unknown</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditableTableCell;\n","// source: https://github.com/voodoocreation/ts-deepmerge/blob/master/src/index.ts\ninterface IObject {\n  [key: string]: any\n}\n\ntype TUnionToIntersection<U> = (U extends any\n? (k: U) => void\n: never) extends (k: infer I) => void\n  ? I\n  : never\n\n// istanbul ignore next\nconst isObject = (obj: any) => {\n  if (typeof obj === 'object' && obj !== null) {\n    if (typeof Object.getPrototypeOf === 'function') {\n      const prototype = Object.getPrototypeOf(obj)\n      return prototype === Object.prototype || prototype === null\n    }\n\n    return Object.prototype.toString.call(obj) === '[object Object]'\n  }\n\n  return false\n}\n\nconst merge = <T extends IObject[]>(...objects: T): TUnionToIntersection<T[number]> =>\n  objects.reduce((result, current) => {\n    Object.keys(current).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n        result[key] = Array.from(new Set(result[key].concat(current[key])))\n      } else if (isObject(result[key]) && isObject(current[key])) {\n        result[key] = merge(result[key], current[key])\n      } else {\n        result[key] = current[key]\n      }\n    })\n\n    return result\n  }, {}) as any\n\nexport default merge\n","function pick<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  const ret: any = {}\n  keys.forEach(key => {\n    ret[key] = obj[key]\n  })\n  return ret\n}\n\nexport default pick\n","import React, { createContext, FC, useContext } from \"react\";\nimport { DatepickerStyles } from \"../types\";\nimport merge from \"../utils/deepmerge\";\nimport pick from \"../utils/pick\";\n\nexport interface StylesContextProps {\n  overwriteDefaultStyles: boolean;\n  styles: DatepickerStyles;\n}\n\nexport interface StylesProviderProps {\n  overwriteDefaultStyles?: boolean;\n  styles?: Partial<DatepickerStyles>;\n}\n\nexport const emptyStylesObject: DatepickerStyles = {\n  actionButton: {},\n  arrowIcon: {},\n  buttonsWrapper: {},\n  closeButton: {},\n  datepickerContainer: {},\n  dateRangeInputContainer: {},\n  dateRangeInputDivider: {},\n  day: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  dayContainer: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  inputComponentIcon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInput: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputAddon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputGroup: {\n    active: {},\n    base: {},\n  },\n  monthContainer: {},\n  monthDayGrid: {},\n  monthMonthLabel: {},\n  monthsWrapper: {},\n  monthWeekdayLabel: {},\n  resetDatesButton: {},\n  selectDateContainer: {\n    active: {},\n    base: {},\n  },\n  selectDateDateText: {\n    active: {},\n    base: {},\n  },\n  selectDateText: {\n    active: {},\n    base: {},\n  },\n  datepickerFooter: {},\n};\n\nexport const StylesContext = createContext<StylesContextProps>({\n  styles: emptyStylesObject,\n  overwriteDefaultStyles: false,\n});\n\nexport const StylesProvider: FC<StylesProviderProps> = ({\n  children,\n  overwriteDefaultStyles = false,\n  styles = emptyStylesObject,\n}) => (\n  <StylesContext.Provider\n    value={{ overwriteDefaultStyles, styles: merge(emptyStylesObject, styles) }}\n  >\n    {children}\n  </StylesContext.Provider>\n);\n\nexport function useStyleProps<\n  InitialStyles extends Partial<DatepickerStyles> = Partial<DatepickerStyles>\n>(inlineStyles: InitialStyles) {\n  const { styles, overwriteDefaultStyles } = useContext(StylesContext);\n  const keys = Object.keys(inlineStyles) as (keyof DatepickerStyles)[];\n  const filteredStyles = pick(styles, keys);\n  const result = merge(\n    filteredStyles,\n    !overwriteDefaultStyles ? inlineStyles : ({} as InitialStyles)\n  );\n  return result;\n}\n","import {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronUpIcon,\n} from \"@chakra-ui/icons\";\nimport { IconButton, IconButtonProps } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { ActionButtonStyles } from \"../types\";\n\nexport interface ActionButtonProps extends Omit<IconButtonProps, \"aria-label\"> {\n  direction?: \"up\" | \"right\" | \"down\" | \"left\";\n}\n\nexport const ActionButton: React.FC<ActionButtonProps> = ({\n  direction,\n  ...props\n}) => {\n  let IconComponent = ChevronLeftIcon;\n\n  const styleProps = useStyleProps<ActionButtonStyles>({\n    actionButton: {\n      position: \"relative\",\n    },\n  });\n\n  if (direction === \"up\") {\n    IconComponent = ChevronUpIcon;\n  } else if (direction === \"right\") {\n    IconComponent = ChevronRightIcon;\n  } else if (direction === \"down\") {\n    IconComponent = ChevronDownIcon;\n  } else if (direction === \"left\") {\n    IconComponent = ChevronLeftIcon;\n  }\n\n  return (\n    <IconButton\n      aria-label={`Arrow ${direction}`}\n      icon={<IconComponent />}\n      {...props}\n      {...styleProps.actionButton}\n    />\n  );\n};\n","import {\n  CloseButton as ChakraCloseButton,\n  CloseButtonProps as ChakraCloseButtonProps,\n} from '@chakra-ui/react'\nimport React from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { CloseButtonStyles } from '../types'\n\nexport interface CloseButtonProps extends ChakraCloseButtonProps {}\n\nexport const CloseButton = (props: CloseButtonProps) => {\n  const styleProps = useStyleProps<CloseButtonStyles>({\n    closeButton: {\n      top: 1,\n      right: 1,\n      zIndex: 1,\n      position: 'absolute',\n    },\n  })\n  return <ChakraCloseButton {...styleProps.closeButton} {...props} />\n}\n","export interface DatepickerPhrases {\n  datepickerStartDatePlaceholder: string\n  datepickerStartDateLabel: string\n  datepickerEndDateLabel: string\n  datepickerEndDatePlaceholder: string\n  resetDates: string\n  close: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateSingleInputPhrases extends DatepickerPhrases {\n  dateAriaLabel: string\n  datePlaceholder: string\n}\n\nexport const datepickerPhrases: DatepickerPhrases = {\n  datepickerStartDatePlaceholder: 'Select',\n  datepickerStartDateLabel: 'Start date:',\n  datepickerEndDatePlaceholder: 'Select',\n  datepickerEndDateLabel: 'End date:',\n  resetDates: 'Clean Dates',\n  close: 'Close',\n}\n\nexport const dateRangeInputPhrases: DateRangeInputPhrases = {\n  ...datepickerPhrases,\n\n  startDateAriaLabel: 'Start date',\n  endDateAriaLabel: 'End date',\n\n  startDatePlaceholder: 'Start date',\n  endDatePlaceholder: 'End date',\n}\n\nexport const dateSingleInputPhrases: DateSingleInputPhrases = {\n  ...datepickerPhrases,\n  dateAriaLabel: 'Select date',\n  datePlaceholder: 'Select date',\n}\n","import dateFormat from 'date-fns/format'\n\nexport {\n  monthLabelFormat as monthLabelFormatFn,\n  weekdayLabelFormat as weekdayLabelFormatFn,\n} from '@datepicker-react/hooks'\n\nexport const dayLabelFormatFn = (date: Date) => dateFormat(date, 'd')\n\nexport const defaultDisplayFormat = 'MM/dd/yyyy'\n","import { FocusedInput, FormatFunction, useDatepicker } from '@datepicker-react/hooks'\nimport React, { useContext } from 'react'\nimport { datepickerPhrases, DatepickerPhrases } from '../phrases'\nimport { InputDate } from '../types'\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from '../utils/formatters'\n\nexport type UseDatepickerReturnType = ReturnType<typeof useDatepicker>\n\nexport interface DatepickerFormatProps {\n  dayLabelFormat: typeof dayLabelFormatFn\n  weekdayLabelFormat: typeof weekdayLabelFormatFn\n  monthLabelFormat: typeof monthLabelFormatFn\n}\n\nexport type OnDayRenderType = {\n  isFirst: boolean\n  isLast: boolean\n  isSelected: boolean\n  isWithinHoverRange: boolean\n  isSelectedStartOrEnd: boolean\n  disabledDate: boolean\n}\n\nexport interface DatepickerContextBaseProps {\n  displayFormat: FormatFunction | string\n  startDate: InputDate\n  endDate: InputDate\n  phrases: DatepickerPhrases\n  focusedInput: FocusedInput\n  onDayRender?(date: Date, state: OnDayRenderType): React.ReactNode\n}\n\nexport interface DatepickerContextProps\n  extends DatepickerContextBaseProps,\n    DatepickerFormatProps,\n    UseDatepickerReturnType {}\n\nexport interface DatepickerProviderProps extends Partial<DatepickerContextProps> {}\n\nconst defaultBase: DatepickerContextBaseProps = {\n  startDate: null,\n  endDate: null,\n  focusedInput: null,\n  onDayRender: undefined,\n  displayFormat: defaultDisplayFormat,\n  phrases: datepickerPhrases,\n}\n\nconst defaultFormatters: DatepickerFormatProps = {\n  monthLabelFormat: monthLabelFormatFn,\n  weekdayLabelFormat: weekdayLabelFormatFn,\n  dayLabelFormat: dayLabelFormatFn,\n}\n\nconst defaultUseDatepicker: UseDatepickerReturnType = {\n  numberOfMonths: 2,\n  activeMonths: [],\n  firstDayOfWeek: 0,\n  focusedDate: null,\n  hoveredDate: null,\n  goToDate: () => {},\n  goToNextMonths: () => {},\n  goToNextMonthsByOneMonth: () => {},\n  goToNextYear: () => {},\n  goToPreviousMonths: () => {},\n  goToPreviousMonthsByOneMonth: () => {},\n  goToPreviousYear: () => {},\n  isDateBlocked: () => false,\n  isDateFocused: () => false,\n  isDateHovered: () => false,\n  isDateSelected: () => false,\n  isEndDate: () => false,\n  isFirstOrLastSelectedDate: () => false,\n  isStartDate: () => false,\n  onDateFocus: () => {},\n  onDateHover: () => {},\n  onDateSelect: () => {},\n  onResetDates: () => {},\n}\n\nexport const datepickerContextDefaultValue: DatepickerContextProps = {\n  ...defaultBase,\n  ...defaultFormatters,\n  ...defaultUseDatepicker,\n}\n\nexport const DatepickerContext = React.createContext(datepickerContextDefaultValue)\n\nexport const useDatepickerContext = () => useContext(DatepickerContext)\n\nexport const DatepickerProvider: React.FC<DatepickerProviderProps> = ({ children, ...props }) => (\n  <DatepickerContext.Provider value={{ ...datepickerContextDefaultValue, ...props }}>\n    {children}\n  </DatepickerContext.Provider>\n)\n","import { Box, Button, useColorModeValue } from \"@chakra-ui/react\";\nimport { isEndDate, isStartDate, useDay } from \"@datepicker-react/hooks\";\nimport React, { useMemo, useRef } from \"react\";\nimport {\n  OnDayRenderType,\n  useDatepickerContext,\n} from \"../context/DatepickerContext\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { DayState, DayStyles } from \"../types\";\n\nfunction getColor<T>(\n  { isSelected, isWithinHoverRange, isFirst, isLast }: OnDayRenderType,\n  { base, normal, rangeHover, selected, firstOrLast, first, last }: DayState<T>\n) {\n  let style = base;\n  if (!isSelected && !isWithinHoverRange) style = { ...style, ...normal };\n  if (isSelected) style = { ...style, ...selected };\n  if (isWithinHoverRange) style = { ...style, ...rangeHover };\n  if (isFirst || isLast) style = { ...style, ...firstOrLast };\n  if (isFirst) style = { ...style, ...first };\n  if (isLast) style = { ...style, ...last };\n  return style;\n}\n\ninterface DayProps {\n  day: string;\n  date: Date;\n}\n\nexport function Day({ day, date }: DayProps) {\n  const dayRef = useRef<any>(null);\n\n  const {\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateSelect,\n    onDateFocus,\n    onDateHover,\n    onDayRender,\n    startDate,\n    endDate,\n  } = useDatepickerContext();\n\n  const dayProps = useDay({\n    date,\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateFocus,\n    onDateSelect,\n    onDateHover,\n    dayRef,\n  });\n\n  const {\n    onClick,\n    onKeyDown,\n    onMouseEnter,\n    tabIndex,\n    isSelectedStartOrEnd,\n    isSelected,\n    isWithinHoverRange,\n    disabledDate,\n  } = dayProps;\n\n  const styleProps = useStyleProps<DayStyles>({\n    day: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        minWidth: \"unset\",\n        fontWeight: \"medium\",\n        fontSize: [\"sm\", \"md\"],\n        border: \"2px solid\",\n        textColor: useColorModeValue(\"gray.900\", \"white\"),\n        borderRadius: \"100%\",\n        borderColor: \"transparent\",\n        background: \"transparent\",\n        overflow: \"hidden\",\n        _hover: {\n          borderColor: \"transparent\",\n          background: \"transparent\",\n        },\n      },\n      normal: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      rangeHover: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      selected: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      firstOrLast: {\n        textColor: useColorModeValue(\"white\", \"black\"),\n        background: useColorModeValue(\"blue.400\", \"white\"),\n        _hover: {\n          textColor: useColorModeValue(\"white\", \"black\"),\n          background: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      first: {},\n      last: {},\n    },\n    dayContainer: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      normal: {},\n      rangeHover: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      selected: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"0%\",\n        },\n      },\n      firstOrLast: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n      },\n      first: {\n        borderLeftRadius: \"100%\",\n      },\n      last: {\n        borderRightRadius: \"100%\",\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n    },\n  });\n\n  const isFirst = isStartDate(date, startDate);\n  const isLast = isEndDate(date, endDate);\n\n  const containerStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.dayContainer.base,\n          normal: styleProps.dayContainer.normal,\n          rangeHover: styleProps.dayContainer.rangeHover,\n          selected: styleProps.dayContainer.selected,\n          first: styleProps.dayContainer.first,\n          last: styleProps.dayContainer.last,\n          firstOrLast: styleProps.dayContainer.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  const buttonStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.day.base,\n          normal: styleProps.day.normal,\n          rangeHover: styleProps.day.rangeHover,\n          selected: styleProps.day.selected,\n          first: styleProps.day.first,\n          last: styleProps.day.last,\n          firstOrLast: styleProps.day.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  return (\n    <Box {...containerStyle}>\n      <Button\n        {...buttonStyle}\n        variant=\"unstyled\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        onMouseEnter={onMouseEnter}\n        tabIndex={tabIndex}\n        ref={dayRef}\n        disabled={disabledDate}\n        data-testid=\"Day\"\n        aria-label={`Day-${date.toDateString()}`}\n        type=\"button\"\n      >\n        {typeof onDayRender === \"function\"\n          ? onDayRender(date, {\n              isFirst,\n              isLast,\n              isSelected,\n              isWithinHoverRange,\n              isSelectedStartOrEnd,\n              disabledDate,\n            })\n          : day}\n      </Button>\n    </Box>\n  );\n}\n","import { StateProp } from '../types'\n\nexport const getStateStyle = <T>({ base, active }: StateProp<T>, isActive: boolean) => {\n  return isActive ? { ...base, ...active } : base\n}\n","import { CalendarIcon } from '@chakra-ui/icons'\nimport {\n  Icon,\n  Input as ChakraInput,\n  InputGroup,\n  InputLeftAddon,\n  InputProps as ChakraInputProps,\n} from '@chakra-ui/react'\nimport { parseDate } from '@datepicker-react/hooks'\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputComponentStyles, InputDate } from '../types'\nimport { defaultDisplayFormat } from '../utils/formatters'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface InputProps {\n  allowEditableInputs?: boolean\n  dateFormat?: string\n  disableAccessibility?: boolean\n  iconComponent?: typeof CalendarIcon\n  id?: string\n  isActive?: boolean\n  name?: string\n  onChange?(date: InputDate): void\n  onClick?(): void\n  placeholder?: string\n  showCalendarIcon?: boolean\n  value?: string\n}\n\ninterface BaseProps extends Omit<ChakraInputProps, 'onChange' | 'onClick' | 'value'>, InputProps {}\n\nexport const Input = forwardRef((props: BaseProps, inputRef: Ref<any>) => {\n  const {\n    dateFormat = defaultDisplayFormat,\n    disableAccessibility,\n    iconComponent = CalendarIcon,\n    id,\n    isActive = false,\n    name,\n    onChange = () => {},\n    onClick = () => {},\n    placeholder,\n    showCalendarIcon = true,\n    value,\n    allowEditableInputs = false,\n\n    ...inputProps\n  } = props\n\n  const ref = useRef<any>(null)\n\n  const [searchString, setSearchString] = useState(value)\n\n  const styleProps = useStyleProps<InputComponentStyles>({\n    inputComponentInputGroup: {\n      base: {},\n      active: {},\n    },\n    inputComponentInput: {\n      base: {},\n      active: {},\n    },\n    inputComponentIcon: {\n      base: {},\n      active: {},\n    },\n    inputComponentInputAddon: {\n      base: {},\n      active: {},\n    },\n  })\n\n  // Note: value was updated outside of InputComponent\n  useEffect(() => {\n    setSearchString(value)\n  }, [value])\n\n  function handleOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const dateValue = e.target.value\n    setSearchString(dateValue)\n\n    if (typeof ref.current === 'number') {\n      clearTimeout(ref.current)\n    }\n\n    ref.current = setTimeout(() => {\n      onClick()\n      const parsedDate = parseDate(dateValue, dateFormat, new Date())\n      const isValidDate = !isNaN(parsedDate.getDate())\n\n      if (isValidDate) {\n        onChange(parsedDate)\n      } else {\n        onChange(null)\n      }\n    }, 1000)\n  }\n\n  function handleOnFocus(_e: React.FocusEvent<HTMLInputElement>) {\n    onClick()\n  }\n\n  return (\n    <InputGroup {...getStateStyle(styleProps.inputComponentInputGroup, isActive)} htmlFor={id}>\n      {showCalendarIcon && (\n        <InputLeftAddon {...getStateStyle(styleProps.inputComponentInputAddon, isActive)}>\n          <Icon as={iconComponent} {...getStateStyle(styleProps.inputComponentIcon, isActive)} />\n        </InputLeftAddon>\n      )}\n      <ChakraInput\n        {...inputProps}\n        {...getStateStyle(styleProps.inputComponentInput, isActive)}\n        ref={inputRef}\n        id={id}\n        name={name}\n        isReadOnly={!allowEditableInputs}\n        value={searchString}\n        placeholder={placeholder}\n        tabIndex={disableAccessibility ? -1 : 0}\n        autoComplete=\"off\"\n        data-testid=\"DatepickerInput\"\n        onFocus={handleOnFocus}\n        onChange={handleOnChange}\n      />\n    </InputGroup>\n  )\n})\n","import { Box, Flex, SimpleGrid, Text } from '@chakra-ui/react'\nimport { CalendarDay, useMonth } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { MonthStyles } from '../types'\nimport { Day } from './Day'\n\nexport interface MonthProps {\n  year: number\n  month: number\n}\n\nexport const Month = ({ year, month }: MonthProps) => {\n  const styleProps = useStyleProps<MonthStyles>({\n    monthContainer: {},\n    monthMonthLabel: {\n      justifyContent: 'center',\n      fontWeight: 'bold',\n      mb: 6,\n      fontSize: ['md', 'lg'],\n    },\n    monthWeekdayLabel: {\n      justifyContent: 'center',\n      color: 'gray.500',\n      mb: 4,\n      fontSize: ['sm', 'md'],\n    },\n    monthDayGrid: {\n      rowGap: 1,\n    },\n  })\n\n  const {\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  } = useDatepickerContext()\n\n  const { days, weekdayLabels, monthLabel } = useMonth({\n    year,\n    month,\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  })\n\n  return (\n    <Box {...styleProps.monthContainer}>\n      <Flex {...styleProps.monthMonthLabel}>\n        <Text>{monthLabel}</Text>\n      </Flex>\n      <SimpleGrid columns={7}>\n        {weekdayLabels.map((weekdayLabel: string) => (\n          <Flex key={weekdayLabel} {...styleProps.monthWeekdayLabel}>\n            <Text>{weekdayLabel}</Text>\n          </Flex>\n        ))}\n      </SimpleGrid>\n      <SimpleGrid {...styleProps.monthDayGrid} columns={7}>\n        {days.map((day: CalendarDay, index: number) =>\n          typeof day === 'object' ? (\n            <Day date={day.date} key={`${day.dayLabel}-${index}`} day={day.dayLabel} />\n          ) : (\n            <div key={index} />\n          ),\n        )}\n      </SimpleGrid>\n    </Box>\n  )\n}\n","import { RepeatIcon } from '@chakra-ui/icons'\nimport { Button } from '@chakra-ui/react'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { ResetDatesButtonStyles } from '../types'\n\ninterface ResetDatesProps {\n  onResetDates(): void\n  text: string\n}\n\nexport function ResetDatesButton({ onResetDates, text }: ResetDatesProps) {\n  const { phrases } = useDatepickerContext()\n\n  const styleProps = useStyleProps<ResetDatesButtonStyles>({\n    resetDatesButton: {},\n  })\n\n  function handleMouseUp(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.currentTarget.blur()\n  }\n\n  return (\n    <Button\n      icon={<RepeatIcon />}\n      tabIndex={-1}\n      aria-label={phrases.resetDates}\n      {...styleProps.resetDatesButton}\n      onClick={onResetDates}\n      onMouseUp={handleMouseUp}\n    >\n      {text}\n    </Button>\n  )\n}\n","import { Stack, Text } from '@chakra-ui/react'\nimport { getInputValue } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputDate, SelectDateStyles } from '../types'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface SelectedDateProps {\n  isFocused: boolean\n  date: InputDate\n}\n\nexport const SelectedDate = ({ isFocused, date }: SelectedDateProps) => {\n  const { phrases, displayFormat } = useDatepickerContext()\n\n  const styleProps = useStyleProps<SelectDateStyles>({\n    selectDateContainer: {\n      base: {\n        width: '100%',\n        borderBottom: '2px solid',\n        borderColor: 'gray.300',\n        paddingBottom: [1, 3],\n      },\n      active: {\n        borderColor: 'blue.400',\n      },\n    },\n    selectDateText: {\n      base: {\n        fontSize: 'xs',\n        color: 'gray.500',\n      },\n      active: {},\n    },\n    selectDateDateText: {\n      base: {\n        fontWeight: 'bold',\n        fontSize: ['sm', 'md', 'lg'],\n      },\n      active: {},\n    },\n  })\n\n  return (\n    <Stack {...getStateStyle(styleProps.selectDateContainer, isFocused)}>\n      <Text {...getStateStyle(styleProps.selectDateText, isFocused)}>\n        {phrases.datepickerStartDateLabel}\n      </Text>\n      <Text {...getStateStyle(styleProps.selectDateDateText, isFocused)}>\n        {getInputValue(date, displayFormat, phrases.datepickerStartDatePlaceholder)}\n      </Text>\n    </Stack>\n  )\n}\n","import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Flex,\n  HStack,\n  Stack,\n  useBreakpointValue,\n  useColorModeValue,\n  useTheme,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  MonthType,\n  START_DATE,\n  useDatepicker,\n  UseDatepickerProps,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useImperativeHandle, useRef } from \"react\";\nimport {\n  ActionButton,\n  CloseButton,\n  Month,\n  ResetDatesButton,\n  SelectedDate,\n} from \"./components\";\nimport {\n  DatepickerFormatProps,\n  DatepickerProvider,\n} from \"./context/DatepickerContext\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { DatepickerPhrases, datepickerPhrases } from \"./phrases\";\nimport { DatepickerComponentStyles } from \"./types\";\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from \"./utils/formatters\";\n\nexport interface DatepickerElement {\n  onDateSelect?(date: Date): void;\n}\n\nexport interface DatepickerProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerFormatProps>,\n    Partial<UseDatepickerProps> {\n  displayFormat?: string;\n  onClose?(): void;\n  onDayRender?(date: Date): React.ReactNode;\n  phrases?: DatepickerPhrases;\n  showClose?: boolean;\n  showResetDates?: boolean;\n  showSelectedDates?: boolean;\n  vertical?: boolean;\n}\n\nexport const Datepicker = React.forwardRef(\n  (props: DatepickerProps, ref: Ref<DatepickerElement>) => {\n    const {\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      endDate = null,\n      exactMinBookingDays = false,\n      firstDayOfWeek,\n      focusedInput = null,\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays = 1,\n      monthLabelFormat,\n      numberOfMonths = 2,\n      onClose = () => {},\n      onDatesChange = () => {},\n      onDayRender,\n      overwriteDefaultStyles,\n      phrases = datepickerPhrases,\n      showClose = true,\n      showResetDates = true,\n      showSelectedDates = true,\n      startDate = null,\n      styles: customStyles,\n      unavailableDates = [],\n      weekdayLabelFormat,\n    } = props;\n\n    const dp = useDatepicker({\n      changeActiveMonthOnSelect,\n      endDate,\n      exactMinBookingDays,\n      firstDayOfWeek,\n      focusedInput,\n      initialVisibleMonth,\n      isDateBlocked,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays,\n      numberOfMonths,\n      onDatesChange,\n      startDate,\n      unavailableDates,\n    });\n\n    useImperativeHandle(ref, () => ({\n      onDateSelect: (date: Date) => {\n        dp.onDateSelect(date);\n      },\n    }));\n\n    const monthGridRef = useRef<HTMLDivElement>(null);\n\n    function scrollTopToMonthGrid() {\n      if (monthGridRef && monthGridRef.current && vertical) {\n        monthGridRef.current.scrollTop = 0;\n      }\n    }\n\n    function _goToNextMonths() {\n      dp.goToNextMonths();\n      scrollTopToMonthGrid();\n    }\n\n    function _goToPreviousMonths() {\n      dp.goToPreviousMonths();\n      scrollTopToMonthGrid();\n    }\n\n    const isMobile = useBreakpointValue({ base: true, md: false });\n    const vertical = props.vertical || isMobile;\n\n    const styleProps = useStyleProps<DatepickerComponentStyles>({\n      datepickerContainer: {\n        background: useColorModeValue(\"white\", \"gray.700\"),\n        borderRadius: \"md\",\n        position: \"relative\",\n        width: \"fit-content\",\n        shadow: \"md\",\n        px: [3, 5],\n        py: [5, 7],\n        zIndex: 1,\n      },\n      monthsWrapper: {\n        spacing: [0, 8],\n      },\n      buttonsWrapper: {\n        spacing: [1, 3],\n      },\n      arrowIcon: {\n        my: [5, 15],\n        color: \"gray.500\",\n      },\n      datepickerFooter: {\n        justifyContent: \"space-between\",\n        pt: [1, 3],\n      },\n    });\n\n    return (\n      <StylesProvider\n        styles={customStyles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <DatepickerProvider\n          activeMonths={dp.activeMonths}\n          dayLabelFormat={dayLabelFormat || dayLabelFormatFn}\n          displayFormat={displayFormat}\n          endDate={endDate}\n          firstDayOfWeek={dp.firstDayOfWeek}\n          focusedDate={dp.focusedDate}\n          focusedInput={focusedInput}\n          goToDate={dp.goToDate}\n          goToNextMonths={_goToNextMonths}\n          goToNextMonthsByOneMonth={dp.goToNextMonthsByOneMonth}\n          goToNextYear={dp.goToNextYear}\n          goToPreviousMonths={_goToPreviousMonths}\n          goToPreviousMonthsByOneMonth={dp.goToPreviousMonthsByOneMonth}\n          goToPreviousYear={dp.goToPreviousYear}\n          hoveredDate={dp.hoveredDate}\n          isDateBlocked={dp.isDateBlocked}\n          isDateFocused={dp.isDateFocused}\n          isDateHovered={dp.isDateHovered}\n          isDateSelected={dp.isDateSelected}\n          isEndDate={dp.isEndDate}\n          isFirstOrLastSelectedDate={dp.isFirstOrLastSelectedDate}\n          isStartDate={dp.isStartDate}\n          monthLabelFormat={monthLabelFormat || monthLabelFormatFn}\n          numberOfMonths={dp.numberOfMonths}\n          onDateFocus={dp.onDateFocus}\n          onDateHover={dp.onDateHover}\n          onDateSelect={dp.onDateSelect}\n          onDayRender={onDayRender}\n          onResetDates={dp.onResetDates}\n          phrases={phrases}\n          startDate={startDate}\n          weekdayLabelFormat={weekdayLabelFormat || weekdayLabelFormatFn}\n        >\n          <Box {...styleProps.datepickerContainer} zIndex={10} mt={\"8px\"}>\n            {showClose && <CloseButton onClick={onClose} />}\n\n            {showSelectedDates && (\n              <Box mb={6}>\n                <HStack data-testid=\"SelectedDatesGrid\">\n                  <SelectedDate\n                    date={startDate}\n                    isFocused={focusedInput === START_DATE}\n                  />\n                  <Flex justifyContent=\"center\" alignItems=\"center\">\n                    <ArrowForwardIcon {...styleProps.arrowIcon} />\n                  </Flex>\n                  <SelectedDate\n                    date={endDate}\n                    isFocused={focusedInput === END_DATE}\n                  />\n                </HStack>\n              </Box>\n            )}\n            <Box position=\"relative\">\n              <Stack\n                overflow={vertical ? \"auto\" : undefined}\n                data-testid=\"MonthGrid\"\n                isInline={!vertical}\n                ref={monthGridRef}\n                padding={1}\n                {...styleProps.monthsWrapper}\n                onMouseLeave={() => {\n                  if (dp.hoveredDate) {\n                    dp.onDateHover(null);\n                  }\n                }}\n              >\n                {dp.activeMonths.map((month: MonthType) => (\n                  <Month\n                    key={`month-${month.year}-${month.month}`}\n                    year={month.year}\n                    month={month.month}\n                  />\n                ))}\n              </Stack>\n\n              <Flex {...styleProps.datepickerFooter}>\n                <HStack {...styleProps.buttonsWrapper}>\n                  <ActionButton\n                    direction={vertical ? \"up\" : \"left\"}\n                    onClick={_goToPreviousMonths}\n                    aria-label=\"Previous month\"\n                  />\n                  <ActionButton\n                    direction={vertical ? \"down\" : \"right\"}\n                    onClick={_goToNextMonths}\n                    aria-label=\"Next month\"\n                  />\n                </HStack>\n                {showResetDates && (\n                  <ResetDatesButton\n                    onResetDates={dp.onResetDates}\n                    text={phrases.resetDates}\n                  />\n                )}\n              </Flex>\n            </Box>\n          </Box>\n        </DatepickerProvider>\n      </StylesProvider>\n    );\n  }\n);\n","import { ArrowForwardIcon, CalendarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Stack,\n  StackDivider,\n  useBreakpointValue,\n  Icon,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  FocusedInput,\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useEffect, useRef, useState } from \"react\";\nimport { FaArrowRight } from \"react-icons/all\";\nimport { Input, InputProps } from \"./components\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { dateRangeInputPhrases, DateRangeInputPhrases } from \"./phrases\";\nimport { DateRangeInputStyles, InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface DateRangeInputProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerProps> {\n  startDateInputProps?: Partial<InputProps>;\n  endDateInputProps?: Partial<InputProps>;\n  phrases?: DateRangeInputPhrases;\n  showDivider?: boolean;\n  placement?: \"top\" | \"bottom\";\n  onFocusChange?(focusedInput: FocusedInput): void;\n  endIcon?: typeof CalendarIcon;\n  endId?: string;\n  endName?: string;\n  endPlaceholder?: string;\n  endRef?: Ref<HTMLInputElement>;\n  endShowCalendarIcon?: boolean;\n  startIcon?: typeof CalendarIcon;\n  startId?: string;\n  startName?: string;\n  startPlaceholder?: string;\n  startRef?: Ref<HTMLInputElement>;\n  startShowCalendarIcon?: boolean;\n  allowEditableInputs?: boolean;\n}\n\nexport const DateRangeInput: React.FC<DateRangeInputProps> = (props) => {\n  const {\n    endDate: endDateProp = null,\n    startDate: startDateProp = null,\n    focusedInput: focusedInputProp = null,\n    displayFormat = defaultDisplayFormat,\n    endShowCalendarIcon = true,\n    isDateBlocked = () => false,\n    minBookingDays = 1,\n    phrases = dateRangeInputPhrases,\n    placement = \"bottom\",\n    showClose = true,\n    showDivider = false,\n    showResetDates = true,\n    showSelectedDates = true,\n    startShowCalendarIcon = true,\n    onClose = () => {},\n    onDatesChange = () => {},\n    onFocusChange = () => {},\n    styles: customStyles,\n    overwriteDefaultStyles,\n    startIcon,\n    startId,\n    startName,\n    startPlaceholder,\n    startRef,\n    endId,\n    endName,\n    endRef,\n    endIcon,\n    endPlaceholder,\n    changeActiveMonthOnSelect,\n    dayLabelFormat,\n    exactMinBookingDays,\n    firstDayOfWeek,\n    initialVisibleMonth,\n    maxBookingDate,\n    minBookingDate,\n    monthLabelFormat,\n    numberOfMonths,\n    onDayRender,\n    unavailableDates,\n    weekdayLabelFormat,\n    allowEditableInputs,\n  } = props;\n\n  const datepickerRef = useRef<DatepickerElement>(null);\n  const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n  const [startDate, setStartDate] = useState<InputDate>(startDateProp);\n  const [endDate, setEndDate] = useState<InputDate>(endDateProp);\n  const [focusedInput, setFocusedInput] =\n    useState<FocusedInput>(focusedInputProp);\n\n  useEffect(() => {\n    setStartDate(startDateProp);\n    setEndDate(endDateProp);\n  }, [startDateProp, endDateProp]);\n\n  const styleProps = useStyleProps<DateRangeInputStyles>({\n    dateRangeInputContainer: { spacing: 5 },\n    dateRangeInputDivider: {},\n  });\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"click\", onClickOutsideHandler);\n    }\n    return () => {\n      window.removeEventListener(\"click\", onClickOutsideHandler);\n    };\n  });\n\n  function handleOnFocusChange(_focusedInput: FocusedInput) {\n    setFocusedInput(_focusedInput);\n    onFocusChange(_focusedInput);\n  }\n\n  function handleOnDatesChange(data: OnDatesChangeProps) {\n    setStartDate(data.startDate);\n    setEndDate(data.endDate);\n    setFocusedInput(data.focusedInput);\n    onDatesChange(data);\n  }\n\n  function onClickOutsideHandler(event: Event) {\n    if (\n      focusedInput !== null &&\n      datepickerWrapperRef &&\n      datepickerWrapperRef.current &&\n      // @ts-ignore\n      !datepickerWrapperRef.current.contains(event.target)\n    ) {\n      handleOnFocusChange(null);\n    }\n  }\n\n  function handleOnClose() {\n    handleOnFocusChange(null);\n    onClose();\n  }\n\n  function handleInputChange(date: Date) {\n    if (\n      datepickerRef &&\n      datepickerRef.current &&\n      datepickerRef.current.onDateSelect\n    ) {\n      datepickerRef.current.onDateSelect(date);\n    }\n  }\n\n  const isMobile = useBreakpointValue({ base: true, md: false });\n  const vertical = props.vertical || isMobile;\n\n  return (\n    <StylesProvider\n      styles={customStyles}\n      overwriteDefaultStyles={overwriteDefaultStyles}\n    >\n      <Box position=\"relative\" ref={datepickerWrapperRef}>\n        <Stack\n          isInline={!isMobile}\n          {...styleProps.dateRangeInputContainer}\n          data-testid=\"DateRangeInputGrid\"\n          divider={\n            showDivider ? (\n              <StackDivider {...styleProps.dateRangeInputDivider} />\n            ) : undefined\n          }\n        >\n          <Input\n            iconComponent={startIcon}\n            id={startId || \"startDate\"}\n            name={startName || \"startDate\"}\n            placeholder={startPlaceholder || phrases.startDatePlaceholder}\n            ref={startRef}\n            showCalendarIcon={startShowCalendarIcon}\n            aria-label={phrases.startDateAriaLabel}\n            dateFormat={displayFormat}\n            isActive={focusedInput === START_DATE}\n            onChange={handleInputChange}\n            onClick={() => handleOnFocusChange(START_DATE)}\n            value={getInputValue(startDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box textAlign=\"center\" w=\"20px\">\n            <ArrowForwardIcon alignSelf=\"center\" w={5} h=\"100%\" />\n          </Box>\n          <Input\n            id={endId || \"endDate\"}\n            name={endName || \"endDate\"}\n            ref={endRef}\n            iconComponent={endIcon}\n            placeholder={endPlaceholder || phrases.endDatePlaceholder}\n            showCalendarIcon={endShowCalendarIcon}\n            aria-label={phrases.endDateAriaLabel}\n            dateFormat={displayFormat}\n            disableAccessibility={focusedInput === START_DATE}\n            isActive={focusedInput === END_DATE}\n            onChange={handleInputChange}\n            onClick={() =>\n              handleOnFocusChange(!startDate ? START_DATE : END_DATE)\n            }\n            value={getInputValue(endDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n        </Stack>\n        <Box\n          position=\"absolute\"\n          top={placement === \"top\" ? undefined : vertical ? \"100px\" : \"45px\"}\n          bottom={\n            placement === \"bottom\" ? undefined : vertical ? \"100px\" : \"45px\"\n          }\n        >\n          {focusedInput !== null && (\n            <Datepicker\n              ref={datepickerRef}\n              startDate={startDate}\n              endDate={endDate}\n              focusedInput={focusedInput}\n              onClose={handleOnClose}\n              onDatesChange={handleOnDatesChange}\n              changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n              dayLabelFormat={dayLabelFormat}\n              exactMinBookingDays={exactMinBookingDays}\n              firstDayOfWeek={firstDayOfWeek}\n              initialVisibleMonth={initialVisibleMonth}\n              isDateBlocked={isDateBlocked}\n              maxBookingDate={maxBookingDate}\n              minBookingDate={minBookingDate}\n              minBookingDays={minBookingDays}\n              monthLabelFormat={monthLabelFormat}\n              numberOfMonths={vertical ? 1 : numberOfMonths}\n              onDayRender={onDayRender}\n              phrases={phrases}\n              unavailableDates={unavailableDates}\n              displayFormat={displayFormat}\n              showClose={showClose}\n              showResetDates={showResetDates}\n              showSelectedDates={showSelectedDates}\n              vertical={vertical}\n              weekdayLabelFormat={weekdayLabelFormat}\n            />\n          )}\n        </Box>\n      </Box>\n    </StylesProvider>\n  );\n};\n","import { Box } from \"@chakra-ui/react\";\nimport {\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from \"react\";\nimport { Input, InputProps } from \"./components\";\nimport { StylesProvider } from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { DateSingleInputPhrases, dateSingleInputPhrases } from \"./phrases\";\nimport { InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface OnDateChangeProps {\n  date: InputDate;\n  showDatepicker: boolean;\n}\n\nexport interface DateSingleInputProps\n  extends Partial<InputProps>,\n    Partial<DatepickerProps> {\n  onFocusChange?(focusInput: boolean): void;\n  phrases?: DateSingleInputPhrases;\n  placement?: \"top\" | \"bottom\";\n  showDatepicker?: boolean;\n  date?: InputDate;\n  showResetDate?: boolean;\n}\n\nexport const DateSingleInput = forwardRef(\n  (\n    {\n      date: dateProp = null,\n      showDatepicker: showDatepickerProp = false,\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      firstDayOfWeek,\n      iconComponent,\n      id = \"startDate\",\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      monthLabelFormat,\n      name = \"startDate\",\n      numberOfMonths = 1,\n      onChange = () => {},\n      onClick = () => {},\n      onClose = () => {},\n      onDayRender,\n      onFocusChange = () => {},\n      overwriteDefaultStyles,\n      phrases = dateSingleInputPhrases,\n      placeholder,\n      placement = \"bottom\",\n      showCalendarIcon = true,\n      showClose = true,\n      showResetDate = true,\n      styles,\n      unavailableDates = [],\n      value,\n      vertical = false,\n      weekdayLabelFormat,\n      allowEditableInputs = false,\n    }: DateSingleInputProps,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    const datepickerRef = useRef<DatepickerElement>(null);\n    const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [date, setDate] = useState<InputDate>(\n      value ? new Date(value) : dateProp\n    );\n    const [showDatepicker, setShowDatepicker] = useState(showDatepickerProp);\n\n    useEffect(() => {\n      onChange(date);\n    }, [date, onChange]);\n\n    useEffect(() => {\n      onFocusChange(showDatepicker);\n    }, [onFocusChange, showDatepicker]);\n\n    useEffect(() => {\n      if (typeof window !== \"undefined\") {\n        window.addEventListener(\"click\", onClickOutsideHandler);\n      }\n      return () => {\n        window.removeEventListener(\"click\", onClickOutsideHandler);\n      };\n    });\n\n    function handleOnFocusChange(show: boolean) {\n      setShowDatepicker(show);\n    }\n\n    function onClickOutsideHandler(event: Event) {\n      if (\n        showDatepicker &&\n        datepickerWrapperRef &&\n        datepickerWrapperRef.current &&\n        // @ts-ignore\n        !datepickerWrapperRef.current.contains(event.target)\n      ) {\n        handleOnFocusChange(false);\n      }\n    }\n\n    function handleDatepickerClose() {\n      handleOnFocusChange(false);\n      onClose();\n    }\n\n    function handleOnDatesChange(data: OnDatesChangeProps) {\n      handleOnFocusChange(data.focusedInput !== null);\n      setDate(data.startDate);\n    }\n\n    function handleInputChange(date: Date) {\n      if (\n        datepickerRef &&\n        datepickerRef.current &&\n        datepickerRef.current.onDateSelect\n      ) {\n        datepickerRef.current.onDateSelect(date);\n      }\n    }\n\n    return (\n      <StylesProvider\n        styles={styles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <Box position=\"relative\" ref={datepickerWrapperRef}>\n          <Input\n            ref={ref}\n            id={id}\n            name={name}\n            aria-label={phrases.dateAriaLabel}\n            value={getInputValue(date, displayFormat, \"\")}\n            placeholder={placeholder || phrases.datePlaceholder}\n            dateFormat={displayFormat}\n            showCalendarIcon={showCalendarIcon}\n            isActive={showDatepicker}\n            onChange={handleInputChange}\n            onClick={() => {\n              handleOnFocusChange(true);\n              onClick();\n            }}\n            disableAccessibility={false}\n            iconComponent={iconComponent}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box\n            position=\"absolute\"\n            top={placement === \"bottom\" ? \"45px\" : undefined}\n            bottom={placement === \"top\" ? \"45px\" : undefined}\n          >\n            {showDatepicker && (\n              <Datepicker\n                changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n                dayLabelFormat={dayLabelFormat}\n                displayFormat={displayFormat}\n                endDate={date}\n                exactMinBookingDays\n                firstDayOfWeek={firstDayOfWeek}\n                focusedInput={showDatepicker ? START_DATE : null}\n                initialVisibleMonth={initialVisibleMonth}\n                isDateBlocked={isDateBlocked}\n                maxBookingDate={maxBookingDate}\n                minBookingDate={minBookingDate}\n                minBookingDays={1}\n                monthLabelFormat={monthLabelFormat}\n                numberOfMonths={numberOfMonths}\n                onClose={handleDatepickerClose}\n                onDatesChange={handleOnDatesChange}\n                onDayRender={onDayRender}\n                phrases={phrases}\n                ref={datepickerRef}\n                showClose={showClose}\n                showResetDates={showResetDate}\n                showSelectedDates={false}\n                startDate={date}\n                unavailableDates={unavailableDates}\n                vertical={vertical}\n                weekdayLabelFormat={weekdayLabelFormat}\n              />\n            )}\n          </Box>\n        </Box>\n      </StylesProvider>\n    );\n  }\n);\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Button,\n  HStack,\n  Input,\n  Text,\n  useColorModeValue,\n  Divider,\n  IconButton,\n  Stack,\n  VStack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  CloseButton,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport {\n  cloneElement,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport EditableTableCell from \"../../components/EditableTableCell\";\nimport Creatable from \"react-select/creatable\";\n\nimport { useFps } from \"react-fps\";\nimport Select from \"react-select\";\nimport { Submission } from \"../../types/submission\";\nimport styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport Toast from \"../../components/Toast\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\n\nimport BaseTable, {\n  AutoResizer,\n  Column,\n  ColumnShape,\n  unflatten,\n} from \"react-base-table\";\nimport \"react-base-table/styles.css\";\nimport { RestAPI } from \"../../api/rest\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  BiPlusMedical,\n  RiFileExcel2Line,\n  RiUserFill,\n  RiGroupFill,\n  IoSave,\n} from \"react-icons/all\";\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\nimport { CheckTreePicker, TagPicker } from \"rsuite\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport { numberWithCommas } from \"../../utils/utils\";\n\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { FilterField, Template } from \"../../types/template\";\n\ninterface Props {\n  history: any;\n}\n\nconst numRegex = /[0-9]|\\./;\n\nconst DebugOverlay = styled.div`\n  width: 300px;\n  background: lightgray;\n  position: absolute;\n  bottom: 20px;\n  right: 20px;\n  padding: 5px 15px;\n  border-radius: 10px;\n  color: white;\n`;\n\nvar ProjectType: any[] = [];\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar InternationalVendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\nvar BUs: any[] = [];\nvar SapStatus: any[] = [\n  { label: \"Created\", value: \"created\" },\n  { label: \"None\", value: \"none\" },\n];\nvar CostStatuses: any[] = [\n  { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n  { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n  { label: \"Not Relevant\", value: \"Not Relevant\" },\n];\n\nvar defaultColumns = [\n  \"generalInformation\",\n  \"projectInformation\",\n  \"purchaseOrder\",\n  \"costInvoices\",\n  \"salesInvoices\",\n  \"costGlPostings\",\n  \"incomeGlPostings\",\n  \"projectResults\",\n  \"controlChecks\",\n  \"CMCT\",\n  \"LMD\",\n];\n\nasync function fetchDropdowns() {\n  var dropdownsIds: string[] = [\n    \"619b630a9a5a2bb37a93b23b\",\n    \"619b61419a5a2bb37a93b237\",\n    \"619b63429a5a2bb37a93b23d\",\n    \"619b62d79a5a2bb37a93b239\",\n    \"619b632c9a5a2bb37a93b23c\",\n    \"619b62959a5a2bb37a93b238\",\n    \"619b62f29a5a2bb37a93b23a\",\n    \"619b66defe27d06ad17d75ac\",\n    \"619b6754fe27d06ad17d75ad\",\n    \"619b6799fe27d06ad17d75ae\",\n    \"619b7b9efe27d06ad17d75af\",\n    \"619b7b9efe27d06ad17d75af\",\n    \"633e93ed5a7691ac30c977fc\",\n    \"636abbd43927f9c7703b19c4\",\n  ];\n  var responses = await Promise.all(\n    dropdownsIds.map((di) => {\n      return RestAPI.getDropdownValues(di);\n    })\n  );\n  PH1 = responses[0].data;\n  Companies = responses[1].data;\n  VendorsNames = responses[2].data;\n  CampaignChannel = responses[3].data;\n  TargetAudience = responses[4].data;\n  Budget = responses[5].data;\n  ExchangeRates = responses[6].data;\n  FiscalQuarter = responses[7].data;\n  Year = responses[8].data;\n  ProjectStartQuarter = responses[9].data;\n  ProjectType = responses[10].data;\n  BUs = responses[12].data;\n  InternationalVendorsNames = responses[13].data;\n}\n\nconst loadOptions = (identifier: string) => {\n  switch (identifier) {\n    case \"data.budgetSource\":\n      return Budget;\n    case \"data.projectType\":\n      return ProjectType;\n    case \"data.ph1\":\n      return PH1;\n    case \"data.campaignChannel\":\n      return CampaignChannel;\n    case \"data.targetAudience\":\n      return TargetAudience;\n    case \"data.budgetCurrency\" ||\n      \"data.vendorBudgetCurrency\" ||\n      \"data.campaignCurrency\":\n      return ExchangeRates;\n    case \"data.buLMD\":\n      return BUs;\n    case \"data.sapStatus\":\n      return SapStatus;\n    case \"data.caVendorName\":\n    case \"data.vendorName\":\n    case \"data.vendorNameSA\":\n      return VendorsNames;\n    case \"data.statusLMD\":\n      return [\n        { label: \"OK FOR INVOICING\", value: \"OK FOR INVOICING\" },\n        { label: \"FUTURE INVOICE\", value: \"FUTURE INVOICE\" },\n        { label: \"INVOICED\", value: \"INVOICED\" },\n        { label: \"INCOMPLETE\", value: \"INCOMPLETE\" },\n        { label: \"OK FOR CANCELLATION\", value: \"OK FOR CANCELLATION\" },\n        { label: \"CANCELLED\", value: \"CANCELLED\" },\n      ];\n    case \"data.purchaseOrderStatus\":\n      return [\n        { label: \"Invoice Received\", value: \"Invoice Received\" },\n        { label: \"Invoice Not Received\", value: \"Invoice Not Received\" },\n      ];\n    case \"data.costStatus\":\n      return [\n        { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n        { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n      ];\n    case \"data.invoiceStatusSI\":\n      return [\n        { label: \"Paid\", value: \"Paid\" },\n        { label: \"Not Paid\", value: \"Not Paid\" },\n      ];\n  }\n  return [];\n};\n\nfunction bytesToSize(bytes: number) {\n  var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  if (bytes == 0) return \"0 Byte\";\n  var i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, i)).toFixed(2) + \" \" + sizes[i];\n}\n\nconst filterTypes = {\n  string: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  dropdown: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  \"multiple-dropdown\": [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  date: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n};\n\nconst DisplayedColumnsList = [\n  {\n    label: \"General Information\",\n    value: \"generalInformation\",\n    children: [\n      { label: \"Company Code\", value: \"data.companyCode\", type: \"string\" },\n      { label: \"Project Number\", value: \"data.projectNumber\", type: \"string\" },\n      {\n        label: \"Local Project Number\",\n        value: \"data.localProjectNumber\",\n        type: \"string\",\n      },\n      { label: \"Project Name\", value: \"data.projectName\", type: \"string\" },\n      {\n        label: \"Campaign Start Date\",\n        value: \"data.campaignStartDate\",\n        type: \"date\",\n      },\n      {\n        label: \"Campaign End Date\",\n        value: \"data.campaignEndDate\",\n        type: \"date\",\n      },\n      { label: \"Project Type\", value: \"data.projectType\", type: \"dropdown\" },\n      { label: \"Author\", value: \"author\", type: \"string\" },\n      { label: \"Status\", value: \"data.status\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Project Information\",\n    value: \"projectInformation\",\n    children: [\n      { label: \"Countries EMEA\", value: \"data.country\", type: \"string\" },\n      {\n        label: \"Country Code EMEA\",\n        value: \"data.countryCodeEMEA\",\n        type: \"string\",\n      },\n      {\n        label: \"Parent Project Number\",\n        value: \"data.parentProjectNumber\",\n        type: \"string\",\n      },\n      { label: \"% Country Share\", value: \"data.countryShare\", type: \"number\" },\n      {\n        label: \"Country Budget Contribution (Campaign Currency)\",\n        value: \"data.countryBudgetContributionCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Country Cost Estimation (Campaign Currency)\",\n        value: \"data.countryCostEstimationCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Manufacturer Number\",\n        value: \"data.manufacturerNumber\",\n        type: \"string\",\n      },\n      { label: \"Vendor Name\", value: \"data.vendorName\", type: \"dropdown\" },\n      {\n        label: \"SAP Debitor Number\",\n        value: \"data.debitorNumber\",\n        type: \"string\",\n      },\n      // {\n      //   label: \"SAP Creditor Number\",\n      //   value: \"data.creditorNumber\",\n      //   type: \"string\",\n      // },\n      { label: \"Budget Source\", value: \"data.budgetSource\", type: \"dropdown\" },\n      {\n        label: \"Vendor Budget Currency\",\n        value: \"data.vendorBudgetCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Vendor Amount\",\n        value: \"data.vendorAmount\",\n        type: \"number\",\n      },\n      {\n        label: \"Campaign Currency\",\n        value: \"data.campaignCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Estimated Income (Campaign Currency)\",\n        value: \"data.estimatedIncomeCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs (Campaign Currency)\",\n        value: \"data.estimatedCostsCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result (Campaign Currency)\",\n        value: \"data.estimatedResultCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Income EUR\",\n        value: \"data.estimatedIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs EUR\",\n        value: \"data.estimatedCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result EUR\",\n        value: \"data.estimatedResultEUR\",\n        type: \"number\",\n      },\n      { label: \"% Vendor Share\", value: \"data.vendorShare\", type: \"number\" },\n      { label: \"Business Unit\", value: \"data.businessUnit\", type: \"string\" },\n      { label: \"PH1\", value: \"data.PH1\", type: \"string\" },\n      {\n        label: \"Campaign Channel\",\n        value: \"data.campaignChannel\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Target Audience\",\n        value: \"data.targetAudience\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Marketing Responsible\",\n        value: \"data.marketingResponsible\",\n        type: \"string\",\n      },\n      {\n        label: \"Project Approver\",\n        value: \"data.projectApprover\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.additionalInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Purchase Order\",\n    value: \"purchaseOrder\",\n    children: [\n      {\n        label: \"Purchase Order Service Provider\",\n        value: \"data.purchaseOrderServiceProvider\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor Name\",\n        value: \"data.vendorNamePO\",\n        type: \"string\",\n      },\n      {\n        label: \"Net Value of Service Ordered (LC)\",\n        value: \"data.netValueOfServiceOrderedLC\",\n        type: \"string\",\n      },\n      { label: \"Local Currency\", value: \"data.localCurrency\", type: \"string\" },\n      {\n        label: \"Net Value (Purchase Order Currency)\",\n        value: \"data.netValuePOC\",\n        type: \"string\",\n      },\n      {\n        label: \"Purchase Order Currency\",\n        value: \"data.purchaseOrderCurrency\",\n        type: \"string\",\n      },\n      { label: \"Net Value (EUR)\", value: \"data.netValueEur\", type: \"string\" },\n      {\n        label: \"Purchase Order Status\",\n        value: \"data.purchaseOrderStatus\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost Invoices\",\n    value: \"costInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonth\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentType\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDate\", type: \"date\" },\n      { label: \"Document Date\", value: \"data.documentDate\", type: \"date\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumber\",\n        type: \"string\",\n      },\n      { label: \"Invoice Number\", value: \"data.invoiceNumber\", type: \"string\" },\n      { label: \"Cost Account\", value: \"data.costAccount\", type: \"string\" },\n      { label: \"Invoice Supplier\", value: \"data.name1\", type: \"string\" },\n      { label: \"Cost Amount (LC)\", value: \"data.costAmountLC\", type: \"string\" },\n      { label: \"Cost Amount (DC)\", value: \"data.costAmountDC\", type: \"string\" },\n      { label: \"DC\", value: \"data.dc\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEUR\",\n        type: \"number\",\n      },\n      { label: \"Cost Status\", value: \"data.costStatus\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Sales Invoices\",\n    value: \"salesInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthSI\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentTypeSI\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDateSI\", type: \"date\" },\n      { label: \"Document Date\", value: \"data.documentDateSI\", type: \"date\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberSI\",\n        type: \"string\",\n      },\n\n      {\n        label: \"Invoice Number\",\n        value: \"data.invoiceNumberSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountSI\",\n        type: \"string\",\n      },\n      { label: \"Invoice Recipient\", value: \"data.name1SI\", type: \"string\" },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCSI\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcSI\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEURSI\",\n        type: \"number\",\n      },\n      {\n        label: \"Invoice Status (Paid/Not Paid)\",\n        value: \"data.invoiceStatusSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Activity ID for Portal Vendors\",\n        value: \"data.activityIdSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Marketing Information\",\n        value: \"data.additionalMarketingInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost GL Postings\",\n    value: \"costGlPostings\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthCostGL\", type: \"string\" },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateCostGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateCostGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Account\",\n        value: \"data.costAccountCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (LC)\",\n        value: \"data.costAmountLCCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (DC)\",\n        value: \"data.costAmountDCCostGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcCostGL\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEURCostGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Income GL Postings\",\n    value: \"incomeGlPostings\",\n    children: [\n      {\n        label: \"Year / Month\",\n        value: \"data.yearMonthIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateIncomeGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateIncomeGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCIncomeGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcIncomeGL\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEurIncomeGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Project Results\",\n    value: \"projectResults\",\n    children: [\n      {\n        label: \"Total Income (LC)\",\n        value: \"data.totalIncomeLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs (LC)\",\n        value: \"data.totalCostsLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Profit (LC)\",\n        value: \"data.totalProfitLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Loss (LC)\",\n        value: \"data.totalLossLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income (EUR)\",\n        value: \"data.totalIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs (EUR)\",\n        value: \"data.totalCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Profit (EUR)\",\n        value: \"data.totalProfitEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Loss (EUR)\",\n        value: \"data.totalLossEUR\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Control Checks\",\n    value: \"controlChecks\",\n    children: [\n      {\n        label: \"Total Costs In Tool (LC)\",\n        value: \"data.totalCostsTool\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs in SAP (LC)\",\n        value: \"data.totalCostsSAP\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income in Tool (LC)\",\n        value: \"data.totalIncomeTool\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income in SAP (LC)\",\n        value: \"data.totalIncomeSAP\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Input of Central Marketing Controlling Team\",\n    value: \"CMCT\",\n    children: [\n      {\n        label: \"Status\",\n        value: \"data.statusCMCT\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"SAP Document Number\",\n        value: \"data.documentNumberCMCT\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.infoCMCT\",\n        type: \"string\",\n      },\n      {\n        label: \"Date\",\n        value: \"data.dateCMCT\",\n        type: \"date\",\n      },\n      {\n        label: \"Operator\",\n        value: \"data.operatorCMCT\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Input of Local Marketing Department\",\n    value: \"LMD\",\n    children: [\n      {\n        label: \"Status\",\n        value: \"data.statusLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Date of Invoicing\",\n        value: \"data.invoicingDateLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Requestor\",\n        value: \"data.requestorLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor\",\n        value: \"data.vendorLMD\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"VOD\",\n        value: \"data.vodLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"BU\",\n        value: \"data.buLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Request Date\",\n        value: \"data.requestDateLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Invoice Type\",\n        value: \"data.invoiceTypeLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Cancellation Information\",\n        value: \"data.cancellationInfoLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Currency\",\n        value: \"data.documentCurrencyLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Material Number\",\n        value: \"data.materialNumberLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Reason\",\n        value: \"data.reasonLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Amount\",\n        value: \"data.amountLMD\",\n        type: \"number\",\n      },\n      {\n        label: \"Additional Info on Invoice\",\n        value: \"data.additionalInvoiceInfoLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Dunning Stop?\",\n        value: \"data.dunningStopLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Payment Method\",\n        value: \"data.paymentMethodLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Deposit Number\",\n        value: \"data.depositNumberLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Send to\",\n        value: \"data.sendToLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Comment\",\n        value: \"data.additionalCommentLMD\",\n        type: \"string\",\n      },\n    ],\n  },\n];\n\nconst DisplayedColumnsListOptions = DisplayedColumnsList.map((group: any) => {\n  return group.children.map((column: any) => {\n    return {\n      label: `${column.label} (${group.label})`,\n      value: column.value,\n      type: column.type,\n    };\n  });\n}).flat(1);\n\nexport function SubmissionsTable(props: Props) {\n  const [selectedTemplate, setSelectedTemplate] = useState(\"local\");\n  const [templates, setTemplates] = useState<Template[]>([]);\n  const [sourceSubmissions, setSourceSubmissions] = useState(new Map());\n  const [currentUser, setCurrentUser] = useState({ displayName: \"unknown\" });\n  const [debugOverlayHidden, hideDebugOverlay] = useState(true);\n  const [filters, setFilters] = useState<FilterField[]>([]);\n  const [displayedColumns, setDisplayedColumns] =\n    useState<string[]>(defaultColumns);\n  const [totalCostAmount, setTotalCostAmount] = useState(0);\n  const [totalCostAmountCostGL, setTotalCostAmountCostGL] = useState(0);\n  const [totalCostAmountLC, setTotalCostAmountLC] = useState(0);\n  const [totalCostAmountLCCostGL, setTotalCostAmountLCCostGL] = useState(0);\n  const [totalIncomeAmount, setTotalIncomeAmount] = useState(0);\n  const [totalIncomeAmountLCIncomeGL, setTotalIncomeAmountLCIncomeGL] =\n    useState(0);\n  const [totalIncomeAmountIncomeGL, setTotalIncomeAmountIncomeGL] = useState(0);\n  const [totalIncomeAmountLC, setTotalIncomeAmountLC] = useState(0);\n  const [totalCostsInTool, setTotalCostsInTool] = useState(0);\n  const [totalIncomeInTool, setTotalIncomeInTool] = useState(0);\n  const [totalCostsInToolEUR, setTotalCostsInToolEUR] = useState(0);\n  const [totalIncomeInToolEUR, setTotalIncomeInToolEUR] = useState(0);\n  // const { fps, avgFps } = useFps(20);\n  const [tableWidth, setTableWidth] = useState(1000);\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<Submission[]>(\n    []\n  );\n  const [\n    filteredCommunicationSubmissions,\n    setFilteredCommunicationSubmissions,\n  ] = useState<Submission[]>([]);\n  const [communicationSubmissions, setCommunicationSubmissions] = useState<\n    Submission[]\n  >([]);\n  const [onlyMine, setOnlyMine] = useState(false);\n  const [scrollLeft, setScrollLeft] = React.useState(0);\n  const [defaultColumnsWidth, setDefaultColumnsWidth] = useState({});\n  const onScroll = React.useCallback(\n    (args) => {\n      if (args.scrollLeft !== scrollLeft) {\n        setScrollLeft(args.scrollLeft);\n      }\n    },\n    [scrollLeft]\n  );\n  // const [heapInfo, setHeapInfo] = useState<any>({\n  //   total: 0,\n  //   allocated: 0,\n  //   current: 0,\n  //   domSize: 0,\n  // });\n  const [totalRequests, setTotalRequests] = useState(1);\n\n  useEffect(() => {\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  // useEffect(() => {\n  //   getHeapInfo();\n  //   const interval = setInterval(() => {\n  //     getHeapInfo();\n  //   }, 5000);\n\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  useEffect(() => {\n    let tca = 0;\n    let tcal = 0;\n    let tcit = 0;\n    let tiit = 0;\n    let tcite = 0;\n    let tiite = 0;\n    let tcacgl = 0;\n    let tia = 0;\n    let tial = 0;\n    let tcalcgl = 0;\n    let tialigl = 0;\n    let tiaigl = 0;\n    filteredSubmissions.forEach((subm) => {\n      if (subm.parentId === null) {\n        tca += subm.data.costAmountEUR || 0;\n        tcacgl += subm.data.costAmountEURCostGL || 0;\n        tcal += subm.data.costAmountLC || 0;\n        tia += subm.data.incomeAmountEURSI || 0;\n        tial += subm.data.incomeAmountLCSI || 0;\n        tcalcgl += subm.data.costAmountLCCostGL || 0;\n        tialigl += subm.data.incomeAmountLCIncomeGL || 0;\n        tiaigl += subm.data.incomeAmountEurIncomeGL || 0;\n      }\n    });\n    tcit = -(tcal + tcalcgl);\n    tiit = -(tial + tialigl);\n    tcite = -(tca + tcacgl);\n    tiite = -(tia + tiaigl);\n    setTotalCostAmount(tca);\n    setTotalCostAmountCostGL(tcacgl);\n    setTotalCostAmountLC(tcal);\n    setTotalCostAmountLCCostGL(tcalcgl);\n    setTotalIncomeAmount(tia);\n    setTotalIncomeAmountLCIncomeGL(tialigl);\n    setTotalIncomeAmountLC(tial);\n    setTotalIncomeAmountIncomeGL(tiaigl);\n    setTotalCostsInTool(tcit);\n    setTotalIncomeInTool(tiit);\n    setTotalCostsInToolEUR(tcite);\n    setTotalIncomeInToolEUR(tiite);\n    forceUpdate();\n  }, [filteredSubmissions]);\n\n  useEffect(() => {\n    var filteredMap = new Map();\n    var filtered: Submission[] = [];\n    var cFilteredMap = new Map();\n    var filteredCommunication: Submission[] = [];\n\n    var f: FilterField[] = JSON.parse(JSON.stringify(filters));\n\n    if (onlyMine) {\n      f.push({\n        columnValue: \"author\",\n        columnLabel: \"Author\",\n        type: \"string\",\n        filter: \"exact\",\n        values: [],\n        selectedValues: [currentUser.displayName],\n      } as FilterField);\n    }\n    if (f.length > 0 && submissions.length > 0) {\n      submissions.forEach((submission) => {\n        var valid = true;\n\n        for (let filter of f) {\n          if (\n            filter.columnLabel.includes(\n              \"Input of Local Marketing Department\"\n            ) ||\n            filter.columnLabel.includes(\n              \"Input of Central Marketing Controlling Team\"\n            )\n          ) {\n            return;\n          }\n\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"string\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    if (\n                      filter.columnValue === \"data.documentNumber\" ||\n                      filter.columnValue === \"data.costAccount\" ||\n                      filter.columnValue === \"data.documentNumberSI\" ||\n                      filter.columnValue === \"data.incomeAccountSI\" ||\n                      filter.columnValue === \"data.documentNumberCostGL\" ||\n                      filter.columnValue === \"data.costAccountCostGL\" ||\n                      filter.columnValue === \"data.documentNumberIncomeGL\" ||\n                      filter.columnValue === \"data.incomeAccountIncomeGL\"\n                    ) {\n                      valid = value\n                        .toString()\n                        .endsWith(filter.selectedValues[0].toString());\n                    } else {\n                      valid =\n                        filter.selectedValues[0].toString() ===\n                        value.toString();\n                    }\n                    break;\n                  case \"includes\":\n                    if (\n                      !value\n                        .toString()\n                        .includes(filter.selectedValues[0].toString())\n                    ) {\n                      valid = false;\n                    }\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    // eslint-disable-next-line no-loop-func\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n          if (!valid) {\n            return;\n          }\n        }\n\n        if (valid) {\n          // submission.parentId = null;\n          // if (submission.parentId !== null) {\n          //   var parent = sourceSubmissions.get(submission.parentId);\n          //   if (parent !== undefined && parent.id !== undefined) {\n          //     filteredMap.set(parent.id, parent);\n          //   }\n          //   submissions.forEach((s) => {\n          //     if (s.parentId === submission.parentId) {\n          //       filteredMap.set(s.id, s);\n          //     }\n          //   });\n          // }\n          filteredMap.set(submission.id, submission);\n        }\n      });\n      ///\n      communicationSubmissions.forEach((submission) => {\n        var valid = true;\n        filters.forEach((filter) => {\n          if (\n            !filter.columnLabel.includes(\n              \"Input of Local Marketing Department\"\n            ) &&\n            !filter.columnLabel.includes(\n              \"Input of Central Marketing Controlling Team\"\n            )\n          ) {\n            return;\n          }\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"string\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          // submission.parentId = null;\n          // if (submission.parentId !== null) {\n          //   var parent = sourceSubmissions.get(submission.parentId);\n          //   if (parent !== undefined && parent.id !== undefined) {\n          //     cFilteredMap.set(parent.id, parent);\n          //   }\n          // }\n          cFilteredMap.set(submission.id, submission);\n        }\n      });\n      ///\n\n      cFilteredMap.forEach((value) => {\n        if (value.parentId !== null) {\n          if (!cFilteredMap.has(value.parentId)) {\n            value.parentId = null;\n          }\n        }\n        filteredCommunication.push(value);\n      });\n      filteredMap.forEach((value) => {\n        if (value.parentId !== null) {\n          if (!filteredMap.has(value.parentId)) {\n            value.parentId = null;\n          }\n        }\n        filtered.push(value);\n      });\n\n      setFilteredCommunicationSubmissions(filteredCommunication);\n      setFilteredSubmissions(filtered);\n    } else {\n      setFilteredSubmissions(submissions);\n      setFilteredCommunicationSubmissions(communicationSubmissions);\n    }\n  }, [filters, submissions, communicationSubmissions, onlyMine]);\n\n  // const getHeapInfo = () => {\n  //   var memory = (window.performance as any).memory;\n  //   if (memory !== undefined) {\n  //     var info: any = {\n  //       total: memory.jsHeapSizeLimit,\n  //       allocated: memory.totalJSHeapSize,\n  //       current: memory.usedJSHeapSize,\n  //       domSize: document.getElementsByTagName(\"*\").length,\n  //     };\n  //     setHeapInfo(info);\n  //   }\n  // };\n  const getVisibleColumnIndices = (offset: number, columns: any) => {\n    var netOffsets: any[] = [],\n      offsetSum = 0,\n      leftBound = offset - 200,\n      rightBound = offset + tableWidth,\n      visibleIndices: any[] = [];\n\n    columns.forEach((col: any) => {\n      netOffsets.push(offsetSum);\n      offsetSum += col.width;\n    });\n\n    netOffsets.forEach((columnOffset, colIdx) => {\n      var isOutside = columnOffset < leftBound || columnOffset > rightBound;\n      if (!isOutside) {\n        visibleIndices.push(colIdx);\n      }\n    });\n\n    return visibleIndices;\n  };\n  // ________________________________\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // --------------------------------\n\n  // // rightBound = offset+tableWidth;\n  //  <-------------*--------------->\n  //  <-------------************---->\n\n  //  // leftBound = offset;\n  //  <-------------*--------------->\n  //  <--************--------------->\n\n  // leftBound = offset - maxColumnWidth;\n\n  //                 offset ->\n  // ********<---------------|--------------->*********\n  //         leftBound       -      rightBound\n\n  // leftBound = offset;\n  // rightBound = tableWidth;\n\n  // isOutside = columnOffset < leftBound || columnOffset > rightBound;\n\n  // if (!isOutside) {\n  //     // render column\n  // } else {\n  //     // remove from DOM\n  // }\n  const rowRenderer = React.useCallback(\n    ({ cells, columns }) => {\n      // null out hidden content on scroll\n      if (cells.length === 89) {\n        const visibleIndices = getVisibleColumnIndices(scrollLeft, columns);\n        const startIndex = visibleIndices[0];\n        const visibleCells = visibleIndices.map((x) => cells[x]);\n\n        if (startIndex > 0) {\n          let width = 0;\n          for (let i = 0; i < visibleIndices[0]; i++) {\n            width += cells[i].props.style.width;\n          }\n\n          const placeholder = <div key=\"placeholder\" style={{ width }} />;\n          return [placeholder, visibleCells];\n        }\n        return visibleCells;\n      }\n\n      return cells;\n    },\n    [scrollLeft]\n  );\n\n  async function partialUpdate(submission: string, path: string, value: any) {\n    setTotalRequests(totalRequests + 1);\n    if (path.includes(\"[\")) {\n      var s = path.split(\".\");\n      s.shift();\n      path = s.join(\".\");\n    }\n    RestAPI.updateSubmissionPartial(submission, path, value);\n  }\n\n  function handleCellUpdate(submission: string, path: string, value: any) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submission);\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n      if (_.get(submissions, path) !== value) {\n        _.set(submissions, path, value);\n        partialUpdate(submission, path, value);\n      }\n    }\n  }\n  function handleCommunicationCellUpdate(\n    submission: string,\n    path: string,\n    value: any\n  ) {\n    var submissionIndex = communicationSubmissions.findIndex(\n      (s) => s.id === submission\n    );\n\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n\n      if (_.get(communicationSubmissions, path) !== value) {\n        _.set(communicationSubmissions, path, value);\n        partialUpdate(submission, path, value);\n        var datePath = `[${submissionIndex}].data.entryDateLMD`;\n        if (_.get(communicationSubmissions, datePath) === undefined) {\n          _.set(communicationSubmissions, datePath, new Date());\n          partialUpdate(submission, datePath, new Date().toString());\n        }\n      }\n    }\n  }\n  function deleteSubmission(submissionId: string) {\n    var tbd: string[] = [submissionId];\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp.splice(submissionIndex, 1);\n      temp.map((s, index) => {\n        if (s.parentId !== null && s.parentId === submissionId) {\n          if (s.id) {\n            temp.splice(index, 1);\n            tbd.push(s.id);\n          }\n        }\n      });\n      setSubmissions(temp);\n      RestAPI.deleteSubmission(submissionId);\n    }\n  }\n  function parentizeSubmission(submissionId: string) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp[submissionIndex].parentId = null;\n      partialUpdate(submissionId, \"parentId\", null);\n      setSubmissions(temp);\n    }\n  }\n  function callSap(submissionId: string) {\n    RestAPI.callSapSubmission(submissionId)\n      .then((response) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div dangerouslySetInnerHTML={{ __html: response.data }} />\n            }\n            type={\"success\"}\n          />\n        );\n        handleCellUpdate(submissionId, \"data.status\", \"Created\");\n      })\n      .catch((error) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div dangerouslySetInnerHTML={{ __html: error.response.data }} />\n            }\n            type={\"error\"}\n          />\n        );\n      });\n  }\n\n  async function handleResize(column: string, width: number) {\n    var c = localStorage.getItem(\"vendors.columns\");\n    var columns = {} as any;\n    if (c !== null) {\n      columns = JSON.parse(c);\n    }\n    columns[column] = width;\n    localStorage.setItem(\"vendors.columns\", JSON.stringify(columns));\n  }\n\n  function columnWidth(column: string, dw: number) {\n    var sd = (defaultColumnsWidth as any)[column];\n    return sd ? sd : dw;\n  }\n  //   async function saveCellWidth(cell: string, width: number) {\n  //     localStorage.setItem(cell, width.toString());\n  //   }\n  //   function getCellWidth(cell: string, defaultWidth: number) {\n  //     console.log(\"get\");\n  //     var value = localStorage.getItem(cell);\n  //     if (value !== null) {\n  //       return Number(value);\n  //     }\n  //     return defaultWidth;\n  //   }\n\n  useEffect(() => {\n    var selected = localStorage.getItem(\"template\") || \"local\";\n    setSelectedTemplate(selected);\n    var template = templates.find((t) => t.name == selected);\n    if (template) {\n      setDisplayedColumns(template.columns);\n      setFilters(template.filters);\n    }\n  }, [templates]);\n\n  useEffect(() => {\n    localStorage.setItem(\"template\", selectedTemplate);\n  }, [selectedTemplate]);\n\n  useEffect(() => {\n    RestAPI.getTemplates().then((response) => setTemplates(response.data));\n    RestAPI.getSubmissions().then((response) => {\n      var vSubs: Submission[] = [];\n      var subs = response.data;\n      var ss = new Map();\n      var cSubs: Submission[] = [];\n\n      subs.forEach((sub) => {\n        if (sub.group === \"communication\") {\n          cSubs.push(sub);\n        } else {\n          vSubs.push(sub);\n        }\n        ss.set(sub.id, sub);\n      });\n\n      vSubs.map((sub) => {\n        if (sub.parentId === null) {\n          sub.data.costAmountLC = 0;\n          sub.data.costAmountEUR = 0;\n          sub.data.incomeAmountLCSI = 0;\n          sub.data.incomeAmountEURSI = 0;\n          sub.data.costAmountLCCostGL = 0;\n          sub.data.costAmountEURCostGL = 0;\n          sub.data.incomeAmountLCIncomeGL = 0;\n          sub.data.incomeAmountEurIncomeGL = 0;\n          sub.data.totalIncomeLC = 0;\n          sub.data.totalCostsLC = 0;\n          sub.data.totalIncomeEUR = 0;\n          sub.data.totalCostsEUR = 0;\n          sub.data.totalCostsTool = 0;\n          sub.data.totalIncomeTool = 0;\n          vSubs\n            .filter((s) => s.parentId === sub.id)\n            .forEach((cs) => {\n              sub.data.costAmountLC += cs.data.costAmountLC || 0;\n              sub.data.costAmountEUR += cs.data.costAmountEUR || 0;\n              sub.data.incomeAmountLCSI += cs.data.incomeAmountLCSI || 0;\n              sub.data.incomeAmountEURSI += cs.data.incomeAmountEURSI || 0;\n              sub.data.costAmountLCCostGL += cs.data.costAmountLCCostGL || 0;\n              sub.data.costAmountEURCostGL += cs.data.costAmountEURCostGL || 0;\n              sub.data.incomeAmountLCIncomeGL +=\n                cs.data.incomeAmountLCIncomeGL || 0;\n              sub.data.incomeAmountEurIncomeGL +=\n                cs.data.incomeAmountEurIncomeGL || 0;\n              sub.data.totalIncomeLC += -(\n                cs.data.incomeAmountLCSI ||\n                0 + cs.data.incomeAmountLCIncomeGL ||\n                0\n              );\n              sub.data.totalCostsLC += -(\n                cs.data.costAmountLC ||\n                0 + cs.data.costAmountLCCostGL ||\n                0\n              );\n              sub.data.totalIncomeEUR += -(\n                cs.data.incomeAmountEURSI ||\n                0 + cs.data.incomeAmountEURIncomeGL ||\n                0\n              );\n              sub.data.totalCostsEUR += -(\n                cs.data.costAmountEUR ||\n                0 + cs.data.costAmountEURCostGL ||\n                0\n              );\n              sub.data.totalCostsTool +=\n                cs.data.costAmountLC || 0 + cs.data.costAmountLCCostGL || 0;\n              sub.data.totalIncomeTool +=\n                cs.data.incomeAmountLCSI ||\n                0 + cs.data.incomeAmountLCIncomeGL ||\n                0;\n            });\n        }\n      });\n\n      setCommunicationSubmissions(cSubs);\n      setFilteredCommunicationSubmissions(cSubs);\n      setSourceSubmissions(ss);\n      setSubmissions(vSubs);\n      setFilteredSubmissions(vSubs);\n    });\n  }, []);\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setCurrentUser(response);\n      }\n    });\n  }, []);\n\n  function findSubmissionsByPO(po: string) {\n    var s: Submission[] = [];\n    var parent = submissions.find(\n      (submission) =>\n        submission.data.projectNumber === po && submission.parentId === null\n    );\n    if (parent !== undefined) {\n      s.push(parent);\n      s.push(...submissions.filter((sub) => sub.parentId === parent?.id));\n    }\n    return s;\n  }\n\n  function visibilityController(group: string, key: string) {\n    return !displayedColumns.includes(group) && !displayedColumns.includes(key);\n  }\n\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.companyCode\",\n      dataKey: \"data.companyCode\",\n      title: \"Company Code\",\n      header: \"General Information\",\n      group: \"General Information\",\n      width: columnWidth(\"data.companyCode\", 150),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.companyCode\"),\n      type: \"number\",\n      // className: \"dark-green-3-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectNumber\",\n      dataKey: \"data.projectNumber\",\n      title: \"Project Number\",\n      width: columnWidth(\"data.projectNumber\", 150),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\"generalInformation\", \"data.projectNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localProjectNumber\",\n      dataKey: \"data.localProjectNumber\",\n      title: \"Local Project Number\",\n      width: columnWidth(\"data.localProjectNumber\", 150),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.localProjectNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectName\",\n      dataKey: \"data.projectName\",\n      title: \"Project Name\",\n      width: columnWidth(\"data.projectName\", 200),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\"generalInformation\", \"data.projectName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignStartDate\",\n      dataKey: \"data.campaignStartDate\",\n      title: \"Campaign Start Date\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.campaignStartDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.campaignStartDate\"\n      ),\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignEndDate\",\n      dataKey: \"data.campaignEndDate\",\n      title: \"Campaign End Date\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.campaignEndDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.campaignEndDate\"\n      ),\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectType\",\n      dataKey: \"data.projectType\",\n      title: \"Project Type\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.projectType\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.projectType\"),\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          loadOptions={loadOptions}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"author\",\n      dataKey: \"author\",\n      title: \"Author\",\n      group: \"General Information\",\n      width: columnWidth(\"author\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"author\"),\n      type: \"text\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.status\",\n      dataKey: \"data.status\",\n      title: \"Status\",\n      group: \"General Information\",\n      width: columnWidth(\"data.status\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.status\"),\n      type: \"text\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.country\",\n      dataKey: \"data.country\",\n      title: \"Countries EMEA\",\n      header: \"Project Information\",\n      width: columnWidth(\"data.country\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.country\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCodeEMEA\",\n      dataKey: \"data.countryCodeEMEA\",\n      title: \"Country Code EMEA\",\n      width: columnWidth(\"data.countryCodeEMEA\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCodeEMEA\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.parentProjectNumber\",\n      dataKey: \"data.parentProjectNumber\",\n      title: \"Parent Project Number\",\n      width: columnWidth(\"data.parentProjectNumber\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.parentProjectNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.countryShare\",\n      dataKey: \"data.countryShare\",\n      title: \"% Country Share\",\n      width: columnWidth(\"data.countryShare\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.countryShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryBudgetContributionCC\",\n      dataKey: \"data.countryBudgetContributionCC\",\n      title: \"Country Budget Contribution (CC)\",\n      width: columnWidth(\"data.countryBudgetContributionCC\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryBudgetContributionCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCostEstimationCC\",\n      dataKey: \"data.countryCostEstimationCC\",\n      title: \"Country Cost Estimation (CC)\",\n      width: columnWidth(\"data.countryCostEstimationCC\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCostEstimationCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    // {\n    //   key: \"data.manufacturerNumber\",\n    //   dataKey: \"data.manufacturerNumber\",\n    //   title: \"Manufacturer Number\",\n    //   group: \"Project Information\",\n\n    //   width: columnWidth(\"data.manufacturerNumber\", 200),\n    //   resizable: true,\n    //   hidden: visibilityController(\n    //     \"projectInformation\",\n    //     \"data.manufacturerNumber\"\n    //   ),\n    //   cellRenderer: (props: any) => (\n    //     <EditableTableCell\n    //       type={\"text\"}\n    //       readonly={props.rowData.data.status !== \"Incomplete\"}\n    //       backgroundColor={\n    //         props.rowData.data.status === \"Incomplete\"\n    //           ? props.cellData && props.cellData.length > 0\n    //             ? \"#f5faef\"\n    //             : \"#f7cdd6\"\n    //           : \"#f5faef\"\n    //       }\n    //       onUpdate={handleCellUpdate}\n    //       rowIndex={props.rowIndex}\n    //       columnKey={props.column.dataKey}\n    //       rowData={props.rowData}\n    //       initialValue={props.cellData}\n    //     />\n    //   ),\n    // },\n    {\n      key: \"data.manufacturerNumber\",\n      dataKey: \"data.manufacturerNumber\",\n      title: \"Manufacturer Number\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.manufacturerNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.manufacturerNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"value-dropdown\"}\n          readonly={props.rowData.data.status !== \"Incomplete\"}\n          loadOptions={() => {\n            return props.rowData.data.companyCode === \"1550\"\n              ? InternationalVendorsNames\n              : VendorsNames;\n          }}\n          backgroundColor={\n            props.rowData.data.status === \"Incomplete\"\n              ? props.cellData && props.cellData.length > 0\n                ? \"#f5faef\"\n                : \"#f7cdd6\"\n              : \"#f5faef\"\n          }\n          onUpdate={(id: string, path: string, value: any) => {\n            if (typeof value === \"object\") {\n              handleCellUpdate(id, path, value.hersteller);\n              handleCellUpdate(id, \"data.debitorNumber\", value.debitorischer);\n            } else {\n              handleCellUpdate(id, path, \"\");\n              handleCellUpdate(id, \"data.debitorNumber\", \"\");\n            }\n          }}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorName\",\n      dataKey: \"data.vendorName\",\n      group: \"Project Information\",\n\n      title: \"Vendor Name\",\n      width: columnWidth(\"data.vendorName\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.debitorNumber\",\n      dataKey: \"data.debitorNumber\",\n      title: \"SAP Debitor Number\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.debitorNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.debitorNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.status !== \"Incomplete\"}\n          backgroundColor={\n            props.rowData.data.status === \"Incomplete\"\n              ? props.cellData && props.cellData.length > 0\n                ? \"#f5faef\"\n                : \"#f7cdd6\"\n              : \"#f5faef\"\n          }\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    // {\n    //   key: \"data.creditorNumber\",\n    //   dataKey: \"data.creditorNumber\",\n    //   group: \"Project Information\",\n\n    //   title: \"SAP Creditor Number\",\n    //   width: columnWidth(\"data.creditorNumber\", 200),\n    //   resizable: true,\n    //   hidden: visibilityController(\"projectInformation\", \"data.creditorNumber\"),\n    //   cellRenderer: (props: any) => (\n    //     <EditableTableCell\n    //       type={\"text\"}\n    //       readonly={props.rowData.data.status !== \"Incomplete\"}\n    //       backgroundColor={\n    //         props.rowData.data.status === \"Incomplete\"\n    //           ? props.cellData && props.cellData.length > 0\n    //             ? \"#f5faef\"\n    //             : \"#f7cdd6\"\n    //           : \"#f5faef\"\n    //       }\n    //       onUpdate={handleCellUpdate}\n    //       rowIndex={props.rowIndex}\n    //       columnKey={props.column.dataKey}\n    //       rowData={props.rowData}\n    //       initialValue={props.cellData}\n    //     />\n    //   ),\n    // },\n    {\n      key: \"data.budgetSource\",\n      dataKey: \"data.budgetSource\",\n      title: \"Budget Source\",\n      width: columnWidth(\"data.budgetSource\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.budgetSource\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorBudgetCurrency\",\n      dataKey: \"data.vendorBudgetCurrency\",\n      title: \"Vendor Budget Currency\",\n      width: columnWidth(\"data.vendorBudgetCurrency\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.vendorBudgetCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorAmount\",\n      dataKey: \"data.vendorAmount\",\n      group: \"Project Information\",\n\n      title: \"Vendor Amount\",\n      width: columnWidth(\"data.vendorAmount\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorAmount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignCurrency\",\n      dataKey: \"data.campaignCurrency\",\n      title: \"Campaign Currency\",\n      width: columnWidth(\"data.campaignCurrency\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeCC\",\n      group: \"Project Information\",\n\n      dataKey: \"data.estimatedIncomeCC\",\n      title: \"Estimated Income (Campaign Currency)\",\n      width: columnWidth(\"data.estimatedIncomeCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsCC\",\n      group: \"Project Information\",\n\n      dataKey: \"data.estimatedCostsCC\",\n      title: \"Estimated Costs (Campaign Currency)\",\n      width: columnWidth(\"data.estimatedCostsCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.estimatedResultCC\",\n      dataKey: \"data.estimatedResultCC\",\n      title: \"Estimated Result (Campaign Currency)\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedResultCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeEUR\",\n      dataKey: \"data.estimatedIncomeEUR\",\n      title: \"Estimated Income EUR\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedIncomeEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsEUR\",\n      dataKey: \"data.estimatedCostsEUR\",\n      title: \"Estimated Costs EUR\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedCostsEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultEUR\",\n      dataKey: \"data.estimatedResultEUR\",\n      title: \"Estimated Result EUR\",\n      width: columnWidth(\"data.estimatedResultEUR\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorShare\",\n      dataKey: \"data.vendorShare\",\n      title: \"% Vendor Share\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.vendorShare\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.businessUnit\",\n      dataKey: \"data.businessUnit\",\n      group: \"Project Information\",\n\n      title: \"Business Unit\",\n      width: columnWidth(\"data.businessUnit\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.businessUnit\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.PH1\",\n      dataKey: \"data.PH1\",\n      title: \"PH1\",\n      width: columnWidth(\"data.PH1\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.PH1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignChannel\",\n      dataKey: \"data.campaignChannel\",\n      title: \"Campaign Channel\",\n      width: columnWidth(\"data.campaignChannel\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignChannel\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.targetAudience\",\n      dataKey: \"data.targetAudience\",\n      title: \"Target Audience\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.targetAudience\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.targetAudience\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.marketingResponsible\",\n      group: \"Project Information\",\n      dataKey: \"data.marketingResponsible\",\n      title: \"Marketing Responsible\",\n      width: columnWidth(\"data.marketingResponsible\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.marketingResponsible\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectApprover\",\n      dataKey: \"data.projectApprover\",\n      group: \"Project Information\",\n      title: \"Project Approver\",\n      width: columnWidth(\"data.projectApprover\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.projectApprover\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalInformation\",\n      dataKey: \"data.additionalInformation\",\n      title: \"Additional Information\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.additionalInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.additionalInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderServiceProvider\",\n      dataKey: \"data.purchaseOrderServiceProvider\",\n      title: \"Purchase Order Service Provider\",\n      group: \"Purchase Order\",\n\n      header: \"Purchase Order\",\n      width: columnWidth(\"data.purchaseOrderServiceProvider\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderServiceProvider\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorNamePO\",\n      dataKey: \"data.vendorNamePO\",\n      title: \"Vendor Name\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.vendorNamePO\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.vendorNamePO\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueOfServiceOrderedLC\",\n      dataKey: \"data.netValueOfServiceOrderedLC\",\n      group: \"Purchase Order\",\n\n      title: \"Net Value of Service Ordered (LC)\",\n      width: columnWidth(\"data.netValueOfServiceOrderedLC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.netValueOfServiceOrderedLC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localCurrency\",\n      dataKey: \"data.localCurrency\",\n      title: \"Local Currency\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.localCurrency\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.localCurrency\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValuePOC\",\n      dataKey: \"data.netValuePOC\",\n      title: \"Net Value (Purchase Order Currency)\",\n      width: columnWidth(\"data.netValuePOC\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValuePOC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderCurrency\",\n      dataKey: \"data.purchaseOrderCurrency\",\n      title: \"Purchase Order Currency\",\n      width: columnWidth(\"data.purchaseOrderCurrency\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueEur\",\n      dataKey: \"data.netValueEur\",\n      title: \"Net Value (EUR)\",\n      width: columnWidth(\"data.netValueEur\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValueEur\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderStatus\",\n      dataKey: \"data.purchaseOrderStatus\",\n      title: \"Purchase Order Status\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.purchaseOrderStatus\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.purchaseOrderStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonth\",\n      dataKey: \"data.yearMonth\",\n      title: \"Year / Month\",\n      header: \"Cost Invoices\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.yearMonth\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.yearMonth\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentType\",\n      dataKey: \"data.documentType\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentType\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentType\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDate\",\n      dataKey: \"data.postingDate\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDate\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.postingDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDate\",\n      dataKey: \"data.documentDate\",\n      title: \"Document Date\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.documentDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumber\",\n      dataKey: \"data.documentNumber\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumber\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.documentNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumber\",\n      dataKey: \"data.invoiceNumber\",\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumber\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.invoiceNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.budgetSource === \"No budget\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccount\",\n      dataKey: \"data.costAccount\",\n      title: \"Cost Account\",\n      width: columnWidth(\"data.costAccount\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costAccount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1\",\n      dataKey: \"data.name1\",\n      title: \"Invoice Supplier\",\n      width: columnWidth(\"data.name1\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.name1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLC\",\n      dataKey: \"data.costAmountLC\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLC\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountLC)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDC\",\n      dataKey: \"data.costAmountDC\",\n      title: \"Cost Amount (DC)\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.costAmountDC\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountDC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dc\",\n      dataKey: \"data.dc\",\n      title: \"DC\",\n      width: columnWidth(\"data.dc\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.dc\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEUR\",\n      dataKey: \"data.costAmountEUR\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEUR\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f2fcfc\"\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmount)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costStatus\",\n      dataKey: \"data.costStatus\",\n      title: \"Cost Status\",\n      width: columnWidth(\"data.costStatus\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthSI\",\n      dataKey: \"data.yearMonthSI\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthSI\", 200),\n      group: \"Sales Invoices\",\n\n      header: \"Sales Invoices\",\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.yearMonthSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeSI\",\n      dataKey: \"data.documentTypeSI\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentTypeSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateSI\",\n      dataKey: \"data.postingDateSI\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.postingDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateSI\",\n      dataKey: \"data.documentDateSI\",\n      title: \"Document Date\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.documentDateSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberSI\",\n      group: \"Sales Invoices\",\n\n      dataKey: \"data.documentNumberSI\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumberSI\",\n      dataKey: \"data.invoiceNumberSI\",\n      group: \"Sales Invoices\",\n\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.budgetSource === \"No budget\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountSI\",\n      dataKey: \"data.incomeAccountSI\",\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAccountSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1SI\",\n      dataKey: \"data.name1SI\",\n      title: \"Invoice Recipient\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.name1SI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.name1SI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n\n    {\n      key: \"data.incomeAmountLCSI\",\n      dataKey: \"data.incomeAmountLCSI\",\n      title: \"Income Amount (LC)\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.incomeAmountLCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountLCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountLC)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCSI\",\n      dataKey: \"data.incomeAmountDCSI\",\n      title: \"Income Amount (DC)\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.incomeAmountDCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountDCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcSI\",\n      dataKey: \"data.dcSI\",\n      title: \"DC\",\n      width: columnWidth(\"data.dcSI\", 200),\n      resizable: true,\n      group: \"Sales Invoices\",\n\n      hidden: visibilityController(\"salesInvoices\", \"data.dcSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEURSI\",\n      dataKey: \"data.incomeAmountEURSI\",\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEURSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountEURSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmount)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceStatusSI\",\n      dataKey: \"data.invoiceStatusSI\",\n      title: \"Invoice Status (Paid/Not Paid)\",\n      width: columnWidth(\"data.invoiceStatusSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceStatusSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.activityIdSI\",\n      group: \"Sales Invoices\",\n      dataKey: \"data.activityIdSI\",\n      title: \"Activity ID for Portal Vendors\",\n      width: columnWidth(\"data.activityIdSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.activityIdSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalMarketingInformation\",\n      group: \"Sales Invoices\",\n      dataKey: \"data.additionalMarketingInformation\",\n      title: \"Additional Marketing Information\",\n      width: columnWidth(\"data.additionalMarketingInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"salesInvoices\",\n        \"data.additionalMarketingInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthCostGL\",\n      dataKey: \"data.yearMonthCostGL\",\n      title: \"Year / Month\",\n      header: \"Cost GL Postings\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.yearMonthCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.yearMonthCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeCostGL\",\n      dataKey: \"data.documentTypeCostGL\",\n      group: \"Cost GL Postings\",\n\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentTypeCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateCostGL\",\n      group: \"Cost GL Postings\",\n\n      dataKey: \"data.postingDateCostGL\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.postingDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateCostGL\",\n      dataKey: \"data.documentDateCostGL\",\n      title: \"Document Date\",\n      width: columnWidth(\"data.documentDateCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberCostGL\",\n      dataKey: \"data.documentNumberCostGL\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.documentNumberCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.textCostGL\",\n      dataKey: \"data.textCostGL\",\n      title: \"Text\",\n      width: columnWidth(\"data.textCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.textCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccountCostGL\",\n      dataKey: \"data.costAccountCostGL\",\n      title: \"Cost Account\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.costAccountCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAccountCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLCCostGL\",\n      dataKey: \"data.costAmountLCCostGL\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLCCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountLCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountLCCostGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDCCostGL\",\n      dataKey: \"data.costAmountDCCostGL\",\n      title: \"Cost Amount (DC)\",\n      width: columnWidth(\"data.costAmountDCCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountDCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcCostGL\",\n      dataKey: \"data.dcCostGL\",\n      title: \"DC\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.dcCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.dcCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEURCostGL\",\n      dataKey: \"data.costAmountEURCostGL\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEURCostGL\", 200),\n      group: \"Cost GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.costAmountEURCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostAmountCostGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthIncomeGL\",\n      dataKey: \"data.yearMonthIncomeGL\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthIncomeGL\", 200),\n      group: \"Income GL Postings\",\n\n      header: \"Income GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.yearMonthIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeIncomeGL\",\n      dataKey: \"data.documentTypeIncomeGL\",\n      title: \"Document Type\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.documentTypeIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentTypeIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateIncomeGL\",\n      dataKey: \"data.postingDateIncomeGL\",\n      title: \"Posting Date\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.postingDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.postingDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateIncomeGL\",\n      dataKey: \"data.documentDateIncomeGL\",\n      title: \"Document Date\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.documentDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberIncomeGL\",\n      dataKey: \"data.documentNumberIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentNumberIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.textIncomeGL\",\n      dataKey: \"data.textIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Text\",\n      width: columnWidth(\"data.textIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.textIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountIncomeGL\",\n      dataKey: \"data.incomeAccountIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAccountIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCIncomeGL\",\n      dataKey: \"data.incomeAmountLCIncomeGL\",\n      title: \"Income Amount (LC)\",\n      width: columnWidth(\"data.incomeAmountLCIncomeGL\", 200),\n      resizable: true,\n      group: \"Income GL Postings\",\n\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountLCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountLCIncomeGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCIncomeGL\",\n      dataKey: \"data.incomeAmountDCIncomeGL\",\n      title: \"Income Amount (DC)\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.incomeAmountDCIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountDCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcIncomeGL\",\n      dataKey: \"data.dcIncomeGL\",\n      title: \"DC\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.dcIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.dcIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEurIncomeGL\",\n      dataKey: \"data.incomeAmountEurIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEurIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountEurIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeAmountIncomeGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.totalIncomeLC\",\n      dataKey: \"data.totalIncomeLC\",\n      title: \"Total Income (LC)\",\n      header: \"Project Results\",\n      width: columnWidth(\"data.totalIncomeLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalIncomeLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeInTool)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsLC\",\n      dataKey: \"data.totalCostsLC\",\n      title: \"Total Costs (LC)\",\n      width: columnWidth(\"data.totalCostsLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalCostsLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostsInTool)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalProfitLC\",\n      dataKey: \"data.totalProfitLC\",\n      title: \"Total Profit (LC)\",\n      width: columnWidth(\"data.totalProfitLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalProfitLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInTool + totalCostsInTool >= 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    totalIncomeInTool + totalCostsInTool\n                  )}`\n                : props.rowData.data.totalIncomeLC +\n                  props.rowData.data.totalCostsLC\n              : \"\"\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalLossLC\",\n      dataKey: \"data.totalLossLC\",\n      title: \"Total Loss (LC)\",\n      width: columnWidth(\"data.totalLossLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalLossLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInTool + totalCostsInTool < 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    (totalIncomeInTool + totalCostsInTool) * -1\n                  )}`\n                : (props.rowData.data.totalIncomeLC +\n                    props.rowData.data.totalCostsLC) *\n                  -1\n              : \"\"\n          }\n        />\n      ),\n    },\n\n    {\n      key: \"data.totalIncomeEUR\",\n      dataKey: \"data.totalIncomeEUR\",\n      title: \"Total Income (EUR)\",\n      width: columnWidth(\"data.totalIncomeEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalIncomeEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalIncomeInToolEUR)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsEUR\",\n      dataKey: \"data.totalCostsEUR\",\n      title: \"Total Costs (EUR)\",\n      width: columnWidth(\"data.totalCostsEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalCostsEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(totalCostsInToolEUR)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalProfitEUR\",\n      dataKey: \"data.totalProfitEUR\",\n      title: \"Total Profit (EUR)\",\n      width: columnWidth(\"data.totalProfitEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalProfitEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInToolEUR + totalCostsInToolEUR >= 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    totalIncomeInToolEUR + totalCostsInToolEUR\n                  )}`\n                : props.rowData.data.totalIncomeEUR +\n                  props.rowData.data.totalCostsEUR\n              : \"\"\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalLossEUR\",\n      dataKey: \"data.totalLossEUR\",\n      title: \"Total Loss (EUR)\",\n      width: columnWidth(\"data.totalLossEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalLossEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInToolEUR + totalCostsInToolEUR < 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${numberWithCommas(\n                    (totalIncomeInToolEUR + totalCostsInToolEUR) * -1\n                  )}`\n                : (props.rowData.data.totalIncomeEUR +\n                    props.rowData.data.totalCostsEUR) *\n                  -1\n              : \"\"\n          }\n        />\n      ),\n    },\n\n    ///\n    {\n      key: \"data.totalCostsTool\",\n      dataKey: \"data.totalCostsTool\",\n      title: \"Total Costs In Tool (LC)\",\n      width: columnWidth(\"data.totalCostsTool\", 200),\n      resizable: true,\n      header: \"Control Checks\",\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalCostAmountLC + totalCostAmountLCCostGL\n                )}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsSAP\",\n      dataKey: \"data.totalCostsSAP\",\n      title: \"Total Costs In SAP (LC)\",\n      width: columnWidth(\"data.totalCostsSAP\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalCostAmountLC + totalCostAmountLCCostGL\n                )}`\n              : props.rowData.data.totalCostsTool\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeTool\",\n      dataKey: \"data.totalIncomeTool\",\n      title: \"Total Income In Tool (LC)\",\n      width: columnWidth(\"data.totalIncomeTool\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n                )}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeSAP\",\n      dataKey: \"data.totalIncomeSAP\",\n      title: \"Total Income In SAP (LC)\",\n      width: columnWidth(\"data.totalIncomeSAP\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${numberWithCommas(\n                  totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n                )}`\n              : props.rowData.data.totalIncomeTool\n          }\n        />\n      ),\n    },\n    ///\n\n    {\n      key: \"__actions.sap\",\n      dataKey: \"__actions.sap\",\n      title: \"SAP\",\n      width: columnWidth(\"__actions.sap\", 100),\n      resizable: true,\n      header: \"Actions\",\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null &&\n        props.rowData.data.status !== \"Created\" &&\n        props.rowData.author !== \"formiks\" &&\n        props.rowData.id !== \"total\" ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"green\"}\n            onUpdate={callSap}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"create\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.view\",\n      dataKey: \"__actions.view\",\n      title: \"View\",\n      width: columnWidth(\"__actions.view\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"yellow\"}\n            onUpdate={(submissionId: string) => {\n              window.open(\n                \"/submissions/view/\" + submissionId,\n                \"_blank\",\n                \"noopener,noreferrer\"\n              );\n            }}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"view\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.delete\",\n      dataKey: \"__actions.delete\",\n      title: \"Delete\",\n      width: columnWidth(\"__actions.delete\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"button\"}\n          textColor={\"red\"}\n          backgroundColor=\"#fef9fa\"\n          onUpdate={deleteSubmission}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\"delete\"}\n        />\n      ),\n    },\n  ];\n\n  const headerRendererForTable = useCallback(\n    (props: {\n      cells: ReactNode[];\n      columns: ColumnShape<{\n        [k: string]: string;\n      }>;\n      headerIndex: number;\n    }) => {\n      const { headerIndex, columns, cells } = props;\n      if (headerIndex === 0) {\n        return cells.map((cell, index) => {\n          return cloneElement(cell as ReactElement, {\n            className: \"BaseTable__header-cell\",\n            children: (\n              <span style={{ fontWeight: 650 }} key={index}>\n                {columns[index].header ? columns[index].header : \"\"}\n              </span>\n            ),\n          });\n        });\n      }\n      return cells;\n    },\n    []\n  );\n  return (\n    <div>\n      <Box h=\"70px\" textAlign={\"end\"}>\n        <IconButton\n          icon={<IoSave />}\n          isDisabled={\n            selectedTemplate === \"local\"\n            // currentUser.displayName === \"unknown\"\n          }\n          onClick={() => {\n            var template: Template = {\n              name: selectedTemplate,\n              columns: displayedColumns,\n              filters,\n            };\n            RestAPI.updateTemplate(template).then(() => {\n              toast(\n                <Toast\n                  title={\"Preset updated\"}\n                  message={\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: \"Preset successfully saved\",\n                      }}\n                    />\n                  }\n                  type={\"success\"}\n                />\n              );\n            });\n          }}\n          aria-label=\"save\"\n          colorScheme=\"blue\"\n          mr=\"10px\"\n        />\n        <IconButton\n          icon={onlyMine ? <RiUserFill /> : <RiGroupFill />}\n          onClick={() => {\n            setOnlyMine(!onlyMine);\n          }}\n          // isDisabled={currentUser.displayName === \"unknown\"}\n          aria-label=\"filter\"\n          colorScheme=\"blue\"\n          mr=\"10px\"\n        />\n        <IconButton\n          onClick={async () => {\n            interface FD {\n              [key: string]: any;\n            }\n            var formattedData: FD[] = [];\n            let init = false;\n            let header: FD[] = [\n              {\n                ID: \"Summary\",\n                Parent: \"\",\n                Group: \"\",\n                Created: \"\",\n                Title: \"\",\n                Author: \"\",\n              },\n              {\n                ID: \"ID\",\n                Parent: \"Parent\",\n                Group: \"Group\",\n                Created: \"Created\",\n                Title: \"Title\",\n                Author: \"Author\",\n              },\n              {\n                ID: \"\",\n                Parent: \"\",\n                Group: \"\",\n                Created: \"\",\n                Title: \"\",\n                Author: \"\",\n              },\n            ];\n            formattedData = filteredSubmissions.map((s) => {\n              let doc: FD = {\n                ID: s.id || \"unknown\",\n                Parent: s.parentId === null,\n                Group: s.group,\n                Created: s.created,\n                Title: s.title,\n                Author: s.author,\n              };\n              DisplayedColumnsList.forEach((group: any) => {\n                if (group.value === \"CMCT\" || group.value === \"LMD\") {\n                  return;\n                }\n                group.children.map((column: any, index: number) => {\n                  doc[column.value] = _.get(s, column.value);\n                  if (column.type === \"number\") {\n                    doc[column.value] = numberWithCommas(doc[column.value]);\n                  }\n                  if (!init) {\n                    header[0][column.value] = index === 0 ? group.label : \"\";\n                    header[1][column.value] = `${column.label}`;\n                  }\n                });\n              });\n              init = true;\n              return doc;\n            });\n            header[2] = {\n              \"data.costAmountLC\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC\n              )}`,\n              \"data.costAmountEUR\": `TOTAL: ${numberWithCommas(\n                totalCostAmount\n              )}`,\n              \"data.incomeAmountLCSI\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC\n              )}`,\n              \"data.incomeAmountEURSI\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmount\n              )}`,\n              \"data.costAmountLCCostGL\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLCCostGL\n              )}`,\n              \"data.costAmountEURCostGL\": `TOTAL: ${numberWithCommas(\n                totalCostAmountCostGL\n              )}`,\n              \"data.incomeAmountLCIncomeGL\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLCIncomeGL\n              )}`,\n              \"data.incomeAmountEurIncomeGL\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountIncomeGL\n              )}`,\n              \"data.totalIncomeLC\": `TOTAL: ${numberWithCommas(\n                totalIncomeInTool\n              )}`,\n              \"data.totalCostsLC\": `TOTAL: ${numberWithCommas(\n                totalCostsInTool\n              )}`,\n              \"data.totalProfitLC\": `TOTAL: ${numberWithCommas(\n                totalIncomeInTool + totalCostsInTool\n              )}`,\n              \"data.totalLossLC\": `TOTAL: ${numberWithCommas(\n                (totalIncomeInTool + totalCostsInTool) * -1\n              )}`,\n              \"data.totalIncomeEUR\": `TOTAL: ${numberWithCommas(\n                totalIncomeInToolEUR\n              )}`,\n              \"data.totalCostsEUR\": `TOTAL: ${numberWithCommas(\n                totalCostsInToolEUR\n              )}`,\n              \"data.totalProfitEUR\": `TOTAL: ${numberWithCommas(\n                totalIncomeInToolEUR + totalCostsInToolEUR\n              )}`,\n              \"data.totalLossEUR\": `TOTAL: ${numberWithCommas(\n                (totalIncomeInToolEUR + totalCostsInToolEUR) * -1\n              )}`,\n              \"data.totalCostsTool\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC + totalCostAmountLCCostGL\n              )}`,\n              \"data.totalCostsSAP\": `TOTAL: ${numberWithCommas(\n                totalCostAmountLC + totalCostAmountLCCostGL\n              )}`,\n              \"data.totalIncomeTool\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n              )}`,\n              \"data.totalIncomeSAP\": `TOTAL: ${numberWithCommas(\n                totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n              )}`,\n            };\n            formattedData.unshift(...header);\n            const ws = XLSX.utils.json_to_sheet(formattedData, {\n              skipHeader: true,\n            });\n            ws[\"!cols\"] = Object.keys(formattedData[0]).map(() => {\n              return { wch: 30 };\n            });\n            const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n            const excelBuffer = XLSX.write(wb, {\n              bookType: \"xlsx\",\n              type: \"array\",\n            });\n            const data = new Blob([excelBuffer], {\n              type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n            });\n            FileSaver.saveAs(data, \"exported_submissions\" + \".xlsx\");\n          }}\n          colorScheme=\"teal\"\n          aria-label=\"export\"\n          icon={<RiFileExcel2Line />}\n        ></IconButton>\n      </Box>\n\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        minH={\"80vh\"}\n        mb={5}\n        mt={\"-20px\"}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n      >\n        <Tabs isLazy={false} variant=\"enclosed\">\n          <TabList>\n            <Tab>Submissions</Tab>\n            <Tab>Invoicing</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer\n                onResize={({\n                  width,\n                  height,\n                }: {\n                  width: number;\n                  height: number;\n                }) => {\n                  setTableWidth(width);\n                }}\n              >\n                {({ width, height }) => (\n                  <BaseTable\n                    key={ignored}\n                    scrollLeft={scrollLeft}\n                    onScroll={onScroll}\n                    onColumnResizeEnd={({\n                      column,\n                      width,\n                    }: {\n                      column: any;\n                      width: number;\n                    }) => {\n                      // handleResize(column.dataKey, width);\n                    }}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={10}\n                    ignoreFunctionInColumnCompare={false}\n                    expandColumnKey={\"__expand\"}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={tableCells}\n                    headerRenderer={headerRendererForTable}\n                    headerClassName=\"header-cells\"\n                    frozenData={\n                      [\n                        {\n                          id: \"total\",\n                          data: {},\n                          parentId: null,\n                        },\n                      ] as any[]\n                    }\n                    data={unflatten([...filteredSubmissions] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={[50, 50]}\n                    rowHeight={55}\n                    // overlayRenderer={\n                    //   <div>\n                    //     <DebugOverlay hidden={debugOverlayHidden}>\n                    //       <Box h=\"40px\" w=\"100%\">\n                    //         <CloseButton\n                    //           onClick={() => {\n                    //             hideDebugOverlay(true);\n                    //           }}\n                    //           mr=\"-10px\"\n                    //           float=\"right\"\n                    //         />\n                    //       </Box>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Requested Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.total)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Allocated Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.allocated)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Active Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.current)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           DOM Elements:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.domSize}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Virtualization:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           partial\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Table Mode:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           editable\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Avg FPS:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {avgFps}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           FPS:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {fps[fps.length - 1]}\n                    //         </Text>\n                    //       </HStack>\n                    //       <Divider mt={\"10px\"} />\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Active Sessions:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           1\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Total Requests:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {totalRequests}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Sync Protocol:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           HTTP\n                    //         </Text>\n                    //       </HStack>\n                    //       <VStack align=\"end\" mt=\"10px\">\n                    //         <Button\n                    //           float=\"right\"\n                    //           onClick={() => {\n                    //             RestAPI.updateVendorTableDefaultConfig(\n                    //               JSON.parse(\n                    //                 localStorage.getItem(\n                    //                   \"vendors.displayedColumns\"\n                    //                 ) || \"[]\"\n                    //               ),\n                    //               JSON.parse(\n                    //                 localStorage.getItem(\"vendors.columns\") ||\n                    //                   \"{}\"\n                    //               )\n                    //             );\n                    //           }}\n                    //           colorScheme=\"blue\"\n                    //         >\n                    //           update preset\n                    //         </Button>\n                    //         <Button\n                    //           float=\"left\"\n                    //           onClick={() => {\n                    //             localStorage.removeItem(\n                    //               \"vendors.displayedColumns\"\n                    //             );\n                    //             localStorage.removeItem(\"vendors.columns\");\n                    //             window.location.reload();\n                    //           }}\n                    //           colorScheme=\"red\"\n                    //         >\n                    //           clear cache\n                    //         </Button>\n                    //       </VStack>\n                    //     </DebugOverlay>\n                    //   </div>\n                    // }\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer\n                onResize={({\n                  width,\n                  height,\n                }: {\n                  width: number;\n                  height: number;\n                }) => {\n                  setTableWidth(width);\n                }}\n              >\n                {({ width, height }) => (\n                  <BaseTable\n                    scrollLeft={scrollLeft}\n                    onScroll={onScroll}\n                    onColumnResizeEnd={({\n                      column,\n                      width,\n                    }: {\n                      column: any;\n                      width: number;\n                    }) => {\n                      // handleResize(column.dataKey, width);\n                    }}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={10}\n                    ignoreFunctionInColumnCompare={false}\n                    expandColumnKey={\"__expand\"}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={[\n                      {\n                        key: \"__expand\",\n                        dataKey: \"__expand\",\n                        title: \"\",\n                        width: 50,\n                        frozen: Column.FrozenDirection.LEFT,\n                        resizable: false,\n                        cellRenderer: () => <div />,\n                        className: \"expand\",\n                      },\n                      {\n                        key: \"data.documentNumberCMCT\",\n                        dataKey: \"data.documentNumberCMCT\",\n                        title: \"SAP Document Number\",\n                        group: \"Input of Central Marketing Controlling Team\",\n                        header: \"Input of Central Marketing Controlling Team\",\n                        width: columnWidth(\"data.documentNumberCMCT\", 300),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"CMCT\",\n                          \"data.documentNumberCMCT\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={\n                              props.rowData.data.statusLMD !==\n                                \"OK FOR INVOICING\" &&\n                              props.rowData.data.statusLMD !== \"INVOICED\"\n                            }\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.operatorCMCT\",\n                                currentUser.displayName\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.dateCMCT\",\n                                new Date().toString()\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.statusLMD\",\n                                \"INVOICED\"\n                              );\n\n                              var mi = submissions.findIndex(\n                                (s) => s.data.documentNumberSI === value\n                              );\n                              if (mi > -1) {\n                                handleCellUpdate(\n                                  submissions[mi].id!,\n                                  \"data.activityIdSI\",\n                                  props.rowData.data.activityIdForPortalVendors\n                                );\n                                handleCellUpdate(\n                                  submissions[mi].id!,\n                                  \"data.additionalMarketingInformation\",\n                                  props.rowData.data.additionalInformationLMD\n                                );\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.dateCMCT\",\n                        dataKey: \"data.dateCMCT\",\n                        title: \"Date\",\n                        width: columnWidth(\"data.dateCMCT\", 200),\n                        resizable: true,\n                        group: \"Input of Central Marketing Controlling Team\",\n                        hidden: visibilityController(\"CMCT\", \"data.dateCMCT\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            readonly={true}\n                            backgroundColor=\"#f9f9ff\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.operatorCMCT\",\n                        dataKey: \"data.operatorCMCT\",\n                        title: \"Operator\",\n                        width: columnWidth(\"data.operatorCMCT\", 200),\n                        resizable: true,\n                        group: \"Input of Central Marketing Controlling Team\",\n                        hidden: visibilityController(\n                          \"CMCT\",\n                          \"data.operatorCMCT\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={true}\n                            backgroundColor=\"#f9f9ff\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.statusLMD\",\n                        dataKey: \"data.statusLMD\",\n                        title: \"Status\",\n                        width: columnWidth(\"data.statusLMD\", 300),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n                        header: \"Input of Local Marketing Department\",\n                        hidden: visibilityController(\"LMD\", \"data.statusLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            readonly={true}\n                            loadOptions={loadOptions}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoicingDateLMD\",\n                        dataKey: \"data.invoicingDateLMD\",\n                        title: \"Date of Invoicing\",\n                        width: columnWidth(\"data.invoicingDateLMD\", 200),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoicingDateLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.requestorLMD\",\n                                currentUser.displayName\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.requestorLMD\",\n                        dataKey: \"data.requestorLMD\",\n                        title: \"Requestor\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.requestorLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.requestorLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.vendorLMD\",\n                        dataKey: \"data.vendorLMD\",\n                        title: \"Vendor\",\n                        width: columnWidth(\"data.vendorLMD\", 250),\n                        group: \"Input of Local Marketing Department\",\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.vendorLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            loadOptions={() => {\n                              if (\n                                props.rowData.data\n                                  .alsoMarketingProjectNumberLMD !== undefined\n                              ) {\n                                var vs = findSubmissionsByPO(\n                                  props.rowData.data\n                                    .alsoMarketingProjectNumberLMD\n                                );\n                                if (vs.length > 0) {\n                                  var v: any[] = [];\n                                  vs.forEach((s) => {\n                                    if (s.data.vendorName !== undefined) {\n                                      v.push({\n                                        label: s.data.vendorName,\n                                        value: s.data.vendorName,\n                                      });\n                                    }\n                                  });\n                                  if (v.length > 0) {\n                                    return v;\n                                  }\n                                }\n                              }\n\n                              return VendorsNames;\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              let set = false;\n                              VendorsNames.every((v) => {\n                                if (v.label === value) {\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.vodLMD\",\n                                    v.value.debitorischer\n                                  );\n                                  set = true;\n                                  return false;\n                                }\n                                return true;\n                              });\n                              if (!set) {\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.vodLMD\",\n                                  \"\"\n                                );\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.buLMD\",\n                                  \"\"\n                                );\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.vodLMD\",\n                        dataKey: \"data.vodLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"VOD\",\n                        width: columnWidth(\"data.vodLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.vodLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.buLMD\",\n                        dataKey: \"data.buLMD\",\n                        title: \"BU\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.buLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.buLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return BUs;\n                            }}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // FIXME: set after 'refresh status' clicked\n                      {\n                        key: \"data.entryDateLMD\",\n                        dataKey: \"data.entryDateLMD\",\n                        title: \"Entry Date\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.entryDateLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.entryDateLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            readonly\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoiceTypeLMD\",\n                        dataKey: \"data.invoiceTypeLMD\",\n                        title: \"Invoice Type\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.invoiceTypeLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoiceTypeLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            readonly={props.rowData.parentId !== null}\n                            loadOptions={() => {\n                              return [\n                                {\n                                  label: \"Invoice\",\n                                  value: \"Invoice\",\n                                },\n                                { label: \"Pre-Invoice\", value: \"Pre-Invoice\" },\n                                {\n                                  label: \"Internal Invoice\",\n                                  value: \"Internal Invoice\",\n                                },\n                                {\n                                  label: \"Cancellation\",\n                                  value: \"Cancellation\",\n                                },\n                              ];\n                            }}\n                            backgroundColor={\n                              (props.cellData && props.cellData.length > 0) ||\n                              props.rowData.parentId !== null\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              if (value === \"Pre-Invoice\") {\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.materialNumberLMD\",\n                                  \"7000100\"\n                                );\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.alsoMarketingProjectNumberLMD\",\n                                  \"6110VZ01\"\n                                );\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.statusLMD\",\n                                \"\"\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.sendToLMD\",\n                                \"none\"\n                              );\n                            }}\n                            // onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.cancellationInfoLMD\",\n                        dataKey: \"data.cancellationInfoLMD\",\n                        title: \"Cancellation Information\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.cancellationInfoLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.cancellationInfoLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            readonly={\n                              props.rowData.data.invoiceTypeLMD !==\n                              \"Cancellation\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.materialNumberLMD\",\n                        dataKey: \"data.materialNumberLMD\",\n                        title: \"Material Number\",\n                        width: columnWidth(\"data.materialNumberLMD\", 200),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.materialNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            // loadOptions={() => {\n                            //   return VendorsNames.map((vendor) => {\n                            //     return {\n                            //       label: vendor.value.hersteller,\n                            //       value: vendor.value.hersteller,\n                            //     };\n                            //   });\n                            // }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.alsoMarketingProjectNumberLMD\",\n                        dataKey: \"data.alsoMarketingProjectNumberLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"ALSO Marketing Project Number\",\n                        width: columnWidth(\n                          \"data.alsoMarketingProjectNumberLMD\",\n                          250\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.alsoMarketingProjectNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            maxLength={12}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              var vs = findSubmissionsByPO(value);\n                              if (vs.length < 1) {\n                                toast(\n                                  <Toast\n                                    title={\"Unknown Project Number\"}\n                                    message={\"Project Number not found\"}\n                                    type={\"error\"}\n                                  />\n                                );\n                              } else {\n                                var currentVendor =\n                                  props.rowData.data.vendorLMD;\n                                if (typeof currentVendor === \"string\") {\n                                  var valid = false;\n                                  vs.forEach((s) => {\n                                    if (\n                                      s.data.vendorName !== undefined &&\n                                      currentVendor === s.data.vendorName\n                                    ) {\n                                      valid = true;\n                                    }\n                                  });\n                                  if (!valid) {\n                                    handleCommunicationCellUpdate(\n                                      submission,\n                                      \"data.vendorLMD\",\n                                      \"\"\n                                    );\n                                    toast(\n                                      <Toast\n                                        title={\"Unknown Vendor Selected\"}\n                                        message={\n                                          \"Vendor does not exist under this project\"\n                                        }\n                                        type={\"error\"}\n                                      />\n                                    );\n                                  }\n                                }\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.invoiceTextLMD\",\n                                  vs[0].data.campaignDescription\n                                );\n                                var amount = 0;\n                                switch (vs[0].data.projectType) {\n                                  case \"Local One Vendor\" ||\n                                    \"European One Vendor\":\n                                    amount =\n                                      vs[0].data\n                                        .campaignEstimatedIncomeBudgetsCurrency;\n                                    break;\n                                  case \"Local Multi Vendor\" ||\n                                    \"European Multi Vendor\":\n                                    vs.map((s) => {\n                                      if (!isNaN(s.data.vendorBudgetAmount)) {\n                                        amount += Number(\n                                          s.data.vendorBudgetAmount\n                                        );\n                                      }\n                                    });\n                                    break;\n                                  default:\n                                    amount = NaN;\n                                }\n                                if (!isNaN(amount)) {\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.amountLMD\",\n                                    amount\n                                  );\n                                }\n                                toast(\n                                  <Toast\n                                    title={\"Project Found\"}\n                                    message={\"Data copied from parent project\"}\n                                    type={\"success\"}\n                                  />\n                                );\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoiceTextLMD\",\n                        dataKey: \"data.invoiceTextLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Invoice Text\",\n                        width: columnWidth(\"data.invoiceTextLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoiceTextLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.referenceNumberFromVendor\",\n                        dataKey: \"data.referenceNumberFromVendor\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Reference Number From Vendor\",\n                        width: columnWidth(\n                          \"data.referenceNumberFromVendor\",\n                          200\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.referenceNumberFromVendor\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.activityIdForPortalVendors\",\n                        dataKey: \"data.activityIdForPortalVendors\",\n                        group: \"Input of Local Marketing Department\",\n                        title: \"Activity ID for Portal Vendors\",\n                        width: columnWidth(\n                          \"data.activityIdForPortalVendors\",\n                          200\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.activityIdForPortalVendors\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.amountLMD\",\n                        dataKey: \"data.amountLMD\",\n                        title: \"Amount\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.amountLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.amountLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"number\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor={\n                              props.cellData &&\n                              props.cellData !== 0 &&\n                              props.cellData.toString().trim().length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // {\n                      //   key: \"data.additionalInvoiceInfoLMD\",\n                      //   dataKey: \"data.additionalInvoiceInfoLMD\",\n                      //   title: \"Additional Info on Invoice\",\n                      //   group: \"Input of Local Marketing Department\",\n\n                      //   width: columnWidth(\n                      //     \"data.additionalInvoiceInfoLMD\",\n                      //     200\n                      //   ),\n                      //   resizable: true,\n                      //   hidden: visibilityController(\n                      //     \"LMD\",\n                      //     \"data.additionalInvoiceInfoLMD\"\n                      //   ),\n                      //   cellRenderer: (props: any) => (\n                      //     <EditableTableCell\n                      //       type={\"text\"}\n                      //       backgroundColor=\"#F5FAEF\"\n                      //       onUpdate={handleCommunicationCellUpdate}\n                      //       rowIndex={props.rowIndex}\n                      //       columnKey={props.column.dataKey}\n                      //       rowData={props.rowData}\n                      //       initialValue={props.cellData}\n                      //     />\n                      //   ),\n                      // },\n                      {\n                        key: \"data.documentCurrencyLMD\",\n                        dataKey: \"data.documentCurrencyLMD\",\n                        title: \"Document Currency\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.documentCurrencyLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.documentCurrencyLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return ExchangeRates;\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.paymentMethodLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        dataKey: \"data.paymentMethodLMD\",\n                        title: \"Payment Method\",\n                        width: columnWidth(\"data.paymentMethodLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.paymentMethodLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            loadOptions={() => {\n                              return [\n                                { label: \"Payment\", value: \"Payment\" },\n                                {\n                                  label: \"Money in House\",\n                                  value: \"Money in House\",\n                                },\n                                {\n                                  label: \"Credit Note from Vendor\",\n                                  value: \"Credit Note from Vendor\",\n                                },\n                              ];\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.statusLMD\",\n                                \"\"\n                              );\n                              var dunningStop = \"No\";\n                              if (\n                                value === \"Money in House\" ||\n                                value === \"Credit Note from Vendor\"\n                              ) {\n                                dunningStop = \"Yes\";\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.dunningStopLMD\",\n                                dunningStop\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.dunningStopLMD\",\n                        dataKey: \"data.dunningStopLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Dunning Stop?\",\n                        width: columnWidth(\"data.dunningStopLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.dunningStopLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            loadOptions={() => {\n                              return [\n                                { label: \"Yes\", value: \"Yes\" },\n                                { label: \"No\", value: \"No\" },\n                              ];\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.depositNumberLMD\",\n                        dataKey: \"data.depositNumberLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Deposit Number\",\n                        width: columnWidth(\"data.depositNumberLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.depositNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            readonly={\n                              typeof props.rowData.data.dunningStopLMD ===\n                                \"string\" &&\n                              props.rowData.data.dunningStopLMD.toLowerCase() ===\n                                \"no\"\n                            }\n                            backgroundColor={\n                              props.rowData.data.paymentMethodLMD ===\n                              \"Money in House\"\n                                ? props.cellData && props.cellData.length > 0\n                                  ? \"#F5FAEF\"\n                                  : \"#f7cdd6\"\n                                : \"#F5FAEF\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.additionalInformationLMD\",\n                        dataKey: \"data.additionalInformationLMD\",\n                        title: \"Additional Information\",\n                        width: columnWidth(\n                          \"data.additionalInformationLMD\",\n                          200\n                        ),\n                        group: \"Input of Local Marketing Department\",\n\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.additionalInformationLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.sendToLMD\",\n                        dataKey: \"data.sendToLMD\",\n                        title: \"Send to\",\n                        width: columnWidth(\"data.sendToLMD\", 200),\n                        group: \"Input of Local Marketing Department\",\n\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.sendToLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            readonly={\n                              props.rowData.data.invoiceTypeLMD ===\n                              \"Internal Invoice\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"__actions.validate\",\n                        dataKey: \"__actions.validate\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.validate\", 100),\n                        resizable: false,\n                        header: \"Actions\",\n                        className: \"red-border\",\n                        cellRenderer: (props: any) =>\n                          props.rowData.parentId === null ? (\n                            <EditableTableCell\n                              invoiced={\n                                props.rowData.data.statusLMD === \"INVOICED\"\n                              }\n                              type={\"button\"}\n                              backgroundColor=\"#fef9fa\"\n                              textColor={\"green\"}\n                              onUpdate={(submissionId: string) => {\n                                var targetSubmissionIndex =\n                                  communicationSubmissions.findIndex(\n                                    (s) => s.id === submissionId\n                                  );\n                                if (targetSubmissionIndex > -1) {\n                                  var is: Submission[] = [];\n                                  is.push(\n                                    communicationSubmissions[\n                                      targetSubmissionIndex\n                                    ]\n                                  );\n\n                                  if (is[0].parentId === null) {\n                                    communicationSubmissions.forEach((s) => {\n                                      if (s.parentId === submissionId) {\n                                        is.push(s);\n                                      }\n                                    });\n                                  }\n\n                                  is.forEach((ts, tsi) => {\n                                    if (\n                                      ts.data.invoicingDateLMD &&\n                                      ts.data.invoicingDateLMD.length > 0 &&\n                                      ts.data.vendorLMD &&\n                                      ts.data.vendorLMD.length > 0 &&\n                                      ts.data.invoiceTypeLMD &&\n                                      ts.data.invoiceTypeLMD.length > 0 &&\n                                      ts.data.materialNumberLMD &&\n                                      ts.data.materialNumberLMD.length > 0 &&\n                                      ts.data.alsoMarketingProjectNumberLMD &&\n                                      ts.data.alsoMarketingProjectNumberLMD\n                                        .length > 0 &&\n                                      ts.data.invoiceTextLMD &&\n                                      ts.data.invoiceTextLMD.length > 0 &&\n                                      ts.data.amountLMD &&\n                                      typeof ts.data.amountLMD === \"number\" &&\n                                      ts.data.documentCurrencyLMD &&\n                                      ts.data.documentCurrencyLMD.length > 0 &&\n                                      ts.data.paymentMethodLMD &&\n                                      ts.data.paymentMethodLMD.length > 0 &&\n                                      ts.data.dunningStopLMD &&\n                                      ts.data.dunningStopLMD.length > 0 &&\n                                      ts.data.sendToLMD &&\n                                      ts.data.sendToLMD.length > 0 &&\n                                      (ts.data.paymentMethodLMD ===\n                                      \"Money in House\"\n                                        ? ts.data.depositNumberLMD &&\n                                          ts.data.depositNumberLMD.length > 0\n                                        : true)\n                                    ) {\n                                      var today = new Date();\n                                      today.setHours(23, 59, 59, 998);\n                                      if (\n                                        ts.data.invoicingDateLMD &&\n                                        new Date(ts.data.invoicingDateLMD) >\n                                          today\n                                      ) {\n                                        handleCommunicationCellUpdate(\n                                          ts.id!,\n                                          \"data.statusLMD\",\n                                          \"FUTURE INVOICE\"\n                                        );\n                                      } else {\n                                        handleCommunicationCellUpdate(\n                                          ts.id!,\n                                          \"data.statusLMD\",\n                                          \"OK FOR INVOICING\"\n                                        );\n                                      }\n                                      toast(\n                                        <Toast\n                                          title={\"Successful Validation\"}\n                                          message={\n                                            (tsi === 0 ? `Parent` : \"Child\") +\n                                            \" submission validated successfully\"\n                                          }\n                                          type={\"success\"}\n                                        />\n                                      );\n                                    } else {\n                                      toast(\n                                        <Toast\n                                          title={\"Incomplete Request\"}\n                                          message={\n                                            (tsi === 0 ? `Parent` : \"Child\") +\n                                            \" submission could not be validated: incomplete data\"\n                                          }\n                                          type={\"error\"}\n                                        />\n                                      );\n\n                                      handleCommunicationCellUpdate(\n                                        ts.id!,\n                                        \"data.statusLMD\",\n                                        \"INCOMPLETE\"\n                                      );\n                                    }\n                                  });\n                                }\n                              }}\n                              rowIndex={props.rowIndex}\n                              columnKey={props.column.dataKey}\n                              rowData={props.rowData}\n                              initialValue={\"validate\"}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                backgroundColor: \"#F7FAFC\",\n                                width: \"100%\",\n                                height: \"100%\",\n                              }}\n                            />\n                          ),\n                      },\n                      {\n                        key: \"__actions.create\",\n                        dataKey: \"__actions.create\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.create\", 100),\n                        resizable: false,\n                        className: \"red-border\",\n                        cellRenderer: (props: any) =>\n                          props.rowData.parentId === null ? (\n                            <EditableTableCell\n                              type={\"button\"}\n                              invoiced={\n                                props.rowData.data.statusLMD === \"INVOICED\"\n                              }\n                              backgroundColor=\"#fef9fa\"\n                              textColor={\"blue\"}\n                              onUpdate={(submissionId: string) => {\n                                var submission: Submission = {\n                                  project: props.rowData.project,\n                                  parentId: submissionId,\n                                  group: \"communication\",\n                                  created: new Date(),\n                                  updated: new Date(),\n                                  title: \"\",\n                                  author: \"\",\n                                  status: \"\",\n                                  data: {},\n                                };\n                                RestAPI.createSubmission(submission).then(\n                                  (response) => {\n                                    var temp = [...communicationSubmissions];\n                                    temp.push(response.data);\n                                    setCommunicationSubmissions(temp);\n                                  }\n                                );\n                              }}\n                              rowIndex={props.rowIndex}\n                              columnKey={props.column.dataKey}\n                              rowData={props.rowData}\n                              initialValue={\"create\"}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                backgroundColor: \"#F7FAFC\",\n                                width: \"100%\",\n                                height: \"100%\",\n                              }}\n                            />\n                          ),\n                      },\n                      {\n                        key: \"__actions.delete\",\n                        dataKey: \"__actions.delete\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.delete\", 100),\n                        resizable: false,\n                        className: \"red-border\",\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            type={\"button\"}\n                            textColor={\"red\"}\n                            backgroundColor=\"#fef9fa\"\n                            onUpdate={(submissionId: string) => {\n                              var tbd: string[] = [submissionId];\n                              var submissionIndex =\n                                communicationSubmissions.findIndex(\n                                  (s) => s.id === submissionId\n                                );\n                              if (submissionIndex > -1) {\n                                var temp = [...communicationSubmissions];\n                                temp.splice(submissionIndex, 1);\n                                temp.forEach((s, index) => {\n                                  if (\n                                    s.parentId !== null &&\n                                    s.parentId === submissionId\n                                  ) {\n                                    if (s.id) {\n                                      temp.splice(index, 1);\n                                      tbd.push(s.id);\n                                    }\n                                  }\n                                });\n                                setCommunicationSubmissions(temp);\n                                RestAPI.deleteSubmission(submissionId);\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={\"delete\"}\n                          />\n                        ),\n                      },\n                    ]}\n                    headerRenderer={headerRendererForTable}\n                    headerClassName=\"header-cells\"\n                    data={unflatten([\n                      ...filteredCommunicationSubmissions,\n                    ] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={[50, 50]}\n                    rowHeight={55}\n                    overlayRenderer={\n                      <div\n                        style={{\n                          position: \"absolute\",\n                          width: \"200px\",\n                          bottom: \"20px\",\n                          right: \"20px\",\n                          padding: \"5px 15px\",\n                        }}\n                      >\n                        <Button\n                          onClick={() => {\n                            var submission: Submission = {\n                              // FIXME\n                              project: \"619515b754e61c8dd33daa52\",\n                              parentId: null,\n                              group: \"communication\",\n                              created: new Date(),\n                              updated: new Date(),\n                              title: \"\",\n                              author: \"\",\n                              status: \"\",\n                              data: {\n                                materialNumberLMD: \"7000100\",\n                              },\n                            };\n                            RestAPI.createSubmission(submission).then(\n                              (response) => {\n                                var temp = [...communicationSubmissions];\n                                temp.unshift(response.data);\n                                setCommunicationSubmissions(temp);\n                              }\n                            );\n                          }}\n                        >\n                          Create Submission\n                        </Button>\n                      </div>\n                    }\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        p={4}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n        color={\"gray.500\"}\n      >\n        <Box mb={\"1em\"} w=\"100%\">\n          <Text mb=\"8px\">Displayed Columns</Text>\n          <CheckTreePicker\n            cleanable={false}\n            defaultExpandAll={false}\n            block\n            onChange={(value) => {\n              var values: string[] = [];\n              if (value.length < 1) {\n                values = defaultColumns;\n              } else {\n                value.forEach((v) => {\n                  values.push(v.toString());\n                });\n              }\n\n              if (selectedTemplate === \"local\") {\n                localStorage.setItem(\n                  \"vendors.displayedColumns\",\n                  JSON.stringify(values)\n                );\n              }\n              setDisplayedColumns(values);\n            }}\n            value={displayedColumns}\n            data={DisplayedColumnsList}\n            placeholder=\"Groups\"\n            size=\"lg\"\n          />\n        </Box>\n        <Stack\n          mb={\"1em\"}\n          w=\"100%\"\n          spacing={\"2em\"}\n          direction={{ base: \"column\", lg: \"row\" }}\n        >\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Statuses</Text>\n            <TagPicker\n              cleanable\n              style={{\n                minHeight: \"40px\",\n                paddingTop: \"2px\",\n              }}\n              data={[]}\n              block\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Preset</Text>\n            <Creatable\n              menuPortalTarget={document.body}\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              classNamePrefix=\"select\"\n              isClearable\n              onCreateOption={(name) => {\n                if (name.toLowerCase() === \"local\" || name.trim().length < 1) {\n                  return;\n                }\n                setSelectedTemplate(name);\n                var template: Template = {\n                  name,\n                  columns: displayedColumns,\n                  filters: filters,\n                };\n                RestAPI.updateTemplate(template).then(() => {\n                  setTemplates([...templates, template]);\n                });\n              }}\n              value={{ label: selectedTemplate, value: selectedTemplate }}\n              onChange={(name) => {\n                if (name === null || name.label === \"local\") {\n                  setSelectedTemplate(\"local\");\n                  setDisplayedColumns(defaultColumns);\n                  setFilters([]);\n                  return;\n                }\n                setSelectedTemplate(name.label);\n                var template = templates.find((t) => t.name == name.label);\n                if (template) {\n                  setDisplayedColumns(template.columns);\n                  setFilters(template.filters);\n                }\n              }}\n              name=\"presets\"\n              options={[\n                { label: \"local\", value: \"local\" },\n                ...templates.map((t) => {\n                  return { label: t.name, value: t.name };\n                }),\n              ]}\n            />\n          </Box>\n        </Stack>\n      </Box>\n      <Box\n        shadow=\"md\"\n        color=\"gray.600\"\n        backgroundColor=\"white\"\n        mb={10}\n        p={8}\n        pb={0}\n        rounded=\"md\"\n        w={\"100%\"}\n      >\n        <VStack spacing={8} fontSize=\"md\" align=\"stretch\" color={\"gray.500\"}>\n          <Box w={\"100%\"}>\n            <Box w={\"100%\"}>\n              {filters.map((filter, index) => {\n                var valuesField: JSX.Element = <div></div>;\n\n                switch (filter.type) {\n                  case \"string\":\n                    valuesField = (\n                      <Input\n                        onChange={(event) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues[0] = event.target.value;\n                          setFilters(temp);\n                        }}\n                        value={filter.selectedValues[0]}\n                      />\n                    );\n                    break;\n                  case \"number\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <NumberInput\n                            onChange={(_, value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues[0] = value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                            w=\"100%\"\n                          >\n                            <NumberInputField />\n                            <NumberInputStepper>\n                              <NumberIncrementStepper />\n                              <NumberDecrementStepper />\n                            </NumberInputStepper>\n                          </NumberInput>\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <Stack direction={{ base: \"column\", md: \"row\" }}>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[0] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[0]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                            <Box textAlign=\"center\" w=\"20px\">\n                              <ArrowForwardIcon\n                                alignSelf=\"center\"\n                                w={5}\n                                h=\"100%\"\n                              />\n                            </Box>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[1] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[1]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                          </Stack>\n                        );\n                        break;\n                    }\n                    break;\n                  case \"dropdown\":\n                  case \"multiple-dropdown\":\n                    valuesField = (\n                      <TagPicker\n                        cleanable\n                        style={{\n                          minHeight: \"40px\",\n                          paddingTop: \"2px\",\n                        }}\n                        onChange={(value) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues = value;\n                          setFilters(temp);\n                        }}\n                        value={filters[index].selectedValues}\n                        data={loadOptions(filter.columnValue)}\n                        block\n                      />\n                    );\n                    break;\n                  case \"date\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <DateSingleInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onChange={(value) => {\n                              if (value !== filters[index].selectedValues[0]) {\n                                var temp = [...filters];\n                                temp[index].selectedValues = [value];\n                                setFilters(temp);\n                              }\n                            }}\n                          />\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onDatesChange={(value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues = [\n                                value.startDate,\n                                value.endDate,\n                              ];\n                              setFilters(temp);\n                            }}\n                          />\n                        );\n                        break;\n                    }\n                }\n\n                return (\n                  <Box\n                    w={\"100%\"}\n                    backgroundColor=\"white\"\n                    p={4}\n                    mb={5}\n                    border=\"1px\"\n                    rounded=\"md\"\n                    borderColor=\"gray.100\"\n                  >\n                    <CloseButton\n                      onClick={() => {\n                        var temp = [...filters];\n                        temp.splice(index, 1);\n                        setFilters(temp);\n                      }}\n                      float=\"right\"\n                    />\n                    <VStack\n                      mt={\"20px\"}\n                      spacing={8}\n                      fontSize=\"md\"\n                      align=\"stretch\"\n                      color={\"gray.500\"}\n                    >\n                      <Box>\n                        <Stack\n                          direction={{ base: \"column\", xl: \"row\" }}\n                          w=\"100%\"\n                          spacing={{ base: \"20px\", xl: \"50px\" }}\n                        >\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Column</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label: filter.columnLabel,\n                                value: filter.columnValue,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].columnValue = value.value;\n                                temp[index].columnLabel = value.label;\n                                temp[index].type = value.type;\n                                temp[index].filter = \"exact\";\n                                var tv: any = [];\n                                switch (value.type) {\n                                  case \"string\":\n                                    tv = [\"\"];\n                                    break;\n                                  case \"number\":\n                                    if (temp[index].filter === \"exact\") {\n                                      tv = [0];\n                                    } else {\n                                      tv = [0, 0];\n                                    }\n                                    break;\n                                }\n                                temp[index].selectedValues = tv;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"color\"\n                              options={DisplayedColumnsListOptions}\n                              // options={tableCells\n                              //   .filter((cell: any) => cell.dataKey[0] !== \"_\")\n                              //   .map((cell: any) => {\n                              //     console.log(cell.cellRenderer.arguments[0]);\n                              //     return {\n                              //       label: `${cell.title} (${cell.group})`,\n                              //       value: cell.dataKey,\n                              //       type: cell.type ? cell.type : \"text\",\n                              //     };\n                              //   })}\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Type</Text>\n                            <Input\n                              onChange={() => {}}\n                              value={filter.type}\n                              readOnly\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Filter</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label:\n                                  filter.filter.charAt(0).toUpperCase() +\n                                  filter.filter.slice(1),\n                                value: filter.filter,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].filter = value.value;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"filter\"\n                              options={\n                                filterTypes[\n                                  filter.type as keyof typeof filterTypes\n                                ]\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Box>\n                      <Stack\n                        direction={{ base: \"column\", xl: \"row\" }}\n                        w=\"100%\"\n                        spacing={{ base: \"20px\", xl: \"50px\" }}\n                      >\n                        <Box w=\"100%\">\n                          <Text mb=\"8px\">Values</Text>\n                          {valuesField}\n                        </Box>\n                      </Stack>\n                    </VStack>\n                  </Box>\n                );\n              })}\n              <IconButton\n                onClick={() => {\n                  setFilters([\n                    ...filters,\n                    {\n                      columnValue: \"\",\n                      columnLabel: \"\",\n                      type: \"\",\n                      filter: \"exact\",\n                      values: [],\n                      selectedValues: [],\n                    } as FilterField,\n                  ]);\n                }}\n                my={5}\n                float=\"right\"\n                variant=\"outline\"\n                aria-label=\"add-port\"\n                icon={<BiPlusMedical />}\n              />\n            </Box>\n          </Box>\n        </VStack>\n      </Box>\n    </div>\n  );\n}\n\nexport default SubmissionsTable;\n","import {\n  Box,\n  Button,\n  chakra,\n  Flex,\n  Text,\n  Center,\n  Stack,\n  Heading,\n  Avatar,\n  Badge,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Dropdown from \"../types/dropdown\";\n\ninterface Props {\n  history: any;\n  dropdown: Dropdown;\n}\n\nexport default function DropdownCard(props: Props) {\n  return (\n    <Box\n      key={props.dropdown.id}\n      onClick={() => {\n        props.history.push(`/dropdowns/edit/${props.dropdown.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"360px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.dropdown.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.dropdown.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack\n        mt={\"45px\"}\n        direction={\"column\"}\n        textAlign=\"end\"\n        spacing={0}\n        fontSize={\"sm\"}\n        fontWeight={500}\n        color={\"gray.500\"}\n      >\n        <Text>\n          Total Records:{\" \"}\n          {props.dropdown.values !== null ? props.dropdown.values.length : 0}\n        </Text>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={moment(props.dropdown.created).format(\"DD.MM.YYYY HH:mm\")}\n        >\n          <Text>\n            Last Sync:{\" \"}\n            {props.dropdown.type === \"json\"\n              ? \"manual\"\n              : moment(props.dropdown.lastSync).fromNow()}\n          </Text>\n        </Tooltip>\n      </Stack>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport DropdownCard from \"../../components/DropdownCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [dropdowns, setDropdowns] = useState<Dropdown[]>([]);\n\n  useEffect(() => {\n    RestAPI.getDropdowns().then((response) => setDropdowns(response.data));\n  }, []);\n\n  return (\n    <div>\n      <Wrap justify=\"center\" spacing={{ base: \"40px\", lg: \"3em\" }}>\n        {(dropdowns !== null ? dropdowns : []).map((dropdown) => {\n          return (\n            <WrapItem>\n              <DropdownCard history={props.history} dropdown={dropdown} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\n\nimport {\n  AuthenticatedTemplate,\n  MsalAuthenticationTemplate,\n  MsalProvider,\n  useIsAuthenticated,\n  useMsal,\n} from \"@azure/msal-react\";\nimport {\n  InteractionStatus,\n  InteractionType,\n  IPublicClientApplication,\n} from \"@azure/msal-browser\";\nimport { CustomNavigationClient } from \"./utils/NavigationClient\";\nimport Layout from \"./components/Layout\";\n\nimport ProjectExplorer from \"./pages/Projects/Explorer\";\nimport ProjectEditor from \"./pages/Projects/Editor\";\nimport ProjectViewer from \"./pages/Projects/Viewer\";\n\nimport DraftExplorer from \"./pages/Drafts/Explorer\";\n\nimport SubmissionViewer from \"./pages/Submissions/Viewer\";\n\nimport SubmissionsTable from \"./pages/Submissions/Table\";\n\nimport DropdownExplorer from \"./pages/Dropdowns/Explorer\";\nimport DropdownEditor from \"./pages/Dropdowns/Editor\";\nimport { RestAPI } from \"./api/rest\";\nimport { ToastContainer, Slide } from \"react-toastify\";\nimport { loginRequest } from \"./authConfig\";\n\ntype AppProps = {\n  pca: IPublicClientApplication;\n};\n\nfunction App({ pca }: AppProps) {\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  const [isAdmin, setAdminRole] = useState(false);\n  pca.setNavigationClient(navigationClient);\n\n  useEffect(() => {\n    RestAPI.getRoles().then((response) =>\n      setAdminRole(response.data.includes(\"administrator\"))\n    );\n  }, []);\n\n  return (\n    <MsalProvider instance={pca}>\n      <MsalAuthenticationTemplate\n        interactionType={InteractionType.Redirect}\n        authenticationRequest={loginRequest}\n      >\n        {\" \"}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={true}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          closeButton={false}\n          transition={Slide}\n        />\n        <Switch>\n          <Layout>\n            {/* <Route exact path=\"/\" component={Dashboard} /> */}\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <ProjectExplorer isAdmin={isAdmin} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/explorer\"\n              render={(props) => (\n                <ProjectExplorer isAdmin={isAdmin} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/projects\"\n              render={(props) => (\n                <ProjectExplorer isAdmin={isAdmin} {...props} />\n              )}\n            />\n            <Route\n              path=\"/projects/create\"\n              render={(props) => <ProjectEditor create={true} {...props} />}\n            />\n            <Route\n              path=\"/projects/edit/:id\"\n              render={(props) => <ProjectEditor create={false} {...props} />}\n            />\n            <Route\n              path=\"/projects/view/:id\"\n              render={(props) => (\n                <ProjectViewer isAdmin={isAdmin} create={false} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/drafts\"\n              render={(props) => <DraftExplorer isAdmin={isAdmin} {...props} />}\n            />\n            <Route\n              path=\"/submissions/view/:id\"\n              render={(props) => (\n                <SubmissionViewer isAdmin={isAdmin} create={false} {...props} />\n              )}\n            />\n            <Route\n              path=\"/drafts/view/:id\"\n              render={(props) => (\n                <SubmissionViewer\n                  isDraft={true}\n                  isAdmin={isAdmin}\n                  create={true}\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/submissions\"\n              render={(props) => <SubmissionsTable {...props} />}\n            />\n            <Route\n              exact\n              path=\"/dropdowns\"\n              render={(props) => (\n                <DropdownExplorer isAdmin={isAdmin} {...props} />\n              )}\n            />\n            <Route\n              path=\"/dropdowns/create\"\n              render={(props) => <DropdownEditor create={true} {...props} />}\n            />\n            <Route\n              path=\"/dropdowns/edit/:id\"\n              render={(props) => <DropdownEditor create={false} {...props} />}\n            />\n          </Layout>\n        </Switch>\n      </MsalAuthenticationTemplate>\n    </MsalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport {\n  ChakraProvider,\n  ColorModeProvider,\n  extendTheme,\n} from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport \"focus-visible/dist/focus-visible\";\nimport { Global, css } from \"@emotion/react\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\n\n// MSAL imports\nimport {\n  PublicClientApplication,\n  EventType,\n  EventMessage,\n  AuthenticationResult,\n  InteractionType,\n} from \"@azure/msal-browser\";\nimport {\n  AuthenticatedTemplate,\n  MsalAuthenticationTemplate,\n  UnauthenticatedTemplate,\n} from \"@azure/msal-react\";\nimport { msalConfig, loginRequest } from \"./authConfig\";\n\nconst GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus    via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\nmsalInstance.addEventCallback((event: EventMessage) => {\n  if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n    const payload = event.payload as AuthenticationResult;\n    const account = payload.account;\n    msalInstance.setActiveAccount(account);\n  }\n});\n\naxios.interceptors.request.use(async (config: any) => {\n  const account = msalInstance.getActiveAccount();\n  if (account) {\n    const response = await msalInstance.acquireTokenSilent({\n      ...loginRequest,\n      account: account,\n    });\n    config.headers.Authorization = `Bearer ${response.idToken}`;\n  }\n  return config;\n});\n\nReactDOM.render(\n  <ChakraProvider\n    theme={extendTheme({\n      styles: {\n        global: (props: any) => ({\n          body: {\n            bg: mode(\"#f7fafc\", \"#282C34\")(props),\n            color: mode(\"gray.800\", \"#ABB2BF\")(props),\n          },\n        }),\n      },\n      config: {\n        initialColorMode: \"light\",\n      },\n    })}\n  >\n    <Global styles={GlobalStyles} />\n    <Router>\n      <App pca={msalInstance} />\n    </Router>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n","import axios, { AxiosResponse } from \"axios\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { Template } from \"../../types/template\";\n\nexport class API {\n  public baseUrl =\n    process.env.NODE_ENV === \"production\"\n      ? \"/api\"\n      : \"http://localhost:7000/api\";\n  public usersUrl = `${this.baseUrl}/users/`;\n  public projectsUrl = `${this.baseUrl}/projects/`;\n  public bookmarksUrl = `${this.baseUrl}/bookmarks/`;\n  public submissionsUrl = `${this.baseUrl}/submissions/`;\n  public dropdownsUrl = `${this.baseUrl}/dropdowns/`;\n  public templatesUrl = `${this.baseUrl}/templates/`;\n  public draftsUrl = `${this.baseUrl}/drafts/`;\n\n  getRoles(): Promise<AxiosResponse<string[]>> {\n    return axios.get(`${this.usersUrl}roles`);\n  }\n  getProjects(): Promise<AxiosResponse<Project[]>> {\n    return axios.get<Project[]>(this.projectsUrl);\n  }\n  getProject(id: string): Promise<AxiosResponse<Project>> {\n    return axios.get<Project>(`${this.projectsUrl}${id}`);\n  }\n  createProject(project: Project): Promise<AxiosResponse<Project>> {\n    return axios.post<Project>(`${this.projectsUrl}`, JSON.stringify(project));\n  }\n  updateProject(project: Project): Promise<AxiosResponse> {\n    return axios.put<Project>(\n      `${this.projectsUrl}${project.id}`,\n      JSON.stringify(project)\n    );\n  }\n  deleteProject(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.projectsUrl}${id}`);\n  }\n\n  getBookmarks(): Promise<AxiosResponse<Bookmark[]>> {\n    return axios.get<Bookmark[]>(this.bookmarksUrl);\n  }\n  createBookmark(bookmark: Bookmark): Promise<AxiosResponse<Bookmark>> {\n    return axios.post<Bookmark>(this.bookmarksUrl, JSON.stringify(bookmark));\n  }\n  deleteBookmark(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.bookmarksUrl}${id}`);\n  }\n\n  getSubmissions(project?: string): Promise<AxiosResponse<Submission[]>> {\n    const params = new URLSearchParams([]);\n    if (project) {\n      params.set(\"project\", project);\n    }\n    return axios.get<Submission[]>(this.submissionsUrl, { params });\n  }\n  getSubmissionWithChildren(\n    id: string\n  ): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.get<SubmissionWithChildren>(`${this.submissionsUrl}${id}`);\n  }\n  createSubmission(submission: Submission): Promise<AxiosResponse<Submission>> {\n    return axios.post<Submission>(\n      `${this.submissionsUrl}`,\n      JSON.stringify(submission)\n    );\n  }\n  createSubmissionWithChildren(\n    submission: SubmissionWithChildren\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}children`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmission(submission: Submission): Promise<AxiosResponse> {\n    return axios.put<Submission>(\n      `${this.submissionsUrl}${submission.id}`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmissionPartial(\n    submission: string,\n    path: string,\n    value: any\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}partial`,\n      JSON.stringify({\n        submission,\n        path,\n        value,\n      })\n    );\n  }\n  callSapSubmission(submission: string): Promise<AxiosResponse> {\n    return axios.get(`${this.submissionsUrl}${submission}/sap`);\n  }\n  deleteSubmission(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.submissionsUrl}${id}`);\n  }\n\n  getDropdowns(): Promise<AxiosResponse<Dropdown[]>> {\n    return axios.get<Dropdown[]>(this.dropdownsUrl);\n  }\n  getDropdown(id: string): Promise<AxiosResponse<Dropdown>> {\n    return axios.get<Dropdown>(`${this.dropdownsUrl}${id}`);\n  }\n  getDropdownValues(id: string): Promise<AxiosResponse<any[]>> {\n    return axios.get<any[]>(`${this.dropdownsUrl}${id}/values`);\n  }\n  syncDropdown(id: string): Promise<AxiosResponse> {\n    return axios.get(`${this.dropdownsUrl}sync/${id}`);\n  }\n  createDropdown(dropdown: Dropdown): Promise<AxiosResponse<Dropdown>> {\n    return axios.post<Dropdown>(\n      `${this.dropdownsUrl}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  updateDropdown(dropdown: Dropdown): Promise<AxiosResponse> {\n    return axios.put<Dropdown>(\n      `${this.dropdownsUrl}${dropdown.id}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  deleteDropdown(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.dropdownsUrl}${id}`);\n  }\n\n  getVendorTableDefaultConfig(): Promise<AxiosResponse<any>> {\n    return axios.get<any>(`${this.submissionsUrl}vendorTable`);\n  }\n\n  getTemplates(): Promise<AxiosResponse<Template[]>> {\n    return axios.get<Template[]>(this.templatesUrl);\n  }\n  updateTemplate(template: Template): Promise<AxiosResponse> {\n    return axios.put<Template>(\n      `${this.templatesUrl}${template.name}`,\n      JSON.stringify(template)\n    );\n  }\n\n  getDrafts(): Promise<AxiosResponse<Submission[]>> {\n    return axios.get<Submission[]>(this.draftsUrl);\n  }\n  getDraft(id: string): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.get<SubmissionWithChildren>(`${this.draftsUrl}${id}`);\n  }\n  createDraft(\n    draft: SubmissionWithChildren\n  ): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.post<SubmissionWithChildren>(\n      `${this.draftsUrl}`,\n      JSON.stringify(draft)\n    );\n  }\n  updateDraft(draft: SubmissionWithChildren): Promise<AxiosResponse> {\n    return axios.put<SubmissionWithChildren>(\n      `${this.draftsUrl}${draft.submission.id}`,\n      JSON.stringify(draft)\n    );\n  }\n  deleteDraft(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.draftsUrl}${id}`);\n  }\n\n  updateVendorTableDefaultConfig(\n    displayedColumns: string[],\n    columnsWidth: any\n  ): Promise<AxiosResponse> {\n    return axios.put<any>(\n      `${this.submissionsUrl}vendorTable`,\n      JSON.stringify({\n        displayedColumns: displayedColumns,\n        columnsWidth: columnsWidth,\n      })\n    );\n  }\n\n  getEntityIdFromUrl(url: string): number {\n    const urlSegments = url.split(\"/\").filter((x) => x !== \"\");\n    return parseInt(urlSegments[urlSegments.length - 1]);\n  }\n}\n\nexport const RestAPI = new API();\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Center,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2, VscDebugStart } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/snippets/javascript\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport Dropdown from \"../../types/dropdown\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [debug, setDebug] = useState(\"\");\n  const [rawValues, setRawValues] = useState(\"\");\n  const [dropdown, setDropdown] = useState<Dropdown>({\n    title: \"\",\n    created: new Date(),\n    description: \"\",\n    type: \"js\",\n    url: \"\",\n    processor: \"\",\n    values: [] as any[],\n    syncInterval: 60,\n    lastSync: new Date(),\n    private: false,\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getDropdown(props.match.params.id).then((response) => {\n        setDropdown(response.data);\n        setRawValues(JSON.stringify(response.data.values, null, 2));\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={dropdown.title}\n              onChange={(event) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              placeholder=\"\"\n              onChange={(value: any) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              value={{ label: dropdown.type, value: dropdown.type }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"dropdownType\"\n              options={[\n                { label: \"js\", value: \"js\" },\n                { label: \"json\", value: \"json\" },\n              ]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Sync Interval (minutes)</Text>\n            <NumberInput\n              value={dropdown.syncInterval}\n              onChange={(_, value) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  syncInterval: value,\n                }));\n              }}\n              min={5}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={dropdown.description}\n            onChange={(event) => {\n              setDropdown((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      <Box mb={5} display={dropdown.type === \"json\" ? \"flex\" : \"none\"} w=\"100%\">\n        <AceEditor\n          width=\"100%\"\n          height=\"900px\"\n          style={{\n            borderRadius: \"5px\",\n          }}\n          mode=\"json\"\n          theme=\"tomorrow\"\n          name=\"json-editor\"\n          onChange={(value) => {\n            setRawValues(value);\n          }}\n          fontSize={14}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={rawValues}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            showLineNumbers: true,\n            tabSize: 2,\n          }}\n        />\n      </Box>\n      <Stack\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        spacing={4}\n        mb={4}\n        direction={{ base: \"column\", xl: \"row\" }}\n      >\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"javascript\"\n            theme=\"tomorrow\"\n            name=\"js-editor\"\n            onChange={(value) => {\n              setDropdown((prev) => ({\n                ...prev,\n                processor: value,\n              }));\n            }}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            value={dropdown.processor}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"json\"\n            theme=\"tomorrow\"\n            name=\"console\"\n            fontSize={12}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={debug}\n            readOnly={true}\n            setOptions={{\n              tabSize: 2,\n            }}\n          />\n        </Box>\n      </Stack>\n      <Center\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        mt={\"10px\"}\n        mb=\"60px\"\n        h=\"60px\"\n        w=\"100%\"\n      >\n        <IconButton\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          aria-label=\"Debug\"\n          icon={<VscDebugStart />}\n          onClick={async () => {\n            setDebug(\"\");\n            var result = eval(dropdown.processor);\n            if (typeof result === \"object\") {\n              setDebug(JSON.stringify(result, null, 4));\n            } else {\n              setDebug(String(result));\n            }\n          }}\n        />\n      </Center>\n\n      <HStack mb={\"40px\"} spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            if (dropdown.type === \"json\") {\n              dropdown.values = JSON.parse(rawValues);\n            }\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createDropdown(dropdown);\n              if (response.data.id) {\n                props.history.push(`/dropdowns/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateDropdown(dropdown)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={\n                        <div>Dropdown has been successfully updated</div>\n                      }\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update dropdown\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n","import { Box, chakra, Flex, Icon, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {\n  AiFillInfoCircle,\n  BsLightningFill,\n  IoMdCheckmarkCircle,\n  MdError,\n} from \"react-icons/all\";\n\nexport declare type ToastType = \"info\" | \"success\" | \"warning\" | \"error\";\n\ninterface Props {\n  title: string;\n  message: any;\n  type: ToastType;\n}\n\nconst Toast: React.FunctionComponent<Props> = (props) => {\n  return (\n    <Flex\n      w=\"350px\"\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      shadow=\"md\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n    >\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        w={12}\n        bg={\n          props.type === \"success\"\n            ? \"green.500\"\n            : props.type === \"error\"\n            ? \"red.500\"\n            : props.type === \"warning\"\n            ? \"yellow.500\"\n            : \"blue.500\"\n        }\n      >\n        <Icon\n          as={\n            props.type === \"success\"\n              ? IoMdCheckmarkCircle\n              : props.type === \"error\"\n              ? BsLightningFill\n              : props.type === \"warning\"\n              ? MdError\n              : AiFillInfoCircle\n          }\n          color=\"white\"\n          boxSize={6}\n        />\n      </Flex>\n\n      <Box mx={-3} py={2} px={4}>\n        <Box mx={3}>\n          <chakra.span\n            color={\n              props.type === \"success\"\n                ? \"green.500\"\n                : props.type === \"error\"\n                ? \"red.500\"\n                : props.type === \"warning\"\n                ? \"yellow.500\"\n                : \"blue.500\"\n            }\n            fontWeight=\"bold\"\n            fontSize=\"md\"\n          >\n            {props.title}\n          </chakra.span>\n          <chakra.div color={\"gray.600\"} fontSize=\"sm\">\n            {props.message}\n          </chakra.div>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Toast;\n"],"sourceRoot":""}