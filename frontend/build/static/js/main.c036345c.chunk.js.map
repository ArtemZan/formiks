{"version":3,"sources":["utils/NavigationClient.tsx","components/AllowCookies.tsx","components/Layout.tsx","utils/Styles.ts","components/CreateBookmark.tsx","components/ProjectCard.tsx","pages/Projects/Explorer.tsx","pages/Projects/Editor.tsx","authConfig.tsx","utils/MsGraphApiCall.ts","components/projects/cerov.tsx","components/projects/ermv.tsx","components/projects/elmv.tsx","components/projects/elov.tsx","components/projects/por.tsx","pages/Projects/Viewer.tsx","pages/Drafts/Explorer.tsx","pages/Submissions/Viewer.tsx","utils/Numbers.ts","components/EditableTableCell.tsx","components/DatePicker/utils/deepmerge.ts","components/DatePicker/utils/pick.ts","components/DatePicker/context/StylesContext.tsx","components/DatePicker/components/ActionButton.tsx","components/DatePicker/components/CloseButton.tsx","components/DatePicker/phrases.ts","components/DatePicker/utils/formatters.ts","components/DatePicker/context/DatepickerContext.tsx","components/DatePicker/components/Day.tsx","components/DatePicker/utils/getStateStyle.ts","components/DatePicker/components/Input.tsx","components/DatePicker/components/Month.tsx","components/DatePicker/components/ResetDatesButton.tsx","components/DatePicker/components/SelectedDate.tsx","pages/Submissions/Table.tsx","components/DatePicker/Datepicker.tsx","components/DatePicker/DateRangeInput.tsx","components/DatePicker/DateSingleInput.tsx","components/DropdownCard.tsx","pages/Dropdowns/Explorer.tsx","App.tsx","index.tsx","api/rest/index.tsx","pages/Dropdowns/Editor.tsx","components/Toast.tsx"],"names":["CustomNavigationClient","history","url","options","a","relativePath","replace","window","location","origin","noHistory","this","push","NavigationClient","CookiePreference","props","position","bottom","left","right","width","p","boxShadow","bg","useColorModeValue","ml","mr","mb","borderRadius","zIndex","direction","alignItems","fontWeight","base","md","justifyContent","fontSize","textAlign","variant","colorScheme","color","_hover","onClick","onAllow","localStorage","setItem","DesktopNav","useHistory","linkColor","linkHoverColor","popoverContentBgColor","spacing","NAV_ITEMS","map","navItem","trigger","placement","isOpen","onClose","href","textDecoration","label","children","border","rounded","minW","mt","child","DesktopSubNav","subLabel","role","display","align","transition","_groupHover","transform","opacity","justify","flex","w","h","as","ChevronRightIcon","MobileNav","closeMenu","MobileNavItem","useDisclosure","onToggle","py","Link","ChevronDownIcon","in","animateOpacity","style","marginTop","pl","borderLeft","borderStyle","borderColor","isAdmin","Layout","instance","useMsal","useState","cookieConsent","setCookieConsent","roles","setRoles","isAuthenticated","useIsAuthenticated","useEffect","getItem","RestAPI","getRoles","then","response","data","sort","useColorMode","colorMode","toggleColorMode","minH","px","borderBottom","icon","Close","Hamburger","useBreakpointValue","fontFamily","cursor","Moon","Sun","name","msalInstance","getActiveAccount","size","hasArrow","join","marginLeft","m","title","isDisabled","open","sessionStorage","clear","setTimeout","loginRedirect","xl","DefaultSelectStyles","menu","provided","backgroundColor","input","singleValue","menuPortal","control","state","minHeight","option","isSelected","multiValue","styles","multiValueLabel","multiValueRemove","CreateBookmark","matchingProjects","setMatchingProjects","availableTags","setAvailableTags","setTitle","selectedTags","setSelectedTags","tags","projects","project","tag","indexOf","some","item","includes","value","onChange","event","target","placeholder","theme","colors","primary","isMulti","values","element","float","length","bookmarks","bookmark","createBookmark","addBookmark","ProjectCard","id","overflow","whiteSpace","textOverflow","description","author","alt","moment","updated","format","toUpperCase","Explorer","setProjects","filteredProjects","setFilteredProjects","selectedBookmark","setSelectedBookmark","setBookmarks","createBookmarkModal","setCreateBookMarkModal","getBookmarks","getProjects","paddingBottom","old","maxW","lg","undefined","onContextMenu","e","preventDefault","deleteBookmark","filter","b","t","Add","mx","Editor","isSubmitting","setIsSubmitting","created","Date","statuses","defaultStatus","components","type","code","setProject","create","match","params","getProject","goBack","prev","background","isFocused","status","classNamePrefix","isClearable","rows","builder","basic","excelTable","advanced","file","premium","form","schema","isLoading","createProject","updateProject","toast","Toast","message","catch","loginRequest","scopes","graphConfig","getAccountInfo","account","acquireTokenSilent","headers","Headers","bearer","accessToken","append","method","fetch","json","error","console","log","PH1","Companies","VendorsNames","AlsoInternationalVendorsNames","BUs","CampaignChannel","Budget","ExchangeRates","Year","ProjectStartQuarter","Column","Table","HeaderCell","Cell","Cerov","country","requestorsCompanyName","setRequestorsCompanyName","localExchangeRate","setLocalExchangeRate","campaignName","setCampaignName","campaignDescription","setCampaignDescription","targetAudience","setTargetAudience","campaignChannel","setCampaignChannel","vendorName","setVendorName","year","setYear","projectStartQuarter","setProjectStartQuarter","projectNumber","setProjectNumber","requestorsName","setRequestorsName","projectApproval","fiscalQuarter","setFiscalQuarter","organizingCompany","setOrganizingCompany","startDate","setStartDate","endDate","setEndDate","budgetSource","setBudgetSource","budgetApprovedByVendor","setBudgetApprovedByVendor","exchangeRates","setExchangeRates","estimatedIncomeBudgetCurrency","setEstimatedIncomeBudgetCurrency","estimatedCostsBudgetCurrency","setEstimatedCostsBudgetCurrency","netProfitTargetBudgetCurrency","setNetProfitTargetBudgetCurrency","estimatedIncome","setEstimatedIncome","estimatedCosts","setEstimatedCosts","netProfitTarget","setNetProfitTarget","companiesParticipating","setCompaniesParticipating","comments","setComments","ph","vendor","setVendor","costBreakdown","setCostBreakdown","totalcbShare","setTotalcbShare","totalcbContribution","setTotalcbContribution","totalcbCosts","setTotalcbCosts","totalEstimatedCostsLC","setTotalEstimatedCostsLC","injectionReady","setInjectionReady","dropdownsIds","Promise","all","di","getDropdownValues","responses","submission","companyCode","requestorsCountry","currency","localCurrency","substr","substring","manufacturersFiscalQuarter","campaignStartDate","campaignEndDate","find","campaignBudgetsCurrency","campaignEstimatedIncomeBudgetsCurrency","toString","campaignEstimatedIncomeEur","toFixed","campaignEstimatedCostsEur","campaignNetProfitTargetEur","campaignEstimatedCostsBudgetsCurrency","campaignNetProfitTargetBudgetsCurrency","parseFloat","rate","campaignCurrency","vs","s","group","projectManager","productionProjectManager","creditor","creditorNumber","debitor","debitorNumber","manufacturer","manufacturerNumber","bu","businessUnit","budgetCurrency","budgetAmount","localBudget","eurBudget","share","estimatedCostsCC","estimatedIncomeCC","estimatedCostsLC","estimatedCostsEUR","netProfitTargetVC","netProfitTargetLC","netProfitTargetEUR","companyName","countryCodeEMEA","countriesEMEA","c","totalShare","totalCosts","totalContribution","forEach","contactEmail","localProjectNumber","countryShare","contribution","countryBudgetContributionCC","countryCostEstimationCC","estimatedCostsEur","contributionEur","estimatedIncomeEUR","displayName","fetchDropdowns","forceUpdate","useReducer","x","createSubmission","draft","local","projectId","parent","parentId","viewId","projectName","projectApprover","isNaN","additionalInformation","projectType","vendorBudgetCurrency","vendorAmount","vendorShare","estimatedResultCC","estimatedResultEUR","estimatedResultBC","company","parentProjectNumber","countryBudgetContributionEur","countryCostEstimationEur","isDraft","updateDraft","deleteDraft","createSubmissionWithChildren","hasChanged","createDraft","totalAlert","row","check","onCostBreakdownTableChange","column","table","sum","arr","total","col","index","ex","alsoMarketingConsultant","kreditor","debitorischer","hersteller","slice","menuPortalTarget","document","body","ler","defaultValue","disabled","selected","maxLength","resize","customInput","date","dateFormat","temp","className","rowClassName","rowData","shouldUpdateScroll","hover","autoHeight","rowHeight","resizable","dataKey","formattedData","v","wb","Sheets","XLSX","aoa_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","Ermv","vendorsNames","setVendorsNames","vendors","setVendors","setTotalVendorBudgetInLC","setTotalVendorBudgetInEUR","marketingResponsible","er","vendorBudgetAmount","isEqual","totalBudgetEur","totalBudgetLC","totalCostsCC","totalIncomeCC","totalCostsLC","totalCostsEur","eb","lb","totalVendorBudgetInLC","totalVendorBudgetInEUR","totalVendorShare","totalEstimatedIncomeInCC","totalEstimatedCostsInCC","totalEstimatedCostsInLC","totalEstimatedCostsInEUR","totalNetProfitTargetInCC","totalNetProfitTargetInLC","totalNetProfitTargetInEUR","vbEur","val","split","invalid","getSubmissions","parentSubmissions","isUnique","pn","found","newSuffix","parseInt","Elmv","vendorAmountLC","Elov","bgColor","setProjectName","serviceProvider","setServiceProvider","services","setServices","serviceType","netValueLC","netValuePO","poCurrencyCode","netValueEUR","externalPurchaseOrderNumber","portalId","purchaseOrderDate","orderingPerson","approvingPerson","contactPerson","contactDetails","subs","targetId","sub","updateSubmissionPartial","service","netValueOfServiceOrderedLC","netValuePOC","purchaseOrderCurrency","netValueEur","Viewer","predefinedProject","setPredefinedProject","setForm","pr","divider","onSubmit","formio","drafts","setDrafts","getDrafts","Number","_rejected","allowMultiple","pd","pb","_dark","getDraft","getView","flexDirection","height","boxSize","maxWidth","NumberWithCommas","numRegex","EditableTableCell","cellValue","editing","prevProps","initialValue","setState","Array","isArray","d","bold","textColor","readonly","invoiced","autoFocus","onFocus","execCommand","onKeyPress","keyCode","which","string","String","fromCharCode","test","defaultPrevented","onBlur","onUpdate","columnKey","toDate","onCalendarClose","menuIsOpen","minWidth","paddingLeft","outlineWidth","dv","loadOptions","isSearchable","cv","React","Component","isObject","obj","Object","getPrototypeOf","prototype","call","merge","objects","reduce","result","current","keys","key","from","Set","concat","pick","ret","emptyStylesObject","actionButton","arrowIcon","buttonsWrapper","closeButton","datepickerContainer","dateRangeInputContainer","dateRangeInputDivider","day","normal","rangeHover","first","firstOrLast","last","dayContainer","inputComponentIcon","active","inputComponentInput","inputComponentInputAddon","inputComponentInputGroup","monthContainer","monthDayGrid","monthMonthLabel","monthsWrapper","monthWeekdayLabel","resetDatesButton","selectDateContainer","selectDateDateText","selectDateText","datepickerFooter","StylesContext","createContext","overwriteDefaultStyles","StylesProvider","Provider","useStyleProps","inlineStyles","useContext","filteredStyles","ActionButton","IconComponent","ChevronLeftIcon","styleProps","ChevronUpIcon","CloseButton","top","datepickerPhrases","datepickerStartDatePlaceholder","datepickerStartDateLabel","datepickerEndDatePlaceholder","datepickerEndDateLabel","resetDates","close","dateRangeInputPhrases","startDateAriaLabel","endDateAriaLabel","startDatePlaceholder","endDatePlaceholder","dateSingleInputPhrases","dateAriaLabel","datePlaceholder","dayLabelFormatFn","defaultDisplayFormat","defaultBase","focusedInput","onDayRender","displayFormat","phrases","defaultFormatters","monthLabelFormat","monthLabelFormatFn","weekdayLabelFormat","weekdayLabelFormatFn","dayLabelFormat","datepickerContextDefaultValue","numberOfMonths","activeMonths","firstDayOfWeek","focusedDate","hoveredDate","goToDate","goToNextMonths","goToNextMonthsByOneMonth","goToNextYear","goToPreviousMonths","goToPreviousMonthsByOneMonth","goToPreviousYear","isDateBlocked","isDateFocused","isDateHovered","isDateSelected","isEndDate","isFirstOrLastSelectedDate","isStartDate","onDateFocus","onDateHover","onDateSelect","onResetDates","DatepickerContext","useDatepickerContext","DatepickerProvider","getColor","isWithinHoverRange","isFirst","isLast","Day","dayRef","useRef","dayProps","useDay","onKeyDown","onMouseEnter","tabIndex","isSelectedStartOrEnd","disabledDate","borderRightRadius","borderLeftRadius","containerStyle","useMemo","buttonStyle","ref","toDateString","getStateStyle","isActive","Input","forwardRef","inputRef","disableAccessibility","iconComponent","CalendarIcon","showCalendarIcon","allowEditableInputs","inputProps","searchString","setSearchString","htmlFor","isReadOnly","autoComplete","_e","dateValue","clearTimeout","parsedDate","parseDate","isValidDate","getDate","Month","month","rowGap","useMonth","days","weekdayLabels","monthLabel","columns","weekdayLabel","dayLabel","ResetDatesButton","text","Repeat","onMouseUp","currentTarget","blur","submissionData","SelectedDate","getInputValue","Datepicker","changeActiveMonthOnSelect","exactMinBookingDays","initialVisibleMonth","maxBookingDate","minBookingDate","minBookingDays","onDatesChange","showClose","showResetDates","showSelectedDates","customStyles","unavailableDates","dp","useDatepicker","useImperativeHandle","monthGridRef","scrollTopToMonthGrid","vertical","scrollTop","_goToNextMonths","_goToPreviousMonths","isMobile","shadow","my","pt","START_DATE","ArrowForward","END_DATE","isInline","padding","onMouseLeave","DateRangeInput","endDateProp","startDateProp","focusedInputProp","endShowCalendarIcon","showDivider","startShowCalendarIcon","onFocusChange","startIcon","startId","startName","startPlaceholder","startRef","endId","endName","endRef","endIcon","endPlaceholder","datepickerRef","datepickerWrapperRef","setFocusedInput","handleOnFocusChange","_focusedInput","onClickOutsideHandler","contains","handleInputChange","addEventListener","removeEventListener","alignSelf","DateSingleInput","dateProp","showDatepicker","showDatepickerProp","showResetDate","setDate","setShowDatepicker","show","ProjectType","InternationalVendorsNames","TargetAudience","SapStatus","defaultColumns","identifier","filterTypes","number","dropdown","DisplayedColumnsList","DisplayedColumnsListOptions","flat","SubmissionsTable","selectedTemplate","setSelectedTemplate","templates","setTemplates","Map","setSourceSubmissions","currentUser","setCurrentUser","filters","setFilters","displayedColumns","setDisplayedColumns","totalCostAmount","setTotalCostAmount","totalCostAmountCostGL","setTotalCostAmountCostGL","totalCostAmountLC","setTotalCostAmountLC","totalCostAmountLCCostGL","setTotalCostAmountLCCostGL","totalIncomeAmount","setTotalIncomeAmount","totalIncomeAmountLCIncomeGL","setTotalIncomeAmountLCIncomeGL","totalIncomeAmountIncomeGL","setTotalIncomeAmountIncomeGL","totalIncomeAmountLC","setTotalIncomeAmountLC","totalCostsInTool","setTotalCostsInTool","totalIncomeInTool","setTotalIncomeInTool","totalCostsInToolEUR","setTotalCostsInToolEUR","totalIncomeInToolEUR","setTotalIncomeInToolEUR","tableWidth","setTableWidth","submissions","setSubmissions","filteredSubmissions","setFilteredSubmissions","filteredCommunicationSubmissions","setFilteredCommunicationSubmissions","communicationSubmissions","setCommunicationSubmissions","onlyMine","setOnlyMine","scrollLeft","setScrollLeft","defaultColumnsWidth","onScroll","useCallback","args","totalRequests","setTotalRequests","ignored","tcit","tiit","tcite","tiite","tca","tcal","tcacgl","tia","tial","tcalcgl","tialigl","tiaigl","subm","costAmountEUR","costAmountEURCostGL","costAmountLC","incomeAmountEURSI","incomeAmountLCSI","costAmountLCCostGL","incomeAmountLCIncomeGL","incomeAmountEurIncomeGL","filteredMap","filtered","cFilteredMap","filteredCommunication","f","JSON","parse","stringify","columnValue","columnLabel","selectedValues","valid","_","get","endsWith","exists","filterValue","setHours","set","has","rowRenderer","cells","visibleIndices","offset","netOffsets","offsetSum","leftBound","rightBound","columnOffset","colIdx","getVisibleColumnIndices","startIndex","visibleCells","i","partialUpdate","path","shift","handleCellUpdate","submissionIndex","findIndex","handleCommunicationCellUpdate","datePath","callSap","submissionId","callSapSubmission","IntOrderOut","EX_ORDERID","EX_SUBRC","dangerouslySetInnerHTML","__html","columnWidth","dw","sd","findSubmissionsByPO","po","visibilityController","lmdColumnEdit","template","getTemplates","vSubs","ss","cSubs","totalIncomeLC","totalIncomeEUR","totalCostsEUR","totalCostsTool","totalIncomeTool","cs","incomeAmountEURIncomeGL","tableCells","frozen","FrozenDirection","LEFT","cellRenderer","header","hidden","rowIndex","cellData","deleteSubmission","splice","headerRendererForTable","headerIndex","cell","cloneElement","updateTemplate","init","ID","Parent","Group","Created","Title","Author","doc","unshift","ws","json_to_sheet","skipHeader","wch","isLazy","onResize","onColumnResizeEnd","overscanRowCount","ignoreFunctionInColumnCompare","expandColumnKey","fixed","headerRenderer","headerClassName","frozenData","unflatten","rowKey","headerHeight","statusLMD","mi","documentNumberSI","activityIdForPortalVendors","additionalInformationLMD","alsoMarketingProjectNumberLMD","every","vodLMD","invoiceTypeLMD","currentVendor","vendorLMD","amount","NaN","trim","dunningStop","dunningStopLMD","toLowerCase","paymentMethodLMD","targetSubmissionIndex","is","ts","tsi","invoicingDateLMD","materialNumberLMD","invoiceTextLMD","amountLMD","documentCurrencyLMD","sendToLMD","depositNumberLMD","today","tbd","overlayRenderer","CheckTreePicker","cleanable","defaultExpandAll","block","TagPicker","paddingTop","onCreateOption","valuesField","tv","readOnly","charAt","DropdownCard","lastSync","fromNow","dropdowns","setDropdowns","getDropdowns","App","pca","navigationClient","setAdminRole","setNavigationClient","interactionType","InteractionType","Redirect","authenticationRequest","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Slide","exact","render","GlobalStyles","css","PublicClientApplication","auth","clientId","redirectUri","postLogoutRedirectUri","addEventCallback","eventType","EventType","LOGIN_SUCCESS","payload","setActiveAccount","axios","interceptors","request","use","config","Authorization","idToken","ReactDOM","extendTheme","global","mode","initialColorMode","getElementById","baseUrl","usersUrl","projectsUrl","bookmarksUrl","submissionsUrl","dropdownsUrl","templatesUrl","draftsUrl","viewsUrl","post","put","delete","URLSearchParams","columnsWidth","urlSegments","debug","setDebug","rawValues","setRawValues","processor","syncInterval","private","setDropdown","getDropdown","min","showPrintMargin","showGutter","highlightActiveLine","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","showLineNumbers","tabSize","enableSnippets","eval","createDropdown","updateDropdown","IoMdCheckmarkCircle","BsLightningFill","MdError","AiFillInfoCircle","span","div"],"mappings":"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UAC9D,CACErL,MAAO,gBACPuH,MAAO,0BACP8D,KAAM,UAER,CACErL,MAAO,eACPuH,MAAO,yBACP8D,KAAM,QAER,CACErL,MAAO,gBACPuH,MAAO,0BACP8D,KAAM,QAER,CACErL,MAAO,kBACPuH,MAAO,4BACP8D,KAAM,UAER,CACErL,MAAO,OACPuH,MAAO,kBACP8D,KAAM,UAER,CACErL,MAAO,eACPuH,MAAO,yBACP8D,KAAM,UAER,CACErL,MAAO,mBACPuH,MAAO,0BACP8D,KAAM,UAER,CACErL,MAAO,mBACPuH,MAAO,0BACP8D,KAAM,UAER,CAAErL,MAAO,KAAMuH,MAAO,gBAAiB8D,KAAM,UAC7C,CACErL,MAAO,oBACPuH,MAAO,2BACP8D,KAAM,YAIZ,CACErL,MAAO,qBACPuH,MAAO,mBACPtH,SAAU,CACR,CACED,MAAO,eACPuH,MAAO,yBACP8D,KAAM,UAER,CACErL,MAAO,gBACPuH,MAAO,4BACP8D,KAAM,UAER,CACErL,MAAO,eACPuH,MAAO,2BACP8D,KAAM,QAER,CACErL,MAAO,gBACPuH,MAAO,4BACP8D,KAAM,QAER,CACErL,MAAO,kBACPuH,MAAO,8BACP8D,KAAM,UAER,CACErL,MAAO,OACPuH,MAAO,oBACP8D,KAAM,UAER,CACErL,MAAO,iBACPuH,MAAO,6BACP8D,KAAM,UAER,CACErL,MAAO,qBACPuH,MAAO,8BACP8D,KAAM,UAER,CACErL,MAAO,qBACPuH,MAAO,8BACP8D,KAAM,UAER,CAAErL,MAAO,KAAMuH,MAAO,kBAAmB8D,KAAM,UAC/C,CACErL,MAAO,sBACPuH,MAAO,+BACP8D,KAAM,YAIZ,CACErL,MAAO,kBACPuH,MAAO,iBACPtH,SAAU,CACR,CACED,MAAO,oBACPuH,MAAO,qBACP8D,KAAM,UAER,CACErL,MAAO,mBACPuH,MAAO,oBACP8D,KAAM,UAER,CACErL,MAAO,oBACPuH,MAAO,qBACP8D,KAAM,UAER,CACErL,MAAO,kBACPuH,MAAO,mBACP8D,KAAM,UAER,CACErL,MAAO,qBACPuH,MAAO,sBACP8D,KAAM,UAER,CACErL,MAAO,oBACPuH,MAAO,qBACP8D,KAAM,UAER,CACErL,MAAO,qBACPuH,MAAO,sBACP8D,KAAM,UAER,CACErL,MAAO,mBACPuH,MAAO,oBACP8D,KAAM,YAIZ,CACErL,MAAO,iBACPuH,MAAO,gBACPtH,SAAU,CACR,CACED,MAAO,2BACPuH,MAAO,sBACP8D,KAAM,UAER,CACErL,MAAO,0BACPuH,MAAO,qBACP8D,KAAM,UAER,CACErL,MAAO,4BACPuH,MAAO,uBACP8D,KAAM,UAER,CACErL,MAAO,2BACPuH,MAAO,sBACP8D,KAAM,YAIZ,CACErL,MAAO,8CACPuH,MAAO,OACPtH,SAAU,CACR,CACED,MAAO,SACPuH,MAAO,kBACP8D,KAAM,YAER,CACErL,MAAO,sBACPuH,MAAO,0BACP8D,KAAM,UAER,CACErL,MAAO,yBACPuH,MAAO,gBACP8D,KAAM,UAER,CACErL,MAAO,OACPuH,MAAO,gBACP8D,KAAM,QAER,CACErL,MAAO,WACPuH,MAAO,oBACP8D,KAAM,YAIZ,CACErL,MAAO,sCACPuH,MAAO,MACPtH,SAAU,CACR,CACED,MAAO,SACPuH,MAAO,iBACP8D,KAAM,UAER,CACErL,MAAO,oBACPuH,MAAO,wBACP8D,KAAM,UAER,CACErL,MAAO,YACPuH,MAAO,oBACP8D,KAAM,UAER,CACErL,MAAO,SACPuH,MAAO,iBACP8D,KAAM,YAER,CACErL,MAAO,MACPuH,MAAO,cACP8D,KAAM,UAER,CACErL,MAAO,KACPuH,MAAO,aACP8D,KAAM,UAER,CACErL,MAAO,eACPuH,MAAO,sBACP8D,KAAM,UAER,CACErL,MAAO,eACPuH,MAAO,sBACP8D,KAAM,UAER,CACErL,MAAO,2BACPuH,MAAO,2BACP8D,KAAM,UAER,CACErL,MAAO,oBACPuH,MAAO,2BACP8D,KAAM,UAER,CACErL,MAAO,kBACPuH,MAAO,yBACP8D,KAAM,UAER,CACErL,MAAO,SACPuH,MAAO,iBACP8D,KAAM,UAER,CACErL,MAAO,OACPuH,MAAO,eACP8D,KAAM,UAER,CACErL,MAAO,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","file":"static/js/main.c036345c.chunk.js","sourcesContent":["import { NavigationClient, NavigationOptions } from \"@azure/msal-browser\";\nimport { History } from \"history\";\n\nexport class CustomNavigationClient extends NavigationClient {\n  private history: History;\n\n  constructor(history: History) {\n    super();\n    this.history = history;\n  }\n\n  async navigateInternal(url: string, options: NavigationOptions) {\n    const relativePath = url.replace(window.location.origin, \"\");\n    if (options.noHistory) {\n      this.history.replace(relativePath);\n    } else {\n      this.history.push(relativePath);\n    }\n\n    return false;\n  }\n}\n","import React from \"react\";\nimport { Stack, Text, Button, useColorModeValue } from \"@chakra-ui/react\";\n\nexport default function CookiePreference(props: any) {\n  return (\n    <Stack\n      position=\"fixed\"\n      bottom=\"0\"\n      left=\"0\"\n      right=\"0\"\n      width=\"90%\"\n      p=\"6\"\n      boxShadow=\"lg\"\n      bg={useColorModeValue(\"white\", \"#464A51\")}\n      ml=\"auto\"\n      mr=\"auto\"\n      mb={\"3vh\"}\n      borderRadius=\"md\"\n      zIndex={10000}\n    >\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Text fontWeight=\"semibold\">Your Privary</Text>\n      </Stack>\n\n      <Stack\n        direction={{ base: \"column\", md: \"row\" }}\n        justifyContent=\"space-between\"\n      >\n        <Text fontSize={{ base: \"sm\" }} textAlign={\"left\"}>\n          We use cookies and similar technologies to help personalise content\n          and provide a better experience. By clicking OK or turning an option\n          on in Cookie Preferences, you agree to this, as outlined in our Cookie\n          Policy. <br />\n          To change preferences or withdraw consent, please update your Cookie\n          Preferences.\n        </Text>\n        <Stack direction={{ base: \"column\", md: \"row\" }}>\n          <Button variant=\"outline\" colorScheme=\"twitter\">\n            Cookie Preferences\n          </Button>\n          <Button\n            color={\"white\"}\n            bg={\"blue.400\"}\n            _hover={{\n              bg: \"blue.300\",\n            }}\n            onClick={() => {\n              props.onAllow();\n              localStorage.setItem(\"cookieConsent\", \"allowed\");\n            }}\n          >\n            Allow\n          </Button>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n}\n","import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Button,\n  Stack,\n  Collapse,\n  Icon,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Link,\n  Avatar,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuGroup,\n  MenuItem,\n  MenuDivider,\n  HStack,\n  VStack,\n  useColorMode,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport {\n  HamburgerIcon,\n  CloseIcon,\n  ChevronDownIcon,\n  ChevronRightIcon,\n  MoonIcon,\n  SunIcon,\n} from \"@chakra-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  AuthenticatedTemplate,\n  UnauthenticatedTemplate,\n  useIsAuthenticated,\n  useMsal,\n} from \"@azure/msal-react\";\nimport { FiChevronDown } from \"react-icons/all\";\nimport CookiePreference from \"./AllowCookies\";\nimport { msalInstance } from \"../index\";\nimport { RestAPI } from \"../api/rest\";\n\nfunction Layout(props: any) {\n  const { instance } = useMsal();\n\n  const [cookieConsent, setCookieConsent] = useState(false);\n  const [roles, setRoles] = useState<string[]>([]);\n  const isAuthenticated = useIsAuthenticated();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (localStorage.getItem(\"cookieConsent\") === \"allowed\") {\n      setCookieConsent(true);\n    }\n    RestAPI.getRoles().then((response) => setRoles(response.data.sort()));\n  }, [isAuthenticated]);\n\n  const { children } = props;\n  const { isOpen, onToggle } = useDisclosure();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  return (\n    <Box minH=\"100vh\">\n      {!cookieConsent ? (\n        <CookiePreference\n          onAllow={() => {\n            setCookieConsent(true);\n            localStorage.setItem(\"cookieConsent\", \"allowed\");\n          }}\n        />\n      ) : null}\n\n      <Box>\n        <Flex\n          bg={useColorModeValue(\"white\", \"#21252A\")}\n          color={useColorModeValue(\"gray.600\", \"#ABB2BF\")}\n          minH={\"60px\"}\n          py={{ base: 2 }}\n          px={{ base: 4 }}\n          borderBottom={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n          align={\"center\"}\n        >\n          <Flex\n            flex={{ base: 1, md: \"auto\" }}\n            ml={{ base: -2 }}\n            display={{ base: \"flex\", md: \"none\" }}\n          >\n            <IconButton\n              onClick={onToggle}\n              icon={\n                isOpen ? (\n                  <CloseIcon w={3} h={3} />\n                ) : (\n                  <HamburgerIcon w={5} h={5} />\n                )\n              }\n              variant={\"ghost\"}\n              aria-label={\"Toggle Navigation\"}\n            />\n          </Flex>\n          <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n            <Text\n              mt={\"2px\"}\n              ml={{ base: \"0\", md: \"10px\" }}\n              textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\n              fontFamily={\"heading\"}\n              fontWeight=\"bold\"\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              cursor=\"pointer\"\n              onClick={() => {\n                history.push(\"/projects\");\n              }}\n              fontSize=\"lg\"\n            >\n              Formiks\n            </Text>\n\n            <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\n              <DesktopNav />\n            </Flex>\n          </Flex>\n\n          <Stack\n            flex={{ base: 1, md: 1 }}\n            justify={\"flex-end\"}\n            direction={\"row\"}\n            spacing={6}\n          >\n            <Button\n              display={{ base: \"none\", md: \"flex\" }}\n              variant=\"ghost\"\n              onClick={toggleColorMode}\n            >\n              {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n            </Button>\n            <AuthenticatedTemplate>\n              <Menu>\n                <MenuButton>\n                  <HStack>\n                    <Avatar\n                      name={msalInstance.getActiveAccount()?.name}\n                      mr={\"10px\"}\n                      size={\"sm\"}\n                    />\n                    <VStack\n                      display={{ base: \"none\", md: \"flex\" }}\n                      alignItems=\"flex-start\"\n                      spacing=\"1px\"\n                      ml={{ base: 0, md: \"2\" }}\n                    >\n                      <Text\n                        color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                        fontWeight={500}\n                        fontSize=\"sm\"\n                      >\n                        {msalInstance.getActiveAccount()?.name}\n                      </Text>\n\n                      <Text fontSize=\"xs\" color=\"gray.500\">\n                        <Tooltip hasArrow label=\"Settings\">\n                          {roles.join(\", \")}\n                        </Tooltip>\n                      </Text>\n                    </VStack>\n                    <Box display={{ base: \"none\", md: \"flex\" }}>\n                      <FiChevronDown style={{ marginLeft: \"5px\" }} />\n                    </Box>\n                  </HStack>\n                </MenuButton>\n\n                <MenuList\n                  m={0}\n                  mr={-3.0}\n                  bg={useColorModeValue(\"white\", \"#21252A\")}\n                  borderColor={useColorModeValue(\"gray.200\", \"#21252A\")}\n                  boxShadow=\"none\"\n                  zIndex={2000000}\n                >\n                  <MenuGroup title=\"Profile\">\n                    <MenuItem isDisabled onClick={() => {}}>\n                      My Account\n                    </MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuGroup title=\"Help\">\n                    <MenuItem onClick={() => {}}>Documentation</MenuItem>\n                    <MenuItem\n                      onClick={() => {\n                        window.open(\n                          `mailto:sk@innovatio.lv,sp@innovatio.lv?subject=Formiks Bug Report&body=Hello! I found the bug while using: ${window.location.href}`,\n                          \"_blank\",\n                          \"noopener,noreferrer\"\n                        );\n                      }}\n                    >\n                      Report a Bug\n                    </MenuItem>\n                  </MenuGroup>\n                  <MenuDivider />\n                  <MenuItem\n                    onClick={async () => {\n                      // instance.logout();\n                      sessionStorage.clear();\n                      setTimeout(() => {\n                        window.location.href = \"/\";\n                      }, 1000);\n                    }}\n                  >\n                    Log Out\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            </AuthenticatedTemplate>\n            <UnauthenticatedTemplate>\n              <Button\n                fontSize={\"sm\"}\n                fontWeight={600}\n                color={\"white\"}\n                bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n                _hover={{\n                  bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n                }}\n                onClick={async () => {\n                  // history.push(\"/login\");\n                  await instance.loginRedirect();\n                  // await instance.acquireTokenPopup({\n                  //   ...loginRequest,\n                  //   account: instance.getActiveAccount()!,\n                  // });\n                  // await instance.loginPopup();\n                }}\n              >\n                Sign In\n              </Button>\n            </UnauthenticatedTemplate>\n          </Stack>\n        </Flex>\n\n        <Collapse in={isOpen} animateOpacity>\n          <MobileNav closeMenu={onToggle} />\n        </Collapse>\n      </Box>\n      <Box m={{ base: \"1em\", xl: \"5em\" }} mt={{ base: \"3em\", xl: \"5em\" }}>\n        {children}\n      </Box>\n    </Box>\n  );\n}\n\nconst DesktopNav = () => {\n  const history = useHistory();\n  const linkColor = useColorModeValue(\"gray.600\", \"#ABB2BF\");\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n  const popoverContentBgColor = useColorModeValue(\"white\", \"#21252A\");\n\n  return (\n    <Stack direction={\"row\"} spacing={4}>\n      {NAV_ITEMS.map((navItem) => {\n        return (\n          <Box key={navItem.label}>\n            <Popover trigger={\"hover\"} placement={\"bottom-start\"}>\n              {({ isOpen, onClose }) => (\n                <>\n                  <PopoverTrigger>\n                    <Button\n                      variant=\"link\"\n                      p={2}\n                      onClick={() => {\n                        if (navItem.href) {\n                          history.push(navItem.href);\n                        }\n                      }}\n                      fontSize={\"sm\"}\n                      fontWeight={500}\n                      color={linkColor}\n                      _hover={{\n                        textDecoration: \"none\",\n                        color: linkHoverColor,\n                      }}\n                    >\n                      {navItem.label}\n                    </Button>\n                  </PopoverTrigger>\n\n                  {navItem.children && (\n                    <PopoverContent\n                      border={0}\n                      boxShadow={\"xl\"}\n                      bg={popoverContentBgColor}\n                      p={4}\n                      rounded={\"xl\"}\n                      minW={\"sm\"}\n                      mt={\"20px\"}\n                    >\n                      <Stack>\n                        {navItem.children.map((child) => (\n                          <DesktopSubNav\n                            onClose={onClose}\n                            key={child.label}\n                            {...child}\n                          />\n                        ))}\n                      </Stack>\n                    </PopoverContent>\n                  )}\n                </>\n              )}\n            </Popover>\n          </Box>\n        );\n      })}\n    </Stack>\n  );\n};\n\nconst DesktopSubNav = ({ label, href, subLabel, onClose }: NavItem) => {\n  const history = useHistory();\n  return (\n    <Link\n      onClick={() => {\n        if (href) {\n          history.push(href);\n          if (onClose) {\n            onClose();\n          }\n        }\n      }}\n      role={\"group\"}\n      display={\"block\"}\n      p={2}\n      rounded={\"md\"}\n      _hover={{ bg: useColorModeValue(\"blue.50\", \"#1d2024\") }}\n    >\n      <Stack direction={\"row\"} align={\"center\"}>\n        <Box>\n          <Text\n            transition={\"all .3s ease\"}\n            _groupHover={{ color: useColorModeValue(\"blue.400\", \"#cacfd9\") }}\n            fontWeight={600}\n            fontSize=\"md\"\n            ml={2}\n          >\n            {label}\n          </Text>\n          <Text\n            ml={2}\n            fontSize={\"sm\"}\n            color={useColorModeValue(\"#4A5667\", \"#718196\")}\n          >\n            {subLabel}\n          </Text>\n        </Box>\n        <Flex\n          transition={\"all .3s ease\"}\n          transform={\"translateX(-10px)\"}\n          opacity={0}\n          _groupHover={{ opacity: \"100%\", transform: \"translateX(0)\" }}\n          justify={\"flex-end\"}\n          align={\"center\"}\n          flex={1}\n        >\n          <Icon\n            color={useColorModeValue(\"blue.400\", \"#cacfd9\")}\n            w={5}\n            h={5}\n            as={ChevronRightIcon}\n          />\n        </Flex>\n      </Stack>\n    </Link>\n  );\n};\n\nconst MobileNav = (props: any) => {\n  return (\n    <Stack\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      p={4}\n      display={{ md: \"none\" }}\n    >\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem\n          closeMenu={props.closeMenu}\n          key={navItem.label}\n          {...navItem}\n        />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href, closeMenu }: any) => {\n  const history = useHistory();\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Flex\n        py={2}\n        as={Link}\n        onClick={() => {\n          if (href) {\n            history.push(href);\n          }\n        }}\n        justify={\"space-between\"}\n        align={\"center\"}\n        _hover={{\n          textDecoration: \"none\",\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={\"all .25s ease-in-out\"}\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\n            w={6}\n            h={6}\n          />\n        )}\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n          align={\"start\"}\n        >\n          {children &&\n            children.map((child: any) => (\n              <Link\n                key={child.label}\n                py={2}\n                onClick={() => {\n                  if (child.href) {\n                    history.push(child.href);\n                    closeMenu();\n                  }\n                }}\n              >\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\ninterface NavItem {\n  label: string;\n  subLabel?: string;\n  children?: Array<NavItem>;\n  href?: string;\n  onClose?: any;\n  isAdmin?: boolean;\n}\n\nconst NAV_ITEMS: Array<NavItem> = [\n  {\n    label: \"Projects\",\n    children: [\n      {\n        label: \"Existing Projects\",\n        subLabel: \"Explore existing projects\",\n        href: \"/projects\",\n      },\n      {\n        label: \"New Project\",\n        subLabel: \"Create new project\",\n        href: \"/projects/create\",\n        isAdmin: true,\n      },\n    ],\n  },\n\n  {\n    label: \"Submissions\",\n    children: [\n      {\n        label: \"Submissions Table\",\n        subLabel: \"Explore all active submissions\",\n        href: \"/submissions\",\n      },\n      {\n        label: \"Drafts\",\n        subLabel: \"Explore unpublished submissions\",\n        href: \"/drafts\",\n      },\n    ],\n  },\n  {\n    label: \"Dropdowns\",\n    children: [\n      {\n        label: \"Existing Dropdowns\",\n        subLabel: \"Explore existing adaptive dropdowns\",\n        href: \"/dropdowns\",\n      },\n      {\n        label: \"New Dropdown\",\n        subLabel: \"Create new adaptive dropdown\",\n        href: \"/dropdowns/create\",\n        isAdmin: true,\n      },\n    ],\n  },\n];\n\nexport default Layout;\n","export function ShadeColor(color: string, amount: number) {\n  return (\n    \"#\" +\n    color\n      .replace(/^#/, \"\")\n      .replace(/../g, (color) =>\n        (\n          \"0\" +\n          Math.min(255, Math.max(0, parseInt(color, 16) + amount)).toString(16)\n        ).substring(-2)\n      )\n  );\n}\n\nexport function DefaultSelectStyles(color: any) {\n  return {\n    menu: (provided: any) => ({\n      ...provided,\n      zIndex: 1000000,\n      backgroundColor: color(\"white\", \"#21252A\"),\n    }),\n    input: (provided: any) => ({\n      ...provided,\n      color: color(\"#718196\", \"#ABB2BF\"),\n    }),\n    singleValue: (provided: any) => ({\n      ...provided,\n      color: color(\"#718196\", \"#ABB2BF\"),\n    }),\n    menuPortal: (base: any) => ({\n      ...base,\n      zIndex: 1000000,\n    }),\n    control: (base: any, state: any) => ({\n      ...base,\n      minHeight: 40,\n      border: `1px solid ${color(\"#E2E8F0\", \"#3E4249\")}`,\n      transition: \"0.3s\",\n      \"&:hover\": {\n        border: `1px solid ${color(\"#CBD5E0\", \"#565e71\")}`,\n      },\n      backgroundColor: color(\"white\", \"#2C313C\"),\n    }),\n    option: (base: any, state: any) => ({\n      ...base,\n      backgroundColor: state.isSelected\n        ? color(\"#3182CE\", \"#565e71\")\n        : color(\"white\", \"#21252A\"),\n      \"&:hover\": {\n        backgroundColor: state.isSelected\n          ? color(\"#3182CE\", \"#565e71\")\n          : color(\"#DEEBFF\", \"#404654\"),\n      },\n    }),\n    multiValue: (styles: any, { data }: any) => {\n      return {\n        ...styles,\n        backgroundColor: color(\"#E6E6E6\", \"#565e71\"),\n      };\n    },\n    multiValueLabel: (styles: any, { data }: any) => ({\n      ...styles,\n      color: color(\"#333333\", \"#ABB2BF\"),\n    }),\n    multiValueRemove: (styles: any, { data }: any) => ({\n      ...styles,\n      \":hover\": {\n        backgroundColor: color(\"#ffcdcd\", \"#70565f\"),\n        color: \"red\",\n      },\n    }),\n  };\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  Button,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Project from \"../types/project\";\nimport { RestAPI } from \"../api/rest\";\nimport Bookmark from \"../types/bookmark\";\nimport { DefaultSelectStyles } from \"../utils/Styles\";\n\ninterface Props {\n  isOpen: boolean;\n  onClose: any;\n  addBookmark: any;\n  projects: Project[];\n  bookmarks: Bookmark[];\n}\n\nexport default function CreateBookmark(props: Props) {\n  const [matchingProjects, setMatchingProjects] = useState(0);\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n  const [title, setTitle] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  useEffect(() => {\n    var tags: string[] = [];\n    props.projects.map((project) => {\n      project.tags.map((tag) => {\n        if (tags.indexOf(tag) === -1) {\n          tags.push(tag);\n        }\n      });\n      setAvailableTags(tags);\n    });\n  }, [props.projects]);\n  useEffect(() => {\n    var matchingProjects = 0;\n    props.projects.map((project) => {\n      if (\n        project.tags &&\n        project.tags.some((item) => selectedTags.includes(item))\n      ) {\n        matchingProjects++;\n      }\n    });\n    setMatchingProjects(matchingProjects);\n  }, [selectedTags]);\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onClose={() => {\n        props.onClose();\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Create new bookmark</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <VStack spacing={4}>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Title</Text>\n              <Input\n                value={title}\n                onChange={(event) => {\n                  setTitle(event.target.value);\n                }}\n                bg={useColorModeValue(\"white\", \"#2C313C\")}\n                color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text mb=\"8px\">Tags</Text>\n              <CreatableSelect\n                placeholder=\"\"\n                styles={DefaultSelectStyles(useColorModeValue)}\n                theme={(theme) => ({\n                  ...theme,\n                  borderRadius: 6,\n                  colors: {\n                    ...theme.colors,\n                    primary: \"#3082CE\",\n                  },\n                })}\n                isMulti\n                value={selectedTags.map((tag) => {\n                  return { label: tag, value: tag };\n                })}\n                onChange={(values) => {\n                  var tags: string[] = [];\n                  values.map((element: any) => tags.push(element.value));\n                  setSelectedTags(tags);\n                }}\n                options={availableTags.map((tag) => {\n                  return {\n                    label: tag,\n                    value: tag,\n                  };\n                })}\n              />\n            </Box>\n            <Box w=\"100%\">\n              <Text float=\"right\" color=\"gray.400\" mb=\"10px\">\n                Matching {matchingProjects} projects\n              </Text>\n            </Box>\n          </VStack>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            isDisabled={\n              title.length < 1 ||\n              (props.bookmarks &&\n                props.bookmarks.some((bookmark) => bookmark.title === title))\n            }\n            color={\"white\"}\n            bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              RestAPI.createBookmark({\n                title,\n                tags: selectedTags,\n              } as Bookmark).then((response) => {\n                props.addBookmark(response.data);\n                props.onClose();\n              });\n            }}\n          >\n            Create\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import {\n  Box,\n  Text,\n  Stack,\n  Heading,\n  Avatar,\n  useColorModeValue,\n  Tag,\n  Wrap,\n  WrapItem,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Project from \"../types/project\";\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function ProjectCard(props: Props) {\n  return (\n    <Box\n      key={props.project.id}\n      onClick={() => {\n        props.history.push(`/projects/view/${props.project.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"433px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.project.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.project.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.project.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack mt={6} direction={\"row\"} spacing={4} align={\"center\"}>\n        <Avatar name={props.project.author} alt={\"Author\"} />\n        <Stack direction={\"column\"} spacing={0} fontSize={\"sm\"}>\n          <Text fontWeight={600}>{props.project.author}</Text>\n          <Tooltip\n            bg={useColorModeValue(\"white\", \"#373c45\")}\n            color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n            p={4}\n            hasArrow\n            label={moment(props.project.updated).format(\"DD.MM.YYYY HH:mm\")}\n          >\n            <Text color={\"gray.500\"}>\n              {moment(props.project.updated).format(\"MMMM DD, YYYY\")}\n            </Text>\n          </Tooltip>\n        </Stack>\n      </Stack>\n      <Wrap\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        h={\"68px\"}\n        mt={6}\n        justify=\"center\"\n      >\n        {props.project.tags.map((tag) => {\n          return (\n            <WrapItem key={`${props.project.id}-tag-${tag}`}>\n              <Tag fontWeight={\"400\"} size=\"sm\" px={2} cursor=\"pointer\">\n                #{tag.toUpperCase()}\n              </Tag>\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Center, Tag, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport CreateBookmark from \"../../components/CreateBookmark\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [filteredProjects, setFilteredProjects] = useState<Project[]>([]);\n  const [selectedBookmark, setSelectedBookmark] = useState(\"\");\n  const [bookmarks, setBookmarks] = useState<Bookmark[]>([]);\n  const [createBookmarkModal, setCreateBookMarkModal] = useState(false);\n\n  useEffect(() => {\n    RestAPI.getBookmarks().then((response) => setBookmarks(response.data));\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n      setFilteredProjects(response.data);\n    });\n  }, []);\n\n  return (\n    <div style={{ paddingBottom: \"3em\" }}>\n      <CreateBookmark\n        isOpen={createBookmarkModal}\n        addBookmark={(bookmark: Bookmark) => {\n          setBookmarks((old) => [...(old ? old : []), bookmark]);\n        }}\n        bookmarks={bookmarks}\n        onClose={() => {\n          setCreateBookMarkModal(false);\n        }}\n        projects={projects}\n      />\n      <Center mb={\"5em\"}>\n        <Wrap maxW={{ base: \"100%\", lg: \"50%\" }} justify=\"center\">\n          {bookmarks\n            ? bookmarks.map((bookmark) => {\n                return (\n                  <WrapItem key={`bookmark-${bookmark.id}`}>\n                    <Tag\n                      fontWeight={\"400\"}\n                      size={\"lg\"}\n                      colorScheme={\n                        selectedBookmark === bookmark.id ? \"cyan\" : undefined\n                      }\n                      cursor=\"pointer\"\n                      key={bookmark.id}\n                      onContextMenu={(e) => {\n                        e.preventDefault();\n                        if (bookmark.id) {\n                          RestAPI.deleteBookmark(bookmark.id);\n                          setBookmarks(\n                            bookmarks.filter((b) => b.id !== bookmark.id)\n                          );\n                        }\n                      }}\n                      onClick={() => {\n                        setSelectedBookmark(\n                          selectedBookmark !== bookmark.id ? bookmark.id! : \"\"\n                        );\n                        setFilteredProjects(\n                          selectedBookmark !== bookmark.id\n                            ? projects.filter((project) =>\n                                project.tags.some((t) =>\n                                  bookmark.tags.includes(t)\n                                )\n                              )\n                            : projects\n                        );\n                      }}\n                    >\n                      {bookmark.title}\n                    </Tag>\n                  </WrapItem>\n                );\n              })\n            : null}\n\n          <WrapItem display={props.isAdmin ? \"grid\" : \"none\"}>\n            <Tag\n              onClick={() => {\n                setCreateBookMarkModal(true);\n              }}\n              fontWeight={\"400\"}\n              size={\"lg\"}\n              cursor=\"pointer\"\n            >\n              <AddIcon w={3} h={3} />\n            </Tag>\n          </WrapItem>\n        </Wrap>\n      </Center>\n      <Wrap\n        justify=\"center\"\n        spacing={{ base: \"40px\", lg: \"3em\" }}\n        mx={{ base: 0, \"2xl\": \"300px\" }}\n      >\n        {filteredProjects.map((project) => {\n          return (\n            <WrapItem key={`wrap-${project.id}`}>\n              <ProjectCard history={props.history} project={project} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { FormBuilder } from \"@formio/react\";\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2 } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [\n      \"New\",\n      \"In Progress\",\n      \"Completed\",\n      \"On Hold\",\n      \"Cancelled\",\n    ] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) =>\n        setProject(response.data)\n      );\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={project.title}\n              onChange={(event) => {\n                setProject((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Tags</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.tags.map((tag) => {\n                return { label: tag, value: tag };\n              })}\n              onChange={(values) => {\n                var tags: string[] = [];\n                values.map((element: any) => tags.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  tags,\n                }));\n              }}\n              options={[]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Roles</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={project.roles.map((role) => {\n                return { label: role, value: role };\n              })}\n              onChange={(values) => {\n                var roles: string[] = [];\n                values.map((element: any) => roles.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  roles,\n                }));\n              }}\n              options={[\n                { label: \"administrator\", value: \"administrator\" },\n                { label: \"user\", value: \"user\" },\n                { label: \"guest\", value: \"guest\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"66.5%\" }}>\n            <Text mb=\"8px\">Available Statuses</Text>\n            <CreatableSelect\n              placeholder=\"\"\n              styles={{\n                control: (base, state) => ({\n                  ...base,\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                  minHeight: 40,\n                  border: useColorModeValue(\n                    \"1px solid #E2E8F0\",\n                    \"1px solid #4E525C\"\n                  ),\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: useColorModeValue(\n                      \"1px solid #CBD5E0\",\n                      \"1px solid #5E626B\"\n                    ),\n                  },\n                }),\n                option: (\n                  styles,\n                  { data, isDisabled, isFocused, isSelected }\n                ) => {\n                  return {\n                    ...styles,\n                    backgroundColor: useColorModeValue(\"white\", \"#2C313C\"),\n                    color: useColorModeValue(\"#4A5667\", \"white\"),\n                    transition: \"0.3s\",\n                    \"&:hover\": {\n                      backgroundColor: useColorModeValue(\"#DEEBFF\", \"#343945\"),\n                    },\n                  };\n                },\n                menu: (styles) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"white\", \"#2C313C\"),\n                }),\n                multiValue: (styles, { data }) => ({\n                  ...styles,\n                  color: \"white\",\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueLabel: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#464646\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                }),\n                multiValueRemove: (styles, { data }) => ({\n                  ...styles,\n                  color: useColorModeValue(\"#4A5667\", \"white\"),\n                  background: useColorModeValue(\"#E6E6E6\", \"#464A51\"),\n                  \"&:hover\": {\n                    color: useColorModeValue(\"#DE360C\", \"#ed636e\"),\n                    backgroundColor: useColorModeValue(\"#FFBDAD\", \"#4f5259\"),\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              isMulti\n              value={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n              onChange={(values) => {\n                var statuses: string[] = [];\n                values.map((element: any) => statuses.push(element.value));\n                setProject((prev) => ({\n                  ...prev,\n                  statuses,\n                }));\n              }}\n              options={[\n                { label: \"New\", value: \"New\" },\n                { label: \"In Progress\", value: \"In Progress\" },\n                { label: \"Completed\", value: \"Completed\" },\n                { label: \"On Hold\", value: \"On Hold\" },\n                { label: \"Cancelled\", value: \"Cancelled\" },\n              ]}\n            />\n          </Box>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Default Status</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label: project.defaultStatus,\n                value: project.defaultStatus,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  defaultStatus: value.label,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"defaultStatus\"\n              options={\n                project.statuses\n                  ? project.statuses.map((status) => {\n                      return { label: status, value: status };\n                    })\n                  : []\n              }\n            />\n          </Box>\n        </Stack>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w={{ base: \"100%\", xl: \"32.8%\" }}>\n            <Text mb=\"8px\">Project Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              value={{\n                label:\n                  project.type === \"formio\" ? \"GUI Builder\" : \"Code Builder\",\n                value: project.type,\n              }}\n              onChange={(value: any) => {\n                setProject((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"projectType\"\n              options={[\n                { label: \"GUI Builder\", value: \"formio\" },\n                { label: \"Code Builder\", value: \"code\" },\n              ]}\n            />\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={project.description}\n            onChange={(event) => {\n              setProject((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      {project.type === \"formio\" ? (\n        <FormBuilder\n          options={{\n            builder: {\n              basic: {\n                components: {\n                  excelTable: true,\n                },\n              },\n              advanced: {\n                components: {\n                  file: true,\n                },\n              },\n              premium: false,\n            },\n          }}\n          form={{ display: \"form\", components: project.components }}\n          onChange={(schema: any) => {\n            setProject((prev) => ({\n              ...prev,\n              components: schema.components,\n            }));\n          }}\n        />\n      ) : null}\n      <HStack mb=\"40px\" spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createProject(project);\n              if (response.data.id) {\n                props.history.push(`/projects/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateProject(project)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={<div>Project has been successfully updated</div>}\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update project\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n","import { Configuration, LogLevel, RedirectRequest } from \"@azure/msal-browser\";\n\n// Config object to be passed to Msal on creation\nexport const msalConfig: Configuration = {\n  auth: {\n    clientId: \"c6c34032-5419-4fdf-bbd4-a863814323b7\",\n    redirectUri: \"/\",\n    postLogoutRedirectUri: \"/\",\n  },\n};\n\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest: RedirectRequest = {\n  scopes: [\"User.Read\", \"email\"],\n};\n\n// Add here the endpoints for MS Graph API services you would like to use.\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\",\n};\n","import { loginRequest, graphConfig } from \"../authConfig\";\nimport { msalInstance } from \"../index\";\n\nexport async function getAccountInfo() {\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    return;\n  }\n\n  const response = await msalInstance.acquireTokenSilent({\n    ...loginRequest,\n    account: account,\n  });\n\n  const headers = new Headers();\n  const bearer = `Bearer ${response.accessToken}`;\n\n  headers.append(\"Authorization\", bearer);\n\n  const options = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  return fetch(graphConfig.graphMeEndpoint, options)\n    .then((response) => response.json())\n    .catch((error) => console.log(error));\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { Children, useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport moment from \"moment\";\n\nimport { Table } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { DefaultSelectStyles } from \"../../utils/Styles\";\nimport { RiCoinsLine } from \"react-icons/ri\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar AlsoInternationalVendorsNames: any[] = [];\nvar BUs: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n  isDraft?: boolean;\n}\n\nexport default function Cerov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localSubmitted, setLocalSubmitted] = useState(false);\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [organizingCompany, setOrganizingCompany] = useState(\"\");\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({\n    ph: {\n      label: \"\",\n      value: \"\",\n    },\n  });\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0.00\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [injectionReady, setInjectionReady] = useState(false);\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      console.log(props.submission);\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value:\n          props.submission.data.campaignChannel.length > 0\n            ? props.submission.data.campaignChannel.substr(0, 1)\n            : \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: (props.submission.data.year ?? \"\").substring(2, 4),\n      });\n      setOrganizingCompany(props.submission.data.organizingCompany ?? \"\");\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value:\n          props.submission.data.projectStartQuarter.length > 0\n            ? props.submission.data.projectStartQuarter.substr(0, 2)\n            : \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      if (Budget.length > 0 && props.submission.data.budgetSource !== \"\") {\n        setBudgetSource({\n          label: props.submission.data.budgetSource ?? \"\",\n          value:\n            Budget.find((b) => b.label === props.submission.data.budgetSource)\n              .value ?? \"\",\n        });\n      }\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      if (\n        ExchangeRates.length > 0 &&\n        props.submission.data.campaignBudgetsCurrency !== \"\"\n      ) {\n        setExchangeRates({\n          label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n          value:\n            ExchangeRates.find(\n              (b) => b.label === props.submission.data.campaignBudgetsCurrency\n            ).value ?? \"\",\n        });\n      }\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setEstimatedIncome(\n        props.submission.data.campaignEstimatedIncomeEur\n          ? props.submission.data.campaignEstimatedIncomeEur.toFixed(2)\n          : \"0.00\"\n      );\n      setEstimatedCosts(\n        props.submission.data.campaignEstimatedCostsEur\n          ? props.submission.data.campaignEstimatedCostsEur.toFixed(2)\n          : \"0.00\"\n      );\n      setNetProfitTarget(\n        props.submission.data.campaignNetProfitTargetEur\n          ? props.submission.data.campaignNetProfitTargetEur.toFixed(2)\n          : \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.campaignCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        props.submission.data.totalEstimatedCostsLC\n          ? props.submission.data.totalEstimatedCostsLC.toFixed(2)\n          : \"0.00\"\n      );\n\n      //\n\n      if (props.children && props.children.length > 0) {\n        var vs = props.children.find((s) => s.group === \"vendor\");\n        setVendorName({\n          label: vs.data.vendorName ?? \"\",\n          value: vs.data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: vs.data.vendorName ?? \"\",\n          projectManager: vs.data.productionProjectManager ?? \"\",\n          creditor: vs.data.creditorNumber ?? \"\",\n          debitor: vs.data.debitorNumber ?? \"\",\n          manufacturer: vs.data.manufacturerNumber ?? \"\",\n          bu: vs.data.businessUnit ?? \"\",\n          ph: {\n            label: vs.data.PH1 ?? \"\",\n            value: vs.data.PH1 ?? \"\",\n          },\n          budgetCurrency: {\n            label: vs.data.budgetCurrency || \"\",\n            value: vs.data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              return {\n                label: s.data.companyName,\n                value: {\n                  code: s.data.countryCodeEMEA,\n                  country: s.data.countriesEMEA,\n                },\n              };\n            })\n        );\n        var c: any[] = [];\n        var totalShare = 0.0;\n        var totalCosts = 0.0;\n        var totalContribution = 0.0;\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.localProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n              estimatedCostsEur: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              contributionEur: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n            });\n            totalShare += s.data.countryShare || 0;\n            totalContribution += s.data.countryBudgetContributionCC || 0;\n            totalCosts += s.data.countryCostEstimationCC || 0;\n          });\n\n        setTotalcbShare(totalShare.toFixed(2).toString());\n        setTotalcbContribution(totalContribution.toFixed(2).toString());\n        setTotalcbCosts(totalCosts.toFixed(2).toString());\n        setCostBreakdown([...c]);\n      }\n\n      setTimeout(() => {\n        setInjectionReady(true);\n      }, 3000);\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n      \"633e93ed5a7691ac30c977fc\",\n      \"636abbd43927f9c7703b19c4\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n    BUs = responses[10].data;\n    AlsoInternationalVendorsNames = responses[11].data;\n  }\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      var ex = costBreakdown.find(\n        (country: any) => country.companyCode === company.value.code\n      );\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: ex ? ex.contactEmail : \"\",\n        projectNumber:\n          projectNumber.length > 0\n            ? company.value.code + projectNumber.substring(4)\n            : \"\",\n        contribution: ex ? ex.contribution : \"\",\n        estimatedCosts: ex ? ex.estimatedCosts : \"\",\n        contributionEur: ex ? ex.contributionEur : \"\",\n        estimatedCostsEur: ex ? ex.estimatedCostsEur : \"\",\n        share: ex ? ex.share : \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating, projectNumber]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: vendorName.value.alsoMarketingConsultant,\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendor.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value === \"noBudget\") {\n      costBreakdown.forEach((element: any) => {\n        element[\"contribution\"] = 0;\n        element[\"contributionEur\"] = 0;\n      });\n      setCostBreakdown(costBreakdown);\n      setTotalcbContribution(\"0.00\");\n    } else {\n      if (costBreakdown.length > 0) {\n        if (costBreakdown[0].estimatedCosts !== undefined) {\n          onCostBreakdownTableChange(\"share\", 0, costBreakdown[0].share);\n        }\n      }\n    }\n\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setEstimatedIncome(\"0.00\");\n      setEstimatedIncomeBudgetCurrency(\"0.00\");\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (organizingCompany === \"\" ? \"??\" : organizingCompany) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [\n    year,\n    organizingCompany,\n    campaignChannel,\n    projectStartQuarter,\n    requestorsCompanyName,\n  ]);\n\n  function createSubmission(draft: boolean, local: string | null) {\n    var projectId = \"629dfb3f55d209262194a3e6\";\n\n    var parent: Submission = {\n      project: projectId,\n      title: campaignName,\n      parentId: null,\n      viewId: null,\n      group: null,\n      status: \"New\",\n      created: new Date(),\n      updated: new Date(),\n      author: requestorsName,\n      data: {\n        status: \"New\",\n        requestorsCompanyName: requestorsCompanyName.label,\n        companyCode: requestorsCompanyName.value.code,\n        requestorsCountry: requestorsCompanyName.value.country,\n        organizingCompany: organizingCompany,\n        campaignName: campaignName,\n        projectName: campaignName,\n        campaignDescription: campaignDescription,\n        targetAudience: targetAudience,\n        campaignChannel: campaignChannel.label,\n        year: year.label,\n        projectStartQuarter: projectStartQuarter.label,\n        projectNumber: projectNumber,\n        requestorsName: requestorsName,\n        projectApprover: projectApproval,\n        projectApproval: projectApproval,\n        manufacturersFiscalQuarter: fiscalQuarter.label,\n        campaignStartDate: startDate === null ? null : startDate.toString(),\n        campaignEndDate: endDate === null ? null : endDate.toString(),\n        budgetSource: budgetSource.label,\n        budgetApprovedByVendor: budgetApprovedByVendor,\n        campaignBudgetsCurrency: exchangeRates.label,\n        campaignCurrency: exchangeRates.label,\n        localCurrency: requestorsCompanyName.value[\"currency\"],\n        campaignEstimatedIncomeBudgetsCurrency: isNaN(\n          parseFloat(estimatedIncomeBudgetCurrency)\n        )\n          ? 0.0\n          : parseFloat(estimatedIncomeBudgetCurrency),\n        campaignEstimatedCostsBudgetsCurrency: parseFloat(\n          estimatedCostsBudgetCurrency\n        ),\n        campaignNetProfitTargetBudgetsCurrency: parseFloat(\n          netProfitTargetBudgetCurrency\n        ),\n        campaignEstimatedIncomeEur: isNaN(parseFloat(estimatedIncome))\n          ? 0.0\n          : parseFloat(estimatedIncome),\n        campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n        campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n        totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n        comments: comments,\n        additionalInformation: comments,\n\n        projectType: \"European One Vendor\",\n      },\n    };\n    var children: Submission[] = [];\n    children.push({\n      project: projectId,\n      title: \"\",\n      parentId: \"\",\n      viewId: null,\n      group: \"vendor\",\n      created: new Date(),\n      updated: new Date(),\n      status: \"New\",\n      author: requestorsName,\n      data: {\n        status: \"\",\n        vendorName: vendorName.label,\n        projectNumber: projectNumber,\n        companyCode: requestorsCompanyName.value.code,\n        productionProjectManager: vendor.projectManager,\n        creditorNumber: vendor.creditor,\n        debitorNumber: vendor.debitor,\n        manufacturerNumber: vendor.manufacturer,\n        businessUnit: vendor.bu,\n        PH1: vendor.ph.label,\n        vendorBudgetCurrency:\n          budgetSource.value === \"noBudget\" ? \"N/A\" : exchangeRates.label,\n        vendorAmount:\n          isNaN(parseFloat(estimatedIncomeBudgetCurrency)) ||\n          budgetSource.value === \"noBudget\"\n            ? 0.0\n            : parseFloat(estimatedIncomeBudgetCurrency),\n        // cbbudgetEur: parseFloat(vendor.eurBudget),\n        vendorShare: 100,\n        estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n        estimatedIncomeCC:\n          budgetSource.value === \"noBudget\"\n            ? 0.0\n            : parseFloat(estimatedIncomeBudgetCurrency),\n        estimatedResultCC:\n          parseFloat(netProfitTargetBudgetCurrency) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n        estimatedIncomeEUR:\n          budgetSource.value === \"noBudget\" ? 0.0 : parseFloat(estimatedIncome),\n        estimatedCostsEUR: parseFloat(estimatedCosts),\n        estimatedResultEUR:\n          parseFloat(netProfitTarget) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        estimatedResultBC:\n          parseFloat(netProfitTargetBudgetCurrency) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        projectType: \"European One Vendor\",\n      },\n    });\n    costBreakdown.forEach((company: any) => {\n      if (local !== null && local === company.companyCode) {\n        children.push({\n          project: projectId,\n          title: \"\",\n          parentId: null,\n          viewId: null,\n          group: \"country\",\n          created: new Date(),\n          updated: new Date(),\n          status: \"Incomplete\",\n          author: requestorsName,\n          data: {\n            status: \"Incomplete\",\n            projectName: campaignName,\n            additionalInformation: comments,\n            campaignChannel: campaignChannel.label,\n            parentProjectNumber: projectNumber,\n            projectNumber: company.projectNumber,\n            campaignStartDate: startDate === null ? null : startDate.toString(),\n            campaignEndDate: endDate === null ? null : endDate.toString(),\n            budgetSource: budgetSource.label,\n            campaignCurrency: exchangeRates.label,\n            localCurrency: requestorsCompanyName.value[\"currency\"],\n            vendorName: vendorName.label,\n            businessUnit: vendor.bu,\n            estimatedCostsCC: parseFloat(company.estimatedCosts),\n            estimatedIncomeCC:\n              budgetSource.value === \"noBudget\"\n                ? 0.0\n                : parseFloat(company.contribution),\n            estimatedResultCC:\n              parseFloat(company.contribution) -\n              parseFloat(company.estimatedCosts),\n            estimatedIncomeEUR:\n              budgetSource.value === \"noBudget\"\n                ? 0.0\n                : parseFloat(company.contributionEur),\n            estimatedCostsEUR: parseFloat(company.estimatedCostsEur),\n            estimatedResultEUR:\n              parseFloat(company.contributionEur) -\n              parseFloat(company.estimatedCostsEur),\n            PH1: vendor.ph.label,\n            vendorBudgetCurrency:\n              budgetSource.value === \"noBudget\" ? \"N/A\" : exchangeRates.label,\n            vendorAmount: parseFloat(company.contribution),\n            vendorShare: 100,\n            projectType: \"European One Vendor\",\n            companyName: company.companyName,\n            companyCode: company.companyCode,\n            countryCodeEMEA: company.companyCode,\n            country: company.country,\n            countriesEMEA: company.country,\n            productionProjectManager: company.contactEmail,\n            countryShare: parseFloat(company.share),\n            countryBudgetContributionEur: company.contribution,\n            countryCostEstimationEur: company.estimatedCosts,\n            countryBudgetContributionCC: isNaN(parseFloat(company.contribution))\n              ? 0.0\n              : parseFloat(company.contribution),\n            countryCostEstimationCC: parseFloat(company.estimatedCosts),\n          },\n        });\n      } else {\n        children.push({\n          project: projectId,\n          title: \"\",\n          parentId: \"\",\n          viewId: null,\n          group: \"country\",\n          created: new Date(),\n          updated: new Date(),\n          status: \"New\",\n          author: requestorsName,\n          data: {\n            status: \"\",\n            projectName: campaignName,\n            additionalInformation: comments,\n            campaignChannel: campaignChannel.label,\n            parentProjectNumber: projectNumber,\n            projectNumber: projectNumber,\n            companyCode: company.companyCode === \"6110\" ? \"6110\" : \"\",\n            localProjectNumber: company.projectNumber,\n            campaignStartDate: startDate === null ? null : startDate.toString(),\n            campaignEndDate: endDate === null ? null : endDate.toString(),\n            budgetSource: budgetSource.label,\n            campaignCurrency: exchangeRates.label,\n            localCurrency: requestorsCompanyName.value[\"currency\"],\n            vendorName: vendorName.label,\n            businessUnit: vendor.bu,\n            PH1: vendor.ph.label,\n            vendorShare: 100,\n            estimatedResultBC:\n              parseFloat(netProfitTargetBudgetCurrency) *\n              (budgetSource.value === \"noBudget\" ? -1 : 1),\n            projectType: \"European One Vendor\",\n            companyName: company.companyName,\n            countryCodeEMEA: company.companyCode,\n            country: company.country,\n            countriesEMEA: company.country,\n            productionProjectManager: company.contactEmail,\n            estimatedCostsCC: parseFloat(company.estimatedCosts),\n            estimatedIncomeCC:\n              budgetSource.value === \"noBudget\"\n                ? 0.0\n                : parseFloat(company.contribution),\n            estimatedResultCC:\n              parseFloat(company.contribution) -\n              parseFloat(company.estimatedCosts),\n            estimatedIncomeEUR:\n              budgetSource.value === \"noBudget\"\n                ? 0.0\n                : parseFloat(company.contributionEur),\n            estimatedCostsEUR: parseFloat(company.estimatedCostsEur),\n            estimatedResultEUR:\n              parseFloat(company.contributionEur) -\n              parseFloat(company.estimatedCostsEur),\n            countryShare: parseFloat(company.share),\n            countryBudgetContributionEur: company.contribution,\n            countryCostEstimationEur: company.estimatedCosts,\n            countryBudgetContributionCC: isNaN(parseFloat(company.contribution))\n              ? 0.0\n              : parseFloat(company.contribution),\n            countryCostEstimationCC: parseFloat(company.estimatedCosts),\n          },\n        });\n      }\n    });\n\n    var submission: SubmissionWithChildren = {\n      submission: parent,\n      children,\n      local: local,\n    };\n    if (props.isDraft) {\n      if (draft) {\n        submission.submission.id = props.submission.id;\n\n        RestAPI.updateDraft(submission).then((response) => {\n          toast(\n            <Toast\n              title={\"Draft save\"}\n              message={`Draft has been successfully saved.`}\n              type={\"info\"}\n            />\n          );\n        });\n      } else {\n        RestAPI.deleteDraft(props.submission.id).then(() => {\n          RestAPI.createSubmissionWithChildren(submission).then((response) => {\n            if (response.data.hasChanged) {\n              toast(\n                <Toast\n                  title={\"Project Number has been adjusted\"}\n                  message={\n                    <p>\n                      Project Number changed to:{\" \"}\n                      <b>{response.data.submission.data.projectNumber}</b>\n                    </p>\n                  }\n                  type={\"info\"}\n                />\n              );\n            }\n            toast(\n              <Toast\n                title={\"Project has been transferred\"}\n                message={\n                  <p>\n                    Project ({\" \"}\n                    <b>{response.data.submission.data.projectNumber}</b> ) has\n                    been transferred into the tool\n                  </p>\n                }\n                type={\"success\"}\n              />\n            );\n            props.history.push(\"/submissions\");\n          });\n        });\n      }\n    } else {\n      if (draft) {\n        RestAPI.createDraft(submission).then((response) => {\n          toast(\n            <Toast\n              title={\"Draft save\"}\n              message={`Draft has been successfully saved.`}\n              type={\"info\"}\n            />\n          );\n        });\n      } else {\n        RestAPI.createSubmissionWithChildren(submission).then((response) => {\n          if (response.data.hasChanged) {\n            toast(\n              <Toast\n                title={\"Project Number has been adjusted\"}\n                message={\n                  <p>\n                    Project Number changed to:{\" \"}\n                    <b>{response.data.submission.data.projectNumber}</b>\n                  </p>\n                }\n                type={\"info\"}\n              />\n            );\n          }\n          toast(\n            <Toast\n              title={\"Project has been transferred\"}\n              message={\n                <p>\n                  Project ( <b>{response.data.submission.data.projectNumber}</b>{\" \"}\n                  ) has been transferred into the tool\n                </p>\n              }\n              type={\"success\"}\n            />\n          );\n          props.history.push(\"/submissions\");\n        });\n      }\n    }\n  }\n\n  function totalAlert(value: any, row: any, check: number) {\n    if (value) {\n      value = value.replace(\"%\", \"\");\n      if (parseFloat(value) !== check && row === \"TOTAL\") {\n        return useColorModeValue(\"red.300\", \"#ABB2BF\");\n      }\n    }\n  }\n\n  function onCostBreakdownTableChange(column: string, row: number, value: any) {\n    var table = [...costBreakdown];\n    var sum = 0.0;\n    var arr: string[] = [\n      \"contribution\",\n      \"estimatedCosts\",\n      \"contributionEur\",\n      \"estimatedCostsEur\",\n    ];\n    var total: number[] = [\n      parseFloat(estimatedIncomeBudgetCurrency),\n      parseFloat(estimatedCostsBudgetCurrency),\n      parseFloat(estimatedIncome),\n      parseFloat(estimatedCosts),\n    ];\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    table[row][column] = value;\n    table.forEach((c: any) => {\n      sum += parseFloat(c[column]);\n    });\n    table.forEach((c: any) => {\n      if (column === \"contribution\") {\n        c.share = ((c.contribution / sum) * 100).toFixed(2);\n      }\n      if (column === \"estimatedCosts\") {\n        c.share = ((c.estimatedCosts / sum) * 100).toFixed(2);\n      }\n    });\n\n    table.forEach((row: any) => {\n      arr.forEach((col: any, index: number) => {\n        if (col !== column) {\n          if (\n            budgetSource.value === \"noBudget\" &&\n            (col === \"contribution\" || col === \"contributionEur\")\n          ) {\n            row[col] = 0;\n          } else {\n            row[col] = ((row.share * total[index!]) / 100).toFixed(2);\n          }\n        }\n      });\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    setTotalcbShare(totalShare.toFixed(2));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n    setCostBreakdown(table);\n  }\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n              setOrganizingCompany(value.value.country);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertDescription>\n            Please note no actual project for 1550 will be created in the tool\n            just yet, this still needs to be done via the usual process. But a\n            project for Switzerland will be created if they are part of the\n            campaign, as they are using the tool. Other countries and 1550 will\n            follow.\n          </AlertDescription>\n        </Alert>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Organizing Company</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: organizingCompany,\n              value: organizingCompany,\n            }}\n            onChange={(selected: any) => {\n              setOrganizingCompany(selected.value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"organizingCompany\"\n            options={Companies.map((company) => {\n              return {\n                label: company.value.country,\n                value: company.value.country,\n              };\n            })}\n          />\n        </Box>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={campaignChannel}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (costBreakdown.length > 0) {\n                if (costBreakdown[0][\"estimatedCosts\"].value !== undefined) {\n                  onCostBreakdownTableChange(\n                    \"estimatedCosts\",\n                    0,\n                    costBreakdown[0][\"estimatedCosts\"].value\n                  );\n                }\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={\n              requestorsCompanyName.value.code === \"1550\"\n                ? AlsoInternationalVendorsNames\n                : VendorsNames\n            }\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            value={vendor.debitor}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Select\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: vendor.bu,\n              value:\n                typeof vendor.bu === \"string\" ? vendor.bu.substr(0, 3) : \"\",\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              var temp = { ...vendor };\n              temp.bu = value.label;\n              setVendor(temp);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"BUs\"\n            options={BUs}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={DefaultSelectStyles(useColorModeValue)}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            className={`${useColorModeValue(\"\", \"dark-table\")}`}\n            rowClassName={(rowData) =>\n              `${useColorModeValue(\"\", \"dark-table-row\")}`\n            }\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n                contributionEur: estimatedIncome + \" EUR\",\n                estimatedCostsEur: estimatedCosts + \" EUR\",\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.share}\n                    onChange={(event) => {\n                      onCostBreakdownTableChange(\n                        \"share\",\n                        index!,\n                        event.target.value\n                      );\n                    }}\n                    bg={totalAlert(rowData.share, rowData.companyName, 100)}\n                    // onChange={(event) => {\n                    //   var temp = [...costBreakdown];\n                    //   temp[index!].share = event.target.value;\n                    //   setCostBreakdown(temp);\n                    // }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      onCostBreakdownTableChange(\n                        \"contribution\",\n                        index!,\n                        event.target.value\n                      );\n                      // var temp = [...costBreakdown];\n                      // temp[index!].contribution = event.target.value;\n                      // setCostBreakdown(temp);\n                    }}\n                    bg={totalAlert(\n                      totalcbContribution,\n                      rowData.companyName,\n                      parseFloat(estimatedIncomeBudgetCurrency)\n                    )}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      onCostBreakdownTableChange(\n                        \"estimatedCosts\",\n                        index!,\n                        event.target.value\n                      );\n                      // var temp = [...costBreakdown];\n                      // temp[index!].estimatedCosts = event.target.value;\n                      // setCostBreakdown(temp);\n                    }}\n                    bg={totalAlert(\n                      totalcbCosts,\n                      rowData.companyName,\n                      parseFloat(estimatedCostsBudgetCurrency)\n                    )}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget contribution in Euro</HeaderCell>\n              <Cell dataKey=\"budgetContributionEur\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contributionEur}\n                    onChange={(event) => {}}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Total estimated costs in Euro</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEur\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCostsEur}\n                    onChange={(event) => {}}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <VStack alignItems={\"end\"} spacing=\"15px\">\n        <Box>\n          <Button\n            float=\"right\"\n            colorScheme={\"blue\"}\n            onClick={() => {\n              if (requestorsCompanyName.value.code === \"6110\") {\n                createSubmission(false, null);\n              } else {\n                if (\n                  costBreakdown.some(\n                    (company: any) => company.companyCode === \"6110\"\n                  )\n                ) {\n                  createSubmission(false, \"6110\");\n                }\n              }\n            }}\n            isDisabled={\n              requestorsCompanyName.value.code !== \"6110\" &&\n              !costBreakdown.some(\n                (company: any) => company.companyCode === \"6110\"\n              )\n            }\n          >\n            Submit\n          </Button>\n          <Button\n            float=\"right\"\n            mr=\"15px\"\n            color={\"white\"}\n            bg={useColorModeValue(\"green.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"green.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              interface FD {\n                [key: string]: any;\n              }\n              var formattedData = [];\n              formattedData.push([\"Request\", \"European One Vendor\"]);\n              formattedData.push([\n                \"Requestor`s Company Name\",\n                requestorsCompanyName.label,\n              ]);\n              formattedData.push([\n                \"Requestor`s Company Code\",\n                requestorsCompanyName.value.code,\n              ]);\n              formattedData.push([\n                \"Requestor`s Country\",\n                requestorsCompanyName.value.country,\n              ]);\n              formattedData.push([\"Organizing Company\", organizingCompany]);\n              formattedData.push([\"Campaign Name\", campaignName]);\n              formattedData.push([\"Campaign Description\", campaignDescription]);\n              formattedData.push([\"Campaign Channel\", campaignChannel.label]);\n              formattedData.push([\"Year\", year.label]);\n              formattedData.push([\n                \"Campaign/Project Start Quarter (ALSO Quarter)\",\n                projectStartQuarter.label,\n              ]);\n              formattedData.push([\"Project Number\", projectNumber]);\n              formattedData.push([\"Requestor`s Name\", requestorsName]);\n              formattedData.push([\n                \"Campaign Start Date\",\n                moment(startDate).format(\"DD.MM.yyyy\"),\n              ]);\n              formattedData.push([\n                \"Campaign End Date\",\n                moment(endDate).format(\"DD.MM.yyyy\"),\n              ]);\n              formattedData.push([\"Budget Source\", budgetSource.label]);\n              formattedData.push([\n                \"Local Currency\",\n                requestorsCompanyName.value.currency,\n              ]);\n              formattedData.push([\"Campaign Currency\", exchangeRates.label]);\n              formattedData.push([\n                \"Campaign Estimated Income in Campaign Currency\",\n                budgetSource.value === \"noBudget\"\n                  ? \"N/A\"\n                  : estimatedIncomeBudgetCurrency,\n              ]);\n              formattedData.push([\n                \"Campaign Estimated Costs in Campaign Currency\",\n                estimatedCostsBudgetCurrency,\n              ]);\n              formattedData.push([\n                budgetSource.value === \"noBudget\"\n                  ? \"Campaign Loss in Campaign currency\"\n                  : \"Campaign Net Profit Target in Campaign Currency\",\n                netProfitTargetBudgetCurrency,\n              ]);\n              formattedData.push([\n                \"Campaign Estimated Income in EUR\",\n                estimatedIncome === \"\" ? \"N/A\" : estimatedIncome,\n              ]);\n              formattedData.push([\n                \"Campaign Estimated Costs in EUR\",\n                estimatedCosts,\n              ]);\n              formattedData.push([\n                budgetSource.value === \"noBudget\"\n                  ? \"Campaign Loss in EUR\"\n                  : \"Campaign Net Profit Target in EUR\",\n                netProfitTarget,\n              ]);\n              formattedData.push([\n                \"Total Estimated Costs in Local Currency\",\n                totalEstimatedCostsLC,\n              ]);\n              formattedData.push([\"Vendor Name\", vendorName.label]);\n              formattedData.push([\"VOD\", vendor.debitor]);\n              formattedData.push([\"Creditor\", vendor.creditor]);\n              formattedData.push([\"Manufacturer\", vendor.manufacturer]);\n              formattedData.push([\"Business Unit\", vendor.bu]);\n              formattedData.push([\"PH1\", vendor.ph.label]);\n              formattedData.push([\"Comments\", comments]);\n              formattedData.push([\n                \"Companies Participating\",\n                companiesParticipating.map((v: any) => v.label).join(\", \"),\n              ]);\n              formattedData.push([]);\n              formattedData.push([\n                \"Company Name\",\n                \"Company Code\",\n                \"Country\",\n                \"Contact Person's Email\",\n                \"Local Project Number\",\n                \"Share %\",\n                \"Budget Contribution in Campaign Currency\",\n                \"Total Estimated Costs in Campaign Currency\",\n                \"Budget Contribution in EUR\",\n                \"Total Estimated Costs in EUR\",\n              ]);\n              costBreakdown.forEach((company: any) => {\n                formattedData.push([\n                  company.companyName,\n                  company.companyCode,\n                  company.country,\n                  company.contactEmail,\n                  company.projectNumber,\n                  company.share,\n                  company.contribution,\n                  company.estimatedCosts,\n                  company.contributionEur,\n                  company.estimatedCostsEur,\n                ]);\n              });\n              formattedData.push([\n                \"TOTAL\",\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                totalcbShare + \"%\",\n                totalcbContribution + \" \" + exchangeRates.label,\n                totalcbCosts + \" \" + exchangeRates.label,\n                estimatedIncome + \" EUR\",\n                estimatedCosts + \" EUR\",\n              ]);\n              var ws = XLSX.utils.aoa_to_sheet(formattedData);\n              const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n              const excelBuffer = XLSX.write(wb, {\n                bookType: \"xlsx\",\n                type: \"array\",\n              });\n              const data = new Blob([excelBuffer], {\n                type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n              });\n              FileSaver.saveAs(data, campaignName + \".xlsx\");\n            }}\n          >\n            Export\n          </Button>\n          <Button\n            float=\"right\"\n            mr=\"15px\"\n            color={\"white\"}\n            bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n            _hover={{\n              bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n            }}\n            onClick={() => {\n              createSubmission(true, null);\n            }}\n          >\n            {props.isDraft ? \"Update\" : \"Draft\"}\n          </Button>\n        </Box>\n      </VStack>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n}\n\nexport default function Ermv(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [totalcbShare, setTotalcbShare] = useState(\"0\");\n  const [totalcbContribution, setTotalcbContribution] = useState(\"0.00\");\n  const [totalcbCosts, setTotalcbCosts] = useState(\"0.00\");\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: props.submission.data.year ?? \"\",\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      setBudgetSource({\n        label: props.submission.data.budgetSource ?? \"\",\n        value: props.submission.data.budgetSource ?? \"\",\n      });\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorsNames(\n          props.children\n            .filter((s) => s.group === \"vendor\")\n            .map((s) => {\n              return { label: s.data.vendorName, value: s.data.vendorName };\n            })\n        );\n        setCompaniesParticipating(\n          props.children\n            .filter((s) => s.group === \"country\")\n            .map((s) => {\n              return { label: s.data.companyName, value: s.data.companyName };\n            })\n        );\n        var v: any[] = [];\n        var c: any[] = [];\n\n        props.children\n          .filter((s) => s.group === \"country\")\n          .forEach((s) => {\n            c.push({\n              companyName: s.data.companyName,\n              companyCode: s.data.countryCodeEMEA,\n              country: s.data.countriesEMEA,\n              contactEmail: s.data.productionProjectManager,\n              projectNumber: s.data.parentProjectNumber,\n              share: (s.data.countryShare || 0).toFixed(2),\n              contribution: (s.data.countryBudgetContributionCC || 0).toFixed(\n                2\n              ),\n              estimatedCosts: (s.data.countryCostEstimationCC || 0).toFixed(2),\n            });\n          });\n        setCostBreakdown([...c]);\n\n        props.children\n          .filter((s) => s.group === \"vendor\")\n          .forEach((s) => {\n            v.push({\n              vendor: s.data.vendorName,\n              projectManager: s.data.marketingResponsible,\n              creditor: s.data.creditorNumber,\n              debitor: s.data.debitorNumber,\n              manufacturer: s.data.manufacturerNumber,\n              bu: s.data.businessUnit,\n              ph: { label: s.data.PH1, value: s.data.PH1 },\n              budgetCurrency: {\n                label: s.data.vendorBudgetCurrency,\n                value: (\n                  ExchangeRates.find(\n                    (er) => er.label === s.data.vendorBudgetCurrency\n                  ) || { value: \"\" }\n                ).value,\n              },\n              budgetAmount: (s.data.vendorBudgetAmount || 0).toFixed(2),\n              localBudget: (s.data.vendorAmount || 0).toFixed(2),\n              eurBudget: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n              share: s.data.vendorShare.toFixed(0) || \"0\",\n              estimatedCostsCC: (s.data.estimatedCostsCC || 0).toFixed(2),\n              estimatedIncomeCC: (s.data.estimatedIncomeCC || 0).toFixed(2),\n              estimatedCostsLC: \"0.00\",\n              estimatedCostsEUR: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              netProfitTargetVC: (s.data.estimatedResultCC || 0).toFixed(2),\n              netProfitTargetLC: (s.data.estimatedResultBC || 0).toFixed(2),\n              netProfitTargetEUR: (s.data.estimatedResultEUR || 0).toFixed(2),\n            });\n          });\n        v.push({\n          vendor: \"TOTAL\",\n          projectManager: \"\",\n          creditor: \"\",\n          debitor: \"\",\n          manufacturer: \"\",\n          bu: \"\",\n          ph: { label: \"\", value: \"\" },\n          budgetCurrency: { label: \"\", value: \"\" },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setVendors([...v]);\n      }\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: vendor.value.alsoMarketingConsultant,\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: vendor.value.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    data.push({\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: \"\",\n      eurBudget: \"\",\n      share: \"\",\n      estimatedCostsCC: \"\",\n      estimatedIncomeCC: \"\",\n      estimatedCostsLC: \"\",\n      estimatedCostsEUR: \"\",\n      netProfitTargetVC: \"\",\n      netProfitTargetLC: \"\",\n      netProfitTargetEUR: \"\",\n    });\n    setVendors(data);\n  }, [vendorsNames]);\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    // if (props.submission) {\n    //   return;\n    // }\n    var totalShare = 0.0;\n    var totalContribution = 0.0;\n    var totalCosts = 0.0;\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n\n      totalShare += parseFloat(row.share) || 0;\n      totalContribution += parseFloat(row.contribution) || 0;\n      totalCosts += parseFloat(row.estimatedCosts) || 0;\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n    setTotalcbShare(totalShare.toFixed(0));\n    setTotalcbContribution(totalContribution.toFixed(2));\n    setTotalcbCosts(totalCosts.toFixed(2));\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    // if (props.submission) {\n    //   return;\n    // }\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n\n    var temp = [...vendors];\n    temp.slice(0, -1).forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    var totalVendorBudgetInLC = 0;\n    var totalVendorBudgetInEUR = 0;\n    var totalVendorShare = 0;\n    var totalEstimatedIncomeInCC = 0;\n    var totalEstimatedCostsInCC = 0;\n    var totalEstimatedCostsInLC = 0;\n    var totalEstimatedCostsInEUR = 0;\n    var totalNetProfitTargetInCC = 0;\n    var totalNetProfitTargetInLC = 0;\n    var totalNetProfitTargetInEUR = 0;\n    temp.slice(0, -1).forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 2)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (parseFloat(row.eurBudget) - parseFloat(row.estimatedCostsEUR)).toFixed(\n          2\n        );\n\n      row.netProfitTargetLC = (\n        parseFloat(row.localBudget) - parseFloat(row.estimatedCostsLC)\n      ).toFixed(2);\n\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n      totalVendorBudgetInLC += parseFloat(row.localBudget);\n      totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n      totalVendorShare += parseFloat(row.share);\n      totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n      totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n      totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n      totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n      totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n      totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n      totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n    });\n\n    temp[temp.length - 1] = {\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: totalVendorBudgetInLC.toFixed(2),\n      eurBudget: totalVendorBudgetInEUR.toFixed(2),\n      share: totalVendorShare.toFixed(2),\n      estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n      estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n      estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n      estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n      netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n      netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n      netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n    };\n\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Alert\n            status=\"error\"\n            display={\n              requestorsCompanyName.value.code !== \"6110\" &&\n              requestorsCompanyName.value.code !== \"\"\n                ? \"flex\"\n                : \"none\"\n            }\n          >\n            <AlertIcon />\n            <AlertDescription>\n              Please note no actual project for 1550 will be created in the tool\n              just yet, this still needs to be done via the usual process. But a\n              project for Switzerland will be created if they are part of the\n              campaign, as they are using the tool. Other countries and 1550\n              will follow.\n            </AlertDescription>\n          </Alert>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (value.value === \"noBudget\") {\n                setEstimatedIncomeBudgetCurrency(\"\");\n                setEstimatedIncome(\"\");\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              var val: any = value;\n              if (value !== null && value.length > 0) {\n                val = val.map((v: any) => {\n                  v.label = value.label.split(\"(\")[0];\n                  return v;\n                });\n              }\n              setVendorsNames(val);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames.map((option) => {\n              return {\n                label: `${option.label} (${option.value.debitorischer} - ${option.value.bu})`,\n                value: option.value,\n              };\n            })}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table hover={false} autoHeight rowHeight={65} data={vendors}>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    isDisabled\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.bu}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].bu = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    isDisabled={budgetSource.value === \"noBudget\"}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Companies Participating</Text>\n          <Select\n            menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 10000000,\n              }),\n              menuPortal: (base) => ({ ...base, zIndex: 10000000 }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={companiesParticipating}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCompaniesParticipating(value);\n            }}\n            // classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"companiesParticipating\"\n            options={Companies}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Country Breakdown</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={[\n              ...costBreakdown,\n              {\n                invalid: totalcbShare === \"100\" ? false : true,\n                companyName: \"TOTAL\",\n                share: totalcbShare + \"%\",\n                contribution: totalcbContribution + \" \" + exchangeRates.label,\n                estimatedCosts: totalcbCosts + \" \" + exchangeRates.label,\n              },\n            ]}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Company Name</HeaderCell>\n              <Cell dataKey=\"companyName\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyName}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyName = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Company Code</HeaderCell>\n              <Cell dataKey=\"companyCode\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.companyCode}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].companyCode = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={100} resizable>\n              <HeaderCell>Country</HeaderCell>\n              <Cell dataKey=\"country\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.country}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].country = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person's Email</HeaderCell>\n              <Cell dataKey=\"contactEmail\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactEmail}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contactEmail = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Local Project Number</HeaderCell>\n              <Cell dataKey=\"projectNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.projectNumber}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].projectNumber = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    color={rowData.invalid && \"red\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].share = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>Budget Contribution in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"contribution\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.contribution}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].contribution = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={400} resizable>\n              <HeaderCell>\n                Total Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCosts\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.estimatedCosts}\n                    onChange={(event) => {\n                      var temp = [...costBreakdown];\n                      temp[index!].estimatedCosts = event.target.value;\n                      setCostBreakdown(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          RestAPI.getSubmissions().then((response) => {\n            var parentSubmissions = response.data.filter(\n              (s) => s.parentId === null\n            );\n            let isUnique = false;\n            let pn = projectNumber;\n            while (!isUnique) {\n              let found = false;\n              for (let s of parentSubmissions) {\n                if (s.data.projectNumber === pn) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) {\n                isUnique = true;\n              } else {\n                var newSuffix: any = parseInt(pn.slice(-2)) + 1;\n                newSuffix = (newSuffix > 9 ? \"\" : \"0\") + newSuffix.toString();\n                pn = pn.slice(0, -2) + newSuffix;\n              }\n            }\n            if (pn !== projectNumber) {\n              // we changed project number. Notify user\n              setProjectNumber(pn);\n              toast(\n                <Toast\n                  title={\"SAP Response\"}\n                  message={`Project Number already exists. Changed to: ${pn}. Press submit again.`}\n                  type={\"info\"}\n                />\n              );\n              return;\n            } else {\n              var projectId = \"619515b754e61c8dd33daa52\";\n\n              var parent: Submission = {\n                project: projectId,\n                title: campaignName,\n                parentId: null,\n                viewId: null,\n                group: null,\n                created: new Date(),\n                updated: new Date(),\n                status: \"New\",\n                author: requestorsName,\n                data: {\n                  requestorsCompanyName: requestorsCompanyName.label,\n                  companyCode: requestorsCompanyName.value.code,\n                  requestorsCountry: requestorsCompanyName.value.country,\n                  campaignName: campaignName,\n                  projectName: campaignName,\n                  campaignDescription: campaignDescription,\n                  targetAudience: targetAudience,\n                  campaignChannel: campaignChannel.label,\n                  year: year.label,\n                  projectStartQuarter: projectStartQuarter.label,\n                  projectNumber: projectNumber,\n                  requestorsName: requestorsName,\n                  projectApprover: projectApproval,\n                  projectApproval: projectApproval,\n                  manufacturersFiscalQuarter: fiscalQuarter.label,\n                  campaignStartDate:\n                    startDate === null ? null : startDate.toString(),\n                  campaignEndDate: endDate === null ? null : endDate.toString(),\n                  budgetSource: budgetSource.label,\n                  budgetApprovedByVendor: budgetApprovedByVendor,\n                  campaignBudgetsCurrency: exchangeRates.label,\n                  campaignCurrency: exchangeRates.label,\n                  campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n                    estimatedIncomeBudgetCurrency\n                  ),\n                  campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                    estimatedCostsBudgetCurrency\n                  ),\n                  campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                    netProfitTargetBudgetCurrency\n                  ),\n                  campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n                  campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n                  campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n                  totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n                  comments: comments,\n                  additionalInformation: comments,\n                  localCurrency: requestorsCompanyName.value.currency,\n                  projectType: \"European Multi Vendor\",\n                },\n              };\n              var children: Submission[] = [];\n              vendors.slice(0, -1).forEach((vendor: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: \"\",\n                  viewId: null,\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectType: \"European Multi Vendor\",\n                    vendorName: vendor.vendor,\n                    projectNumber: projectNumber,\n                    marketingResponsible: vendor.projectManager,\n                    creditorNumber: vendor.creditor,\n                    debitorNumber: vendor.debitor,\n                    manufacturerNumber: vendor.manufacturer,\n                    businessUnit: vendor.bu,\n                    PH1: vendor.ph.label,\n                    vendorBudgetCurrency:\n                      budgetSource.value === \"noBudget\"\n                        ? \"N/A\"\n                        : vendor.budgetCurrency.label,\n                    vendorAmount:\n                      isNaN(parseFloat(vendor.localBudget)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.localBudget),\n                    vendorBudgetAmount:\n                      isNaN(parseFloat(vendor.budgetAmount)) ||\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.budgetAmount),\n                    // cbbudgetEur: parseFloat(vendor.eurBudget),\n                    vendorShare: parseFloat(vendor.share),\n                    estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n                    estimatedIncomeCC:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.estimatedIncomeCC),\n                    estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n                    // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(vendor.eurBudget),\n                    estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n                    estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n                    estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n                  },\n                });\n              });\n              costBreakdown.forEach((company: any) => {\n                children.push({\n                  project: projectId,\n                  title: \"\",\n                  parentId: null,\n                  viewId: null,\n                  group: \"country\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    projectName: campaignName,\n                    additionalInformation: comments,\n                    campaignChannel: campaignChannel.label,\n                    parentProjectNumber:\n                      company.companyCode + projectNumber.substring(4),\n                    projectNumber: company.projectNumber,\n                    campaignStartDate:\n                      startDate === null ? null : startDate.toString(),\n                    campaignEndDate:\n                      endDate === null ? null : endDate.toString(),\n                    budgetSource: budgetSource.label,\n                    campaignCurrency: exchangeRates.label,\n                    // vendorName: vendorName.label,\n                    // businessUnit: vendor.bu,\n                    // PH1: vendor.ph.label,\n                    vendorShare: 100,\n                    estimatedIncomeEUR:\n                      budgetSource.value === \"noBudget\"\n                        ? 0.0\n                        : parseFloat(estimatedIncome),\n                    estimatedCostsEUR: parseFloat(estimatedCosts),\n                    estimatedResultEUR:\n                      parseFloat(netProfitTarget) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    estimatedResultBC:\n                      parseFloat(netProfitTargetBudgetCurrency) *\n                      (budgetSource.value === \"noBudget\" ? -1 : 1),\n                    projectType: \"European Multi Vendor\",\n                    companyName: company.companyName,\n                    countryCodeEMEA: company.companyCode,\n                    country: company.country,\n                    countriesEMEA: company.country,\n                    productionProjectManager: company.contactEmail,\n                    countryShare: parseFloat(company.share),\n                    countryBudgetContributionEur: company.contribution,\n                    countryCostEstimationEur: company.estimatedCosts,\n                    countryBudgetContributionCC: isNaN(\n                      parseFloat(company.contribution)\n                    )\n                      ? 0.0\n                      : parseFloat(company.contribution),\n                    countryCostEstimationCC: parseFloat(company.estimatedCosts),\n                  },\n                });\n              });\n              var submission: SubmissionWithChildren = {\n                submission: parent,\n                children,\n                local: null,\n              };\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  props.history.push(\"/submissions\");\n                }\n              );\n            }\n          });\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" || props.submission\n        }\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport moment from \"moment\";\n\nimport { Table } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar BUs: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n  isDraft?: boolean;\n}\n\nexport default function Elmv(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [organizingCompany, setOrganizingCompany] = useState(\"\");\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [comments, setComments] = useState(\"\");\n  const [vendors, setVendors] = useState<any>([]);\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n  const [injectionReady, setInjectionReady] = useState(false);\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n      \"633e93ed5a7691ac30c977fc\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n    BUs = responses[10].data;\n  }\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: (props.submission.data.year ?? \"\").substring(2, 4),\n      });\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setOrganizingCompany(props.submission.data.organizingCompany ?? \"\");\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      if (Budget.length > 0 && props.submission.data.budgetSource !== \"\") {\n        setBudgetSource({\n          label: props.submission.data.budgetSource ?? \"\",\n          value:\n            Budget.find((b) => b.label === props.submission.data.budgetSource)\n              .value ?? \"\",\n        });\n      }\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setEstimatedIncomeBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedIncomeBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setEstimatedIncome(\n        (props.submission.data.campaignEstimatedIncomeEur || 0).toFixed(2)\n      );\n      setEstimatedCosts(\n        (props.submission.data.campaignEstimatedCostsEur || 0).toFixed(2)\n      );\n      setNetProfitTarget(\n        (props.submission.data.campaignNetProfitTargetEur || 0).toFixed(2)\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toFixed(2)\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        (props.submission.data.totalEstimatedCostsLC || 0).toFixed(2)\n      );\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorsNames(\n          props.children\n            .filter((s) => s.group === \"vendor\")\n            .map((s) => {\n              return { label: s.data.vendorName, value: s.data.vendorName };\n            })\n        );\n\n        var v: any[] = [];\n\n        props.children\n          .filter((s) => s.group === \"vendor\")\n          .forEach((s) => {\n            v.push({\n              vendor: s.data.vendorName,\n              projectManager: s.data.marketingResponsible,\n              creditor: s.data.creditorNumber,\n              debitor: s.data.debitorNumber,\n              manufacturer: s.data.manufacturerNumber,\n              bu: s.data.businessUnit,\n              ph: { label: s.data.PH1, value: s.data.PH1 },\n              budgetCurrency: {\n                label: s.data.vendorBudgetCurrency,\n                value: (\n                  ExchangeRates.find(\n                    (er) => er.label === s.data.vendorBudgetCurrency\n                  ) || { value: \"\" }\n                ).value,\n              },\n              budgetAmount: (s.data.vendorBudgetAmount || 0).toFixed(2),\n              localBudget: (s.data.vendorAmountLC || 0).toFixed(2),\n              eurBudget: (s.data.estimatedIncomeEUR || 0).toFixed(2),\n              share: s.data.vendorShare.toFixed(0) || \"0\",\n              estimatedCostsCC: (s.data.estimatedCostsCC || 0).toFixed(2),\n              estimatedIncomeCC: (s.data.estimatedIncomeCC || 0).toFixed(2),\n              estimatedCostsLC: \"0.00\",\n              estimatedCostsEUR: (s.data.estimatedCostsEUR || 0).toFixed(2),\n              netProfitTargetVC: (s.data.estimatedResultCC || 0).toFixed(2),\n              netProfitTargetLC: (s.data.estimatedResultBC || 0).toFixed(2),\n              netProfitTargetEUR: (s.data.estimatedResultEUR || 0).toFixed(2),\n            });\n          });\n        v.push({\n          vendor: \"TOTAL\",\n          projectManager: \"\",\n          creditor: \"\",\n          debitor: \"\",\n          manufacturer: \"\",\n          bu: \"\",\n          ph: { label: \"\", value: \"\" },\n          budgetCurrency: { label: \"\", value: \"\" },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n        setVendors([...v]);\n      }\n    }\n    setTimeout(() => {\n      setInjectionReady(true);\n    }, 1000);\n  }, [props.submission, props.children, ExchangeRates]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    var data: any = [];\n    vendorsNames.forEach((vendor: any) => {\n      data.push({\n        vendor: vendor.label,\n        projectManager: vendor.value.alsoMarketingConsultant,\n        creditor: vendor.value.kreditor,\n        debitor: vendor.value.debitorischer,\n        manufacturer: vendor.value.hersteller,\n        bu: \"\",\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    });\n    data.push({\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: \"\",\n      eurBudget: \"\",\n      share: \"\",\n      estimatedCostsCC: \"\",\n      estimatedIncomeCC: \"\",\n      estimatedCostsLC: \"\",\n      estimatedCostsEUR: \"\",\n      netProfitTargetVC: \"\",\n      netProfitTargetLC: \"\",\n      netProfitTargetEUR: \"\",\n    });\n    setVendors(data);\n  }, [vendorsNames]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (requestorsCompanyName.value.country === \"\"\n          ? \"??\"\n          : requestorsCompanyName.value.country) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [year, campaignChannel, projectStartQuarter, requestorsCompanyName]);\n\n  useEffect(() => {\n    var totalBudgetEur = 0;\n    var totalBudgetLC = 0;\n    var totalCostsCC = parseFloat(estimatedCostsBudgetCurrency);\n    var totalIncomeCC = parseFloat(estimatedIncomeBudgetCurrency);\n    var totalCostsLC = parseFloat(totalEstimatedCostsLC);\n    var totalCostsEur = parseFloat(estimatedCosts);\n    var temp = [...vendors];\n    temp.slice(0, -1).forEach((row: any) => {\n      row.eurBudget = (\n        parseFloat(row.budgetAmount) / parseFloat(row.budgetCurrency.value)\n      ).toFixed(2);\n      row.localBudget = (parseFloat(row.eurBudget) * localExchangeRate).toFixed(\n        2\n      );\n\n      var eb = parseFloat(row.eurBudget);\n      var lb = parseFloat(row.localBudget);\n\n      if (!isNaN(eb)) {\n        totalBudgetEur += eb;\n      }\n      if (!isNaN(lb)) {\n        totalBudgetLC += lb;\n      }\n    });\n    var totalVendorBudgetInLC = 0;\n    var totalVendorBudgetInEUR = 0;\n    var totalVendorShare = 0;\n    var totalEstimatedIncomeInCC = 0;\n    var totalEstimatedCostsInCC = 0;\n    var totalEstimatedCostsInLC = 0;\n    var totalEstimatedCostsInEUR = 0;\n    var totalNetProfitTargetInCC = 0;\n    var totalNetProfitTargetInLC = 0;\n    var totalNetProfitTargetInEUR = 0;\n    temp.slice(0, -1).forEach((row: any, index: number) => {\n      var vbEur = parseFloat(row.eurBudget);\n      var share = 0;\n      if (budgetSource.value === \"noBudget\") {\n        row.budgetAmount = \"0.00\";\n        row.localBudget = \"0.00\";\n        row.eurBudget = \"0.00\";\n        row.estimatedIncomeCC = \"0.00\";\n        share = parseFloat(row.share) * 0.01;\n\n        row.estimatedCostsCC = (\n          share * parseFloat(estimatedCostsBudgetCurrency)\n        ).toFixed(2);\n\n        row.estimatedCostsEUR = (share * parseFloat(estimatedCosts)).toFixed(2);\n        row.estimatedCostsLC = (\n          parseFloat(row.estimatedCostsEUR) * localExchangeRate\n        ).toFixed(2);\n      } else {\n        share = vbEur / totalBudgetEur;\n        row.share = (share * 100).toFixed(2);\n        if (index === temp.length - 1) {\n          var totalShare = 0.0;\n          temp\n            .slice(0, temp.length - 2)\n            .forEach((t) => (totalShare += parseFloat(t.share)));\n          row.share = (100 - totalShare).toFixed(2);\n          share = (100 - totalShare) * 0.01;\n        }\n        if (!isNaN(vbEur) && totalBudgetEur !== 0) {\n          if (!isNaN(totalCostsCC)) {\n            row.estimatedCostsCC = (share * totalCostsCC).toFixed(2);\n          }\n          if (!isNaN(totalIncomeCC)) {\n            row.estimatedIncomeCC = (share * totalIncomeCC).toFixed(2);\n          }\n          if (!isNaN(totalCostsLC)) {\n            row.estimatedCostsLC = (share * totalCostsLC).toFixed(2);\n          }\n          if (!isNaN(totalCostsEur)) {\n            row.estimatedCostsEUR = (share * totalCostsEur).toFixed(2);\n          }\n        }\n      }\n      row.netProfitTargetEUR = (\n        parseFloat(row.eurBudget) - parseFloat(row.estimatedCostsEUR)\n      ).toFixed(2);\n\n      row.netProfitTargetLC = (\n        parseFloat(row.localBudget) - parseFloat(row.estimatedCostsLC)\n      ).toFixed(2);\n      row.netProfitTargetVC =\n        `${budgetSource.value === \"noBudget\" ? \"-\" : \"\"}` +\n        (share * parseFloat(netProfitTargetBudgetCurrency)).toFixed(2);\n\n      totalVendorBudgetInLC += parseFloat(row.localBudget);\n      totalVendorBudgetInEUR += parseFloat(row.eurBudget);\n      totalVendorShare += parseFloat(row.share);\n      totalEstimatedIncomeInCC += parseFloat(row.estimatedIncomeCC);\n      totalEstimatedCostsInCC += parseFloat(row.estimatedCostsCC);\n      totalEstimatedCostsInLC += parseFloat(row.estimatedCostsLC);\n      totalEstimatedCostsInEUR += parseFloat(row.estimatedCostsEUR);\n      totalNetProfitTargetInCC += parseFloat(row.netProfitTargetVC);\n      totalNetProfitTargetInLC += parseFloat(row.netProfitTargetLC);\n      totalNetProfitTargetInEUR += parseFloat(row.netProfitTargetEUR);\n    });\n\n    temp[temp.length - 1] = {\n      vendor: \"TOTAL\",\n      projectManager: \"\",\n      creditor: \"\",\n      debitor: \"\",\n      manufacturer: \"\",\n      bu: \"\",\n      ph: { label: \"\", value: \"\" },\n      budgetCurrency: { label: \"\", value: \"\" },\n      budgetAmount: \"\",\n      localBudget: totalVendorBudgetInLC.toFixed(2),\n      eurBudget: totalVendorBudgetInEUR.toFixed(2),\n      share: totalVendorShare.toFixed(2),\n      estimatedCostsCC: totalEstimatedCostsInCC.toFixed(2),\n      estimatedIncomeCC: totalEstimatedIncomeInCC.toFixed(2),\n      estimatedCostsLC: totalEstimatedCostsInLC.toFixed(2),\n      estimatedCostsEUR: totalEstimatedCostsInEUR.toFixed(2),\n      netProfitTargetVC: totalNetProfitTargetInCC.toFixed(2),\n      netProfitTargetLC: totalNetProfitTargetInLC.toFixed(2),\n      netProfitTargetEUR: totalNetProfitTargetInEUR.toFixed(2),\n    };\n\n    setTotalVendorBudgetInEUR(totalBudgetEur);\n    setTotalVendorBudgetInLC(totalBudgetLC);\n    if (!isEqual(vendors, temp)) {\n      setVendors(temp);\n    }\n  }, [\n    vendors,\n    estimatedCostsBudgetCurrency,\n    totalEstimatedCostsLC,\n    budgetSource,\n  ]);\n\n  function createSubmission(draft: boolean) {\n    var projectId = \"6246ec8efa2a446faadb8d9b\";\n\n    var parent: Submission = {\n      project: projectId,\n      title: campaignName,\n      parentId: null,\n      viewId: null,\n      group: null,\n      created: new Date(),\n      updated: new Date(),\n      status: \"Incomplete\",\n      author: requestorsName,\n      data: {\n        status: \"Incomplete\",\n        requestorsCompanyName: requestorsCompanyName.label,\n        companyCode: requestorsCompanyName.value.code,\n        requestorsCountry: requestorsCompanyName.value.country,\n        campaignName: campaignName,\n        projectName: campaignName,\n        campaignDescription: campaignDescription,\n        targetAudience: targetAudience,\n        campaignChannel: campaignChannel.label,\n        year: year.label,\n        projectStartQuarter: projectStartQuarter.label,\n        projectNumber: projectNumber,\n        requestorsName: requestorsName,\n        projectApprover: projectApproval,\n        projectApproval: projectApproval,\n        manufacturersFiscalQuarter: fiscalQuarter.label,\n        campaignStartDate: startDate === null ? null : startDate.toString(),\n        campaignEndDate: endDate === null ? null : endDate.toString(),\n        budgetSource: budgetSource.label,\n        budgetApprovedByVendor: budgetApprovedByVendor,\n        campaignBudgetsCurrency: exchangeRates.label,\n        campaignCurrency: exchangeRates.label,\n        campaignEstimatedIncomeBudgetsCurrency: parseFloat(\n          estimatedIncomeBudgetCurrency\n        ),\n        campaignEstimatedCostsBudgetsCurrency: parseFloat(\n          estimatedCostsBudgetCurrency\n        ),\n        campaignNetProfitTargetBudgetsCurrency: parseFloat(\n          netProfitTargetBudgetCurrency\n        ),\n        campaignEstimatedIncomeEur: parseFloat(estimatedIncome),\n        campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n        campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n        totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n        comments: comments,\n        additionalInformation: comments,\n        localCurrency: requestorsCompanyName.value.currency,\n        projectType: \"Local Multi Vendor\",\n      },\n    };\n    var children: Submission[] = [];\n    vendors.slice(0, -1).forEach((vendor: any) => {\n      children.push({\n        project: projectId,\n        title: \"\",\n        parentId: \"\",\n        viewId: null,\n        group: \"vendor\",\n        created: new Date(),\n        updated: new Date(),\n        status: \"New\",\n        author: requestorsName,\n        data: {\n          vendorName: vendor.vendor,\n          marketingResponsible: vendor.projectManager,\n          companyCode: requestorsCompanyName.value.code,\n          projectNumber: projectNumber,\n          creditorNumber: vendor.creditor,\n          debitorNumber: vendor.debitor,\n          manufacturerNumber: vendor.manufacturer,\n          businessUnit: vendor.bu,\n          PH1: vendor.ph.label,\n          vendorBudgetCurrency:\n            budgetSource.value === \"noBudget\"\n              ? \"N/A\"\n              : vendor.budgetCurrency.label,\n          vendorAmountLC:\n            isNaN(parseFloat(vendor.localBudget)) ||\n            budgetSource.value === \"noBudget\"\n              ? 0.0\n              : parseFloat(vendor.localBudget),\n          vendorAmount:\n            isNaN(parseFloat(vendor.budgetAmount)) ||\n            budgetSource.value === \"noBudget\"\n              ? 0.0\n              : parseFloat(vendor.budgetAmount),\n          vendorBudgetAmount:\n            isNaN(parseFloat(vendor.budgetAmount)) ||\n            budgetSource.value === \"noBudget\"\n              ? 0.0\n              : parseFloat(vendor.budgetAmount),\n          // cbbudgetEur: parseFloat(vendor.eurBudget),\n          vendorShare: parseFloat(vendor.share),\n          estimatedCostsCC: parseFloat(vendor.estimatedCostsCC),\n          estimatedIncomeCC:\n            budgetSource.value === \"noBudget\"\n              ? 0.0\n              : parseFloat(vendor.estimatedIncomeCC),\n          estimatedResultCC: parseFloat(vendor.netProfitTargetVC),\n          // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n          estimatedIncomeEUR:\n            budgetSource.value === \"noBudget\"\n              ? 0.0\n              : parseFloat(vendor.eurBudget),\n          estimatedCostsEUR: parseFloat(vendor.estimatedCostsEUR),\n          estimatedResultEUR: parseFloat(vendor.netProfitTargetEUR),\n          estimatedResultBC: parseFloat(vendor.netProfitTargetLC),\n        },\n      });\n    });\n\n    var submission: SubmissionWithChildren = {\n      submission: parent,\n      children,\n      local: null,\n    };\n\n    if (props.isDraft) {\n      if (draft) {\n        submission.submission.id = props.submission.id;\n        RestAPI.updateDraft(submission).then((response) => {\n          toast(\n            <Toast\n              title={\"Draft save\"}\n              message={`Draft has been successfully saved.`}\n              type={\"info\"}\n            />\n          );\n        });\n      } else {\n        RestAPI.deleteDraft(props.submission.id).then(() => {\n          RestAPI.createSubmissionWithChildren(submission).then((response) => {\n            if (response.data.hasChanged) {\n              toast(\n                <Toast\n                  title={\"Project Number has been adjusted\"}\n                  message={\n                    <p>\n                      Project Number changed to:{\" \"}\n                      <b>{response.data.submission.data.projectNumber}</b>\n                    </p>\n                  }\n                  type={\"info\"}\n                />\n              );\n            }\n            props.history.push(\"/submissions\");\n          });\n        });\n      }\n    } else {\n      if (draft) {\n        RestAPI.createDraft(submission).then((response) => {\n          toast(\n            <Toast\n              title={\"Draft save\"}\n              message={`Draft has been successfully saved.`}\n              type={\"info\"}\n            />\n          );\n        });\n      } else {\n        RestAPI.createSubmissionWithChildren(submission).then((response) => {\n          if (response.data.hasChanged) {\n            toast(\n              <Toast\n                title={\"Project Number has been adjusted\"}\n                message={\n                  <p>\n                    Project Number changed to:{\" \"}\n                    <b>{response.data.submission.data.projectNumber}</b>\n                  </p>\n                }\n                type={\"info\"}\n              />\n            );\n          }\n          props.history.push(\"/submissions\");\n        });\n      }\n    }\n  }\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertDescription>\n            Please note no actual project for 1550 will be created in the tool\n            just yet, this still needs to be done via the usual process. But a\n            project for Switzerland will be created if they are part of the\n            campaign, as they are using the tool. Other countries and 1550 will\n            follow.\n          </AlertDescription>\n        </Alert>\n\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (value.value === \"noBudget\") {\n                setEstimatedIncomeBudgetCurrency(\"\");\n                setEstimatedIncome(\"\");\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor`s Names</Text>\n          <Select\n            // menuPortalTarget={document.body}\n            isMulti\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={vendors}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Vendor</HeaderCell>\n              <Cell dataKey=\"vendor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.vendor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].vendor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>VOD</HeaderCell>\n              <Cell dataKey=\"debitor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.debitor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].debitor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Creditor</HeaderCell>\n              <Cell dataKey=\"creditor\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.creditor}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].creditor = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Manufacturer</HeaderCell>\n              <Cell dataKey=\"manufacturer\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.manufacturer}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].manufacturer = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n\n            <Column width={200} resizable>\n              <HeaderCell>Business Unit</HeaderCell>\n              <Cell dataKey=\"bu\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={{\n                      label: rowData.bu,\n                      value:\n                        typeof rowData.bu === \"string\"\n                          ? rowData.bu.substr(0, 3)\n                          : \"\",\n                    }}\n                    onChange={(value) => {\n                      if (value !== null) {\n                        var temp = [...vendors];\n                        temp[index!].bu = value.label;\n                        setVendors(temp);\n                      }\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"BUs\"\n                    options={BUs}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>PH1</HeaderCell>\n              <Cell dataKey=\"ph\">\n                {(rowData, index) => (\n                  <Select\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.ph}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].ph = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"PH1\"\n                    options={PH1}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Currency</HeaderCell>\n              <Cell dataKey=\"budgetCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    isDisabled={budgetSource.value === \"noBudget\"}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    menuPortalTarget={document.body}\n                    value={rowData.budgetCurrency}\n                    onChange={(value) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetCurrency = value;\n                      setVendors(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"budgetCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget Amount</HeaderCell>\n              <Cell dataKey=\"budgetAmount\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.budgetAmount}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].budgetAmount = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in LC</HeaderCell>\n              <Cell dataKey=\"localBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.localBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].localBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Vendor Budget in EUR</HeaderCell>\n              <Cell dataKey=\"eurBudget\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    value={rowData.eurBudget}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].eurBudget = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={100} resizable>\n              <HeaderCell>Share %</HeaderCell>\n              <Cell dataKey=\"share\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value !== \"noBudget\"}\n                    value={rowData.share}\n                    onChange={(event) => {\n                      var temp = [...vendors];\n                      temp[index!].share = event.target.value;\n                      setVendors(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            {/* FIXME: calculate */}\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Income in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedIncomeCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled={budgetSource.value === \"noBudget\"}\n                    onChange={() => {}}\n                    value={rowData.estimatedIncomeCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>\n                Vendor Estimated Costs in Campaign Currency\n              </HeaderCell>\n              <Cell dataKey=\"estimatedCostsCC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsCC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in LC</HeaderCell>\n              <Cell dataKey=\"estimatedCostsLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Vendor Estimated Costs in EUR</HeaderCell>\n              <Cell dataKey=\"estimatedCostsEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.estimatedCostsEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in Campaign Currency</HeaderCell>\n              <Cell dataKey=\"netProfitTargetVC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetVC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in LC</HeaderCell>\n              <Cell dataKey=\"netProfitTargetLC\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetLC}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={300} resizable>\n              <HeaderCell>Net Profit Target in EUR</HeaderCell>\n              <Cell dataKey=\"netProfitTargetEUR\">\n                {(rowData, index) => (\n                  <Input\n                    disabled\n                    onChange={() => {}}\n                    value={rowData.netProfitTargetEUR}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"green.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"green.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          interface FD {\n            [key: string]: any;\n          }\n\n          var formattedData = [];\n          formattedData.push([\"Request\", \"Local Multi Vendor\"]);\n          formattedData.push([\n            \"Requestor`s Company Name\",\n            requestorsCompanyName.label,\n          ]);\n          formattedData.push([\n            \"Requestor`s Company Code\",\n            requestorsCompanyName.value.code,\n          ]);\n          formattedData.push([\n            \"Requestor`s Country\",\n            requestorsCompanyName.value.country,\n          ]);\n          formattedData.push([\"Organizing Company\", organizingCompany]);\n          formattedData.push([\"Campaign Name\", campaignName]);\n          formattedData.push([\"Campaign Description\", campaignDescription]);\n          formattedData.push([\"Campaign Channel\", campaignChannel.label]);\n          formattedData.push([\"Year\", year.label]);\n          formattedData.push([\n            \"Campaign/Project Start Quarter (ALSO Quarter)\",\n            projectStartQuarter.label,\n          ]);\n          formattedData.push([\"Project Number\", projectNumber]);\n          formattedData.push([\"Requestor`s Name\", requestorsName]);\n          formattedData.push([\n            \"Campaign Start Date\",\n            moment(startDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\n            \"Campaign End Date\",\n            moment(endDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\"Budget Source\", budgetSource.label]);\n          formattedData.push([\n            \"Local Currency\",\n            requestorsCompanyName.value.currency,\n          ]);\n          formattedData.push([\"Campaign Currency\", exchangeRates.label]);\n          formattedData.push([\n            \"Campaign Estimated Income in Campaign Currency\",\n            budgetSource.value === \"noBudget\"\n              ? \"N/A\"\n              : estimatedIncomeBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in Campaign Currency\",\n            estimatedCostsBudgetCurrency,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\",\n            netProfitTargetBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Income in EUR\",\n            estimatedIncome === \"\" ? \"N/A\" : estimatedIncome,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in EUR\",\n            estimatedCosts,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\",\n            netProfitTarget,\n          ]);\n          formattedData.push([\n            \"Total Estimated Costs in Local Currency\",\n            totalEstimatedCostsLC,\n          ]);\n          formattedData.push([\"Comments\", comments]);\n          formattedData.push([\n            \"Vendors\",\n            vendorsNames.map((v: any) => v.label).join(\", \"),\n          ]);\n          formattedData.push([]);\n          formattedData.push([\n            \"Vendor Name\",\n            \"VOD\",\n            \"Creditor\",\n            \"Manufacturer\",\n            \"Business Unit\",\n            \"PH1\",\n            \"Vendor Budget Currency\",\n            \"Vendor Budget Amount\",\n            \"Vendor Budget in LC\",\n            \"Vendor Budget in EUR\",\n            \"Share %\",\n            \"Vendor Estimated Income in Campaign Currency\",\n            \"Vendor Estimated Costs in Campaign Currency\",\n            \"Vendor Estimated Costs in LC\",\n            \"Vendor Estimated Costs in EUR\",\n            \"Net Profit Target in Campaign Currency\",\n            \"Net Profit Target in LC\",\n            \"Net Profit Target in EUR\",\n          ]);\n          vendors.forEach((v: any) => {\n            formattedData.push([\n              v.vendor,\n              v.debitor,\n              v.creditor,\n              v.manufacturer,\n              v.bu,\n              v.ph.label,\n              v.budgetCurrency.label,\n              v.budgetAmount,\n              v.localBudget,\n              v.eurBudget,\n              v.share,\n              v.estimatedIncomeCC,\n              v.estimatedCostsCC,\n              v.estimatedCostsLC,\n              v.estimatedCostsEUR,\n              v.netProfitTargetVC,\n              v.netProfitTargetLC,\n              v.netProfitTargetEUR,\n            ]);\n          });\n          var ws = XLSX.utils.aoa_to_sheet(formattedData);\n          const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n          const excelBuffer = XLSX.write(wb, {\n            bookType: \"xlsx\",\n            type: \"array\",\n          });\n          const data = new Blob([excelBuffer], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n          });\n          FileSaver.saveAs(data, campaignName + \".xlsx\");\n        }}\n      >\n        Export\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          createSubmission(false);\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" ||\n          (props.submission && !props.isDraft)\n        }\n      >\n        Submit\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          createSubmission(true);\n        }}\n      >\n        {props.isDraft ? \"Update\" : \"Draft\"}\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport DatePicker from \"react-datepicker\";\nimport isEqual from \"lodash/isEqual\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport moment from \"moment\";\n\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar BUs: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n  submission?: any;\n  children?: any[];\n  isDraft?: boolean;\n}\n\nexport default function Elov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorName, setVendorName] = useState<any>({});\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({\n    ph: {\n      label: \"\",\n      value: \"\",\n    },\n  });\n\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n  const [organizingCompany, setOrganizingCompany] = useState(\"\");\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n\n  const [injectionReady, setInjectionReady] = useState(false);\n\n  const [render, rerender] = useState(0);\n\n  useEffect(() => {\n    if (props.submission) {\n      setRequestorsCompanyName({\n        label: props.submission.data.requestorsCompanyName ?? \"\",\n        value: {\n          name: props.submission.data.requestorsCompanyName ?? \"\",\n          code: props.submission.data.companyCode ?? \"\",\n          country: props.submission.data.requestorsCountry ?? \"\",\n          currency: props.submission.data.localCurrency ?? \"\",\n        },\n      });\n      setCampaignName(props.submission.data.campaignName ?? \"\");\n      setCampaignDescription(props.submission.data.campaignDescription ?? \"\");\n      setTargetAudience(props.submission.data.targetAudience ?? \"\");\n      setCampaignChannel({\n        label: props.submission.data.campaignChannel ?? \"\",\n        value: props.submission.data.campaignChannel ?? \"\",\n      });\n      setYear({\n        label: props.submission.data.year ?? \"\",\n        value: (props.submission.data.year ?? \"\").substring(2, 4),\n      });\n      setOrganizingCompany(props.submission.data.organizingCompany ?? \"\");\n      setProjectStartQuarter({\n        label: props.submission.data.projectStartQuarter ?? \"\",\n        value: props.submission.data.projectStartQuarter ?? \"\",\n      });\n      setProjectNumber(props.submission.data.projectNumber ?? \"\");\n      setRequestorsName(props.submission.data.requestorsName ?? \"\");\n      setFiscalQuarter({\n        label: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n        value: props.submission.data.manufacturersFiscalQuarter ?? \"\",\n      });\n      setStartDate(new Date(props.submission.data.campaignStartDate) || null);\n      setEndDate(new Date(props.submission.data.campaignEndDate) || null);\n      if (Budget.length > 0 && props.submission.data.budgetSource !== \"\") {\n        setBudgetSource({\n          label: props.submission.data.budgetSource ?? \"\",\n          value:\n            Budget.find((b) => b.label === props.submission.data.budgetSource)\n              .value ?? \"\",\n        });\n      }\n      setBudgetApprovedByVendor(\n        props.submission.data.budgetApprovedByVendor ?? \"\"\n      );\n      setExchangeRates({\n        label: props.submission.data.campaignBudgetsCurrency ?? \"\",\n        value: props.submission.data.campaignBudgetsCurrency ?? \"\",\n      });\n      setLocalExchangeRate(\n        parseFloat(\n          (\n            ExchangeRates.find(\n              (rate) => rate.label === props.submission.data.localCurrency\n            ) || \"0\"\n          ).value\n        )\n      );\n      setEstimatedIncomeBudgetCurrency(\n        props.submission.data.campaignEstimatedIncomeBudgetsCurrency.toFixed(\n          2\n        ) || \"0.00\"\n      );\n      setEstimatedIncome(\n        typeof props.submission.data.campaignEstimatedIncomeEur === \"number\"\n          ? props.submission.data.campaignEstimatedIncomeEur.toFixed(2)\n          : \"0.00\"\n      );\n      setEstimatedCosts(\n        typeof props.submission.data.campaignEstimatedCostsEur === \"number\"\n          ? props.submission.data.campaignEstimatedCostsEur.toFixed(2)\n          : \"0.00\"\n      );\n      setNetProfitTarget(\n        typeof props.submission.data.campaignNetProfitTargetEur === \"number\"\n          ? props.submission.data.campaignNetProfitTargetEur.toFixed(2)\n          : \"0.00\"\n      );\n      setEstimatedCostsBudgetCurrency(\n        (\n          props.submission.data.campaignEstimatedCostsBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          props.submission.data.campaignNetProfitTargetBudgetsCurrency ?? 0\n        ).toString()\n      );\n      setComments(props.submission.data.comments ?? \"\");\n      setTotalEstimatedCostsLC(\n        typeof props.submission.data.totalEstimatedCostsLC === \"number\"\n          ? props.submission.data.totalEstimatedCostsLC.toFixed(2)\n          : \"0.00\"\n      );\n\n      //\n      if (props.children && props.children.length > 0) {\n        setVendorName({\n          label: props.children[0].data.vendorName ?? \"\",\n          value: props.children[0].data.vendorName ?? \"\",\n        });\n        setVendor({\n          vendor: props.children[0].data.vendorName ?? \"\",\n          creditor: props.children[0].data.creditorNumber ?? \"\",\n          debitor: props.children[0].data.debitorNumber ?? \"\",\n          manufacturer: props.children[0].data.manufacturerNumber ?? \"\",\n          bu: props.children[0].data.businessUnit ?? \"\",\n          ph: {\n            label: props.children[0].data.PH1 || \"1\",\n            value: props.children[0].data.PH1 || \"1\",\n          },\n          projectManager: props.children[0].productionProjectManager || \"\",\n          budgetCurrency: {\n            label: props.children[0].data.budgetCurrency || \"\",\n            value: props.children[0].data.budgetCurrency || \"\",\n          },\n          budgetAmount: \"\",\n          localBudget: \"\",\n          eurBudget: \"\",\n          share: \"100\",\n          estimatedCostsCC: \"\",\n          estimatedIncomeCC: \"\",\n          estimatedCostsLC: \"\",\n          estimatedCostsEUR: \"\",\n          netProfitTargetVC: \"\",\n          netProfitTargetLC: \"\",\n          netProfitTargetEUR: \"\",\n        });\n      }\n\n      setTimeout(() => {\n        setInjectionReady(true);\n      }, 1000);\n    }\n  }, [props.submission, props.children, ExchangeRates]);\n\n  async function updateDraft() {\n    var projectId = \"624ac98682eeddf1a9b6a622\";\n\n    var parent: Submission = {\n      project: projectId,\n      title: campaignName,\n      parentId: null,\n      viewId: null,\n      group: null,\n      created: new Date(),\n      updated: new Date(),\n      status: \"New\",\n      author: requestorsName,\n      data: {\n        status: \"New\",\n        requestorsCompanyName: requestorsCompanyName.label,\n        companyCode: requestorsCompanyName.value.code,\n        requestorsCountry: requestorsCompanyName.value.country,\n        campaignName: campaignName,\n        projectName: campaignName,\n        campaignDescription: campaignDescription,\n        targetAudience: targetAudience,\n        campaignChannel: campaignChannel.label,\n        year: year.label,\n        organizingCompany: organizingCompany,\n        projectStartQuarter: projectStartQuarter.label,\n        projectNumber: projectNumber,\n        requestorsName: requestorsName,\n        projectApprover: projectApproval,\n        projectApproval: projectApproval,\n        manufacturersFiscalQuarter: fiscalQuarter.label,\n        campaignStartDate: startDate === null ? null : startDate.toString(),\n        campaignEndDate: endDate === null ? null : endDate.toString(),\n        budgetSource: budgetSource.label,\n        budgetApprovedByVendor: budgetApprovedByVendor,\n        campaignBudgetsCurrency: exchangeRates.label,\n        campaignCurrency: exchangeRates.label,\n        campaignEstimatedIncomeBudgetsCurrency: isNaN(\n          parseFloat(estimatedIncomeBudgetCurrency)\n        )\n          ? 0.0\n          : parseFloat(estimatedIncomeBudgetCurrency),\n        campaignEstimatedCostsBudgetsCurrency: parseFloat(\n          estimatedCostsBudgetCurrency\n        ),\n        campaignNetProfitTargetBudgetsCurrency: parseFloat(\n          netProfitTargetBudgetCurrency\n        ),\n        campaignEstimatedIncomeEur: isNaN(parseFloat(estimatedIncome))\n          ? 0.0\n          : parseFloat(estimatedIncome),\n        campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n        campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n        totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n        comments: comments,\n        additionalInformation: comments,\n        localCurrency: requestorsCompanyName.value.currency,\n\n        projectType: \"Local One Vendor\",\n      },\n    };\n    var children: Submission[] = [];\n    children.push({\n      project: projectId,\n      title: \"\",\n      parentId: \"\",\n      viewId: null,\n      group: \"vendor\",\n      created: new Date(),\n      updated: new Date(),\n      status: \"New\",\n      author: requestorsName,\n      data: {\n        status: \"New\",\n        vendorName: vendorName.label,\n        projectNumber: projectNumber,\n        productionProjectManager: vendor.projectManager,\n        creditorNumber: vendor.creditor,\n        debitorNumber: vendor.debitor,\n        manufacturerNumber: vendor.manufacturer,\n        businessUnit: vendor.bu,\n        PH1: vendor.ph.label,\n        vendorBudgetCurrency:\n          budgetSource.value === \"noBudget\" ? \"N/A\" : exchangeRates.label,\n        vendorAmount:\n          isNaN(parseFloat(estimatedIncomeBudgetCurrency)) ||\n          budgetSource.value === \"noBudget\"\n            ? 0.0\n            : parseFloat(estimatedIncomeBudgetCurrency),\n        // cbbudgetEur: parseFloat(vendor.eurBudget),\n        vendorShare: 100,\n        estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n        estimatedIncomeCC:\n          budgetSource.value === \"noBudget\"\n            ? 0.0\n            : parseFloat(estimatedIncomeBudgetCurrency),\n        estimatedResultCC:\n          parseFloat(netProfitTargetBudgetCurrency) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n        estimatedIncomeEUR:\n          budgetSource.value === \"noBudget\" ? 0.0 : parseFloat(estimatedIncome),\n        estimatedCostsEUR: parseFloat(estimatedCosts),\n        estimatedResultEUR:\n          parseFloat(netProfitTarget) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        estimatedResultBC:\n          parseFloat(netProfitTargetBudgetCurrency) *\n          (budgetSource.value === \"noBudget\" ? -1 : 1),\n        projectType: \"Local One Vendor\",\n        // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n      },\n    });\n\n    var submission: SubmissionWithChildren = {\n      submission: parent,\n      children,\n      local: null,\n    };\n    if (props.isDraft) {\n      submission.submission.id = props.submission.id;\n      return RestAPI.updateDraft(submission);\n    } else {\n      return RestAPI.createDraft(submission);\n    }\n  }\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n      \"633e93ed5a7691ac30c977fc\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n    BUs = responses[10].data;\n  }\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setTotalEstimatedCostsLC(\n      (parseFloat(estimatedCosts) * localExchangeRate).toFixed(2)\n    );\n  }, [estimatedCosts, localExchangeRate]);\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    var data: any = [];\n    companiesParticipating.forEach((company: any) => {\n      data.push({\n        companyName: company.label,\n        companyCode: company.value.code,\n        country: company.value.country,\n        contactEmail: \"\",\n        projectNumber: \"\",\n        contribution: \"\",\n        estimatedCosts: \"\",\n        share: \"\",\n      });\n    });\n    setCostBreakdown(data);\n  }, [companiesParticipating]);\n\n  useEffect(() => {\n    var temp = [...costBreakdown];\n    temp.forEach((row: any) => {\n      if (budgetSource.value === \"noBudget\") {\n        row.contribution = \"0.00\";\n      } else {\n        row.contribution = (\n          parseFloat(row.share) *\n          0.01 *\n          parseFloat(estimatedIncomeBudgetCurrency)\n        ).toFixed(2);\n      }\n\n      row.estimatedCosts = (\n        parseFloat(row.share) *\n        0.01 *\n        parseFloat(estimatedCostsBudgetCurrency)\n      ).toFixed(2);\n    });\n    if (!isEqual(costBreakdown, temp)) {\n      setCostBreakdown(temp);\n    }\n  }, [\n    costBreakdown,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    if (vendorName.value) {\n      setVendor({\n        vendor: vendorName.label,\n        projectManager: vendorName.value.alsoMarketingConsultant,\n        creditor: vendorName.value.kreditor,\n        debitor: vendorName.value.debitorischer,\n        manufacturer: vendorName.value.hersteller,\n        bu: vendor.bu,\n        ph: { label: \"\", value: \"\" },\n        budgetCurrency: { label: \"\", value: \"\" },\n        budgetAmount: \"\",\n        localBudget: \"\",\n        eurBudget: \"\",\n        share: \"\",\n        estimatedCostsCC: \"\",\n        estimatedIncomeCC: \"\",\n        estimatedCostsLC: \"\",\n        estimatedCostsEUR: \"\",\n        netProfitTargetVC: \"\",\n        netProfitTargetLC: \"\",\n        netProfitTargetEUR: \"\",\n      });\n    }\n  }, [vendorName]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n    setEstimatedCosts(\n      (\n        parseFloat(estimatedCostsBudgetCurrency) /\n        parseFloat(exchangeRates.value)\n      )\n        .toFixed(2)\n        .toString()\n    );\n    if (budgetSource.value !== \"noBudget\") {\n      setEstimatedIncome(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) /\n          parseFloat(exchangeRates.value)\n        )\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTarget(\n        (parseFloat(estimatedIncome) - parseFloat(estimatedCosts))\n          .toFixed(2)\n          .toString()\n      );\n      setNetProfitTargetBudgetCurrency(\n        (\n          parseFloat(estimatedIncomeBudgetCurrency) -\n          parseFloat(estimatedCostsBudgetCurrency)\n        )\n          .toFixed(2)\n          .toString()\n      );\n    } else {\n      setNetProfitTarget(estimatedCosts);\n      setNetProfitTargetBudgetCurrency(estimatedCostsBudgetCurrency);\n    }\n  }, [\n    budgetSource,\n    estimatedIncome,\n    estimatedCosts,\n    exchangeRates,\n    estimatedIncomeBudgetCurrency,\n    estimatedCostsBudgetCurrency,\n  ]);\n\n  useEffect(() => {\n    if (props.submission && !injectionReady) {\n      return;\n    }\n\n    setProjectNumber(\n      (requestorsCompanyName.value.code === \"\"\n        ? \"????\"\n        : requestorsCompanyName.value.code) +\n        (organizingCompany === \"\" ? \"??\" : organizingCompany) +\n        (year.value === \"\" ? \"??\" : year.value) +\n        (campaignChannel.value === \"\" ? \"?\" : campaignChannel.value) +\n        (projectStartQuarter.value === \"\"\n          ? \"?\"\n          : projectStartQuarter.value.slice(1)) +\n        \"01\"\n    );\n  }, [\n    year,\n    organizingCompany,\n    campaignChannel,\n    projectStartQuarter,\n    requestorsCompanyName,\n  ]);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Text as=\"b\">Requestor`s Details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n              setOrganizingCompany(value.value.country);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertDescription>\n            Please note no actual project for 1550 will be created in the tool\n            just yet, this still needs to be done via the usual process. But a\n            project for Switzerland will be created if they are part of the\n            campaign, as they are using the tool. Other countries and 1550 will\n            follow.\n          </AlertDescription>\n        </Alert>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Organizing Company</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: organizingCompany,\n              value: organizingCompany,\n            }}\n            onChange={(selected: any) => {\n              setOrganizingCompany(selected.value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"organizingCompany\"\n            options={Companies.map((company) => {\n              return {\n                label: company.value.country,\n                value: company.value.country,\n              };\n            })}\n          />\n        </Box>\n        <Text as=\"b\">Campaign`s Details</Text>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            Campaign Name (40 characters limit. Naming Convention: 'Vendor Name\n            1' 'Vendor Name 2'... 'Campaign Name')\n          </Text>\n          <Input\n            maxLength={40}\n            value={campaignName}\n            onChange={(event) => {\n              setCampaignName(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Description</Text>\n          <Textarea\n            value={campaignDescription}\n            onChange={(event) => {\n              setCampaignDescription(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Channel</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setCampaignChannel(value);\n            }}\n            value={campaignChannel}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignChannel\"\n            options={CampaignChannel}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Year</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{ label: year.label, value: year.value }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setYear(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"year\"\n            options={Year}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign/Project Start Quarter (ALSO Quarter)</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: projectStartQuarter.label,\n              value: projectStartQuarter.value,\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setProjectStartQuarter(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"projectStartQuarter\"\n            options={ProjectStartQuarter}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Name</Text>\n          <Input\n            value={requestorsName}\n            onChange={(event) => setRequestorsName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign Start Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={startDate}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Campaign End Date</Text>\n            <DatePicker\n              customInput={\n                <Input\n                  bg={useColorModeValue(\"white\", \"#2C313C\")}\n                  color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n                />\n              }\n              selected={endDate}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n              dateFormat=\"dd.MM.yyyy\"\n            />\n          </Box>\n        </HStack>\n        <Text as=\"b\">Financial details</Text>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Budget Source</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={budgetSource}\n            onChange={(value) => {\n              setBudgetSource(value);\n              if (value.value === \"noBudget\") {\n                setEstimatedIncomeBudgetCurrency(\"\");\n                setEstimatedIncome(\"\");\n              }\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"fiscalQuarter\"\n            options={Budget}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Local Currency</Text>\n          <Input\n            defaultValue={requestorsCompanyName.value.currency}\n            disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Currency</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={exchangeRates}\n            onChange={(value) => {\n              setExchangeRates(value);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"campaignCurrency\"\n            options={ExchangeRates}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in Campaign Currency</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncomeBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedIncomeBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in Campaign Currency</Text>\n          <Input\n            value={estimatedCostsBudgetCurrency}\n            onChange={(event) => {\n              setEstimatedCostsBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\"}\n          </Text>\n          <Input\n            value={netProfitTargetBudgetCurrency}\n            onChange={(event) => {\n              setNetProfitTargetBudgetCurrency(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Income in EUR</Text>\n          <Input\n            disabled={budgetSource.value === \"noBudget\"}\n            value={estimatedIncome}\n            onChange={(event) => {\n              setEstimatedIncome(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Campaign Estimated Costs in EUR</Text>\n          <Input\n            value={estimatedCosts}\n            onChange={(event) => {\n              setEstimatedCosts(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">\n            {budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\"}\n          </Text>\n          <Input\n            // value={netProfitTarget}\n            value={netProfitTarget}\n            onChange={(event) => {\n              setNetProfitTarget(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Total Estimated Costs in Local Currency</Text>\n          <Input\n            value={totalEstimatedCostsLC}\n            onChange={(event) => {\n              setTotalEstimatedCostsLC(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendor Name</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorName}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsName\"\n            options={VendorsNames}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">VOD</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.debitor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.debitor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Creditor</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.creditor}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.creditor = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Manufacturer</Text>\n          <Input\n            bgColor={\"white\"}\n            value={vendor.manufacturer}\n            onChange={(event) => {\n              var temp = { ...vendor };\n              temp.manufacturer = event.target.value;\n              setVendor(temp);\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Business Unit</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: vendor.bu,\n              value:\n                typeof vendor.bu === \"string\" ? vendor.bu.substr(0, 3) : \"\",\n            }}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              var temp = { ...vendor };\n              temp.bu = value.label;\n              setVendor(temp);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"BUs\"\n            options={BUs}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">PH1</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            menuPortalTarget={document.body}\n            value={vendor.ph}\n            onChange={(value) => {\n              var temp = { ...vendor };\n              temp.ph = value;\n              setVendor(temp);\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"PH1\"\n            options={PH1}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"green.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"green.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          interface FD {\n            [key: string]: any;\n          }\n\n          var formattedData = [];\n          formattedData.push([\"Request\", \"Local One Vendor\"]);\n          formattedData.push([\n            \"Requestor`s Company Name\",\n            requestorsCompanyName.label,\n          ]);\n          formattedData.push([\n            \"Requestor`s Company Code\",\n            requestorsCompanyName.value.code,\n          ]);\n          formattedData.push([\n            \"Requestor`s Country\",\n            requestorsCompanyName.value.country,\n          ]);\n          formattedData.push([\"Organizing Company\", organizingCompany]);\n          formattedData.push([\"Campaign Name\", campaignName]);\n          formattedData.push([\"Campaign Description\", campaignDescription]);\n          formattedData.push([\"Campaign Channel\", campaignChannel.label]);\n          formattedData.push([\"Year\", year.label]);\n          formattedData.push([\n            \"Campaign/Project Start Quarter (ALSO Quarter)\",\n            projectStartQuarter.label,\n          ]);\n          formattedData.push([\"Project Number\", projectNumber]);\n          formattedData.push([\"Requestor`s Name\", requestorsName]);\n          formattedData.push([\n            \"Campaign Start Date\",\n            moment(startDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\n            \"Campaign End Date\",\n            moment(endDate).format(\"DD.MM.yyyy\"),\n          ]);\n          formattedData.push([\"Budget Source\", budgetSource.label]);\n          formattedData.push([\n            \"Local Currency\",\n            requestorsCompanyName.value.currency,\n          ]);\n          formattedData.push([\"Campaign Currency\", exchangeRates.label]);\n          formattedData.push([\n            \"Campaign Estimated Income in Campaign Currency\",\n            budgetSource.value === \"noBudget\"\n              ? \"N/A\"\n              : estimatedIncomeBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in Campaign Currency\",\n            estimatedCostsBudgetCurrency,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in Campaign currency\"\n              : \"Campaign Net Profit Target in Campaign Currency\",\n            netProfitTargetBudgetCurrency,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Income in EUR\",\n            estimatedIncome === \"\" ? \"N/A\" : estimatedIncome,\n          ]);\n          formattedData.push([\n            \"Campaign Estimated Costs in EUR\",\n            estimatedCosts,\n          ]);\n          formattedData.push([\n            budgetSource.value === \"noBudget\"\n              ? \"Campaign Loss in EUR\"\n              : \"Campaign Net Profit Target in EUR\",\n            netProfitTarget,\n          ]);\n          formattedData.push([\n            \"Total Estimated Costs in Local Currency\",\n            totalEstimatedCostsLC,\n          ]);\n          formattedData.push([\"Vendor Name\", vendorName.label]);\n          formattedData.push([\"VOD\", vendor.debitor]);\n          formattedData.push([\"Creditor\", vendor.creditor]);\n          formattedData.push([\"Manufacturer\", vendor.manufacturer]);\n          formattedData.push([\"Business Unit\", vendor.bu]);\n          formattedData.push([\"PH1\", vendor.ph.label]);\n          formattedData.push([\"Comments\", comments]);\n\n          var ws = XLSX.utils.aoa_to_sheet(formattedData);\n          const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n          const excelBuffer = XLSX.write(wb, {\n            bookType: \"xlsx\",\n            type: \"array\",\n          });\n          const data = new Blob([excelBuffer], {\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n          });\n          FileSaver.saveAs(data, campaignName + \".xlsx\");\n        }}\n      >\n        Export\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          var projectId = \"624ac98682eeddf1a9b6a622\";\n\n          var parent: Submission = {\n            project: projectId,\n            title: campaignName,\n            parentId: null,\n            viewId: null,\n            group: null,\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              status: \"New\",\n              requestorsCompanyName: requestorsCompanyName.label,\n              companyCode: requestorsCompanyName.value.code,\n              requestorsCountry: requestorsCompanyName.value.country,\n              campaignName: campaignName,\n              projectName: campaignName,\n              campaignDescription: campaignDescription,\n              targetAudience: targetAudience,\n              campaignChannel: campaignChannel.label,\n              year: year.label,\n              organizingCompany: organizingCompany,\n              projectStartQuarter: projectStartQuarter.label,\n              projectNumber: projectNumber,\n              requestorsName: requestorsName,\n              projectApprover: projectApproval,\n\n              projectApproval: projectApproval,\n              manufacturersFiscalQuarter: fiscalQuarter.label,\n              campaignStartDate:\n                startDate === null ? null : startDate.toString(),\n              campaignEndDate: endDate === null ? null : endDate.toString(),\n              budgetSource: budgetSource.label,\n              budgetApprovedByVendor: budgetApprovedByVendor,\n              campaignBudgetsCurrency: exchangeRates.label,\n              campaignCurrency: exchangeRates.label,\n              campaignEstimatedIncomeBudgetsCurrency:\n                parseFloat(estimatedIncomeBudgetCurrency) === null\n                  ? 0.0\n                  : parseFloat(estimatedIncomeBudgetCurrency),\n              campaignEstimatedCostsBudgetsCurrency: parseFloat(\n                estimatedCostsBudgetCurrency\n              ),\n              campaignNetProfitTargetBudgetsCurrency: parseFloat(\n                netProfitTargetBudgetCurrency\n              ),\n              campaignEstimatedIncomeEur:\n                parseFloat(estimatedIncome) === null\n                  ? 0.0\n                  : parseFloat(estimatedIncome),\n              campaignEstimatedCostsEur: parseFloat(estimatedCosts),\n              campaignNetProfitTargetEur: parseFloat(netProfitTarget),\n              totalEstimatedCostsLC: parseFloat(totalEstimatedCostsLC),\n              comments: comments,\n              additionalInformation: comments,\n              localCurrency: requestorsCompanyName.value.currency,\n              projectType: \"Local One Vendor\",\n            },\n          };\n          var children: Submission[] = [];\n\n          children.push({\n            project: projectId,\n            title: \"\",\n            parentId: \"\",\n            viewId: null,\n            group: \"vendor\",\n            created: new Date(),\n            updated: new Date(),\n            status: \"New\",\n            author: requestorsName,\n            data: {\n              status: \"New\",\n              vendorName: vendorName.label,\n              companyCode: requestorsCompanyName.value.code,\n              projectNumber: projectNumber,\n              productionProjectManager: vendor.projectManager,\n              creditorNumber: vendor.creditor,\n              debitorNumber: vendor.debitor,\n              manufacturerNumber: vendor.manufacturer,\n              businessUnit: vendor.bu,\n              PH1: vendor.ph.label,\n              vendorBudgetCurrency:\n                budgetSource.value === \"noBudget\" ? \"N/A\" : exchangeRates.label,\n              vendorAmount:\n                isNaN(parseFloat(estimatedIncomeBudgetCurrency)) ||\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncomeBudgetCurrency),\n              // cbbudgetEur: parseFloat(vendor.eurBudget),\n              vendorShare: 100,\n              estimatedCostsCC: parseFloat(estimatedCostsBudgetCurrency),\n              estimatedIncomeCC:\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncomeBudgetCurrency),\n              estimatedResultCC:\n                parseFloat(netProfitTargetBudgetCurrency) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              // cbestimatedCostsLC: parseFloat(vendor.estimatedCostsLC),\n              estimatedIncomeEUR:\n                budgetSource.value === \"noBudget\"\n                  ? 0.0\n                  : parseFloat(estimatedIncome),\n              estimatedCostsEUR: parseFloat(estimatedCosts),\n              estimatedResultEUR:\n                parseFloat(netProfitTarget) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              estimatedResultBC:\n                parseFloat(netProfitTargetBudgetCurrency) *\n                (budgetSource.value === \"noBudget\" ? -1 : 1),\n              // cbnetProfitTargetLC: parseFloat(vendor.netProfitTargetLC),\n            },\n          });\n\n          var submission: SubmissionWithChildren = {\n            submission: parent,\n            children,\n            local: null,\n          };\n          if (props.isDraft) {\n            RestAPI.deleteDraft(props.submission.id).then(() => {\n              RestAPI.createSubmissionWithChildren(submission).then(\n                (response) => {\n                  if (response.data.hasChanged) {\n                    toast(\n                      <Toast\n                        title={\"Project Number has been adjusted\"}\n                        message={\n                          <p>\n                            Project Number changed to:{\" \"}\n                            <b>{response.data.submission.data.projectNumber}</b>\n                          </p>\n                        }\n                        type={\"info\"}\n                      />\n                    );\n                  }\n                  props.history.push(\"/submissions\");\n                }\n              );\n            });\n          } else {\n            RestAPI.createSubmissionWithChildren(submission).then(\n              (response) => {\n                if (response.data.hasChanged) {\n                  toast(\n                    <Toast\n                      title={\"Project Number has been adjusted\"}\n                      message={\n                        <p>\n                          Project Number changed to:{\" \"}\n                          <b>{response.data.submission.data.projectNumber}</b>\n                        </p>\n                      }\n                      type={\"info\"}\n                    />\n                  );\n                }\n                props.history.push(\"/submissions\");\n              }\n            );\n          }\n        }}\n        isDisabled={\n          requestorsCompanyName.value.code !== \"6110\" ||\n          (props.submission && !props.isDraft)\n        }\n      >\n        Submit\n      </Button>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        mr=\"15px\"\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        onClick={() => {\n          updateDraft().then(() => {\n            toast(\n              <Toast\n                title={\"Draft save\"}\n                message={`Draft has been successfully saved.`}\n                type={\"info\"}\n              />\n            );\n          });\n        }}\n      >\n        {props.isDraft ? \"Update\" : \"Draft\"}\n      </Button>\n    </Box>\n  );\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport React, { useReducer } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {\n  useColorModeValue,\n  Input,\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Textarea,\n  Button,\n  AlertTitle,\n  AlertDescription,\n  AlertIcon,\n  Alert,\n} from \"@chakra-ui/react\";\nimport Project from \"../../types/project\";\nimport Select from \"react-select\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\nimport isEqual from \"lodash/isEqual\";\nimport DatePicker from \"react-datepicker\";\nimport { Table, Uploader } from \"rsuite\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\nimport { isDisabled } from \"@chakra-ui/utils\";\n\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\n\nconst { Column, HeaderCell, Cell } = Table;\n\ninterface Props {\n  history: any;\n  project: Project;\n}\n\nexport default function Elov(props: Props) {\n  const [requestorsCompanyName, setRequestorsCompanyName] = useState<any>({\n    label: \"\",\n    value: { name: \"\", code: \"\", country: \"\" },\n  });\n  const [localExchangeRate, setLocalExchangeRate] = useState(0.0);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [campaignDescription, setCampaignDescription] = useState(\"\");\n  const [targetAudience, setTargetAudience] = useState(\"\");\n  const [campaignChannel, setCampaignChannel] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [vendorsNames, setVendorsNames] = useState<any>([]);\n  const [year, setYear] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectStartQuarter, setProjectStartQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [projectNumber, setProjectNumber] = useState(\"\");\n  const [requestorsName, setRequestorsName] = useState(\"\");\n  const [projectApproval, setProjectApproval] = useState(\"\");\n  const [fiscalQuarter, setFiscalQuarter] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [startDate, setStartDate] = useState<any>(null);\n  const [endDate, setEndDate] = useState<any>(null);\n  const [budgetSource, setBudgetSource] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [budgetApprovedByVendor, setBudgetApprovedByVendor] = useState(\"\");\n  const [exchangeRates, setExchangeRates] = useState<any>({\n    label: \"\",\n    value: \"\",\n  });\n  const [estimatedIncomeBudgetCurrency, setEstimatedIncomeBudgetCurrency] =\n    useState(\"\");\n  const [projectName, setProjectName] = useState(\"\");\n  const [serviceProvider, setServiceProvider] = useState(\"\");\n  const [estimatedCostsBudgetCurrency, setEstimatedCostsBudgetCurrency] =\n    useState(\"\");\n  const [netProfitTargetBudgetCurrency, setNetProfitTargetBudgetCurrency] =\n    useState(\"\");\n  const [estimatedIncome, setEstimatedIncome] = useState(\"\");\n  const [estimatedCosts, setEstimatedCosts] = useState(\"\");\n  const [netProfitTarget, setNetProfitTarget] = useState(\"\");\n  const [companiesParticipating, setCompaniesParticipating] = useState<any>([]);\n  const [comments, setComments] = useState(\"\");\n  const [vendor, setVendor] = useState<any>({});\n  const [costBreakdown, setCostBreakdown] = useState<any>([]);\n\n  const [totalVendorBudgetInLC, setTotalVendorBudgetInLC] = useState(0);\n  const [totalVendorBudgetInEUR, setTotalVendorBudgetInEUR] = useState(0);\n\n  const [totalEstimatedCostsLC, setTotalEstimatedCostsLC] = useState(\"\");\n  const [services, setServices] = useState<any>([]);\n\n  const [render, rerender] = useState(0);\n\n  async function fetchDropdowns() {\n    var dropdownsIds: string[] = [\n      \"619b630a9a5a2bb37a93b23b\",\n      \"619b61419a5a2bb37a93b237\",\n      \"619b63429a5a2bb37a93b23d\",\n      \"619b62d79a5a2bb37a93b239\",\n      \"619b632c9a5a2bb37a93b23c\",\n      \"619b62959a5a2bb37a93b238\",\n      \"619b62f29a5a2bb37a93b23a\",\n      \"619b66defe27d06ad17d75ac\",\n      \"619b6754fe27d06ad17d75ad\",\n      \"619b6799fe27d06ad17d75ae\",\n    ];\n    var responses = await Promise.all(\n      dropdownsIds.map((di) => {\n        return RestAPI.getDropdownValues(di);\n      })\n    );\n    PH1 = responses[0].data;\n    Companies = responses[1].data;\n    VendorsNames = responses[2].data;\n    CampaignChannel = responses[3].data;\n    TargetAudience = responses[4].data;\n    Budget = responses[5].data;\n    ExchangeRates = responses[6].data;\n    FiscalQuarter = responses[7].data;\n    Year = responses[8].data;\n    ProjectStartQuarter = responses[9].data;\n  }\n\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setRequestorsName(response.displayName);\n      }\n    });\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  return (\n    <Box>\n      <VStack spacing=\"20px\" mb={\"40px\"} align=\"start\">\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Requestor`s Company Name</Text>\n          <Select\n            menuPortalTarget={document.body}\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={{\n              label: requestorsCompanyName.label,\n              value: requestorsCompanyName.value,\n            }}\n            onChange={(value: any) => {\n              var ler = 0.0;\n              ExchangeRates.forEach((rate) => {\n                if (rate.label === value.value.currency) {\n                  ler = parseFloat(rate.value);\n                }\n              });\n              setLocalExchangeRate(ler);\n              setRequestorsCompanyName(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"requestorsCompanyName\"\n            options={Companies}\n          />\n        </Box>\n        <HStack w=\"100%\">\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Company Code</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.code}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Requestor`s Country</Text>\n            <Input\n              defaultValue={requestorsCompanyName.value.country}\n              disabled\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n        </HStack>\n        <Alert\n          status=\"error\"\n          display={\n            requestorsCompanyName.value.code !== \"6110\" &&\n            requestorsCompanyName.value.code !== \"\"\n              ? \"flex\"\n              : \"none\"\n          }\n        >\n          <AlertIcon />\n          <AlertTitle>Please change Requestor`s Company Name!</AlertTitle>\n          <AlertDescription>\n            Currently, only companies with '6110' code are allowed ('ALSO\n            Schweiz AG')\n          </AlertDescription>\n        </Alert>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Number</Text>\n          <Input\n            placeholder=\"____________\"\n            value={projectNumber}\n            onChange={(event) => {\n              if (event.target.value.length < 13) {\n                setProjectNumber(event.target.value);\n              }\n            }}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Project Name</Text>\n          <Input\n            value={projectName}\n            onChange={(event) => setProjectName(event.target.value)}\n            // disabled\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Vendors</Text>\n          <Select\n            styles={{\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"#718196\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                minHeight: 40,\n                border: \"1px solid #E2E8F0\",\n                transition: \"0.3s\",\n                \"&:hover\": {\n                  border: \"1px solid #CBD5E0\",\n                },\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 6,\n              colors: {\n                ...theme.colors,\n                primary: \"#3082CE\",\n              },\n            })}\n            value={vendorsNames}\n            placeholder=\"\"\n            onChange={(value: any) => {\n              setVendorsNames(value);\n            }}\n            classNamePrefix=\"select\"\n            isClearable={false}\n            name=\"vendorsNames\"\n            isMulti\n            options={VendorsNames}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Service Provider</Text>\n          <Input\n            value={serviceProvider}\n            onChange={(event) => setServiceProvider(event.target.value)}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Services</Text>\n          <Table\n            shouldUpdateScroll={false}\n            hover={false}\n            autoHeight\n            rowHeight={65}\n            data={services}\n          >\n            <Column width={200} resizable>\n              <HeaderCell>Service Type</HeaderCell>\n              <Cell dataKey=\"serviceType\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.serviceType}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].serviceType = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (LC Currency)</HeaderCell>\n              <Cell dataKey=\"netValueLC\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValueLC}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValueLC = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Local Currency</HeaderCell>\n              <Cell dataKey=\"localCurrency\">\n                {(rowData, index) => (\n                  <Select\n                    menuPortalTarget={document.body}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    value={{\n                      label: rowData.localCurrency,\n                      value: rowData.localCurrency,\n                    }}\n                    onChange={(value) => {\n                      var temp = [...services];\n                      temp[index!].localCurrency =\n                        value === null ? \"\" : value.label;\n                      setServices(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"localCurrency\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (Purchase Order Currency)</HeaderCell>\n              <Cell dataKey=\"netValuePO\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValuePO}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValuePO = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Purchase Order Currency Code</HeaderCell>\n              <Cell dataKey=\"poCurrencyCode\">\n                {(rowData, index) => (\n                  <Select\n                    menuPortalTarget={document.body}\n                    styles={{\n                      menu: (provided) => ({\n                        ...provided,\n                        zIndex: 1000000,\n                      }),\n                      singleValue: (provided) => ({\n                        ...provided,\n                        color: \"#718196\",\n                      }),\n                      control: (base, state) => ({\n                        ...base,\n                        minHeight: 40,\n                        border: \"1px solid #E2E8F0\",\n                        transition: \"0.3s\",\n                        \"&:hover\": {\n                          border: \"1px solid #CBD5E0\",\n                        },\n                      }),\n                    }}\n                    theme={(theme) => ({\n                      ...theme,\n                      borderRadius: 6,\n                      colors: {\n                        ...theme.colors,\n                        primary: \"#3082CE\",\n                      },\n                    })}\n                    value={{\n                      label: rowData.poCurrencyCode,\n                      value: rowData.poCurrencyCode,\n                    }}\n                    onChange={(value) => {\n                      var temp = [...services];\n                      temp[index!].poCurrencyCode =\n                        value === null ? \"\" : value.label;\n                      setServices(temp);\n                    }}\n                    placeholder=\"\"\n                    classNamePrefix=\"select\"\n                    isClearable={false}\n                    name=\"poCurrencyCode\"\n                    options={ExchangeRates}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Net Value (EUR)</HeaderCell>\n              <Cell dataKey=\"netValueEUR\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.netValueEUR}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].netValueEUR = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>External Purchase Order Number</HeaderCell>\n              <Cell dataKey=\"externalPurchaseOrderNumber\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.externalPurchaseOrderNumber}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].externalPurchaseOrderNumber =\n                        event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Purchase Order Date</HeaderCell>\n              <Cell dataKey=\"purchaseOrderDate\">\n                {(rowData, index) => (\n                  <DatePicker\n                    portalId=\"root-portal\"\n                    isClearable={false}\n                    selected={rowData.purchaseOrderDate}\n                    customInput={<Input value={rowData.purchaseOrderDate} />}\n                    onChange={(date) => {\n                      var temp = [...services];\n                      temp[index!].purchaseOrderDate = date;\n                      setServices(temp);\n                    }}\n                    dateFormat=\"dd.MM.yyyy\"\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Name of Person Ordering the Service (ALSO)\n              </HeaderCell>\n              <Cell dataKey=\"orderingPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.orderingPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].orderingPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Name of Person Approving the Purchase Order (ALSO)\n              </HeaderCell>\n              <Cell dataKey=\"approvingPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.approvingPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].approvingPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>Contact Person from Service Provider Side</HeaderCell>\n              <Cell dataKey=\"contactPerson\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactPerson}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].contactPerson = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n            <Column width={200} resizable>\n              <HeaderCell>\n                Contact Details of Person from Service Provider Side (e-mail,\n                phone)\n              </HeaderCell>\n              <Cell dataKey=\"contactDetails\">\n                {(rowData, index) => (\n                  <Input\n                    value={rowData.contactDetails}\n                    onChange={(event) => {\n                      var temp = [...services];\n                      temp[index!].contactDetails = event.target.value;\n                      setServices(temp);\n                    }}\n                  />\n                )}\n              </Cell>\n            </Column>\n          </Table>\n          <Button\n            float=\"right\"\n            marginTop=\"20px\"\n            onClick={() => {\n              var temp = [...services];\n              temp.push({});\n              setServices(temp);\n            }}\n          >\n            add\n          </Button>\n        </Box>\n\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Comments</Text>\n          <Textarea\n            value={comments}\n            onChange={(event) => {\n              setComments(event.target.value);\n            }}\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            size=\"md\"\n            resize={\"vertical\"}\n            rows={5}\n          />\n        </Box>\n      </VStack>\n      <Button\n        float=\"right\"\n        mb={\"80px\"}\n        color={\"white\"}\n        bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n        _hover={{\n          bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n        }}\n        // onClick={() => {\n        //   var projectId = \"62610ab73a88d397b05cea12\";\n\n        //   var parent: Submission = {\n        //     project: projectId,\n        //     title: campaignName,\n        //     parentId: null,\n        //     group: null,\n        //     created: new Date(),\n        //     updated: new Date(),\n        //     status: \"New\",\n        //     author: requestorsName,\n        //     data: {\n        //       purchaseOrderServiceProvider: serviceProvider,\n        //       requestorsCompanyName: requestorsCompanyName.label,\n        //       companyCode: requestorsCompanyName.value.code,\n        //       requestorsCountry: requestorsCompanyName.value.country,\n        //       campaignName: campaignName,\n        //       projectNumber: projectNumber,\n        //       projectName: projectName,\n        //       comments: comments,\n        //       projectType: \"Purchase Order Request\",\n        //     },\n        //   };\n        //   var children: Submission[] = [];\n\n        //   services.forEach((service: any) => {\n        //     children.push({\n        //       project: projectId,\n        //       title: \"\",\n        //       parentId: \"\",\n        //       group: \"vendor\",\n        //       created: new Date(),\n        //       updated: new Date(),\n        //       status: \"New\",\n        //       author: requestorsName,\n        //       data: {\n        //         netValueOfServiceOrderedLC: service.netValueLC,\n        //         localCurrency: service.localCurrency,\n        //         netValuePOC: service.netValuePO,\n        //         purchaseOrderCurrency: service.poCurrencyCode,\n        //         netValueEur: service.netValueEUR,\n        //       },\n        //     });\n        //   });\n\n        //   var submission: SubmissionWithChildren = {\n        //     submission: parent,\n        //     children,\n        //   };\n        //   RestAPI.createSubmissionWithChildren(submission).then((response) => {\n        //     props.history.push(\"/submissions\");\n        //   });\n        // }}\n        onClick={async () => {\n          RestAPI.getSubmissions().then((response) => {\n            var subs = response.data;\n            var targetId = \"\";\n            for (let sub of subs) {\n              if (\n                sub.parentId === null &&\n                sub.data.projectNumber === projectNumber\n              ) {\n                targetId = sub.id || \"\";\n                break;\n              }\n            }\n            if (targetId.length > 0) {\n              RestAPI.updateSubmissionPartial(\n                targetId,\n                \"data.purchaseOrderServiceProvider\",\n                serviceProvider\n              );\n              RestAPI.updateSubmissionPartial(\n                targetId,\n                \"data.vendorNamePO\",\n                vendorsNames.map((v: any) => v.label).join(\", \")\n              );\n              services.forEach(async (service: any) => {\n                await RestAPI.createSubmission({\n                  project: \"62610ab73a88d397b05cea12\",\n                  title: \"\",\n                  parentId: targetId,\n                  viewId: null,\n                  group: \"vendor\",\n                  created: new Date(),\n                  updated: new Date(),\n                  status: \"New\",\n                  author: requestorsName,\n                  data: {\n                    netValueOfServiceOrderedLC: service.netValueLC,\n                    localCurrency: service.localCurrency,\n                    netValuePOC: service.netValuePO,\n                    purchaseOrderCurrency: service.poCurrencyCode,\n                    netValueEur: service.netValueEUR,\n                  },\n                });\n              });\n              setTimeout(() => {\n                props.history.push(\"/submissions\");\n              }, 2000);\n            }\n          });\n        }}\n        isDisabled={requestorsCompanyName.value.code !== \"6110\"}\n      >\n        Submit\n      </Button>\n    </Box>\n  );\n}\n","import { Form } from \"@formio/react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Text,\n  Box,\n  HStack,\n  Stack,\n  StackDivider,\n  VStack,\n  CloseButton,\n  useColorModeValue,\n  Tag,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { Submission } from \"../../types/submission\";\nimport { RestAPI } from \"../../api/rest\";\n\nimport Cerov from \"../../components/projects/cerov\";\nimport Ermv from \"../../components/projects/ermv\";\nimport Elmv from \"../../components/projects/elmv\";\nimport Elov from \"../../components/projects/elov\";\nimport Por from \"../../components/projects/por\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPredefinedProject] = useState<any>(null);\n  const [form, setForm] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n  useEffect(() => {\n    if (props.match.params.id) {\n      RestAPI.getProject(props.match.params.id).then((response) => {\n        setProject(response.data);\n        setForm({ display: \"form\", components: response.data.components });\n        if (props.match.params.id === \"619515b754e61c8dd33daa52\") {\n          setPredefinedProject(\n            <Ermv project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"6246ec8efa2a446faadb8d9b\") {\n          setPredefinedProject(\n            <Elmv project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"624ac98682eeddf1a9b6a622\") {\n          setPredefinedProject(\n            <Elov project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"62610ab73a88d397b05cea12\") {\n          setPredefinedProject(\n            <Por project={project} history={props.history} />\n          );\n        }\n        if (props.match.params.id === \"629dfb3f55d209262194a3e6\") {\n          setPredefinedProject(\n            <Cerov project={project} history={props.history} />\n          );\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.push(\"/projects\");\n            }}\n            float=\"right\"\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.800\", \"#ABB2BF\")} w=\"100%\" mb={10}>\n        <VStack\n          mb={\"40px\"}\n          pr={{ base: 0, md: \"10px\" }}\n          divider={<StackDivider />}\n          spacing={4}\n          fontSize=\"md\"\n          align=\"stretch\"\n        >\n          <Box>\n            <Stack\n              direction={{ base: \"column\", md: \"row\" }}\n              w=\"100%\"\n              spacing={{ base: \"20px\", md: \"100px\" }}\n            >\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Title\n                </Text>\n                <Text float=\"right\">{project.title}</Text>\n              </Box>\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Tags\n                </Text>\n                <HStack spacing={3} float=\"right\">\n                  {project.tags.map((tag) => {\n                    return (\n                      <Tag\n                        key={tag}\n                        fontWeight={\"400\"}\n                        colorScheme=\"cyan\"\n                        cursor=\"pointer\"\n                      >\n                        {tag}\n                      </Tag>\n                    );\n                  })}\n                </HStack>\n              </Box>\n            </Stack>\n          </Box>\n          <Box>\n            <Text as=\"b\">Description</Text>\n            <Text mt={3}>{project.description}</Text>\n          </Box>\n        </VStack>\n      </Box>\n      {predefinedProject === null ? (\n        <Form\n          onSubmit={(formio: any) => {\n            delete formio.data[\"submit\"];\n            var submission: Submission = {\n              project: project.id ?? \"\",\n              parentId: null,\n              viewId: null,\n              group: null,\n              created: new Date(),\n              updated: new Date(),\n              title: \"\",\n              author: \"\",\n              status: project.defaultStatus,\n              data: formio.data,\n            };\n            RestAPI.createSubmission(submission).then((response) => {\n              props.history.push(`/submissions/view/${response.data.id}`);\n            });\n          }}\n          form={form}\n        />\n      ) : (\n        predefinedProject\n      )}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  useColorModeValue,\n  ModalCloseButton,\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  Text,\n  AccordionIcon,\n  VStack,\n  Heading,\n  HStack,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport CreateBookmark from \"../../components/CreateBookmark\";\nimport ProjectCard from \"../../components/ProjectCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Project from \"../../types/project\";\nimport moment from \"moment\";\nimport { Submission } from \"../../types/submission\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [drafts, setDrafts] = useState<Submission[]>([]);\n\n  useEffect(() => {\n    RestAPI.getProjects().then((response) => {\n      setProjects(response.data);\n    });\n    RestAPI.getDrafts().then((response) => {\n      setDrafts(\n        response.data.sort(\n          (a, b) =>\n            Number((b.data ?? {})._rejected ?? false) -\n            Number((a.data ?? {})._rejected ?? false)\n        )\n      );\n    });\n  }, []);\n\n  return (\n    <div>\n      <Accordion allowMultiple>\n        {projects.map((project) => {\n          var pd = drafts.filter((draft) => draft.project === project.id);\n          return (\n            <AccordionItem key={project.id}>\n              <h2>\n                <AccordionButton>\n                  <Box flex=\"1\" textAlign=\"left\">\n                    {project.title}\n                  </Box>\n                  <AccordionIcon />\n                </AccordionButton>\n              </h2>\n              <AccordionPanel pb={4}>\n                {pd.length > 0 ? (\n                  <VStack w=\"100%\" spacing={\"1.5em\"}>\n                    {pd.map((draft, index) => {\n                      return (\n                        <Box\n                          key={draft.id}\n                          bg={draft.data._rejected ? \"red.50\" : \"white\"}\n                          _dark={{ bg: \"#21252A\" }}\n                          w=\"100%\"\n                          p=\"15px\"\n                        >\n                          <Box w=\"100%\" h=\"60px\">\n                            <Heading size=\"lg\" float=\"left\">\n                              <HStack spacing={\"1.5em\"}>\n                                <Text>\n                                  {draft.data.requestorsCompanyName} (\n                                  {draft.data.campaignName}) #\n                                  {pd.length - index}\n                                </Text>\n                                <Tag\n                                  size={\"lg\"}\n                                  colorScheme={\"red\"}\n                                  display={\n                                    draft.data._rejected ? \"grid\" : \"none\"\n                                  }\n                                >\n                                  Rejected\n                                </Tag>\n                              </HStack>\n                            </Heading>\n                            <Button\n                              colorScheme={\"blue\"}\n                              float=\"right\"\n                              onClick={() => {\n                                window.open(\n                                  \"/drafts/view/\" + draft.id,\n                                  \"_self\"\n                                );\n                              }}\n                            >\n                              Edit\n                            </Button>\n                          </Box>\n                          <Box w=\"100%\">\n                            <VStack align={\"start\"} w=\"100%\">\n                              <p>\n                                Requestor`s Company Name:{\" \"}\n                                {draft.data.requestorsCompanyName}\n                              </p>\n                              <p>\n                                Organizing Company:{\" \"}\n                                {draft.data.organizingCompany}\n                              </p>\n                              <p>Campaign Name: {draft.data.campaignName}</p>\n                              <p>Project Number: {draft.data.projectNumber}</p>\n                              <p>Comments: {draft.data.comments}</p>\n                            </VStack>\n                            <VStack float=\"right\">\n                              <p>\n                                Saved:{\" \"}\n                                {moment(draft.created).format(\n                                  \"DD.MM.YYYY HH:mm\"\n                                )}\n                              </p>\n                              <p>Author: {draft.author}</p>\n                            </VStack>\n                          </Box>\n                        </Box>\n                      );\n                    })}\n                  </VStack>\n                ) : (\n                  \"No drafts saved\"\n                )}\n              </AccordionPanel>\n            </AccordionItem>\n          );\n        })}\n      </Accordion>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import {\n  Box,\n  HStack,\n  CloseButton,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  VStack,\n  StackDivider,\n  Stack,\n  Text,\n  Tag,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { RestAPI } from \"../../api/rest\";\n\nimport Ermv from \"../../components/projects/ermv\";\nimport Elmv from \"../../components/projects/elmv\";\nimport Elov from \"../../components/projects/elov\";\nimport Por from \"../../components/projects/por\";\nimport Cerov from \"../../components/projects/cerov\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n  isAdmin: boolean;\n  isDraft?: boolean;\n}\n\nexport function Viewer(props: Props) {\n  const [predefinedProject, setPredefinedProject] = useState<any>(null);\n  const [project, setProject] = useState<Project>({\n    title: \"\",\n    created: new Date(),\n    updated: new Date(),\n    author: \"\",\n    description: \"\",\n    statuses: [] as string[],\n    defaultStatus: \"\",\n    tags: [] as string[],\n    roles: [] as string[],\n    components: [] as any[],\n    type: \"formio\",\n    code: \"\",\n  });\n\n  function getProject(id: string) {\n    RestAPI.getProject(id).then((response) => {\n      setProject(response.data);\n    });\n  }\n\n  useEffect(() => {\n    if (props.match.params.id) {\n      if (props.isDraft) {\n        RestAPI.getDraft(props.match.params.id).then((response) => {\n          getProject(response.data.submission.project);\n          if (response.data.submission.project === \"629dfb3f55d209262194a3e6\") {\n            setPredefinedProject(\n              <Cerov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n                isDraft={true}\n              />\n            );\n          }\n          if (response.data.submission.project === \"624ac98682eeddf1a9b6a622\") {\n            setPredefinedProject(\n              <Elov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n                isDraft={true}\n              />\n            );\n          }\n          if (response.data.submission.project === \"6246ec8efa2a446faadb8d9b\") {\n            setPredefinedProject(\n              <Elmv\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n                isDraft={true}\n              />\n            );\n          }\n        });\n      } else {\n        RestAPI.getView(props.match.params.id).then((response) => {\n          getProject(response.data.submission.project);\n          if (response.data.submission.project === \"629dfb3f55d209262194a3e6\") {\n            setPredefinedProject(\n              <Cerov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n                isDraft={true}\n              />\n            );\n          }\n          if (response.data.submission.project === \"619515b754e61c8dd33daa52\") {\n            setPredefinedProject(\n              <Ermv\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n              />\n            );\n          }\n          if (response.data.submission.project === \"6246ec8efa2a446faadb8d9b\") {\n            setPredefinedProject(\n              <Elmv\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n              />\n            );\n          }\n          if (response.data.submission.project === \"624ac98682eeddf1a9b6a622\") {\n            setPredefinedProject(\n              <Elov\n                project={project}\n                submission={response.data.submission}\n                children={response.data.children}\n                history={props.history}\n              />\n            );\n          }\n          if (props.match.params.id === \"62610ab73a88d397b05cea12\") {\n            setPredefinedProject(\n              <Por project={project} history={props.history} />\n            );\n          }\n        });\n      }\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack display={{ base: \"none\", md: \"flex\" }} mb={10} w=\"100%\">\n        <Box w=\"70%\"></Box>\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.800\", \"#ABB2BF\")} w=\"100%\" mb={10}>\n        <VStack\n          mb={\"40px\"}\n          pr={{ base: 0, md: \"10px\" }}\n          divider={<StackDivider />}\n          spacing={4}\n          fontSize=\"md\"\n          align=\"stretch\"\n        >\n          <Box>\n            <Stack\n              direction={{ base: \"column\", md: \"row\" }}\n              w=\"100%\"\n              spacing={{ base: \"20px\", md: \"100px\" }}\n            >\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Title\n                </Text>\n                <Text float=\"right\">{project.title}</Text>\n              </Box>\n              <Box w=\"100%\">\n                <Text float=\"left\" as=\"b\">\n                  Tags\n                </Text>\n                <HStack spacing={3} float=\"right\">\n                  {project.tags.map((tag) => {\n                    return (\n                      <Tag\n                        key={tag}\n                        fontWeight={\"400\"}\n                        colorScheme=\"cyan\"\n                        cursor=\"pointer\"\n                      >\n                        {tag}\n                      </Tag>\n                    );\n                  })}\n                </HStack>\n              </Box>\n            </Stack>\n          </Box>\n          <Box>\n            <Text as=\"b\">Description</Text>\n            <Text mt={3}>{project.description}</Text>\n          </Box>\n        </VStack>\n      </Box>\n\n      <Alert\n        display={props.isDraft ? \"none\" : \"block\"}\n        status=\"error\"\n        variant=\"subtle\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        height=\"180px\"\n        mb=\"2em\"\n      >\n        <AlertIcon boxSize=\"40px\" mr={0} />\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n          You are viewing existing project!\n        </AlertTitle>\n        <AlertDescription maxWidth=\"sm\">\n          Please note that submitting this form will create a new project\n        </AlertDescription>\n      </Alert>\n\n      {/* FIXME: replace null with error alert */}\n      {predefinedProject !== null ? predefinedProject : null}\n    </Box>\n  );\n}\n\nexport default Viewer;\n","export function NumberWithCommas(x: any) {\n  return !isNaN(x) && typeof x === \"number\"\n    ? x\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    : \"\";\n}\n","import { Button, Tag } from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Creatable from \"react-select/creatable\";\nimport { NumberWithCommas } from \"../utils/Numbers\";\n\nconst numRegex = /[0-9.\\-/]|\\./;\n\nfunction isValidDate(d: any) {\n  return d instanceof Date && !isNaN(d as any);\n}\n\nclass EditableTableCell extends React.Component<\n  {\n    onUpdate: any;\n    rowIndex: number;\n    rowData: any;\n    columnKey: string | undefined;\n    loadOptions?: any;\n    type: string;\n    initialValue: any;\n    textColor?: any;\n    backgroundColor?: string;\n    readonly?: boolean;\n    bold?: boolean;\n    maxLength?: number;\n    invoiced?: boolean;\n  },\n  {\n    cellValue: any;\n    options: any[];\n    editing: boolean;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      options: [],\n      cellValue: undefined,\n      editing: false,\n    };\n  }\n  componentDidUpdate(prevProps: any) {\n    if (prevProps.initialValue !== this.props.initialValue) {\n      if (this.props.type === \"number\" && isNaN(this.props.initialValue)) {\n        return;\n      }\n      this.setState({ cellValue: this.props.initialValue });\n    }\n  }\n\n  componentDidMount() {\n    var value: any = undefined;\n    if (this.props.rowData.id === \"total\") {\n      value = this.props.initialValue ? this.props.initialValue : \"\";\n    } else {\n      switch (this.props.type) {\n        case \"text\":\n        case \"button\":\n          value = this.props.initialValue\n            ? this.props.initialValue.toString()\n            : \"\";\n          break;\n        case \"number\":\n          value =\n            typeof this.props.initialValue === \"number\"\n              ? NumberWithCommas(this.props.initialValue)\n              : \"\";\n          break;\n        case \"tags\":\n          value = this.props.initialValue;\n          break;\n        case \"date\":\n          value =\n            this.props.initialValue && this.props.initialValue !== null\n              ? new Date(this.props.initialValue)\n              : null;\n          break;\n        case \"dropdown\":\n          value =\n            typeof this.props.initialValue === \"string\"\n              ? {\n                  label: this.props.initialValue,\n                  value: this.props.initialValue,\n                }\n              : { label: \"\", value: \"\" };\n          break;\n        case \"value-dropdown\":\n          value =\n            typeof this.props.initialValue === \"string\"\n              ? {\n                  label: this.props.initialValue,\n                  value: this.props.initialValue,\n                }\n              : { label: \"\", value: \"\" };\n          break;\n        case \"multiple-dropdown\":\n          value = [];\n          if (\n            this.props.initialValue &&\n            Array.isArray(this.props.initialValue)\n          ) {\n            this.props.initialValue.forEach((value: any) => {\n              value.push({ label: value, value: value });\n            });\n          }\n          break;\n        case \"menu\":\n          value = this.props.initialValue\n            ? this.props.initialValue.toString()\n            : \"\";\n          break;\n        default:\n          break;\n      }\n    }\n    this.setState({ cellValue: value });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          fontWeight: this.props.bold ? \"bold\" : \"normal\",\n          textAlign: this.props.type === \"button\" ? \"center\" : \"inherit\",\n          backgroundColor:\n            this.props.rowData.id === \"total\"\n              ? \"white\"\n              : this.props.backgroundColor\n              ? this.props.backgroundColor\n              : \"\",\n        }}\n        className={\n          this.state.editing\n            ? \"vendors-table-cell active\"\n            : `content-preview ${\n                this.props.textColor ? this.props.textColor : \"\"\n              } ${\n                this.props.readonly || this.props.invoiced === true\n                  ? \"readonly\"\n                  : \"\"\n              }`\n        }\n        onClick={() => {\n          if (\n            !this.state.editing &&\n            !this.props.readonly &&\n            this.props.invoiced !== true &&\n            this.props.rowData.id !== \"total\"\n          ) {\n            this.setState({ editing: true });\n          }\n        }}\n        onContextMenu={(e) => {\n          e.preventDefault();\n          this.setState({ editing: false });\n        }}\n      >\n        {!this.state.editing ? (\n          this.props.type === \"tags\" ? (\n            this.state.cellValue ? (\n              this.state.cellValue.map((cv: any) => {\n                if (cv) {\n                  return (\n                    <Tag colorScheme={this.props.textColor} mb=\"5px\" mr={\"5px\"}>\n                      {cv}\n                    </Tag>\n                  );\n                }\n              })\n            ) : (\n              \"\"\n            )\n          ) : this.props.type === \"date\" ? (\n            this.state.cellValue && this.state.cellValue !== null ? (\n              moment(this.state.cellValue).format(\"DD.MM.yyyy\")\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"object\" ? (\n            this.state.cellValue !== null ? (\n              `${this.state.cellValue.label}`\n            ) : (\n              \"\"\n            )\n          ) : typeof this.state.cellValue === \"number\" ? (\n            `${NumberWithCommas(this.state.cellValue)}`\n          ) : (\n            `${this.state.cellValue}`\n          )\n        ) : this.props.type === \"text\" || this.props.type === \"number\" ? (\n          <textarea\n            autoFocus\n            style={{ resize: \"none\" }}\n            value={this.state.cellValue ?? \"\"}\n            onChange={(event) => {\n              if (\n                this.props.maxLength !== undefined &&\n                event.target.value.length > this.props.maxLength\n              ) {\n                return;\n              }\n              this.setState({ cellValue: event.target.value });\n            }}\n            onFocus={(e) => {\n              setTimeout(() => {\n                document.execCommand(\"selectAll\", false);\n              }, 0);\n            }}\n            onKeyPress={\n              this.props.type === \"number\"\n                ? (event) => {\n                    const keyCode = event.keyCode || event.which;\n                    const string = String.fromCharCode(keyCode);\n                    if (!numRegex.test(string)) {\n                      event.defaultPrevented = false;\n                      if (event.preventDefault) event.preventDefault();\n                    }\n                  }\n                : undefined\n            }\n            onBlur={(event) => {\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                this.props.type === \"number\"\n                  ? Number(this.state.cellValue)\n                  : this.state.cellValue\n              );\n              this.setState({ editing: false });\n            }}\n            className=\"content-editable\"\n          />\n        ) : this.props.type === \"date\" ? (\n          <DatePicker\n            autoFocus\n            isClearable\n            selected={\n              isValidDate(this.state.cellValue)\n                ? moment(this.state.cellValue).toDate()\n                : null\n            }\n            customInput={<input className=\"datepicker-input\"></input>}\n            onChange={(date) => {\n              this.setState({ cellValue: date, editing: false });\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                date !== null ? date.toString() : null\n              );\n            }}\n            onCalendarClose={() => {\n              this.setState({ editing: false });\n            }}\n            dateFormat=\"dd.MM.yyyy\"\n          />\n        ) : this.props.type === \"dropdown\" ||\n          this.props.type === \"value-dropdown\" ||\n          this.props.type === \"multiple-dropdown\" ? (\n          <Creatable\n            menuPortalTarget={document.body}\n            menuIsOpen={this.state.editing}\n            autoFocus\n            isMulti={this.props.type === \"multiple-dropdown\"}\n            styles={{\n              menuPortal: (base) => ({ ...base, zIndex: 1000000 }),\n              menu: (provided) => ({\n                ...provided,\n                zIndex: 1000000,\n                minWidth: \"200px\",\n              }),\n              singleValue: (provided) => ({\n                ...provided,\n                color: \"black\",\n              }),\n              control: (base, state) => ({\n                ...base,\n                paddingLeft: \"5px\",\n                boxShadow: \"none\",\n                outlineWidth: 0,\n                border: 0,\n                minHeight: 52,\n                backgroundColor: \"transparent\",\n                transition: \"0.3s\",\n              }),\n            }}\n            theme={(theme) => ({\n              ...theme,\n              borderRadius: 0,\n              colors: {\n                ...theme.colors,\n                primary: \"#a0bfe3\",\n              },\n            })}\n            value={this.state.cellValue}\n            onChange={(value) => {\n              this.setState({\n                cellValue: value !== null ? value : { label: \"\", value: \"\" },\n              });\n              var v: any = \"\";\n              if (value !== null && Array.isArray(value)) {\n                v = [];\n                value.map((dv: any) => v.push(dv.label));\n              }\n              if (value !== null && !Array.isArray(value)) {\n                v = value.label;\n                if (this.props.type === \"value-dropdown\") {\n                  v = value.value;\n                }\n              }\n              this.props.onUpdate(\n                this.props.rowData.id,\n                this.props.columnKey,\n                v\n              );\n              this.setState({ editing: false });\n            }}\n            onFocus={async () => {\n              this.setState({\n                options: this.props.loadOptions(this.props.columnKey ?? \"\"),\n              });\n            }}\n            onBlur={() => {\n              this.setState({\n                options: [],\n                editing: false,\n              });\n            }}\n            placeholder=\"\"\n            classNamePrefix=\"table-select\"\n            isClearable\n            isSearchable\n            options={this.state.options}\n          />\n        ) : this.props.type === \"button\" ? (\n          <div className=\"table-button-container\">\n            <Button\n              colorScheme={this.props.textColor}\n              onClick={() => {\n                this.props.onUpdate(\n                  this.props.rowData.id,\n                  this.props.columnKey,\n                  this.state.cellValue\n                );\n                this.setState({ editing: false });\n              }}\n              size=\"sm\"\n              color=\"white\"\n              className=\"table-button\"\n            >\n              {this.state.cellValue}\n            </Button>\n          </div>\n        ) : (\n          <div>unknown</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EditableTableCell;\n","// source: https://github.com/voodoocreation/ts-deepmerge/blob/master/src/index.ts\ninterface IObject {\n  [key: string]: any\n}\n\ntype TUnionToIntersection<U> = (U extends any\n? (k: U) => void\n: never) extends (k: infer I) => void\n  ? I\n  : never\n\n// istanbul ignore next\nconst isObject = (obj: any) => {\n  if (typeof obj === 'object' && obj !== null) {\n    if (typeof Object.getPrototypeOf === 'function') {\n      const prototype = Object.getPrototypeOf(obj)\n      return prototype === Object.prototype || prototype === null\n    }\n\n    return Object.prototype.toString.call(obj) === '[object Object]'\n  }\n\n  return false\n}\n\nconst merge = <T extends IObject[]>(...objects: T): TUnionToIntersection<T[number]> =>\n  objects.reduce((result, current) => {\n    Object.keys(current).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(current[key])) {\n        result[key] = Array.from(new Set(result[key].concat(current[key])))\n      } else if (isObject(result[key]) && isObject(current[key])) {\n        result[key] = merge(result[key], current[key])\n      } else {\n        result[key] = current[key]\n      }\n    })\n\n    return result\n  }, {}) as any\n\nexport default merge\n","function pick<T, K extends keyof T>(obj: T, keys: K[]): Pick<T, K> {\n  const ret: any = {}\n  keys.forEach(key => {\n    ret[key] = obj[key]\n  })\n  return ret\n}\n\nexport default pick\n","import React, { createContext, FC, useContext } from \"react\";\nimport { DatepickerStyles } from \"../types\";\nimport merge from \"../utils/deepmerge\";\nimport pick from \"../utils/pick\";\n\nexport interface StylesContextProps {\n  overwriteDefaultStyles: boolean;\n  styles: DatepickerStyles;\n}\n\nexport interface StylesProviderProps {\n  overwriteDefaultStyles?: boolean;\n  styles?: Partial<DatepickerStyles>;\n}\n\nexport const emptyStylesObject: DatepickerStyles = {\n  actionButton: {},\n  arrowIcon: {},\n  buttonsWrapper: {},\n  closeButton: {},\n  datepickerContainer: {},\n  dateRangeInputContainer: {},\n  dateRangeInputDivider: {},\n  day: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  dayContainer: {\n    base: {},\n    normal: {},\n    rangeHover: {},\n    selected: {},\n    first: {},\n    firstOrLast: {},\n    last: {},\n  },\n  inputComponentIcon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInput: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputAddon: {\n    active: {},\n    base: {},\n  },\n  inputComponentInputGroup: {\n    active: {},\n    base: {},\n  },\n  monthContainer: {},\n  monthDayGrid: {},\n  monthMonthLabel: {},\n  monthsWrapper: {},\n  monthWeekdayLabel: {},\n  resetDatesButton: {},\n  selectDateContainer: {\n    active: {},\n    base: {},\n  },\n  selectDateDateText: {\n    active: {},\n    base: {},\n  },\n  selectDateText: {\n    active: {},\n    base: {},\n  },\n  datepickerFooter: {},\n};\n\nexport const StylesContext = createContext<StylesContextProps>({\n  styles: emptyStylesObject,\n  overwriteDefaultStyles: false,\n});\n\nexport const StylesProvider: FC<StylesProviderProps> = ({\n  children,\n  overwriteDefaultStyles = false,\n  styles = emptyStylesObject,\n}) => (\n  <StylesContext.Provider\n    value={{ overwriteDefaultStyles, styles: merge(emptyStylesObject, styles) }}\n  >\n    {children}\n  </StylesContext.Provider>\n);\n\nexport function useStyleProps<\n  InitialStyles extends Partial<DatepickerStyles> = Partial<DatepickerStyles>\n>(inlineStyles: InitialStyles) {\n  const { styles, overwriteDefaultStyles } = useContext(StylesContext);\n  const keys = Object.keys(inlineStyles) as (keyof DatepickerStyles)[];\n  const filteredStyles = pick(styles, keys);\n  const result = merge(\n    filteredStyles,\n    !overwriteDefaultStyles ? inlineStyles : ({} as InitialStyles)\n  );\n  return result;\n}\n","import {\n  ChevronDownIcon,\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  ChevronUpIcon,\n} from \"@chakra-ui/icons\";\nimport { IconButton, IconButtonProps } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { ActionButtonStyles } from \"../types\";\n\nexport interface ActionButtonProps extends Omit<IconButtonProps, \"aria-label\"> {\n  direction?: \"up\" | \"right\" | \"down\" | \"left\";\n}\n\nexport const ActionButton: React.FC<ActionButtonProps> = ({\n  direction,\n  ...props\n}) => {\n  let IconComponent = ChevronLeftIcon;\n\n  const styleProps = useStyleProps<ActionButtonStyles>({\n    actionButton: {\n      position: \"relative\",\n    },\n  });\n\n  if (direction === \"up\") {\n    IconComponent = ChevronUpIcon;\n  } else if (direction === \"right\") {\n    IconComponent = ChevronRightIcon;\n  } else if (direction === \"down\") {\n    IconComponent = ChevronDownIcon;\n  } else if (direction === \"left\") {\n    IconComponent = ChevronLeftIcon;\n  }\n\n  return (\n    <IconButton\n      aria-label={`Arrow ${direction}`}\n      icon={<IconComponent />}\n      {...props}\n      {...styleProps.actionButton}\n    />\n  );\n};\n","import {\n  CloseButton as ChakraCloseButton,\n  CloseButtonProps as ChakraCloseButtonProps,\n} from '@chakra-ui/react'\nimport React from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { CloseButtonStyles } from '../types'\n\nexport interface CloseButtonProps extends ChakraCloseButtonProps {}\n\nexport const CloseButton = (props: CloseButtonProps) => {\n  const styleProps = useStyleProps<CloseButtonStyles>({\n    closeButton: {\n      top: 1,\n      right: 1,\n      zIndex: 1,\n      position: 'absolute',\n    },\n  })\n  return <ChakraCloseButton {...styleProps.closeButton} {...props} />\n}\n","export interface DatepickerPhrases {\n  datepickerStartDatePlaceholder: string\n  datepickerStartDateLabel: string\n  datepickerEndDateLabel: string\n  datepickerEndDatePlaceholder: string\n  resetDates: string\n  close: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateRangeInputPhrases extends DatepickerPhrases {\n  startDateAriaLabel: string\n  endDateAriaLabel: string\n  startDatePlaceholder: string\n  endDatePlaceholder: string\n}\n\nexport interface DateSingleInputPhrases extends DatepickerPhrases {\n  dateAriaLabel: string\n  datePlaceholder: string\n}\n\nexport const datepickerPhrases: DatepickerPhrases = {\n  datepickerStartDatePlaceholder: 'Select',\n  datepickerStartDateLabel: 'Start date:',\n  datepickerEndDatePlaceholder: 'Select',\n  datepickerEndDateLabel: 'End date:',\n  resetDates: 'Clean Dates',\n  close: 'Close',\n}\n\nexport const dateRangeInputPhrases: DateRangeInputPhrases = {\n  ...datepickerPhrases,\n\n  startDateAriaLabel: 'Start date',\n  endDateAriaLabel: 'End date',\n\n  startDatePlaceholder: 'Start date',\n  endDatePlaceholder: 'End date',\n}\n\nexport const dateSingleInputPhrases: DateSingleInputPhrases = {\n  ...datepickerPhrases,\n  dateAriaLabel: 'Select date',\n  datePlaceholder: 'Select date',\n}\n","import dateFormat from 'date-fns/format'\n\nexport {\n  monthLabelFormat as monthLabelFormatFn,\n  weekdayLabelFormat as weekdayLabelFormatFn,\n} from '@datepicker-react/hooks'\n\nexport const dayLabelFormatFn = (date: Date) => dateFormat(date, 'd')\n\nexport const defaultDisplayFormat = 'MM/dd/yyyy'\n","import { FocusedInput, FormatFunction, useDatepicker } from '@datepicker-react/hooks'\nimport React, { useContext } from 'react'\nimport { datepickerPhrases, DatepickerPhrases } from '../phrases'\nimport { InputDate } from '../types'\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from '../utils/formatters'\n\nexport type UseDatepickerReturnType = ReturnType<typeof useDatepicker>\n\nexport interface DatepickerFormatProps {\n  dayLabelFormat: typeof dayLabelFormatFn\n  weekdayLabelFormat: typeof weekdayLabelFormatFn\n  monthLabelFormat: typeof monthLabelFormatFn\n}\n\nexport type OnDayRenderType = {\n  isFirst: boolean\n  isLast: boolean\n  isSelected: boolean\n  isWithinHoverRange: boolean\n  isSelectedStartOrEnd: boolean\n  disabledDate: boolean\n}\n\nexport interface DatepickerContextBaseProps {\n  displayFormat: FormatFunction | string\n  startDate: InputDate\n  endDate: InputDate\n  phrases: DatepickerPhrases\n  focusedInput: FocusedInput\n  onDayRender?(date: Date, state: OnDayRenderType): React.ReactNode\n}\n\nexport interface DatepickerContextProps\n  extends DatepickerContextBaseProps,\n    DatepickerFormatProps,\n    UseDatepickerReturnType {}\n\nexport interface DatepickerProviderProps extends Partial<DatepickerContextProps> {}\n\nconst defaultBase: DatepickerContextBaseProps = {\n  startDate: null,\n  endDate: null,\n  focusedInput: null,\n  onDayRender: undefined,\n  displayFormat: defaultDisplayFormat,\n  phrases: datepickerPhrases,\n}\n\nconst defaultFormatters: DatepickerFormatProps = {\n  monthLabelFormat: monthLabelFormatFn,\n  weekdayLabelFormat: weekdayLabelFormatFn,\n  dayLabelFormat: dayLabelFormatFn,\n}\n\nconst defaultUseDatepicker: UseDatepickerReturnType = {\n  numberOfMonths: 2,\n  activeMonths: [],\n  firstDayOfWeek: 0,\n  focusedDate: null,\n  hoveredDate: null,\n  goToDate: () => {},\n  goToNextMonths: () => {},\n  goToNextMonthsByOneMonth: () => {},\n  goToNextYear: () => {},\n  goToPreviousMonths: () => {},\n  goToPreviousMonthsByOneMonth: () => {},\n  goToPreviousYear: () => {},\n  isDateBlocked: () => false,\n  isDateFocused: () => false,\n  isDateHovered: () => false,\n  isDateSelected: () => false,\n  isEndDate: () => false,\n  isFirstOrLastSelectedDate: () => false,\n  isStartDate: () => false,\n  onDateFocus: () => {},\n  onDateHover: () => {},\n  onDateSelect: () => {},\n  onResetDates: () => {},\n}\n\nexport const datepickerContextDefaultValue: DatepickerContextProps = {\n  ...defaultBase,\n  ...defaultFormatters,\n  ...defaultUseDatepicker,\n}\n\nexport const DatepickerContext = React.createContext(datepickerContextDefaultValue)\n\nexport const useDatepickerContext = () => useContext(DatepickerContext)\n\nexport const DatepickerProvider: React.FC<DatepickerProviderProps> = ({ children, ...props }) => (\n  <DatepickerContext.Provider value={{ ...datepickerContextDefaultValue, ...props }}>\n    {children}\n  </DatepickerContext.Provider>\n)\n","import { Box, Button, useColorModeValue } from \"@chakra-ui/react\";\nimport { isEndDate, isStartDate, useDay } from \"@datepicker-react/hooks\";\nimport React, { useMemo, useRef } from \"react\";\nimport {\n  OnDayRenderType,\n  useDatepickerContext,\n} from \"../context/DatepickerContext\";\nimport { useStyleProps } from \"../context/StylesContext\";\nimport { DayState, DayStyles } from \"../types\";\n\nfunction getColor<T>(\n  { isSelected, isWithinHoverRange, isFirst, isLast }: OnDayRenderType,\n  { base, normal, rangeHover, selected, firstOrLast, first, last }: DayState<T>\n) {\n  let style = base;\n  if (!isSelected && !isWithinHoverRange) style = { ...style, ...normal };\n  if (isSelected) style = { ...style, ...selected };\n  if (isWithinHoverRange) style = { ...style, ...rangeHover };\n  if (isFirst || isLast) style = { ...style, ...firstOrLast };\n  if (isFirst) style = { ...style, ...first };\n  if (isLast) style = { ...style, ...last };\n  return style;\n}\n\ninterface DayProps {\n  day: string;\n  date: Date;\n}\n\nexport function Day({ day, date }: DayProps) {\n  const dayRef = useRef<any>(null);\n\n  const {\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateSelect,\n    onDateFocus,\n    onDateHover,\n    onDayRender,\n    startDate,\n    endDate,\n  } = useDatepickerContext();\n\n  const dayProps = useDay({\n    date,\n    focusedDate,\n    isDateFocused,\n    isDateSelected,\n    isDateHovered,\n    isDateBlocked,\n    isFirstOrLastSelectedDate,\n    onDateFocus,\n    onDateSelect,\n    onDateHover,\n    dayRef,\n  });\n\n  const {\n    onClick,\n    onKeyDown,\n    onMouseEnter,\n    tabIndex,\n    isSelectedStartOrEnd,\n    isSelected,\n    isWithinHoverRange,\n    disabledDate,\n  } = dayProps;\n\n  const styleProps = useStyleProps<DayStyles>({\n    day: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        minWidth: \"unset\",\n        fontWeight: \"medium\",\n        fontSize: [\"sm\", \"md\"],\n        border: \"2px solid\",\n        textColor: useColorModeValue(\"gray.900\", \"white\"),\n        borderRadius: \"100%\",\n        borderColor: \"transparent\",\n        background: \"transparent\",\n        overflow: \"hidden\",\n        _hover: {\n          borderColor: \"transparent\",\n          background: \"transparent\",\n        },\n      },\n      normal: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      rangeHover: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      selected: {\n        _hover: {\n          borderColor: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      firstOrLast: {\n        textColor: useColorModeValue(\"white\", \"black\"),\n        background: useColorModeValue(\"blue.400\", \"white\"),\n        _hover: {\n          textColor: useColorModeValue(\"white\", \"black\"),\n          background: useColorModeValue(\"blue.300\", \"white\"),\n        },\n      },\n      first: {},\n      last: {},\n    },\n    dayContainer: {\n      base: {\n        height: [\"32px\", \"48px\"],\n        width: [\"32px\", \"48px\"],\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      normal: {},\n      rangeHover: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n      selected: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n        _hover: {\n          borderRightRadius: \"0%\",\n        },\n      },\n      firstOrLast: {\n        background: useColorModeValue(\"gray.100\", \"gray.500\"),\n      },\n      first: {\n        borderLeftRadius: \"100%\",\n      },\n      last: {\n        borderRightRadius: \"100%\",\n        _hover: {\n          borderRightRadius: \"100%\",\n        },\n      },\n    },\n  });\n\n  const isFirst = isStartDate(date, startDate);\n  const isLast = isEndDate(date, endDate);\n\n  const containerStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.dayContainer.base,\n          normal: styleProps.dayContainer.normal,\n          rangeHover: styleProps.dayContainer.rangeHover,\n          selected: styleProps.dayContainer.selected,\n          first: styleProps.dayContainer.first,\n          last: styleProps.dayContainer.last,\n          firstOrLast: styleProps.dayContainer.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  const buttonStyle = useMemo(\n    () =>\n      getColor(\n        {\n          isFirst,\n          isLast,\n          isSelected,\n          isWithinHoverRange,\n          isSelectedStartOrEnd,\n          disabledDate,\n        },\n        {\n          base: styleProps.day.base,\n          normal: styleProps.day.normal,\n          rangeHover: styleProps.day.rangeHover,\n          selected: styleProps.day.selected,\n          first: styleProps.day.first,\n          last: styleProps.day.last,\n          firstOrLast: styleProps.day.firstOrLast,\n        }\n      ),\n    [\n      isFirst,\n      isLast,\n      isSelected,\n      isWithinHoverRange,\n      isSelectedStartOrEnd,\n      disabledDate,\n      styleProps,\n    ]\n  );\n\n  return (\n    <Box {...containerStyle}>\n      <Button\n        {...buttonStyle}\n        variant=\"unstyled\"\n        onClick={onClick}\n        onKeyDown={onKeyDown}\n        onMouseEnter={onMouseEnter}\n        tabIndex={tabIndex}\n        ref={dayRef}\n        disabled={disabledDate}\n        data-testid=\"Day\"\n        aria-label={`Day-${date.toDateString()}`}\n        type=\"button\"\n      >\n        {typeof onDayRender === \"function\"\n          ? onDayRender(date, {\n              isFirst,\n              isLast,\n              isSelected,\n              isWithinHoverRange,\n              isSelectedStartOrEnd,\n              disabledDate,\n            })\n          : day}\n      </Button>\n    </Box>\n  );\n}\n","import { StateProp } from '../types'\n\nexport const getStateStyle = <T>({ base, active }: StateProp<T>, isActive: boolean) => {\n  return isActive ? { ...base, ...active } : base\n}\n","import { CalendarIcon } from '@chakra-ui/icons'\nimport {\n  Icon,\n  Input as ChakraInput,\n  InputGroup,\n  InputLeftAddon,\n  InputProps as ChakraInputProps,\n} from '@chakra-ui/react'\nimport { parseDate } from '@datepicker-react/hooks'\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from 'react'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputComponentStyles, InputDate } from '../types'\nimport { defaultDisplayFormat } from '../utils/formatters'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface InputProps {\n  allowEditableInputs?: boolean\n  dateFormat?: string\n  disableAccessibility?: boolean\n  iconComponent?: typeof CalendarIcon\n  id?: string\n  isActive?: boolean\n  name?: string\n  onChange?(date: InputDate): void\n  onClick?(): void\n  placeholder?: string\n  showCalendarIcon?: boolean\n  value?: string\n}\n\ninterface BaseProps extends Omit<ChakraInputProps, 'onChange' | 'onClick' | 'value'>, InputProps {}\n\nexport const Input = forwardRef((props: BaseProps, inputRef: Ref<any>) => {\n  const {\n    dateFormat = defaultDisplayFormat,\n    disableAccessibility,\n    iconComponent = CalendarIcon,\n    id,\n    isActive = false,\n    name,\n    onChange = () => {},\n    onClick = () => {},\n    placeholder,\n    showCalendarIcon = true,\n    value,\n    allowEditableInputs = false,\n\n    ...inputProps\n  } = props\n\n  const ref = useRef<any>(null)\n\n  const [searchString, setSearchString] = useState(value)\n\n  const styleProps = useStyleProps<InputComponentStyles>({\n    inputComponentInputGroup: {\n      base: {},\n      active: {},\n    },\n    inputComponentInput: {\n      base: {},\n      active: {},\n    },\n    inputComponentIcon: {\n      base: {},\n      active: {},\n    },\n    inputComponentInputAddon: {\n      base: {},\n      active: {},\n    },\n  })\n\n  // Note: value was updated outside of InputComponent\n  useEffect(() => {\n    setSearchString(value)\n  }, [value])\n\n  function handleOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const dateValue = e.target.value\n    setSearchString(dateValue)\n\n    if (typeof ref.current === 'number') {\n      clearTimeout(ref.current)\n    }\n\n    ref.current = setTimeout(() => {\n      onClick()\n      const parsedDate = parseDate(dateValue, dateFormat, new Date())\n      const isValidDate = !isNaN(parsedDate.getDate())\n\n      if (isValidDate) {\n        onChange(parsedDate)\n      } else {\n        onChange(null)\n      }\n    }, 1000)\n  }\n\n  function handleOnFocus(_e: React.FocusEvent<HTMLInputElement>) {\n    onClick()\n  }\n\n  return (\n    <InputGroup {...getStateStyle(styleProps.inputComponentInputGroup, isActive)} htmlFor={id}>\n      {showCalendarIcon && (\n        <InputLeftAddon {...getStateStyle(styleProps.inputComponentInputAddon, isActive)}>\n          <Icon as={iconComponent} {...getStateStyle(styleProps.inputComponentIcon, isActive)} />\n        </InputLeftAddon>\n      )}\n      <ChakraInput\n        {...inputProps}\n        {...getStateStyle(styleProps.inputComponentInput, isActive)}\n        ref={inputRef}\n        id={id}\n        name={name}\n        isReadOnly={!allowEditableInputs}\n        value={searchString}\n        placeholder={placeholder}\n        tabIndex={disableAccessibility ? -1 : 0}\n        autoComplete=\"off\"\n        data-testid=\"DatepickerInput\"\n        onFocus={handleOnFocus}\n        onChange={handleOnChange}\n      />\n    </InputGroup>\n  )\n})\n","import { Box, Flex, SimpleGrid, Text } from '@chakra-ui/react'\nimport { CalendarDay, useMonth } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { MonthStyles } from '../types'\nimport { Day } from './Day'\n\nexport interface MonthProps {\n  year: number\n  month: number\n}\n\nexport const Month = ({ year, month }: MonthProps) => {\n  const styleProps = useStyleProps<MonthStyles>({\n    monthContainer: {},\n    monthMonthLabel: {\n      justifyContent: 'center',\n      fontWeight: 'bold',\n      mb: 6,\n      fontSize: ['md', 'lg'],\n    },\n    monthWeekdayLabel: {\n      justifyContent: 'center',\n      color: 'gray.500',\n      mb: 4,\n      fontSize: ['sm', 'md'],\n    },\n    monthDayGrid: {\n      rowGap: 1,\n    },\n  })\n\n  const {\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  } = useDatepickerContext()\n\n  const { days, weekdayLabels, monthLabel } = useMonth({\n    year,\n    month,\n    dayLabelFormat,\n    monthLabelFormat,\n    weekdayLabelFormat,\n    firstDayOfWeek,\n  })\n\n  return (\n    <Box {...styleProps.monthContainer}>\n      <Flex {...styleProps.monthMonthLabel}>\n        <Text>{monthLabel}</Text>\n      </Flex>\n      <SimpleGrid columns={7}>\n        {weekdayLabels.map((weekdayLabel: string) => (\n          <Flex key={weekdayLabel} {...styleProps.monthWeekdayLabel}>\n            <Text>{weekdayLabel}</Text>\n          </Flex>\n        ))}\n      </SimpleGrid>\n      <SimpleGrid {...styleProps.monthDayGrid} columns={7}>\n        {days.map((day: CalendarDay, index: number) =>\n          typeof day === 'object' ? (\n            <Day date={day.date} key={`${day.dayLabel}-${index}`} day={day.dayLabel} />\n          ) : (\n            <div key={index} />\n          ),\n        )}\n      </SimpleGrid>\n    </Box>\n  )\n}\n","import { RepeatIcon } from '@chakra-ui/icons'\nimport { Button } from '@chakra-ui/react'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { ResetDatesButtonStyles } from '../types'\n\ninterface ResetDatesProps {\n  onResetDates(): void\n  text: string\n}\n\nexport function ResetDatesButton({ onResetDates, text }: ResetDatesProps) {\n  const { phrases } = useDatepickerContext()\n\n  const styleProps = useStyleProps<ResetDatesButtonStyles>({\n    resetDatesButton: {},\n  })\n\n  function handleMouseUp(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    e.currentTarget.blur()\n  }\n\n  return (\n    <Button\n      icon={<RepeatIcon />}\n      tabIndex={-1}\n      aria-label={phrases.resetDates}\n      {...styleProps.resetDatesButton}\n      onClick={onResetDates}\n      onMouseUp={handleMouseUp}\n    >\n      {text}\n    </Button>\n  )\n}\n","import { Stack, Text } from '@chakra-ui/react'\nimport { getInputValue } from '@datepicker-react/hooks'\nimport React from 'react'\nimport { useDatepickerContext } from '../context/DatepickerContext'\nimport { useStyleProps } from '../context/StylesContext'\nimport { InputDate, SelectDateStyles } from '../types'\nimport { getStateStyle } from '../utils/getStateStyle'\n\nexport interface SelectedDateProps {\n  isFocused: boolean\n  date: InputDate\n}\n\nexport const SelectedDate = ({ isFocused, date }: SelectedDateProps) => {\n  const { phrases, displayFormat } = useDatepickerContext()\n\n  const styleProps = useStyleProps<SelectDateStyles>({\n    selectDateContainer: {\n      base: {\n        width: '100%',\n        borderBottom: '2px solid',\n        borderColor: 'gray.300',\n        paddingBottom: [1, 3],\n      },\n      active: {\n        borderColor: 'blue.400',\n      },\n    },\n    selectDateText: {\n      base: {\n        fontSize: 'xs',\n        color: 'gray.500',\n      },\n      active: {},\n    },\n    selectDateDateText: {\n      base: {\n        fontWeight: 'bold',\n        fontSize: ['sm', 'md', 'lg'],\n      },\n      active: {},\n    },\n  })\n\n  return (\n    <Stack {...getStateStyle(styleProps.selectDateContainer, isFocused)}>\n      <Text {...getStateStyle(styleProps.selectDateText, isFocused)}>\n        {phrases.datepickerStartDateLabel}\n      </Text>\n      <Text {...getStateStyle(styleProps.selectDateDateText, isFocused)}>\n        {getInputValue(date, displayFormat, phrases.datepickerStartDatePlaceholder)}\n      </Text>\n    </Stack>\n  )\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Box,\n  Button,\n  Input,\n  Text,\n  useColorModeValue,\n  IconButton,\n  Stack,\n  VStack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  CloseButton,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n} from \"@chakra-ui/react\";\nimport {\n  cloneElement,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport EditableTableCell from \"../../components/EditableTableCell\";\nimport Creatable from \"react-select/creatable\";\n\nimport Select from \"react-select\";\nimport { Submission } from \"../../types/submission\";\nimport Toast, { ToastType } from \"../../components/Toast\";\nimport { getAccountInfo } from \"../../utils/MsGraphApiCall\";\n\nimport BaseTable, {\n  AutoResizer,\n  Column,\n  ColumnShape,\n  unflatten,\n} from \"react-base-table\";\nimport \"react-base-table/styles.css\";\nimport { RestAPI } from \"../../api/rest\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  BiPlusMedical,\n  RiFileExcel2Line,\n  RiUserFill,\n  RiGroupFill,\n  IoSave,\n} from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport { CheckTreePicker, TagPicker } from \"rsuite\";\nimport { DateRangeInput, DateSingleInput } from \"../../components/DatePicker\";\nimport { NumberWithCommas } from \"../../utils/Numbers\";\n\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { FilterField, Template } from \"../../types/template\";\n\ninterface Props {\n  history: any;\n}\n\nvar ProjectType: any[] = [];\nvar PH1: any[] = [];\nvar Companies: any[] = [];\nvar VendorsNames: any[] = [];\nvar InternationalVendorsNames: any[] = [];\nvar CampaignChannel: any[] = [];\nvar TargetAudience: any[] = [];\nvar Budget: any[] = [];\nvar ExchangeRates: any[] = [];\nvar FiscalQuarter: any[] = [];\nvar Year: any[] = [];\nvar ProjectStartQuarter: any[] = [];\nvar BUs: any[] = [];\nvar SapStatus: any[] = [\n  { label: \"Created\", value: \"created\" },\n  { label: \"None\", value: \"none\" },\n];\nvar CostStatuses: any[] = [\n  { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n  { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n  { label: \"Not Relevant\", value: \"Not Relevant\" },\n];\nvar submissionData: any;\n\nvar defaultColumns = [\n  \"generalInformation\",\n  \"projectInformation\",\n  \"purchaseOrder\",\n  \"costInvoices\",\n  \"salesInvoices\",\n  \"costGlPostings\",\n  \"incomeGlPostings\",\n  \"projectResults\",\n  \"controlChecks\",\n  \"CMCT\",\n  \"LMD\",\n];\n\nasync function fetchDropdowns() {\n  var dropdownsIds: string[] = [\n    \"619b630a9a5a2bb37a93b23b\",\n    \"619b61419a5a2bb37a93b237\",\n    \"619b63429a5a2bb37a93b23d\",\n    \"619b62d79a5a2bb37a93b239\",\n    \"619b632c9a5a2bb37a93b23c\",\n    \"619b62959a5a2bb37a93b238\",\n    \"619b62f29a5a2bb37a93b23a\",\n    \"619b66defe27d06ad17d75ac\",\n    \"619b6754fe27d06ad17d75ad\",\n    \"619b6799fe27d06ad17d75ae\",\n    \"619b7b9efe27d06ad17d75af\",\n    \"619b7b9efe27d06ad17d75af\",\n    \"633e93ed5a7691ac30c977fc\",\n    \"636abbd43927f9c7703b19c4\",\n  ];\n  var responses = await Promise.all(\n    dropdownsIds.map((di) => {\n      return RestAPI.getDropdownValues(di);\n    })\n  );\n  PH1 = responses[0].data;\n  Companies = responses[1].data;\n  VendorsNames = responses[2].data;\n  CampaignChannel = responses[3].data;\n  TargetAudience = responses[4].data;\n  Budget = responses[5].data;\n  ExchangeRates = responses[6].data;\n  FiscalQuarter = responses[7].data;\n  Year = responses[8].data;\n  ProjectStartQuarter = responses[9].data;\n  ProjectType = responses[10].data;\n  BUs = responses[12].data;\n  InternationalVendorsNames = responses[13].data;\n}\n\nconst loadOptions = (identifier: string) => {\n  switch (identifier) {\n    case \"data.budgetSource\":\n      return Budget;\n    case \"data.projectType\":\n      return ProjectType;\n    case \"data.ph1\":\n      return PH1;\n    case \"data.campaignChannel\":\n      return CampaignChannel;\n    case \"data.targetAudience\":\n      return TargetAudience;\n    case \"data.budgetCurrency\" ||\n      \"data.vendorBudgetCurrency\" ||\n      \"data.campaignCurrency\":\n      return ExchangeRates;\n    case \"data.buLMD\":\n      return BUs;\n    case \"data.sapStatus\":\n      return SapStatus;\n    case \"data.caVendorName\":\n    case \"data.vendorName\":\n    case \"data.vendorNameSA\":\n      return VendorsNames;\n    case \"data.statusLMD\":\n      return [\n        { label: \"OK FOR INVOICING\", value: \"OK FOR INVOICING\" },\n        { label: \"FUTURE INVOICE\", value: \"FUTURE INVOICE\" },\n        { label: \"INVOICED\", value: \"INVOICED\" },\n        { label: \"INCOMPLETE\", value: \"INCOMPLETE\" },\n        { label: \"OK FOR CANCELLATION\", value: \"OK FOR CANCELLATION\" },\n        { label: \"CANCELLED\", value: \"CANCELLED\" },\n      ];\n    case \"data.purchaseOrderStatus\":\n      return [\n        { label: \"Invoice Received\", value: \"Invoice Received\" },\n        { label: \"Invoice Not Received\", value: \"Invoice Not Received\" },\n      ];\n    case \"data.costStatus\":\n      return [\n        { label: \"Cost Invoiced\", value: \"Cost Invoiced\" },\n        { label: \"Cost Not Invoiced\", value: \"Cost Not Invoiced\" },\n      ];\n    case \"data.invoiceStatusSI\":\n      return [\n        { label: \"Paid\", value: \"Paid\" },\n        { label: \"Not Paid\", value: \"Not Paid\" },\n      ];\n  }\n  return [];\n};\n\nfunction bytesToSize(bytes: number) {\n  var sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n  if (bytes == 0) return \"0 Byte\";\n  var i = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, i)).toFixed(2) + \" \" + sizes[i];\n}\n\nconst filterTypes = {\n  string: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  number: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n  dropdown: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  \"multiple-dropdown\": [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Includes\", value: \"includes\" },\n  ],\n  date: [\n    { label: \"Exact\", value: \"exact\" },\n    { label: \"Range\", value: \"range\" },\n  ],\n};\n\nconst DisplayedColumnsList = [\n  {\n    label: \"General Information\",\n    value: \"generalInformation\",\n    children: [\n      { label: \"Company Code\", value: \"data.companyCode\", type: \"string\" },\n      { label: \"Project Number\", value: \"data.projectNumber\", type: \"string\" },\n      {\n        label: \"Local Project Number\",\n        value: \"data.localProjectNumber\",\n        type: \"string\",\n      },\n      { label: \"Project Name\", value: \"data.projectName\", type: \"string\" },\n      {\n        label: \"Campaign Start Date\",\n        value: \"data.campaignStartDate\",\n        type: \"date\",\n      },\n      {\n        label: \"Campaign End Date\",\n        value: \"data.campaignEndDate\",\n        type: \"date\",\n      },\n      { label: \"Project Type\", value: \"data.projectType\", type: \"dropdown\" },\n      { label: \"Author\", value: \"author\", type: \"string\" },\n      { label: \"Status\", value: \"data.status\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Project Information\",\n    value: \"projectInformation\",\n    children: [\n      { label: \"Countries EMEA\", value: \"data.country\", type: \"string\" },\n      {\n        label: \"Country Code EMEA\",\n        value: \"data.countryCodeEMEA\",\n        type: \"string\",\n      },\n      {\n        label: \"Parent Project Number\",\n        value: \"data.parentProjectNumber\",\n        type: \"string\",\n      },\n      { label: \"% Country Share\", value: \"data.countryShare\", type: \"number\" },\n      {\n        label: \"Country Budget Contribution (Campaign Currency)\",\n        value: \"data.countryBudgetContributionCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Country Cost Estimation (Campaign Currency)\",\n        value: \"data.countryCostEstimationCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Manufacturer Number\",\n        value: \"data.manufacturerNumber\",\n        type: \"string\",\n      },\n      { label: \"Vendor Name\", value: \"data.vendorName\", type: \"dropdown\" },\n      {\n        label: \"SAP Debitor Number\",\n        value: \"data.debitorNumber\",\n        type: \"string\",\n      },\n      // {\n      //   label: \"SAP Creditor Number\",\n      //   value: \"data.creditorNumber\",\n      //   type: \"string\",\n      // },\n      { label: \"Budget Source\", value: \"data.budgetSource\", type: \"dropdown\" },\n      {\n        label: \"Vendor Budget Currency\",\n        value: \"data.vendorBudgetCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Vendor Amount\",\n        value: \"data.vendorAmount\",\n        type: \"number\",\n      },\n      {\n        label: \"Campaign Currency\",\n        value: \"data.campaignCurrency\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Estimated Income (Campaign Currency)\",\n        value: \"data.estimatedIncomeCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs (Campaign Currency)\",\n        value: \"data.estimatedCostsCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result (Campaign Currency)\",\n        value: \"data.estimatedResultCC\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Income EUR\",\n        value: \"data.estimatedIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Costs EUR\",\n        value: \"data.estimatedCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Estimated Result EUR\",\n        value: \"data.estimatedResultEUR\",\n        type: \"number\",\n      },\n      { label: \"% Vendor Share\", value: \"data.vendorShare\", type: \"number\" },\n      { label: \"Business Unit\", value: \"data.businessUnit\", type: \"string\" },\n      { label: \"PH1\", value: \"data.PH1\", type: \"string\" },\n      {\n        label: \"Campaign Channel\",\n        value: \"data.campaignChannel\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Target Audience\",\n        value: \"data.targetAudience\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"Marketing Responsible\",\n        value: \"data.marketingResponsible\",\n        type: \"string\",\n      },\n      {\n        label: \"Project Approver\",\n        value: \"data.projectApprover\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.additionalInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Purchase Order\",\n    value: \"purchaseOrder\",\n    children: [\n      {\n        label: \"Purchase Order Service Provider\",\n        value: \"data.purchaseOrderServiceProvider\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor Name\",\n        value: \"data.vendorNamePO\",\n        type: \"string\",\n      },\n      {\n        label: \"Net Value of Service Ordered (LC)\",\n        value: \"data.netValueOfServiceOrderedLC\",\n        type: \"string\",\n      },\n      { label: \"Local Currency\", value: \"data.localCurrency\", type: \"string\" },\n      {\n        label: \"Net Value (Purchase Order Currency)\",\n        value: \"data.netValuePOC\",\n        type: \"string\",\n      },\n      {\n        label: \"Purchase Order Currency\",\n        value: \"data.purchaseOrderCurrency\",\n        type: \"string\",\n      },\n      { label: \"Net Value (EUR)\", value: \"data.netValueEur\", type: \"string\" },\n      {\n        label: \"Purchase Order Status\",\n        value: \"data.purchaseOrderStatus\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost Invoices\",\n    value: \"costInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonth\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentType\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDate\", type: \"date\" },\n      { label: \"Document Date\", value: \"data.documentDate\", type: \"date\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumber\",\n        type: \"string\",\n      },\n      { label: \"Invoice Number\", value: \"data.invoiceNumber\", type: \"string\" },\n      { label: \"Cost Account\", value: \"data.costAccount\", type: \"string\" },\n      { label: \"Invoice Supplier\", value: \"data.name1\", type: \"string\" },\n      { label: \"Cost Amount (LC)\", value: \"data.costAmountLC\", type: \"string\" },\n      { label: \"Cost Amount (DC)\", value: \"data.costAmountDC\", type: \"string\" },\n      { label: \"DC\", value: \"data.dc\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEUR\",\n        type: \"number\",\n      },\n      { label: \"Cost Status\", value: \"data.costStatus\", type: \"string\" },\n    ],\n  },\n  {\n    label: \"Sales Invoices\",\n    value: \"salesInvoices\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthSI\", type: \"string\" },\n      { label: \"Document Type\", value: \"data.documentTypeSI\", type: \"string\" },\n      { label: \"Posting Date\", value: \"data.postingDateSI\", type: \"date\" },\n      { label: \"Document Date\", value: \"data.documentDateSI\", type: \"date\" },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberSI\",\n        type: \"string\",\n      },\n\n      {\n        label: \"Invoice Number\",\n        value: \"data.invoiceNumberSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountSI\",\n        type: \"string\",\n      },\n      { label: \"Invoice Recipient\", value: \"data.name1SI\", type: \"string\" },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCSI\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcSI\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEURSI\",\n        type: \"number\",\n      },\n      {\n        label: \"Invoice Status (Paid/Not Paid)\",\n        value: \"data.invoiceStatusSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Activity ID for Portal Vendors\",\n        value: \"data.activityIdSI\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Marketing Information\",\n        value: \"data.additionalMarketingInformation\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Cost GL Postings\",\n    value: \"costGlPostings\",\n    children: [\n      { label: \"Year / Month\", value: \"data.yearMonthCostGL\", type: \"string\" },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateCostGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateCostGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Account\",\n        value: \"data.costAccountCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (LC)\",\n        value: \"data.costAmountLCCostGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Cost Amount (DC)\",\n        value: \"data.costAmountDCCostGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcCostGL\", type: \"string\" },\n      {\n        label: \"Cost Amount (EUR)\",\n        value: \"data.costAmountEURCostGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Income GL Postings\",\n    value: \"incomeGlPostings\",\n    children: [\n      {\n        label: \"Year / Month\",\n        value: \"data.yearMonthIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Type\",\n        value: \"data.documentTypeIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Posting Date\",\n        value: \"data.postingDateIncomeGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Date\",\n        value: \"data.documentDateIncomeGL\",\n        type: \"date\",\n      },\n      {\n        label: \"Document Number\",\n        value: \"data.documentNumberIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Account\",\n        value: \"data.incomeAccountIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (LC)\",\n        value: \"data.incomeAmountLCIncomeGL\",\n        type: \"string\",\n      },\n      {\n        label: \"Income Amount (DC)\",\n        value: \"data.incomeAmountDCIncomeGL\",\n        type: \"string\",\n      },\n      { label: \"DC\", value: \"data.dcIncomeGL\", type: \"string\" },\n      {\n        label: \"Income Amount (EUR)\",\n        value: \"data.incomeAmountEurIncomeGL\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Project Results\",\n    value: \"projectResults\",\n    children: [\n      {\n        label: \"Total Income (LC)\",\n        value: \"data.totalIncomeLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs (LC)\",\n        value: \"data.totalCostsLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Profit (LC)\",\n        value: \"data.totalProfitLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Loss (LC)\",\n        value: \"data.totalLossLC\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income (EUR)\",\n        value: \"data.totalIncomeEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs (EUR)\",\n        value: \"data.totalCostsEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Profit (EUR)\",\n        value: \"data.totalProfitEUR\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Loss (EUR)\",\n        value: \"data.totalLossEUR\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Control Checks\",\n    value: \"controlChecks\",\n    children: [\n      {\n        label: \"Total Costs In Tool (LC)\",\n        value: \"data.totalCostsTool\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Costs in SAP (LC)\",\n        value: \"data.totalCostsSAP\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income in Tool (LC)\",\n        value: \"data.totalIncomeTool\",\n        type: \"number\",\n      },\n      {\n        label: \"Total Income in SAP (LC)\",\n        value: \"data.totalIncomeSAP\",\n        type: \"number\",\n      },\n    ],\n  },\n  {\n    label: \"Input of Central Marketing Controlling Team\",\n    value: \"CMCT\",\n    children: [\n      {\n        label: \"Status\",\n        value: \"data.statusCMCT\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"SAP Document Number\",\n        value: \"data.documentNumberCMCT\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Information\",\n        value: \"data.infoCMCT\",\n        type: \"string\",\n      },\n      {\n        label: \"Date\",\n        value: \"data.dateCMCT\",\n        type: \"date\",\n      },\n      {\n        label: \"Operator\",\n        value: \"data.operatorCMCT\",\n        type: \"string\",\n      },\n    ],\n  },\n  {\n    label: \"Input of Local Marketing Department\",\n    value: \"LMD\",\n    children: [\n      {\n        label: \"Status\",\n        value: \"data.statusLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Date of Invoicing\",\n        value: \"data.invoicingDateLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Requestor\",\n        value: \"data.requestorLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Vendor\",\n        value: \"data.vendorLMD\",\n        type: \"dropdown\",\n      },\n      {\n        label: \"VOD\",\n        value: \"data.vodLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"BU\",\n        value: \"data.buLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Request Date\",\n        value: \"data.requestDateLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Invoice Type\",\n        value: \"data.invoiceTypeLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Cancellation Information\",\n        value: \"data.cancellationInfoLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Document Currency\",\n        value: \"data.documentCurrencyLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Material Number\",\n        value: \"data.materialNumberLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Reason\",\n        value: \"data.reasonLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Text\",\n        value: \"data.textLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Amount\",\n        value: \"data.amountLMD\",\n        type: \"number\",\n      },\n      {\n        label: \"Additional Info on Invoice\",\n        value: \"data.additionalInvoiceInfoLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Dunning Stop?\",\n        value: \"data.dunningStopLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Payment Method\",\n        value: \"data.paymentMethodLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Deposit Number\",\n        value: \"data.depositNumberLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Send to\",\n        value: \"data.sendToLMD\",\n        type: \"string\",\n      },\n      {\n        label: \"Additional Comment\",\n        value: \"data.additionalCommentLMD\",\n        type: \"string\",\n      },\n    ],\n  },\n];\n\nconst DisplayedColumnsListOptions = DisplayedColumnsList.map((group: any) => {\n  return group.children.map((column: any) => {\n    return {\n      label: `${column.label} (${group.label})`,\n      value: column.value,\n      type: column.type,\n    };\n  });\n}).flat(1);\n\nexport function SubmissionsTable(props: Props) {\n  const [selectedTemplate, setSelectedTemplate] = useState(\"local\");\n  const [templates, setTemplates] = useState<Template[]>([]);\n  const [sourceSubmissions, setSourceSubmissions] = useState(new Map());\n  const [currentUser, setCurrentUser] = useState({ displayName: \"unknown\" });\n  const [debugOverlayHidden, hideDebugOverlay] = useState(true);\n  const [filters, setFilters] = useState<FilterField[]>([]);\n  const [displayedColumns, setDisplayedColumns] =\n    useState<string[]>(defaultColumns);\n  const [totalCostAmount, setTotalCostAmount] = useState(0);\n  const [totalCostAmountCostGL, setTotalCostAmountCostGL] = useState(0);\n  const [totalCostAmountLC, setTotalCostAmountLC] = useState(0);\n  const [totalCostAmountLCCostGL, setTotalCostAmountLCCostGL] = useState(0);\n  const [totalIncomeAmount, setTotalIncomeAmount] = useState(0);\n  const [totalIncomeAmountLCIncomeGL, setTotalIncomeAmountLCIncomeGL] =\n    useState(0);\n  const [totalIncomeAmountIncomeGL, setTotalIncomeAmountIncomeGL] = useState(0);\n  const [totalIncomeAmountLC, setTotalIncomeAmountLC] = useState(0);\n  const [totalCostsInTool, setTotalCostsInTool] = useState(0);\n  const [totalIncomeInTool, setTotalIncomeInTool] = useState(0);\n  const [totalCostsInToolEUR, setTotalCostsInToolEUR] = useState(0);\n  const [totalIncomeInToolEUR, setTotalIncomeInToolEUR] = useState(0);\n  // const { fps, avgFps } = useFps(20);\n  const [tableWidth, setTableWidth] = useState(1000);\n  const [submissions, setSubmissions] = useState<Submission[]>([]);\n  const [filteredSubmissions, setFilteredSubmissions] = useState<Submission[]>(\n    []\n  );\n  const [\n    filteredCommunicationSubmissions,\n    setFilteredCommunicationSubmissions,\n  ] = useState<Submission[]>([]);\n  const [communicationSubmissions, setCommunicationSubmissions] = useState<\n    Submission[]\n  >([]);\n  const [onlyMine, setOnlyMine] = useState(false);\n  const [scrollLeft, setScrollLeft] = React.useState(0);\n  const [defaultColumnsWidth, setDefaultColumnsWidth] = useState({});\n  const onScroll = React.useCallback(\n    (args) => {\n      if (args.scrollLeft !== scrollLeft) {\n        setScrollLeft(args.scrollLeft);\n      }\n    },\n    [scrollLeft]\n  );\n  // const [heapInfo, setHeapInfo] = useState<any>({\n  //   total: 0,\n  //   allocated: 0,\n  //   current: 0,\n  //   domSize: 0,\n  // });\n  const [totalRequests, setTotalRequests] = useState(1);\n\n  useEffect(() => {\n    fetchDropdowns().then(() => forceUpdate());\n  }, []);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n\n  // useEffect(() => {\n  //   getHeapInfo();\n  //   const interval = setInterval(() => {\n  //     getHeapInfo();\n  //   }, 5000);\n\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  useEffect(() => {\n    let tca = 0;\n    let tcal = 0;\n    let tcit = 0;\n    let tiit = 0;\n    let tcite = 0;\n    let tiite = 0;\n    let tcacgl = 0;\n    let tia = 0;\n    let tial = 0;\n    let tcalcgl = 0;\n    let tialigl = 0;\n    let tiaigl = 0;\n    filteredSubmissions.forEach((subm) => {\n      if (subm.parentId === null) {\n        tca += subm.data.costAmountEUR || 0;\n        tcacgl += subm.data.costAmountEURCostGL || 0;\n        tcal += subm.data.costAmountLC || 0;\n        tia += subm.data.incomeAmountEURSI || 0;\n        tial += subm.data.incomeAmountLCSI || 0;\n        tcalcgl += subm.data.costAmountLCCostGL || 0;\n        tialigl += subm.data.incomeAmountLCIncomeGL || 0;\n        tiaigl += subm.data.incomeAmountEurIncomeGL || 0;\n      }\n    });\n    tcit = -(tcal + tcalcgl);\n    tiit = -(tial + tialigl);\n    tcite = -(tca + tcacgl);\n    tiite = -(tia + tiaigl);\n    setTotalCostAmount(tca);\n    setTotalCostAmountCostGL(tcacgl);\n    setTotalCostAmountLC(tcal);\n    setTotalCostAmountLCCostGL(tcalcgl);\n    setTotalIncomeAmount(tia);\n    setTotalIncomeAmountLCIncomeGL(tialigl);\n    setTotalIncomeAmountLC(tial);\n    setTotalIncomeAmountIncomeGL(tiaigl);\n    setTotalCostsInTool(tcit);\n    setTotalIncomeInTool(tiit);\n    setTotalCostsInToolEUR(tcite);\n    setTotalIncomeInToolEUR(tiite);\n    forceUpdate();\n  }, [filteredSubmissions]);\n\n  useEffect(() => {\n    var filteredMap = new Map();\n    var filtered: Submission[] = [];\n    var cFilteredMap = new Map();\n    var filteredCommunication: Submission[] = [];\n\n    var f: FilterField[] = JSON.parse(JSON.stringify(filters));\n\n    if (onlyMine) {\n      f.push({\n        columnValue: \"author\",\n        columnLabel: \"Author\",\n        type: \"string\",\n        filter: \"exact\",\n        values: [],\n        selectedValues: [currentUser.displayName],\n      } as FilterField);\n    }\n    if (f.length > 0 && submissions.length > 0) {\n      submissions.forEach((submission) => {\n        var valid = true;\n\n        for (let filter of f) {\n          if (\n            filter.columnLabel.includes(\n              \"Input of Local Marketing Department\"\n            ) ||\n            filter.columnLabel.includes(\n              \"Input of Central Marketing Controlling Team\"\n            )\n          ) {\n            return;\n          }\n\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"string\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    if (\n                      filter.columnValue === \"data.documentNumber\" ||\n                      filter.columnValue === \"data.costAccount\" ||\n                      filter.columnValue === \"data.documentNumberSI\" ||\n                      filter.columnValue === \"data.incomeAccountSI\" ||\n                      filter.columnValue === \"data.documentNumberCostGL\" ||\n                      filter.columnValue === \"data.costAccountCostGL\" ||\n                      filter.columnValue === \"data.documentNumberIncomeGL\" ||\n                      filter.columnValue === \"data.incomeAccountIncomeGL\"\n                    ) {\n                      valid = value\n                        .toString()\n                        .endsWith(filter.selectedValues[0].toString());\n                    } else {\n                      valid =\n                        filter.selectedValues[0].toString() ===\n                        value.toString();\n                    }\n                    break;\n                  case \"includes\":\n                    if (\n                      !value\n                        .toString()\n                        .includes(filter.selectedValues[0].toString())\n                    ) {\n                      valid = false;\n                    }\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    // eslint-disable-next-line no-loop-func\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n          if (!valid) {\n            return;\n          }\n        }\n\n        if (valid) {\n          // submission.parentId = null;\n          // if (submission.parentId !== null) {\n          //   var parent = sourceSubmissions.get(submission.parentId);\n          //   if (parent !== undefined && parent.id !== undefined) {\n          //     filteredMap.set(parent.id, parent);\n          //   }\n          //   submissions.forEach((s) => {\n          //     if (s.parentId === submission.parentId) {\n          //       filteredMap.set(s.id, s);\n          //     }\n          //   });\n          // }\n          filteredMap.set(submission.id, submission);\n        }\n      });\n      ///\n      communicationSubmissions.forEach((submission) => {\n        var valid = true;\n        filters.forEach((filter) => {\n          if (\n            !filter.columnLabel.includes(\n              \"Input of Local Marketing Department\"\n            ) &&\n            !filter.columnLabel.includes(\n              \"Input of Central Marketing Controlling Team\"\n            )\n          ) {\n            return;\n          }\n          if (\n            filter.selectedValues !== null &&\n            filter.selectedValues.length > 0\n          ) {\n            var value = _.get(submission, filter.columnValue);\n            if (value === undefined) {\n              valid = false;\n              return;\n            }\n            switch (filter.type) {\n              case \"string\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid =\n                      filter.selectedValues[0].toString() === value.toString();\n                    break;\n                  case \"includes\":\n                    valid = value\n                      .toString()\n                      .includes(filter.selectedValues[0].toString());\n                    break;\n                }\n                break;\n              case \"number\":\n                switch (filter.filter) {\n                  case \"exact\":\n                    valid = filter.selectedValues[0] === value;\n                    break;\n                  case \"range\":\n                    if (filter.selectedValues.length === 2) {\n                      valid =\n                        value >= filter.selectedValues[0] &&\n                        value <= filter.selectedValues[1];\n                    }\n                    break;\n                }\n                break;\n              case \"dropdown\":\n              case \"multiple-dropdown\":\n                switch (filter.filter) {\n                  case \"includes\":\n                    var exists = false;\n                    filter.selectedValues.forEach((filterValue) => {\n                      if (filterValue.toString() === value) {\n                        exists = true;\n                      }\n                    });\n                    if (!exists) {\n                      valid = false;\n                    }\n                    break;\n                  case \"exact\":\n                    valid = false;\n                    break;\n                }\n                break;\n              case \"date\":\n                var v = new Date(value).setHours(0, 0, 0, 0);\n                if (\n                  v !== null &&\n                  filter.filter === \"range\" &&\n                  filter.selectedValues.length === 2 &&\n                  filter.selectedValues[0] !== null &&\n                  filter.selectedValues[1] !== null\n                ) {\n                  valid =\n                    v >= filter.selectedValues[0].setHours(0, 0, 0, 0) &&\n                    v <= filter.selectedValues[1].setHours(0, 0, 0, 0);\n                } else if (\n                  v !== null &&\n                  filter.selectedValues[0] !== null &&\n                  filter.filter === \"exact\" &&\n                  filter.selectedValues.length === 1\n                ) {\n                  valid = v === filter.selectedValues[0].setHours(0, 0, 0, 0);\n                }\n                break;\n            }\n          }\n        });\n        if (valid) {\n          // submission.parentId = null;\n          // if (submission.parentId !== null) {\n          //   var parent = sourceSubmissions.get(submission.parentId);\n          //   if (parent !== undefined && parent.id !== undefined) {\n          //     cFilteredMap.set(parent.id, parent);\n          //   }\n          // }\n          cFilteredMap.set(submission.id, submission);\n        }\n      });\n      ///\n\n      cFilteredMap.forEach((value) => {\n        if (value.parentId !== null) {\n          if (!cFilteredMap.has(value.parentId)) {\n            value.parentId = null;\n          }\n        }\n        filteredCommunication.push(value);\n      });\n      filteredMap.forEach((value) => {\n        if (value.parentId !== null) {\n          if (!filteredMap.has(value.parentId)) {\n            value.parentId = null;\n          }\n        }\n        filtered.push(value);\n      });\n\n      setFilteredCommunicationSubmissions(filteredCommunication);\n      setFilteredSubmissions(filtered);\n    } else {\n      setFilteredSubmissions(submissions);\n      setFilteredCommunicationSubmissions(communicationSubmissions);\n    }\n  }, [filters, submissions, communicationSubmissions, onlyMine]);\n\n  // const getHeapInfo = () => {\n  //   var memory = (window.performance as any).memory;\n  //   if (memory !== undefined) {\n  //     var info: any = {\n  //       total: memory.jsHeapSizeLimit,\n  //       allocated: memory.totalJSHeapSize,\n  //       current: memory.usedJSHeapSize,\n  //       domSize: document.getElementsByTagName(\"*\").length,\n  //     };\n  //     setHeapInfo(info);\n  //   }\n  // };\n  const getVisibleColumnIndices = (offset: number, columns: any) => {\n    var netOffsets: any[] = [],\n      offsetSum = 0,\n      leftBound = offset - 200,\n      rightBound = offset + tableWidth,\n      visibleIndices: any[] = [];\n\n    columns.forEach((col: any) => {\n      netOffsets.push(offsetSum);\n      offsetSum += col.width;\n    });\n\n    netOffsets.forEach((columnOffset, colIdx) => {\n      var isOutside = columnOffset < leftBound || columnOffset > rightBound;\n      if (!isOutside) {\n        visibleIndices.push(colIdx);\n      }\n    });\n\n    return visibleIndices;\n  };\n  // ________________________________\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // |              |               |\n  // --------------------------------\n\n  // // rightBound = offset+tableWidth;\n  //  <-------------*--------------->\n  //  <-------------************---->\n\n  //  // leftBound = offset;\n  //  <-------------*--------------->\n  //  <--************--------------->\n\n  // leftBound = offset - maxColumnWidth;\n\n  //                 offset ->\n  // ********<---------------|--------------->*********\n  //         leftBound       -      rightBound\n\n  // leftBound = offset;\n  // rightBound = tableWidth;\n\n  // isOutside = columnOffset < leftBound || columnOffset > rightBound;\n\n  // if (!isOutside) {\n  //     // render column\n  // } else {\n  //     // remove from DOM\n  // }\n  const rowRenderer = React.useCallback(\n    ({ cells, columns }) => {\n      // null out hidden content on scroll\n      if (cells.length === 89) {\n        const visibleIndices = getVisibleColumnIndices(scrollLeft, columns);\n        const startIndex = visibleIndices[0];\n        const visibleCells: any = visibleIndices.map((x) => cells[x]);\n\n        if (startIndex > 0) {\n          let width = 0;\n          for (let i = 0; i < visibleIndices[0]; i++) {\n            width += cells[i].props.style.width;\n          }\n\n          const placeholder = <div key=\"placeholder\" style={{ width }} />;\n          return [placeholder, visibleCells];\n        }\n        return visibleCells;\n      }\n\n      return cells;\n    },\n    [scrollLeft]\n  );\n\n  async function partialUpdate(submission: string, path: string, value: any) {\n    setTotalRequests(totalRequests + 1);\n    if (path.includes(\"[\")) {\n      var s = path.split(\".\");\n      s.shift();\n      path = s.join(\".\");\n    }\n    RestAPI.updateSubmissionPartial(submission, path, value);\n  }\n\n  function handleCellUpdate(submission: string, path: string, value: any) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submission);\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n      if (_.get(submissions, path) !== value) {\n        _.set(submissions, path, value);\n        partialUpdate(submission, path, value);\n      }\n    }\n  }\n  function handleCommunicationCellUpdate(\n    submission: string,\n    path: string,\n    value: any\n  ) {\n    var submissionIndex = communicationSubmissions.findIndex(\n      (s) => s.id === submission\n    );\n\n    if (submissionIndex > -1) {\n      path = `[${submissionIndex}].${path}`;\n\n      if (_.get(communicationSubmissions, path) !== value) {\n        _.set(communicationSubmissions, path, value);\n        partialUpdate(submission, path, value);\n        var datePath = `[${submissionIndex}].data.entryDateLMD`;\n        if (_.get(communicationSubmissions, datePath) === undefined) {\n          _.set(communicationSubmissions, datePath, new Date());\n          partialUpdate(submission, datePath, new Date().toString());\n        }\n      }\n    }\n  }\n  function deleteSubmission(submissionId: string) {\n    var tbd: string[] = [submissionId];\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp.splice(submissionIndex, 1);\n      temp.map((s, index) => {\n        if (s.parentId !== null && s.parentId === submissionId) {\n          if (s.id) {\n            temp.splice(index, 1);\n            tbd.push(s.id);\n          }\n        }\n      });\n      setSubmissions(temp);\n      RestAPI.deleteSubmission(submissionId);\n    }\n  }\n  function parentizeSubmission(submissionId: string) {\n    var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n    if (submissionIndex > -1) {\n      var temp = [...submissions];\n      temp[submissionIndex].parentId = null;\n      partialUpdate(submissionId, \"parentId\", null);\n      setSubmissions(temp);\n    }\n  }\n\n  function reject(submissionId: string, viewId: string) {\n    RestAPI.getView(viewId).then((response) => {\n      response.data.submission.data[\"_rejected\"] = true;\n      RestAPI.createDraft(response.data).then(() => {\n        toast(\n          <Toast\n            title={\"Project Rejected\"}\n            message={\n              \"Project was rejected and can now be found in drafts section\"\n            }\n            type={\"success\"}\n          />\n        );\n      });\n      RestAPI.deleteSubmission(submissionId);\n      var temp = [...submissions];\n      var submissionIndex = submissions.findIndex((s) => s.id === submissionId);\n      temp.splice(submissionIndex, 1);\n      setSubmissions(temp);\n    });\n  }\n\n  function callSap(submissionId: string) {\n    RestAPI.callSapSubmission(submissionId)\n      .then((response) => {\n        var message = `Order ${response.data.IntOrderOut.EX_ORDERID} has been successfully created`;\n        var type = \"success\";\n\n        switch (response.data.IntOrderOut.EX_SUBRC) {\n          case 4:\n            message = `Order ${response.data.IntOrderOut.EX_ORDERID} already exists`;\n            type = \"error\";\n        }\n\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={<div dangerouslySetInnerHTML={{ __html: message }} />}\n            type={type as ToastType}\n          />\n        );\n        if (type === \"success\") {\n          handleCellUpdate(submissionId, \"data.status\", \"Created\");\n        }\n      })\n      .catch((error) => {\n        toast(\n          <Toast\n            title={\"SAP Response\"}\n            message={\n              <div\n                dangerouslySetInnerHTML={{ __html: \"Failed to create order\" }}\n              />\n            }\n            type={\"error\"}\n          />\n        );\n      });\n  }\n\n  async function handleResize(column: string, width: number) {\n    var c = localStorage.getItem(\"vendors.columns\");\n    var columns = {} as any;\n    if (c !== null) {\n      columns = JSON.parse(c);\n    }\n    columns[column] = width;\n    localStorage.setItem(\"vendors.columns\", JSON.stringify(columns));\n  }\n\n  function columnWidth(column: string, dw: number) {\n    var sd = (defaultColumnsWidth as any)[column];\n    return sd ? sd : dw;\n  }\n  //   async function saveCellWidth(cell: string, width: number) {\n  //     localStorage.setItem(cell, width.toString());\n  //   }\n  //   function getCellWidth(cell: string, defaultWidth: number) {\n  //     console.log(\"get\");\n  //     var value = localStorage.getItem(cell);\n  //     if (value !== null) {\n  //       return Number(value);\n  //     }\n  //     return defaultWidth;\n  //   }\n\n  useEffect(() => {\n    var selected = localStorage.getItem(\"template\") || \"local\";\n    setSelectedTemplate(selected);\n    var template = templates.find((t) => t.name == selected);\n    if (template) {\n      setDisplayedColumns(template.columns);\n      setFilters(template.filters);\n    }\n  }, [templates]);\n\n  useEffect(() => {\n    localStorage.setItem(\"template\", selectedTemplate);\n  }, [selectedTemplate]);\n\n  useEffect(() => {\n    RestAPI.getTemplates().then((response) => setTemplates(response.data));\n    RestAPI.getSubmissions().then((response) => {\n      var vSubs: Submission[] = [];\n      var subs = response.data;\n      var ss = new Map();\n      var cSubs: Submission[] = [];\n\n      subs.forEach((sub) => {\n        if (sub.group === \"communication\") {\n          cSubs.push(sub);\n        } else {\n          vSubs.push(sub);\n        }\n        ss.set(sub.id, sub);\n      });\n\n      vSubs.map((sub) => {\n        if (sub.parentId === null) {\n          sub.data.costAmountLC = 0;\n          sub.data.costAmountEUR = 0;\n          sub.data.incomeAmountLCSI = 0;\n          sub.data.incomeAmountEURSI = 0;\n          sub.data.costAmountLCCostGL = 0;\n          sub.data.costAmountEURCostGL = 0;\n          sub.data.incomeAmountLCIncomeGL = 0;\n          sub.data.incomeAmountEurIncomeGL = 0;\n          sub.data.totalIncomeLC = 0;\n          sub.data.totalCostsLC = 0;\n          sub.data.totalIncomeEUR = 0;\n          sub.data.totalCostsEUR = 0;\n          sub.data.totalCostsTool = 0;\n          sub.data.totalIncomeTool = 0;\n          vSubs\n            .filter((s) => s.parentId === sub.id)\n            .forEach((cs) => {\n              sub.data.costAmountLC += cs.data.costAmountLC || 0;\n              sub.data.costAmountEUR += cs.data.costAmountEUR || 0;\n              sub.data.incomeAmountLCSI += cs.data.incomeAmountLCSI || 0;\n              sub.data.incomeAmountEURSI += cs.data.incomeAmountEURSI || 0;\n              sub.data.costAmountLCCostGL += cs.data.costAmountLCCostGL || 0;\n              sub.data.costAmountEURCostGL += cs.data.costAmountEURCostGL || 0;\n              sub.data.incomeAmountLCIncomeGL +=\n                cs.data.incomeAmountLCIncomeGL || 0;\n              sub.data.incomeAmountEurIncomeGL +=\n                cs.data.incomeAmountEurIncomeGL || 0;\n              sub.data.totalIncomeLC += -(\n                cs.data.incomeAmountLCSI ||\n                0 + cs.data.incomeAmountLCIncomeGL ||\n                0\n              );\n              sub.data.totalCostsLC += -(\n                cs.data.costAmountLC ||\n                0 + cs.data.costAmountLCCostGL ||\n                0\n              );\n              sub.data.totalIncomeEUR += -(\n                cs.data.incomeAmountEURSI ||\n                0 + cs.data.incomeAmountEURIncomeGL ||\n                0\n              );\n              sub.data.totalCostsEUR += -(\n                cs.data.costAmountEUR ||\n                0 + cs.data.costAmountEURCostGL ||\n                0\n              );\n              sub.data.totalCostsTool +=\n                cs.data.costAmountLC || 0 + cs.data.costAmountLCCostGL || 0;\n              sub.data.totalIncomeTool +=\n                cs.data.incomeAmountLCSI ||\n                0 + cs.data.incomeAmountLCIncomeGL ||\n                0;\n            });\n        }\n      });\n\n      setCommunicationSubmissions(cSubs);\n      setFilteredCommunicationSubmissions(cSubs);\n      setSourceSubmissions(ss);\n      setSubmissions(vSubs);\n      setFilteredSubmissions(vSubs);\n    });\n  }, []);\n  useEffect(() => {\n    getAccountInfo().then((response) => {\n      if (response) {\n        setCurrentUser(response);\n      }\n    });\n  }, []);\n\n  function findSubmissionsByPO(po: string) {\n    var s: Submission[] = [];\n    var parent = submissions.find(\n      (submission) =>\n        submission.data.projectNumber === po && submission.parentId === null\n    );\n    if (parent !== undefined) {\n      s.push(parent);\n      s.push(...submissions.filter((sub) => sub.parentId === parent?.id));\n    }\n    return s;\n  }\n\n  function visibilityController(group: string, key: string) {\n    return !displayedColumns.includes(group) && !displayedColumns.includes(key);\n  }\n\n  function lmdColumnEdit(value: any) {\n    if (value === \"\" || value === \"INCOMPLETE\") {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  const tableCells = [\n    {\n      key: \"__expand\",\n      dataKey: \"__expand\",\n      title: \"\",\n      width: 50,\n      frozen: Column.FrozenDirection.LEFT,\n      resizable: false,\n      cellRenderer: () => <div />,\n      className: \"expand\",\n    },\n    {\n      key: \"data.companyCode\",\n      dataKey: \"data.companyCode\",\n      title: \"Company Code\",\n      header: \"General Information\",\n      group: \"General Information\",\n      width: columnWidth(\"data.companyCode\", 150),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.companyCode\"),\n      type: \"number\",\n      // className: \"dark-green-3-border\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectNumber\",\n      dataKey: \"data.projectNumber\",\n      title: \"Project Number\",\n      width: columnWidth(\"data.projectNumber\", 150),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\"generalInformation\", \"data.projectNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localProjectNumber\",\n      dataKey: \"data.localProjectNumber\",\n      title: \"Local Project Number\",\n      width: columnWidth(\"data.localProjectNumber\", 150),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.localProjectNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          readonly={true}\n          type={\"text\"}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectName\",\n      dataKey: \"data.projectName\",\n      title: \"Project Name\",\n      width: columnWidth(\"data.projectName\", 200),\n      resizable: true,\n      group: \"General Information\",\n\n      hidden: visibilityController(\"generalInformation\", \"data.projectName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignStartDate\",\n      dataKey: \"data.campaignStartDate\",\n      title: \"Campaign Start Date\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.campaignStartDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.campaignStartDate\"\n      ),\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignEndDate\",\n      dataKey: \"data.campaignEndDate\",\n      title: \"Campaign End Date\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.campaignEndDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"generalInformation\",\n        \"data.campaignEndDate\"\n      ),\n      type: \"date\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectType\",\n      dataKey: \"data.projectType\",\n      title: \"Project Type\",\n      group: \"General Information\",\n\n      width: columnWidth(\"data.projectType\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.projectType\"),\n      type: \"dropdown\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          loadOptions={loadOptions}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"author\",\n      dataKey: \"author\",\n      title: \"Author\",\n      group: \"General Information\",\n      width: columnWidth(\"author\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"author\"),\n      type: \"text\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.status\",\n      dataKey: \"data.status\",\n      title: \"Status\",\n      group: \"General Information\",\n      width: columnWidth(\"data.status\", 250),\n      resizable: true,\n      hidden: visibilityController(\"generalInformation\", \"data.status\"),\n      type: \"text\",\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f4fcf9\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.country\",\n      dataKey: \"data.country\",\n      title: \"Countries EMEA\",\n      header: \"Project Information\",\n      width: columnWidth(\"data.country\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.country\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCodeEMEA\",\n      dataKey: \"data.countryCodeEMEA\",\n      title: \"Country Code EMEA\",\n      width: columnWidth(\"data.countryCodeEMEA\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCodeEMEA\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.parentProjectNumber\",\n      dataKey: \"data.parentProjectNumber\",\n      title: \"Parent Project Number\",\n      width: columnWidth(\"data.parentProjectNumber\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.parentProjectNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.countryShare\",\n      dataKey: \"data.countryShare\",\n      title: \"% Country Share\",\n      width: columnWidth(\"data.countryShare\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.countryShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryBudgetContributionCC\",\n      dataKey: \"data.countryBudgetContributionCC\",\n      title: \"Country Budget Contribution (CC)\",\n      width: columnWidth(\"data.countryBudgetContributionCC\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryBudgetContributionCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.countryCostEstimationCC\",\n      dataKey: \"data.countryCostEstimationCC\",\n      title: \"Country Cost Estimation (CC)\",\n      width: columnWidth(\"data.countryCostEstimationCC\", 250),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.countryCostEstimationCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    // {\n    //   key: \"data.manufacturerNumber\",\n    //   dataKey: \"data.manufacturerNumber\",\n    //   title: \"Manufacturer Number\",\n    //   group: \"Project Information\",\n\n    //   width: columnWidth(\"data.manufacturerNumber\", 200),\n    //   resizable: true,\n    //   hidden: visibilityController(\n    //     \"projectInformation\",\n    //     \"data.manufacturerNumber\"\n    //   ),\n    //   cellRenderer: (props: any) => (\n    //     <EditableTableCell\n    //       type={\"text\"}\n    //       readonly={props.rowData.data.status !== \"Incomplete\"}\n    //       backgroundColor={\n    //         props.rowData.data.status === \"Incomplete\"\n    //           ? props.cellData && props.cellData.length > 0\n    //             ? \"#f5faef\"\n    //             : \"#f7cdd6\"\n    //           : \"#f5faef\"\n    //       }\n    //       onUpdate={handleCellUpdate}\n    //       rowIndex={props.rowIndex}\n    //       columnKey={props.column.dataKey}\n    //       rowData={props.rowData}\n    //       initialValue={props.cellData}\n    //     />\n    //   ),\n    // },\n    {\n      key: \"data.manufacturerNumber\",\n      dataKey: \"data.manufacturerNumber\",\n      title: \"Manufacturer Number\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.manufacturerNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.manufacturerNumber\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"value-dropdown\"}\n          readonly={props.rowData.data.status !== \"Incomplete\"}\n          loadOptions={() => {\n            return props.rowData.data.companyCode === \"1550\"\n              ? InternationalVendorsNames\n              : VendorsNames;\n          }}\n          backgroundColor={\n            props.rowData.data.status === \"Incomplete\"\n              ? props.cellData && props.cellData.length > 0\n                ? \"#f5faef\"\n                : \"#f7cdd6\"\n              : \"#f5faef\"\n          }\n          onUpdate={(id: string, path: string, value: any) => {\n            if (typeof value === \"object\") {\n              handleCellUpdate(id, \"data.status\", \"New\");\n              handleCellUpdate(id, path, value.hersteller);\n              handleCellUpdate(id, \"data.debitorNumber\", value.debitorischer);\n            } else {\n              handleCellUpdate(id, path, \"\");\n              handleCellUpdate(id, \"data.debitorNumber\", \"\");\n            }\n          }}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorName\",\n      dataKey: \"data.vendorName\",\n      group: \"Project Information\",\n\n      title: \"Vendor Name\",\n      width: columnWidth(\"data.vendorName\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorName\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.debitorNumber\",\n      dataKey: \"data.debitorNumber\",\n      title: \"SAP Debitor Number\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.debitorNumber\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.debitorNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.status !== \"Incomplete\"}\n          backgroundColor={\n            props.rowData.data.status === \"Incomplete\"\n              ? props.cellData && props.cellData.length > 0\n                ? \"#f5faef\"\n                : \"#f7cdd6\"\n              : \"#f5faef\"\n          }\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    // {\n    //   key: \"data.creditorNumber\",\n    //   dataKey: \"data.creditorNumber\",\n    //   group: \"Project Information\",\n\n    //   title: \"SAP Creditor Number\",\n    //   width: columnWidth(\"data.creditorNumber\", 200),\n    //   resizable: true,\n    //   hidden: visibilityController(\"projectInformation\", \"data.creditorNumber\"),\n    //   cellRenderer: (props: any) => (\n    //     <EditableTableCell\n    //       type={\"text\"}\n    //       readonly={props.rowData.data.status !== \"Incomplete\"}\n    //       backgroundColor={\n    //         props.rowData.data.status === \"Incomplete\"\n    //           ? props.cellData && props.cellData.length > 0\n    //             ? \"#f5faef\"\n    //             : \"#f7cdd6\"\n    //           : \"#f5faef\"\n    //       }\n    //       onUpdate={handleCellUpdate}\n    //       rowIndex={props.rowIndex}\n    //       columnKey={props.column.dataKey}\n    //       rowData={props.rowData}\n    //       initialValue={props.cellData}\n    //     />\n    //   ),\n    // },\n    {\n      key: \"data.budgetSource\",\n      dataKey: \"data.budgetSource\",\n      title: \"Budget Source\",\n      width: columnWidth(\"data.budgetSource\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\"projectInformation\", \"data.budgetSource\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorBudgetCurrency\",\n      dataKey: \"data.vendorBudgetCurrency\",\n      title: \"Vendor Budget Currency\",\n      width: columnWidth(\"data.vendorBudgetCurrency\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.vendorBudgetCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorAmount\",\n      dataKey: \"data.vendorAmount\",\n      group: \"Project Information\",\n\n      title: \"Vendor Amount\",\n      width: columnWidth(\"data.vendorAmount\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorAmount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignCurrency\",\n      dataKey: \"data.campaignCurrency\",\n      title: \"Campaign Currency\",\n      width: columnWidth(\"data.campaignCurrency\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          readonly={true}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeCC\",\n      group: \"Project Information\",\n\n      dataKey: \"data.estimatedIncomeCC\",\n      title: \"Estimated Income (Campaign Currency)\",\n      width: columnWidth(\"data.estimatedIncomeCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsCC\",\n      group: \"Project Information\",\n\n      dataKey: \"data.estimatedCostsCC\",\n      title: \"Estimated Costs (Campaign Currency)\",\n      width: columnWidth(\"data.estimatedCostsCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.estimatedResultCC\",\n      dataKey: \"data.estimatedResultCC\",\n      title: \"Estimated Result (Campaign Currency)\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedResultCC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultCC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedIncomeEUR\",\n      dataKey: \"data.estimatedIncomeEUR\",\n      title: \"Estimated Income EUR\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedIncomeEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedIncomeEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedCostsEUR\",\n      dataKey: \"data.estimatedCostsEUR\",\n      title: \"Estimated Costs EUR\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.estimatedCostsEUR\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedCostsEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.estimatedResultEUR\",\n      dataKey: \"data.estimatedResultEUR\",\n      title: \"Estimated Result EUR\",\n      width: columnWidth(\"data.estimatedResultEUR\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.estimatedResultEUR\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorShare\",\n      dataKey: \"data.vendorShare\",\n      title: \"% Vendor Share\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.vendorShare\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.vendorShare\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.businessUnit\",\n      dataKey: \"data.businessUnit\",\n      group: \"Project Information\",\n\n      title: \"Business Unit\",\n      width: columnWidth(\"data.businessUnit\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.businessUnit\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.PH1\",\n      dataKey: \"data.PH1\",\n      title: \"PH1\",\n      width: columnWidth(\"data.PH1\", 200),\n      group: \"Project Information\",\n\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.PH1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.campaignChannel\",\n      dataKey: \"data.campaignChannel\",\n      title: \"Campaign Channel\",\n      width: columnWidth(\"data.campaignChannel\", 200),\n      resizable: true,\n      group: \"Project Information\",\n\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.campaignChannel\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.targetAudience\",\n      dataKey: \"data.targetAudience\",\n      title: \"Target Audience\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.targetAudience\", 200),\n      resizable: true,\n      hidden: visibilityController(\"projectInformation\", \"data.targetAudience\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.marketingResponsible\",\n      group: \"Project Information\",\n      dataKey: \"data.marketingResponsible\",\n      title: \"Marketing Responsible\",\n      width: columnWidth(\"data.marketingResponsible\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.marketingResponsible\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.projectApprover\",\n      dataKey: \"data.projectApprover\",\n      group: \"Project Information\",\n      title: \"Project Approver\",\n      width: columnWidth(\"data.projectApprover\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.projectApprover\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalInformation\",\n      dataKey: \"data.additionalInformation\",\n      title: \"Additional Information\",\n      group: \"Project Information\",\n\n      width: columnWidth(\"data.additionalInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"projectInformation\",\n        \"data.additionalInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f5faef\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderServiceProvider\",\n      dataKey: \"data.purchaseOrderServiceProvider\",\n      title: \"Purchase Order Service Provider\",\n      group: \"Purchase Order\",\n\n      header: \"Purchase Order\",\n      width: columnWidth(\"data.purchaseOrderServiceProvider\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderServiceProvider\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.vendorNamePO\",\n      dataKey: \"data.vendorNamePO\",\n      title: \"Vendor Name\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.vendorNamePO\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.vendorNamePO\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueOfServiceOrderedLC\",\n      dataKey: \"data.netValueOfServiceOrderedLC\",\n      group: \"Purchase Order\",\n\n      title: \"Net Value of Service Ordered (LC)\",\n      width: columnWidth(\"data.netValueOfServiceOrderedLC\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.netValueOfServiceOrderedLC\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.localCurrency\",\n      dataKey: \"data.localCurrency\",\n      title: \"Local Currency\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.localCurrency\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.localCurrency\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValuePOC\",\n      dataKey: \"data.netValuePOC\",\n      title: \"Net Value (Purchase Order Currency)\",\n      width: columnWidth(\"data.netValuePOC\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValuePOC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderCurrency\",\n      dataKey: \"data.purchaseOrderCurrency\",\n      title: \"Purchase Order Currency\",\n      width: columnWidth(\"data.purchaseOrderCurrency\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"purchaseOrder\",\n        \"data.purchaseOrderCurrency\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.netValueEur\",\n      dataKey: \"data.netValueEur\",\n      title: \"Net Value (EUR)\",\n      width: columnWidth(\"data.netValueEur\", 200),\n      group: \"Purchase Order\",\n\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.netValueEur\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.purchaseOrderStatus\",\n      dataKey: \"data.purchaseOrderStatus\",\n      title: \"Purchase Order Status\",\n      group: \"Purchase Order\",\n\n      width: columnWidth(\"data.purchaseOrderStatus\", 200),\n      resizable: true,\n      hidden: visibilityController(\"purchaseOrder\", \"data.purchaseOrderStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#fff7f1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonth\",\n      dataKey: \"data.yearMonth\",\n      title: \"Year / Month\",\n      header: \"Cost Invoices\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.yearMonth\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.yearMonth\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentType\",\n      dataKey: \"data.documentType\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentType\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentType\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDate\",\n      dataKey: \"data.postingDate\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDate\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.postingDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDate\",\n      dataKey: \"data.documentDate\",\n      title: \"Document Date\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.documentDate\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.documentDate\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumber\",\n      dataKey: \"data.documentNumber\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumber\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.documentNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumber\",\n      dataKey: \"data.invoiceNumber\",\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumber\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.invoiceNumber\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.budgetSource === \"No budget\"}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccount\",\n      dataKey: \"data.costAccount\",\n      title: \"Cost Account\",\n      width: columnWidth(\"data.costAccount\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costAccount\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1\",\n      dataKey: \"data.name1\",\n      title: \"Invoice Supplier\",\n      width: columnWidth(\"data.name1\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.name1\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLC\",\n      dataKey: \"data.costAmountLC\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLC\", 200),\n      group: \"Cost Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalCostAmountLC)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDC\",\n      dataKey: \"data.costAmountDC\",\n      title: \"Cost Amount (DC)\",\n      group: \"Cost Invoices\",\n\n      width: columnWidth(\"data.costAmountDC\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountDC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dc\",\n      dataKey: \"data.dc\",\n      title: \"DC\",\n      width: columnWidth(\"data.dc\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.dc\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEUR\",\n      dataKey: \"data.costAmountEUR\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEUR\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costAmountEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          backgroundColor=\"#f2fcfc\"\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalCostAmount)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costStatus\",\n      dataKey: \"data.costStatus\",\n      title: \"Cost Status\",\n      width: columnWidth(\"data.costStatus\", 200),\n      resizable: true,\n      group: \"Cost Invoices\",\n\n      hidden: visibilityController(\"costInvoices\", \"data.costStatus\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthSI\",\n      dataKey: \"data.yearMonthSI\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthSI\", 200),\n      group: \"Sales Invoices\",\n\n      header: \"Sales Invoices\",\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.yearMonthSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeSI\",\n      dataKey: \"data.documentTypeSI\",\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentTypeSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateSI\",\n      dataKey: \"data.postingDateSI\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.postingDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateSI\",\n      dataKey: \"data.documentDateSI\",\n      title: \"Document Date\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.documentDateSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentDateSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberSI\",\n      group: \"Sales Invoices\",\n\n      dataKey: \"data.documentNumberSI\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.documentNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceNumberSI\",\n      dataKey: \"data.invoiceNumberSI\",\n      group: \"Sales Invoices\",\n\n      title: \"Invoice Number\",\n      width: columnWidth(\"data.invoiceNumberSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceNumberSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={props.rowData.data.budgetSource === \"No budget\"}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountSI\",\n      dataKey: \"data.incomeAccountSI\",\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAccountSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.name1SI\",\n      dataKey: \"data.name1SI\",\n      title: \"Invoice Recipient\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.name1SI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.name1SI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n\n    {\n      key: \"data.incomeAmountLCSI\",\n      dataKey: \"data.incomeAmountLCSI\",\n      title: \"Income Amount (LC)\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.incomeAmountLCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountLCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalIncomeAmountLC)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCSI\",\n      dataKey: \"data.incomeAmountDCSI\",\n      title: \"Income Amount (DC)\",\n      group: \"Sales Invoices\",\n\n      width: columnWidth(\"data.incomeAmountDCSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountDCSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcSI\",\n      dataKey: \"data.dcSI\",\n      title: \"DC\",\n      width: columnWidth(\"data.dcSI\", 200),\n      resizable: true,\n      group: \"Sales Invoices\",\n\n      hidden: visibilityController(\"salesInvoices\", \"data.dcSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEURSI\",\n      dataKey: \"data.incomeAmountEURSI\",\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEURSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.incomeAmountEURSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalIncomeAmount)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.invoiceStatusSI\",\n      dataKey: \"data.invoiceStatusSI\",\n      title: \"Invoice Status (Paid/Not Paid)\",\n      width: columnWidth(\"data.invoiceStatusSI\", 200),\n      group: \"Sales Invoices\",\n\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.invoiceStatusSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"dropdown\"}\n          loadOptions={loadOptions}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.activityIdSI\",\n      group: \"Sales Invoices\",\n      dataKey: \"data.activityIdSI\",\n      title: \"Activity ID for Portal Vendors\",\n      width: columnWidth(\"data.activityIdSI\", 200),\n      resizable: true,\n      hidden: visibilityController(\"salesInvoices\", \"data.activityIdSI\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.additionalMarketingInformation\",\n      group: \"Sales Invoices\",\n      dataKey: \"data.additionalMarketingInformation\",\n      title: \"Additional Marketing Information\",\n      width: columnWidth(\"data.additionalMarketingInformation\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"salesInvoices\",\n        \"data.additionalMarketingInformation\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#fff7f8\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthCostGL\",\n      dataKey: \"data.yearMonthCostGL\",\n      title: \"Year / Month\",\n      header: \"Cost GL Postings\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.yearMonthCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.yearMonthCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeCostGL\",\n      dataKey: \"data.documentTypeCostGL\",\n      group: \"Cost GL Postings\",\n\n      title: \"Document Type\",\n      width: columnWidth(\"data.documentTypeCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentTypeCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateCostGL\",\n      group: \"Cost GL Postings\",\n\n      dataKey: \"data.postingDateCostGL\",\n      title: \"Posting Date\",\n      width: columnWidth(\"data.postingDateCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.postingDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateCostGL\",\n      dataKey: \"data.documentDateCostGL\",\n      title: \"Document Date\",\n      width: columnWidth(\"data.documentDateCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.documentDateCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberCostGL\",\n      dataKey: \"data.documentNumberCostGL\",\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.documentNumberCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.textCostGL\",\n      dataKey: \"data.textCostGL\",\n      title: \"Text\",\n      width: columnWidth(\"data.textCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.textCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAccountCostGL\",\n      dataKey: \"data.costAccountCostGL\",\n      title: \"Cost Account\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.costAccountCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAccountCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountLCCostGL\",\n      dataKey: \"data.costAmountLCCostGL\",\n      title: \"Cost Amount (LC)\",\n      width: columnWidth(\"data.costAmountLCCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountLCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalCostAmountLCCostGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountDCCostGL\",\n      dataKey: \"data.costAmountDCCostGL\",\n      title: \"Cost Amount (DC)\",\n      width: columnWidth(\"data.costAmountDCCostGL\", 200),\n      group: \"Cost GL Postings\",\n\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.costAmountDCCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcCostGL\",\n      dataKey: \"data.dcCostGL\",\n      title: \"DC\",\n      group: \"Cost GL Postings\",\n\n      width: columnWidth(\"data.dcCostGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"costGlPostings\", \"data.dcCostGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.costAmountEURCostGL\",\n      dataKey: \"data.costAmountEURCostGL\",\n      title: \"Cost Amount (EUR)\",\n      width: columnWidth(\"data.costAmountEURCostGL\", 200),\n      group: \"Cost GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"costGlPostings\",\n        \"data.costAmountEURCostGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f2fcfc\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalCostAmountCostGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.yearMonthIncomeGL\",\n      dataKey: \"data.yearMonthIncomeGL\",\n      title: \"Year / Month\",\n      width: columnWidth(\"data.yearMonthIncomeGL\", 200),\n      group: \"Income GL Postings\",\n\n      header: \"Income GL Postings\",\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.yearMonthIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentTypeIncomeGL\",\n      dataKey: \"data.documentTypeIncomeGL\",\n      title: \"Document Type\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.documentTypeIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentTypeIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.postingDateIncomeGL\",\n      dataKey: \"data.postingDateIncomeGL\",\n      title: \"Posting Date\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.postingDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.postingDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentDateIncomeGL\",\n      dataKey: \"data.documentDateIncomeGL\",\n      title: \"Document Date\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.documentDateIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentDateIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"date\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.documentNumberIncomeGL\",\n      dataKey: \"data.documentNumberIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Document Number\",\n      width: columnWidth(\"data.documentNumberIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.documentNumberIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.textIncomeGL\",\n      dataKey: \"data.textIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Text\",\n      width: columnWidth(\"data.textIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.textIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAccountIncomeGL\",\n      dataKey: \"data.incomeAccountIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Income Account\",\n      width: columnWidth(\"data.incomeAccountIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAccountIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountLCIncomeGL\",\n      dataKey: \"data.incomeAmountLCIncomeGL\",\n      title: \"Income Amount (LC)\",\n      width: columnWidth(\"data.incomeAmountLCIncomeGL\", 200),\n      resizable: true,\n      group: \"Income GL Postings\",\n\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountLCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalIncomeAmountLCIncomeGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountDCIncomeGL\",\n      dataKey: \"data.incomeAmountDCIncomeGL\",\n      title: \"Income Amount (DC)\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.incomeAmountDCIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountDCIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.dcIncomeGL\",\n      dataKey: \"data.dcIncomeGL\",\n      title: \"DC\",\n      group: \"Income GL Postings\",\n\n      width: columnWidth(\"data.dcIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\"incomeGlPostings\", \"data.dcIncomeGL\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"text\"}\n          readonly={true}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={props.cellData}\n        />\n      ),\n    },\n    {\n      key: \"data.incomeAmountEurIncomeGL\",\n      dataKey: \"data.incomeAmountEurIncomeGL\",\n      group: \"Income GL Postings\",\n\n      title: \"Income Amount (EUR)\",\n      width: columnWidth(\"data.incomeAmountEurIncomeGL\", 200),\n      resizable: true,\n      hidden: visibilityController(\n        \"incomeGlPostings\",\n        \"data.incomeAmountEurIncomeGL\"\n      ),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#FFF7F1\"\n          onUpdate={handleCellUpdate}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalIncomeAmountIncomeGL)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    //\n    {\n      key: \"data.totalIncomeLC\",\n      dataKey: \"data.totalIncomeLC\",\n      title: \"Total Income (LC)\",\n      header: \"Project Results\",\n      width: columnWidth(\"data.totalIncomeLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalIncomeLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalIncomeInTool)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsLC\",\n      dataKey: \"data.totalCostsLC\",\n      title: \"Total Costs (LC)\",\n      width: columnWidth(\"data.totalCostsLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalCostsLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalCostsInTool)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalProfitLC\",\n      dataKey: \"data.totalProfitLC\",\n      title: \"Total Profit (LC)\",\n      width: columnWidth(\"data.totalProfitLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalProfitLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInTool + totalCostsInTool >= 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${NumberWithCommas(\n                    totalIncomeInTool + totalCostsInTool\n                  )}`\n                : props.rowData.data.totalIncomeLC +\n                  props.rowData.data.totalCostsLC\n              : \"\"\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalLossLC\",\n      dataKey: \"data.totalLossLC\",\n      title: \"Total Loss (LC)\",\n      width: columnWidth(\"data.totalLossLC\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalLossLC\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInTool + totalCostsInTool < 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${NumberWithCommas(\n                    (totalIncomeInTool + totalCostsInTool) * -1\n                  )}`\n                : (props.rowData.data.totalIncomeLC +\n                    props.rowData.data.totalCostsLC) *\n                  -1\n              : \"\"\n          }\n        />\n      ),\n    },\n\n    {\n      key: \"data.totalIncomeEUR\",\n      dataKey: \"data.totalIncomeEUR\",\n      title: \"Total Income (EUR)\",\n      width: columnWidth(\"data.totalIncomeEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalIncomeEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalIncomeInToolEUR)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsEUR\",\n      dataKey: \"data.totalCostsEUR\",\n      title: \"Total Costs (EUR)\",\n      width: columnWidth(\"data.totalCostsEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalCostsEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(totalCostsInToolEUR)}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalProfitEUR\",\n      dataKey: \"data.totalProfitEUR\",\n      title: \"Total Profit (EUR)\",\n      width: columnWidth(\"data.totalProfitEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalProfitEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInToolEUR + totalCostsInToolEUR >= 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${NumberWithCommas(\n                    totalIncomeInToolEUR + totalCostsInToolEUR\n                  )}`\n                : props.rowData.data.totalIncomeEUR +\n                  props.rowData.data.totalCostsEUR\n              : \"\"\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalLossEUR\",\n      dataKey: \"data.totalLossEUR\",\n      title: \"Total Loss (EUR)\",\n      width: columnWidth(\"data.totalLossEUR\", 200),\n      resizable: true,\n      group: \"Project Results\",\n\n      hidden: visibilityController(\"projectResults\", \"data.totalLossEUR\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            totalIncomeInToolEUR + totalCostsInToolEUR < 0\n              ? props.rowData.id === \"total\"\n                ? `TOTAL: ${NumberWithCommas(\n                    (totalIncomeInToolEUR + totalCostsInToolEUR) * -1\n                  )}`\n                : (props.rowData.data.totalIncomeEUR +\n                    props.rowData.data.totalCostsEUR) *\n                  -1\n              : \"\"\n          }\n        />\n      ),\n    },\n\n    ///\n    {\n      key: \"data.totalCostsTool\",\n      dataKey: \"data.totalCostsTool\",\n      title: \"Total Costs In Tool (LC)\",\n      width: columnWidth(\"data.totalCostsTool\", 200),\n      resizable: true,\n      header: \"Control Checks\",\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(\n                  totalCostAmountLC + totalCostAmountLCCostGL\n                )}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalCostsSAP\",\n      dataKey: \"data.totalCostsSAP\",\n      title: \"Total Costs In SAP (LC)\",\n      width: columnWidth(\"data.totalCostsSAP\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalCostsSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(\n                  totalCostAmountLC + totalCostAmountLCCostGL\n                )}`\n              : props.rowData.data.totalCostsTool\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeTool\",\n      dataKey: \"data.totalIncomeTool\",\n      title: \"Total Income In Tool (LC)\",\n      width: columnWidth(\"data.totalIncomeTool\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeTool\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(\n                  totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n                )}`\n              : props.cellData\n          }\n        />\n      ),\n    },\n    {\n      key: \"data.totalIncomeSAP\",\n      dataKey: \"data.totalIncomeSAP\",\n      title: \"Total Income In SAP (LC)\",\n      width: columnWidth(\"data.totalIncomeSAP\", 200),\n      resizable: true,\n      group: \"Control Checks\",\n\n      hidden: visibilityController(\"controlChecks\", \"data.totalIncomeSAP\"),\n      cellRenderer: (props: any) => (\n        <EditableTableCell\n          type={\"number\"}\n          readonly={true}\n          bold={props.rowData.parentId === null}\n          backgroundColor=\"#f9f8f8\"\n          onUpdate={() => {}}\n          rowIndex={props.rowIndex}\n          columnKey={props.column.dataKey}\n          rowData={props.rowData}\n          initialValue={\n            props.rowData.id === \"total\"\n              ? `TOTAL: ${NumberWithCommas(\n                  totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n                )}`\n              : props.rowData.data.totalIncomeTool\n          }\n        />\n      ),\n    },\n    ///\n\n    {\n      key: \"__actions.sap\",\n      dataKey: \"__actions.sap\",\n      title: \"SAP\",\n      width: columnWidth(\"__actions.sap\", 100),\n      resizable: true,\n      header: \"Actions\",\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null &&\n        props.rowData.data.status !== \"Created\" &&\n        props.rowData.author !== \"formiks\" &&\n        props.rowData.id !== \"total\" ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"green\"}\n            onUpdate={callSap}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"create\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.view\",\n      dataKey: \"__actions.view\",\n      title: \"View\",\n      width: columnWidth(\"__actions.view\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null &&\n        props.rowData.viewId !== null &&\n        props.rowData.author !== \"formiks\" &&\n        props.rowData.id !== \"total\" ? (\n          <EditableTableCell\n            type={\"button\"}\n            backgroundColor=\"#fef9fa\"\n            textColor={\"yellow\"}\n            onUpdate={() => {\n              window.open(\n                \"/submissions/view/\" + props.rowData.viewId,\n                \"_blank\",\n                \"noopener,noreferrer\"\n              );\n            }}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"view\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n    {\n      key: \"__actions.reject\",\n      dataKey: \"__actions.reject\",\n      title: \"Reject\",\n      width: columnWidth(\"__actions.reject\", 100),\n      resizable: true,\n      className: \"red-border\",\n      cellRenderer: (props: any) =>\n        props.rowData.parentId === null &&\n        props.rowData.data.status !== \"Created\" &&\n        props.rowData.data.status !== \"Rejected\" &&\n        props.rowData.author !== \"formiks\" &&\n        props.rowData.id !== \"total\" ? (\n          <EditableTableCell\n            type={\"button\"}\n            textColor={\"red\"}\n            backgroundColor=\"#fef9fa\"\n            onUpdate={() => reject(props.rowData.id, props.rowData.viewId)}\n            rowIndex={props.rowIndex}\n            columnKey={props.column.dataKey}\n            rowData={props.rowData}\n            initialValue={\"reject\"}\n          />\n        ) : (\n          <div\n            style={{\n              backgroundColor: \"#F7FAFC\",\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        ),\n    },\n  ];\n\n  const headerRendererForTable = useCallback(\n    (props: {\n      cells: ReactNode[];\n      columns: ColumnShape<{\n        [k: string]: string;\n      }>;\n      headerIndex: number;\n    }) => {\n      const { headerIndex, columns, cells } = props;\n      if (headerIndex === 0) {\n        return cells.map((cell, index) => {\n          return cloneElement(cell as ReactElement, {\n            className: \"BaseTable__header-cell\",\n            children: (\n              <span style={{ fontWeight: 650 }} key={index}>\n                {columns[index].header ? columns[index].header : \"\"}\n              </span>\n            ),\n          });\n        });\n      }\n      return cells;\n    },\n    []\n  );\n  return (\n    <div>\n      <Box h=\"70px\" textAlign={\"end\"}>\n        <IconButton\n          icon={<IoSave />}\n          isDisabled={\n            selectedTemplate === \"local\"\n            // currentUser.displayName === \"unknown\"\n          }\n          onClick={() => {\n            var template: Template = {\n              name: selectedTemplate,\n              columns: displayedColumns,\n              filters,\n            };\n            RestAPI.updateTemplate(template).then(() => {\n              toast(\n                <Toast\n                  title={\"Preset updated\"}\n                  message={\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: \"Preset successfully saved\",\n                      }}\n                    />\n                  }\n                  type={\"success\"}\n                />\n              );\n            });\n          }}\n          aria-label=\"save\"\n          colorScheme=\"blue\"\n          mr=\"10px\"\n        />\n        <IconButton\n          icon={onlyMine ? <RiUserFill /> : <RiGroupFill />}\n          onClick={() => {\n            setOnlyMine(!onlyMine);\n          }}\n          // isDisabled={currentUser.displayName === \"unknown\"}\n          aria-label=\"filter\"\n          colorScheme=\"blue\"\n          mr=\"10px\"\n        />\n        <IconButton\n          onClick={async () => {\n            interface FD {\n              [key: string]: any;\n            }\n            var formattedData: FD[] = [];\n            let init = false;\n            let header: FD[] = [\n              {\n                ID: \"Summary\",\n                Parent: \"\",\n                Group: \"\",\n                Created: \"\",\n                Title: \"\",\n                Author: \"\",\n              },\n              {\n                ID: \"ID\",\n                Parent: \"Parent\",\n                Group: \"Group\",\n                Created: \"Created\",\n                Title: \"Title\",\n                Author: \"Author\",\n              },\n              {\n                ID: \"\",\n                Parent: \"\",\n                Group: \"\",\n                Created: \"\",\n                Title: \"\",\n                Author: \"\",\n              },\n            ];\n            formattedData = filteredSubmissions.map((s) => {\n              let doc: FD = {\n                ID: s.id || \"unknown\",\n                Parent: s.parentId === null,\n                Group: s.group,\n                Created: s.created,\n                Title: s.title,\n                Author: s.author,\n              };\n              DisplayedColumnsList.forEach((group: any) => {\n                if (group.value === \"CMCT\" || group.value === \"LMD\") {\n                  return;\n                }\n                group.children.map((column: any, index: number) => {\n                  doc[column.value] = _.get(s, column.value);\n                  if (column.type === \"number\") {\n                    doc[column.value] = NumberWithCommas(doc[column.value]);\n                  }\n                  if (!init) {\n                    header[0][column.value] = index === 0 ? group.label : \"\";\n                    header[1][column.value] = `${column.label}`;\n                  }\n                });\n              });\n              init = true;\n              return doc;\n            });\n            header[2] = {\n              \"data.costAmountLC\": `TOTAL: ${NumberWithCommas(\n                totalCostAmountLC\n              )}`,\n              \"data.costAmountEUR\": `TOTAL: ${NumberWithCommas(\n                totalCostAmount\n              )}`,\n              \"data.incomeAmountLCSI\": `TOTAL: ${NumberWithCommas(\n                totalIncomeAmountLC\n              )}`,\n              \"data.incomeAmountEURSI\": `TOTAL: ${NumberWithCommas(\n                totalIncomeAmount\n              )}`,\n              \"data.costAmountLCCostGL\": `TOTAL: ${NumberWithCommas(\n                totalCostAmountLCCostGL\n              )}`,\n              \"data.costAmountEURCostGL\": `TOTAL: ${NumberWithCommas(\n                totalCostAmountCostGL\n              )}`,\n              \"data.incomeAmountLCIncomeGL\": `TOTAL: ${NumberWithCommas(\n                totalIncomeAmountLCIncomeGL\n              )}`,\n              \"data.incomeAmountEurIncomeGL\": `TOTAL: ${NumberWithCommas(\n                totalIncomeAmountIncomeGL\n              )}`,\n              \"data.totalIncomeLC\": `TOTAL: ${NumberWithCommas(\n                totalIncomeInTool\n              )}`,\n              \"data.totalCostsLC\": `TOTAL: ${NumberWithCommas(\n                totalCostsInTool\n              )}`,\n              \"data.totalProfitLC\": `TOTAL: ${NumberWithCommas(\n                totalIncomeInTool + totalCostsInTool\n              )}`,\n              \"data.totalLossLC\": `TOTAL: ${NumberWithCommas(\n                (totalIncomeInTool + totalCostsInTool) * -1\n              )}`,\n              \"data.totalIncomeEUR\": `TOTAL: ${NumberWithCommas(\n                totalIncomeInToolEUR\n              )}`,\n              \"data.totalCostsEUR\": `TOTAL: ${NumberWithCommas(\n                totalCostsInToolEUR\n              )}`,\n              \"data.totalProfitEUR\": `TOTAL: ${NumberWithCommas(\n                totalIncomeInToolEUR + totalCostsInToolEUR\n              )}`,\n              \"data.totalLossEUR\": `TOTAL: ${NumberWithCommas(\n                (totalIncomeInToolEUR + totalCostsInToolEUR) * -1\n              )}`,\n              \"data.totalCostsTool\": `TOTAL: ${NumberWithCommas(\n                totalCostAmountLC + totalCostAmountLCCostGL\n              )}`,\n              \"data.totalCostsSAP\": `TOTAL: ${NumberWithCommas(\n                totalCostAmountLC + totalCostAmountLCCostGL\n              )}`,\n              \"data.totalIncomeTool\": `TOTAL: ${NumberWithCommas(\n                totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n              )}`,\n              \"data.totalIncomeSAP\": `TOTAL: ${NumberWithCommas(\n                totalIncomeAmountLC + totalIncomeAmountLCIncomeGL\n              )}`,\n            };\n            formattedData.unshift(...header);\n            const ws = XLSX.utils.json_to_sheet(formattedData, {\n              skipHeader: true,\n            });\n            ws[\"!cols\"] = Object.keys(formattedData[0]).map(() => {\n              return { wch: 30 };\n            });\n            const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n            const excelBuffer = XLSX.write(wb, {\n              bookType: \"xlsx\",\n              type: \"array\",\n            });\n            const data = new Blob([excelBuffer], {\n              type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n            });\n            FileSaver.saveAs(data, \"exported_submissions\" + \".xlsx\");\n          }}\n          colorScheme=\"teal\"\n          aria-label=\"export\"\n          icon={<RiFileExcel2Line />}\n        ></IconButton>\n      </Box>\n\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        minH={\"80vh\"}\n        mb={5}\n        mt={\"-20px\"}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n      >\n        <Tabs isLazy={false} variant=\"enclosed\">\n          <TabList>\n            <Tab>Submissions</Tab>\n            <Tab>Invoicing</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer\n                onResize={({\n                  width,\n                  height,\n                }: {\n                  width: number;\n                  height: number;\n                }) => {\n                  setTableWidth(width);\n                }}\n              >\n                {({ width, height }) => (\n                  <BaseTable\n                    key={ignored}\n                    scrollLeft={scrollLeft}\n                    onScroll={onScroll}\n                    onColumnResizeEnd={({\n                      column,\n                      width,\n                    }: {\n                      column: any;\n                      width: number;\n                    }) => {\n                      // handleResize(column.dataKey, width);\n                    }}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={10}\n                    ignoreFunctionInColumnCompare={false}\n                    expandColumnKey={\"__expand\"}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={tableCells}\n                    headerRenderer={headerRendererForTable}\n                    headerClassName=\"header-cells\"\n                    frozenData={\n                      [\n                        {\n                          id: \"total\",\n                          data: {},\n                          parentId: null,\n                        },\n                      ] as any[]\n                    }\n                    data={unflatten([...filteredSubmissions] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={[50, 50]}\n                    rowHeight={55}\n                    // overlayRenderer={\n                    //   <div>\n                    //     <DebugOverlay hidden={debugOverlayHidden}>\n                    //       <Box h=\"40px\" w=\"100%\">\n                    //         <CloseButton\n                    //           onClick={() => {\n                    //             hideDebugOverlay(true);\n                    //           }}\n                    //           mr=\"-10px\"\n                    //           float=\"right\"\n                    //         />\n                    //       </Box>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Requested Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.total)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Allocated Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.allocated)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Active Heap Size:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.total > 0\n                    //             ? bytesToSize(heapInfo.current)\n                    //             : \"none\"}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           DOM Elements:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {heapInfo.domSize}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Virtualization:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           partial\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Table Mode:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           editable\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Avg FPS:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {avgFps}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           FPS:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {fps[fps.length - 1]}\n                    //         </Text>\n                    //       </HStack>\n                    //       <Divider mt={\"10px\"} />\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Active Sessions:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           1\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Total Requests:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           {totalRequests}\n                    //         </Text>\n                    //       </HStack>\n                    //       <HStack spacing={0}>\n                    //         <Text w=\"120%\" float=\"left\">\n                    //           Sync Protocol:\n                    //         </Text>\n                    //         <Text w=\"80%\" textAlign=\"right\">\n                    //           HTTP\n                    //         </Text>\n                    //       </HStack>\n                    //       <VStack align=\"end\" mt=\"10px\">\n                    //         <Button\n                    //           float=\"right\"\n                    //           onClick={() => {\n                    //             RestAPI.updateVendorTableDefaultConfig(\n                    //               JSON.parse(\n                    //                 localStorage.getItem(\n                    //                   \"vendors.displayedColumns\"\n                    //                 ) || \"[]\"\n                    //               ),\n                    //               JSON.parse(\n                    //                 localStorage.getItem(\"vendors.columns\") ||\n                    //                   \"{}\"\n                    //               )\n                    //             );\n                    //           }}\n                    //           colorScheme=\"blue\"\n                    //         >\n                    //           update preset\n                    //         </Button>\n                    //         <Button\n                    //           float=\"left\"\n                    //           onClick={() => {\n                    //             localStorage.removeItem(\n                    //               \"vendors.displayedColumns\"\n                    //             );\n                    //             localStorage.removeItem(\"vendors.columns\");\n                    //             window.location.reload();\n                    //           }}\n                    //           colorScheme=\"red\"\n                    //         >\n                    //           clear cache\n                    //         </Button>\n                    //       </VStack>\n                    //     </DebugOverlay>\n                    //   </div>\n                    // }\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n            <TabPanel w=\"100%\" h=\"80vh\">\n              <AutoResizer\n                onResize={({\n                  width,\n                  height,\n                }: {\n                  width: number;\n                  height: number;\n                }) => {\n                  setTableWidth(width);\n                }}\n              >\n                {({ width, height }) => (\n                  <BaseTable\n                    scrollLeft={scrollLeft}\n                    onScroll={onScroll}\n                    onColumnResizeEnd={({\n                      column,\n                      width,\n                    }: {\n                      column: any;\n                      width: number;\n                    }) => {\n                      // handleResize(column.dataKey, width);\n                    }}\n                    rowRenderer={rowRenderer}\n                    overscanRowCount={10}\n                    ignoreFunctionInColumnCompare={false}\n                    expandColumnKey={\"__expand\"}\n                    width={width}\n                    height={height}\n                    fixed\n                    columns={[\n                      {\n                        key: \"__expand\",\n                        dataKey: \"__expand\",\n                        title: \"\",\n                        width: 50,\n                        frozen: Column.FrozenDirection.LEFT,\n                        resizable: false,\n                        cellRenderer: () => <div />,\n                        className: \"expand\",\n                      },\n                      {\n                        key: \"data.documentNumberCMCT\",\n                        dataKey: \"data.documentNumberCMCT\",\n                        title: \"SAP Document Number\",\n                        group: \"Input of Central Marketing Controlling Team\",\n                        header: \"Input of Central Marketing Controlling Team\",\n                        width: columnWidth(\"data.documentNumberCMCT\", 300),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"CMCT\",\n                          \"data.documentNumberCMCT\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={\n                              props.rowData.data.statusLMD !==\n                                \"FUTURE INVOICE\" &&\n                              props.rowData.data.statusLMD !==\n                                \"OK FOR INVOICING\" &&\n                              props.rowData.data.statusLMD !== \"INVOICED\"\n                            }\n                            invoiced={\n                              props.rowData.data.statusLMD === \"INVOICED\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.operatorCMCT\",\n                                currentUser.displayName\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.dateCMCT\",\n                                new Date().toString()\n                              );\n                              if (value.length === 12) {\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.statusLMD\",\n                                  \"INVOICED\"\n                                );\n                              }\n\n                              var mi = submissions.findIndex(\n                                (s) => s.data.documentNumberSI === value\n                              );\n                              if (mi > -1) {\n                                handleCellUpdate(\n                                  submissions[mi].id!,\n                                  \"data.activityIdSI\",\n                                  props.rowData.data.activityIdForPortalVendors\n                                );\n                                handleCellUpdate(\n                                  submissions[mi].id!,\n                                  \"data.additionalMarketingInformation\",\n                                  props.rowData.data.additionalInformationLMD\n                                );\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.dateCMCT\",\n                        dataKey: \"data.dateCMCT\",\n                        title: \"Date\",\n                        width: columnWidth(\"data.dateCMCT\", 200),\n                        resizable: true,\n                        group: \"Input of Central Marketing Controlling Team\",\n                        hidden: visibilityController(\"CMCT\", \"data.dateCMCT\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            readonly={true}\n                            backgroundColor=\"#f9f9ff\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.operatorCMCT\",\n                        dataKey: \"data.operatorCMCT\",\n                        title: \"Operator\",\n                        width: columnWidth(\"data.operatorCMCT\", 200),\n                        resizable: true,\n                        group: \"Input of Central Marketing Controlling Team\",\n                        hidden: visibilityController(\n                          \"CMCT\",\n                          \"data.operatorCMCT\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            readonly={true}\n                            backgroundColor=\"#f9f9ff\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.statusLMD\",\n                        dataKey: \"data.statusLMD\",\n                        title: \"Status\",\n                        width: columnWidth(\"data.statusLMD\", 300),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n                        header: \"Input of Local Marketing Department\",\n                        hidden: visibilityController(\"LMD\", \"data.statusLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            readonly={true}\n                            loadOptions={loadOptions}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoicingDateLMD\",\n                        dataKey: \"data.invoicingDateLMD\",\n                        title: \"Date of Invoicing\",\n                        width: columnWidth(\"data.invoicingDateLMD\", 200),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoicingDateLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.requestorLMD\",\n                                currentUser.displayName\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.requestorLMD\",\n                        dataKey: \"data.requestorLMD\",\n                        title: \"Requestor\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.requestorLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.requestorLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.vendorLMD\",\n                        dataKey: \"data.vendorLMD\",\n                        title: \"Vendor\",\n                        width: columnWidth(\"data.vendorLMD\", 250),\n                        group: \"Input of Local Marketing Department\",\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.vendorLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            loadOptions={() => {\n                              if (\n                                props.rowData.data\n                                  .alsoMarketingProjectNumberLMD !== undefined\n                              ) {\n                                var vs = findSubmissionsByPO(\n                                  props.rowData.data\n                                    .alsoMarketingProjectNumberLMD\n                                );\n                                submissionData = vs;\n                                if (vs.length > 0) {\n                                  var v: any[] = [];\n                                  vs.forEach((s) => {\n                                    if (\n                                      s.data.vendorName !== undefined &&\n                                      !v.find(\n                                        (c: any) =>\n                                          c.label === s.data.vendorName\n                                      )\n                                    ) {\n                                      v.push({\n                                        label: s.data.vendorName,\n                                        value: s.data.vendorName,\n                                      });\n                                    }\n                                  });\n                                  if (v.length > 0) {\n                                    return v;\n                                  }\n                                }\n                              }\n\n                              return VendorsNames;\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              let set = false;\n                              VendorsNames.every((v) => {\n                                if (v.label === value) {\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.vodLMD\",\n                                    v.value.debitorischer\n                                  );\n                                  set = true;\n                                  return false;\n                                }\n                                return true;\n                              });\n                              if (!set) {\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.vodLMD\",\n                                  \"\"\n                                );\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.buLMD\",\n                                  \"\"\n                                );\n                              } else {\n                                if (submissionData) {\n                                  submissionData.every((s: any) => {\n                                    if (\n                                      s.group === \"vendor\" &&\n                                      s.data.debitorNumber ===\n                                        props.rowData.data.vodLMD\n                                    ) {\n                                      handleCommunicationCellUpdate(\n                                        submission,\n                                        \"data.amountLMD\",\n                                        s.data.estimatedIncomeCC\n                                      );\n                                      handleCommunicationCellUpdate(\n                                        submission,\n                                        \"data.documentCurrencyLMD\",\n                                        s.data.vendorBudgetCurrency\n                                      );\n                                      return false;\n                                    }\n                                    return true;\n                                  });\n                                }\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.vodLMD\",\n                        dataKey: \"data.vodLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"VOD\",\n                        width: columnWidth(\"data.vodLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.vodLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.buLMD\",\n                        dataKey: \"data.buLMD\",\n                        title: \"BU\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.buLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.buLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return BUs;\n                            }}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // FIXME: set after 'refresh status' clicked\n                      {\n                        key: \"data.entryDateLMD\",\n                        dataKey: \"data.entryDateLMD\",\n                        title: \"Entry Date\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.entryDateLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.entryDateLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"date\"}\n                            readonly\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoiceTypeLMD\",\n                        dataKey: \"data.invoiceTypeLMD\",\n                        title: \"Invoice Type\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.invoiceTypeLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoiceTypeLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            readonly={props.rowData.parentId !== null}\n                            loadOptions={() => {\n                              return [\n                                {\n                                  label: \"Invoice\",\n                                  value: \"Invoice\",\n                                },\n                                { label: \"Pre-Invoice\", value: \"Pre-Invoice\" },\n                                {\n                                  label: \"Internal Invoice\",\n                                  value: \"Internal Invoice\",\n                                },\n                                {\n                                  label: \"Cancellation\",\n                                  value: \"Cancellation\",\n                                },\n                              ];\n                            }}\n                            backgroundColor={\n                              (props.cellData && props.cellData.length > 0) ||\n                              props.rowData.parentId !== null\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              if (value === \"Pre-Invoice\") {\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.materialNumberLMD\",\n                                  \"7000100\"\n                                );\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.alsoMarketingProjectNumberLMD\",\n                                  \"6110VZ01\"\n                                );\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.statusLMD\",\n                                \"INCOMPLETE\"\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.sendToLMD\",\n                                \"none\"\n                              );\n                            }}\n                            // onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.cancellationInfoLMD\",\n                        dataKey: \"data.cancellationInfoLMD\",\n                        title: \"Cancellation Information\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.cancellationInfoLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.cancellationInfoLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            type={\"text\"}\n                            readonly={\n                              props.rowData.data.invoiceTypeLMD !==\n                              \"Cancellation\"\n                            }\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.materialNumberLMD\",\n                        dataKey: \"data.materialNumberLMD\",\n                        title: \"Material Number\",\n                        width: columnWidth(\"data.materialNumberLMD\", 200),\n                        resizable: true,\n                        group: \"Input of Local Marketing Department\",\n\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.materialNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            // loadOptions={() => {\n                            //   return VendorsNames.map((vendor) => {\n                            //     return {\n                            //       label: vendor.value.hersteller,\n                            //       value: vendor.value.hersteller,\n                            //     };\n                            //   });\n                            // }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.alsoMarketingProjectNumberLMD\",\n                        dataKey: \"data.alsoMarketingProjectNumberLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"ALSO Marketing Project Number\",\n                        width: columnWidth(\n                          \"data.alsoMarketingProjectNumberLMD\",\n                          250\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.alsoMarketingProjectNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            maxLength={12}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                              var vs = findSubmissionsByPO(value);\n                              if (vs.length < 1) {\n                                toast(\n                                  <Toast\n                                    title={\"Unknown Project Number\"}\n                                    message={\"Project Number not found\"}\n                                    type={\"error\"}\n                                  />\n                                );\n                              } else {\n                                var currentVendor =\n                                  props.rowData.data.vendorLMD;\n                                if (typeof currentVendor === \"string\") {\n                                  var valid = false;\n                                  vs.forEach((s) => {\n                                    if (\n                                      s.data.vendorName !== undefined &&\n                                      currentVendor === s.data.vendorName\n                                    ) {\n                                      valid = true;\n                                    }\n                                  });\n                                  if (!valid) {\n                                    handleCommunicationCellUpdate(\n                                      submission,\n                                      \"data.vendorLMD\",\n                                      \"\"\n                                    );\n                                    toast(\n                                      <Toast\n                                        title={\"Unknown Vendor Selected\"}\n                                        message={\n                                          \"Vendor does not exist under this project\"\n                                        }\n                                        type={\"error\"}\n                                      />\n                                    );\n                                  }\n                                }\n                                handleCommunicationCellUpdate(\n                                  submission,\n                                  \"data.invoiceTextLMD\",\n                                  vs[0].data.campaignDescription\n                                );\n                                var amount = 0;\n                                switch (vs[0].data.projectType) {\n                                  case \"Local One Vendor\" ||\n                                    \"European One Vendor\":\n                                    amount =\n                                      vs[0].data\n                                        .campaignEstimatedIncomeBudgetsCurrency;\n                                    break;\n                                  case \"Local Multi Vendor\" ||\n                                    \"European Multi Vendor\":\n                                    vs.map((s) => {\n                                      if (!isNaN(s.data.vendorBudgetAmount)) {\n                                        amount += Number(\n                                          s.data.vendorBudgetAmount\n                                        );\n                                      }\n                                    });\n                                    break;\n                                  default:\n                                    amount = NaN;\n                                }\n                                if (!isNaN(amount)) {\n                                  handleCommunicationCellUpdate(\n                                    submission,\n                                    \"data.amountLMD\",\n                                    amount\n                                  );\n                                }\n                                toast(\n                                  <Toast\n                                    title={\"Project Found\"}\n                                    message={\"Data copied from parent project\"}\n                                    type={\"success\"}\n                                  />\n                                );\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.invoiceTextLMD\",\n                        dataKey: \"data.invoiceTextLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Invoice Text\",\n                        width: columnWidth(\"data.invoiceTextLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.invoiceTextLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.referenceNumberFromVendor\",\n                        dataKey: \"data.referenceNumberFromVendor\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Reference Number From Vendor\",\n                        width: columnWidth(\n                          \"data.referenceNumberFromVendor\",\n                          200\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.referenceNumberFromVendor\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.activityIdForPortalVendors\",\n                        dataKey: \"data.activityIdForPortalVendors\",\n                        group: \"Input of Local Marketing Department\",\n                        title: \"Activity ID for Portal Vendors\",\n                        width: columnWidth(\n                          \"data.activityIdForPortalVendors\",\n                          200\n                        ),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.activityIdForPortalVendors\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            type={\"text\"}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.amountLMD\",\n                        dataKey: \"data.amountLMD\",\n                        title: \"Amount\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.amountLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.amountLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"number\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            backgroundColor={\n                              props.cellData &&\n                              props.cellData !== 0 &&\n                              props.cellData.toString().trim().length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      // {\n                      //   key: \"data.additionalInvoiceInfoLMD\",\n                      //   dataKey: \"data.additionalInvoiceInfoLMD\",\n                      //   title: \"Additional Info on Invoice\",\n                      //   group: \"Input of Local Marketing Department\",\n\n                      //   width: columnWidth(\n                      //     \"data.additionalInvoiceInfoLMD\",\n                      //     200\n                      //   ),\n                      //   resizable: true,\n                      //   hidden: visibilityController(\n                      //     \"LMD\",\n                      //     \"data.additionalInvoiceInfoLMD\"\n                      //   ),\n                      //   cellRenderer: (props: any) => (\n                      //     <EditableTableCell\n                      //       type={\"text\"}\n                      //       backgroundColor=\"#F5FAEF\"\n                      //       onUpdate={handleCommunicationCellUpdate}\n                      //       rowIndex={props.rowIndex}\n                      //       columnKey={props.column.dataKey}\n                      //       rowData={props.rowData}\n                      //       initialValue={props.cellData}\n                      //     />\n                      //   ),\n                      // },\n                      {\n                        key: \"data.documentCurrencyLMD\",\n                        dataKey: \"data.documentCurrencyLMD\",\n                        title: \"Document Currency\",\n                        group: \"Input of Local Marketing Department\",\n\n                        width: columnWidth(\"data.documentCurrencyLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.documentCurrencyLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            type={\"dropdown\"}\n                            loadOptions={() => {\n                              return ExchangeRates;\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.paymentMethodLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        dataKey: \"data.paymentMethodLMD\",\n                        title: \"Payment Method\",\n                        width: columnWidth(\"data.paymentMethodLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.paymentMethodLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            loadOptions={() => {\n                              return [\n                                { label: \"Payment\", value: \"Payment\" },\n                                {\n                                  label: \"Money in House\",\n                                  value: \"Money in House\",\n                                },\n                                {\n                                  label: \"Credit Note from Vendor\",\n                                  value: \"Credit Note from Vendor\",\n                                },\n                              ];\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={(\n                              submission: string,\n                              path: string,\n                              value: any\n                            ) => {\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.statusLMD\",\n                                \"\"\n                              );\n                              var dunningStop = \"No\";\n                              if (\n                                value === \"Money in House\" ||\n                                value === \"Credit Note from Vendor\"\n                              ) {\n                                dunningStop = \"Yes\";\n                              }\n                              handleCommunicationCellUpdate(\n                                submission,\n                                \"data.dunningStopLMD\",\n                                dunningStop\n                              );\n                              handleCommunicationCellUpdate(\n                                submission,\n                                path,\n                                value\n                              );\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.dunningStopLMD\",\n                        dataKey: \"data.dunningStopLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Dunning Stop?\",\n                        width: columnWidth(\"data.dunningStopLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.dunningStopLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"dropdown\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            loadOptions={() => {\n                              return [\n                                { label: \"Yes\", value: \"Yes\" },\n                                { label: \"No\", value: \"No\" },\n                              ];\n                            }}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"data.depositNumberLMD\",\n                        dataKey: \"data.depositNumberLMD\",\n                        group: \"Input of Local Marketing Department\",\n\n                        title: \"Deposit Number\",\n                        width: columnWidth(\"data.depositNumberLMD\", 200),\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.depositNumberLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            readonly={\n                              typeof props.rowData.data.dunningStopLMD ===\n                                \"string\" &&\n                              props.rowData.data.dunningStopLMD.toLowerCase() ===\n                                \"no\"\n                            }\n                            backgroundColor={\n                              props.rowData.data.paymentMethodLMD ===\n                              \"Money in House\"\n                                ? props.cellData && props.cellData.length > 0\n                                  ? \"#F5FAEF\"\n                                  : \"#f7cdd6\"\n                                : \"#F5FAEF\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.additionalInformationLMD\",\n                        dataKey: \"data.additionalInformationLMD\",\n                        title: \"Additional Information\",\n                        width: columnWidth(\n                          \"data.additionalInformationLMD\",\n                          200\n                        ),\n                        group: \"Input of Local Marketing Department\",\n\n                        resizable: true,\n                        hidden: visibilityController(\n                          \"LMD\",\n                          \"data.additionalInformationLMD\"\n                        ),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            type={\"text\"}\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            backgroundColor=\"#F5FAEF\"\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n                      {\n                        key: \"data.sendToLMD\",\n                        dataKey: \"data.sendToLMD\",\n                        title: \"Send to\",\n                        width: columnWidth(\"data.sendToLMD\", 200),\n                        group: \"Input of Local Marketing Department\",\n\n                        resizable: true,\n                        hidden: visibilityController(\"LMD\", \"data.sendToLMD\"),\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            type={\"text\"}\n                            backgroundColor={\n                              props.cellData && props.cellData.length > 0\n                                ? \"#F5FAEF\"\n                                : \"#f7cdd6\"\n                            }\n                            readonly={\n                              props.rowData.data.invoiceTypeLMD ===\n                              \"Internal Invoice\"\n                            }\n                            onUpdate={handleCommunicationCellUpdate}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={props.cellData}\n                          />\n                        ),\n                      },\n\n                      {\n                        key: \"__actions.validate\",\n                        dataKey: \"__actions.validate\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.validate\", 100),\n                        resizable: false,\n                        header: \"Actions\",\n                        className: \"red-border\",\n                        cellRenderer: (props: any) =>\n                          props.rowData.parentId === null ? (\n                            <EditableTableCell\n                              invoiced={lmdColumnEdit(\n                                props.rowData.data.statusLMD\n                              )}\n                              type={\"button\"}\n                              backgroundColor=\"#fef9fa\"\n                              textColor={\"green\"}\n                              onUpdate={(submissionId: string) => {\n                                var targetSubmissionIndex =\n                                  communicationSubmissions.findIndex(\n                                    (s) => s.id === submissionId\n                                  );\n                                if (targetSubmissionIndex > -1) {\n                                  var is: Submission[] = [];\n                                  is.push(\n                                    communicationSubmissions[\n                                      targetSubmissionIndex\n                                    ]\n                                  );\n\n                                  if (is[0].parentId === null) {\n                                    communicationSubmissions.forEach((s) => {\n                                      if (s.parentId === submissionId) {\n                                        is.push(s);\n                                      }\n                                    });\n                                  }\n\n                                  is.forEach((ts, tsi) => {\n                                    if (\n                                      ts.data.invoicingDateLMD &&\n                                      ts.data.invoicingDateLMD.length > 0 &&\n                                      ts.data.vendorLMD &&\n                                      ts.data.vendorLMD.length > 0 &&\n                                      ts.data.invoiceTypeLMD &&\n                                      ts.data.invoiceTypeLMD.length > 0 &&\n                                      ts.data.materialNumberLMD &&\n                                      ts.data.materialNumberLMD.length > 0 &&\n                                      ts.data.alsoMarketingProjectNumberLMD &&\n                                      ts.data.alsoMarketingProjectNumberLMD\n                                        .length > 0 &&\n                                      ts.data.invoiceTextLMD &&\n                                      ts.data.invoiceTextLMD.length > 0 &&\n                                      ts.data.amountLMD &&\n                                      typeof ts.data.amountLMD === \"number\" &&\n                                      ts.data.documentCurrencyLMD &&\n                                      ts.data.documentCurrencyLMD.length > 0 &&\n                                      ts.data.paymentMethodLMD &&\n                                      ts.data.paymentMethodLMD.length > 0 &&\n                                      ts.data.dunningStopLMD &&\n                                      ts.data.dunningStopLMD.length > 0 &&\n                                      ts.data.sendToLMD &&\n                                      ts.data.sendToLMD.length > 0 &&\n                                      (ts.data.paymentMethodLMD ===\n                                      \"Money in House\"\n                                        ? ts.data.depositNumberLMD &&\n                                          ts.data.depositNumberLMD.length > 0\n                                        : true)\n                                    ) {\n                                      var today = new Date();\n                                      today.setHours(23, 59, 59, 998);\n                                      if (\n                                        ts.data.invoicingDateLMD &&\n                                        new Date(ts.data.invoicingDateLMD) >\n                                          today\n                                      ) {\n                                        handleCommunicationCellUpdate(\n                                          ts.id!,\n                                          \"data.statusLMD\",\n                                          \"FUTURE INVOICE\"\n                                        );\n                                      } else {\n                                        handleCommunicationCellUpdate(\n                                          ts.id!,\n                                          \"data.statusLMD\",\n                                          \"OK FOR INVOICING\"\n                                        );\n                                      }\n                                      toast(\n                                        <Toast\n                                          title={\"Successful Validation\"}\n                                          message={\n                                            (tsi === 0 ? `Parent` : \"Child\") +\n                                            \" submission validated successfully\"\n                                          }\n                                          type={\"success\"}\n                                        />\n                                      );\n                                    } else {\n                                      toast(\n                                        <Toast\n                                          title={\"Incomplete Request\"}\n                                          message={\n                                            (tsi === 0 ? `Parent` : \"Child\") +\n                                            \" submission could not be validated: incomplete data\"\n                                          }\n                                          type={\"error\"}\n                                        />\n                                      );\n\n                                      handleCommunicationCellUpdate(\n                                        ts.id!,\n                                        \"data.statusLMD\",\n                                        \"INCOMPLETE\"\n                                      );\n                                    }\n                                  });\n                                }\n                              }}\n                              rowIndex={props.rowIndex}\n                              columnKey={props.column.dataKey}\n                              rowData={props.rowData}\n                              initialValue={\"validate\"}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                backgroundColor: \"#F7FAFC\",\n                                width: \"100%\",\n                                height: \"100%\",\n                              }}\n                            />\n                          ),\n                      },\n                      {\n                        key: \"__actions.create\",\n                        dataKey: \"__actions.create\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.create\", 100),\n                        resizable: false,\n                        className: \"red-border\",\n                        cellRenderer: (props: any) =>\n                          props.rowData.parentId === null ? (\n                            <EditableTableCell\n                              type={\"button\"}\n                              invoiced={lmdColumnEdit(\n                                props.rowData.data.statusLMD\n                              )}\n                              backgroundColor=\"#fef9fa\"\n                              textColor={\"blue\"}\n                              onUpdate={(submissionId: string) => {\n                                var submission: Submission = {\n                                  project: props.rowData.project,\n                                  parentId: submissionId,\n                                  viewId: null,\n                                  group: \"communication\",\n                                  created: new Date(),\n                                  updated: new Date(),\n                                  title: \"\",\n                                  author: \"\",\n                                  status: \"\",\n                                  data: {},\n                                };\n                                RestAPI.createSubmission(submission).then(\n                                  (response) => {\n                                    var temp = [...communicationSubmissions];\n                                    temp.push(response.data);\n                                    setCommunicationSubmissions(temp);\n                                  }\n                                );\n                              }}\n                              rowIndex={props.rowIndex}\n                              columnKey={props.column.dataKey}\n                              rowData={props.rowData}\n                              initialValue={\"create\"}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                backgroundColor: \"#F7FAFC\",\n                                width: \"100%\",\n                                height: \"100%\",\n                              }}\n                            />\n                          ),\n                      },\n                      {\n                        key: \"__actions.delete\",\n                        dataKey: \"__actions.delete\",\n                        title: \"\",\n                        width: columnWidth(\"__actions.delete\", 100),\n                        resizable: false,\n                        className: \"red-border\",\n                        cellRenderer: (props: any) => (\n                          <EditableTableCell\n                            invoiced={lmdColumnEdit(\n                              props.rowData.data.statusLMD\n                            )}\n                            type={\"button\"}\n                            textColor={\"red\"}\n                            backgroundColor=\"#fef9fa\"\n                            onUpdate={(submissionId: string) => {\n                              var tbd: string[] = [submissionId];\n                              var submissionIndex =\n                                communicationSubmissions.findIndex(\n                                  (s) => s.id === submissionId\n                                );\n                              if (submissionIndex > -1) {\n                                var temp = [...communicationSubmissions];\n                                temp.splice(submissionIndex, 1);\n                                temp.forEach((s, index) => {\n                                  if (\n                                    s.parentId !== null &&\n                                    s.parentId === submissionId\n                                  ) {\n                                    if (s.id) {\n                                      temp.splice(index, 1);\n                                      tbd.push(s.id);\n                                    }\n                                  }\n                                });\n                                setCommunicationSubmissions(temp);\n                                RestAPI.deleteSubmission(submissionId);\n                              }\n                            }}\n                            rowIndex={props.rowIndex}\n                            columnKey={props.column.dataKey}\n                            rowData={props.rowData}\n                            initialValue={\"delete\"}\n                          />\n                        ),\n                      },\n                    ]}\n                    headerRenderer={headerRendererForTable}\n                    headerClassName=\"header-cells\"\n                    data={unflatten([\n                      ...filteredCommunicationSubmissions,\n                    ] as any[])}\n                    rowKey=\"id\"\n                    headerHeight={[50, 50]}\n                    rowHeight={55}\n                    overlayRenderer={\n                      <div\n                        style={{\n                          position: \"absolute\",\n                          width: \"200px\",\n                          bottom: \"20px\",\n                          right: \"20px\",\n                          padding: \"5px 15px\",\n                        }}\n                      >\n                        <Button\n                          onClick={() => {\n                            var submission: Submission = {\n                              // FIXME\n                              project: \"619515b754e61c8dd33daa52\",\n                              parentId: null,\n                              viewId: null,\n                              group: \"communication\",\n                              created: new Date(),\n                              updated: new Date(),\n                              title: \"\",\n                              author: \"\",\n                              status: \"\",\n                              data: {\n                                materialNumberLMD: \"7000100\",\n                              },\n                            };\n                            RestAPI.createSubmission(submission).then(\n                              (response) => {\n                                var temp = [...communicationSubmissions];\n                                temp.unshift(response.data);\n                                setCommunicationSubmissions(temp);\n                              }\n                            );\n                          }}\n                        >\n                          Create Submission\n                        </Button>\n                      </div>\n                    }\n                  ></BaseTable>\n                )}\n              </AutoResizer>\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n      <Box\n        w={\"100%\"}\n        bg={useColorModeValue(\"white\", \"#21252A\")}\n        p={4}\n        mb={5}\n        border=\"1px\"\n        rounded=\"md\"\n        borderColor=\"gray.100\"\n        color={\"gray.500\"}\n      >\n        <Box mb={\"1em\"} w=\"100%\">\n          <Text mb=\"8px\">Displayed Columns</Text>\n          <CheckTreePicker\n            cleanable={false}\n            defaultExpandAll={false}\n            block\n            onChange={(value) => {\n              var values: string[] = [];\n              if (value.length < 1) {\n                values = defaultColumns;\n              } else {\n                value.forEach((v) => {\n                  values.push(v.toString());\n                });\n              }\n\n              if (selectedTemplate === \"local\") {\n                localStorage.setItem(\n                  \"vendors.displayedColumns\",\n                  JSON.stringify(values)\n                );\n              }\n              setDisplayedColumns(values);\n            }}\n            value={displayedColumns}\n            data={DisplayedColumnsList}\n            placeholder=\"Groups\"\n            size=\"lg\"\n          />\n        </Box>\n        <Stack\n          mb={\"1em\"}\n          w=\"100%\"\n          spacing={\"2em\"}\n          direction={{ base: \"column\", lg: \"row\" }}\n        >\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Statuses</Text>\n            <TagPicker\n              cleanable\n              style={{\n                minHeight: \"40px\",\n                paddingTop: \"2px\",\n              }}\n              data={[]}\n              block\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Preset</Text>\n            <Creatable\n              menuPortalTarget={document.body}\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              classNamePrefix=\"select\"\n              isClearable\n              onCreateOption={(name) => {\n                if (name.toLowerCase() === \"local\" || name.trim().length < 1) {\n                  return;\n                }\n                setSelectedTemplate(name);\n                var template: Template = {\n                  name,\n                  columns: displayedColumns,\n                  filters: filters,\n                };\n                RestAPI.updateTemplate(template).then(() => {\n                  setTemplates([...templates, template]);\n                });\n              }}\n              value={{ label: selectedTemplate, value: selectedTemplate }}\n              onChange={(name) => {\n                if (name === null || name.label === \"local\") {\n                  setSelectedTemplate(\"local\");\n                  setDisplayedColumns(defaultColumns);\n                  setFilters([]);\n                  return;\n                }\n                setSelectedTemplate(name.label);\n                var template = templates.find((t) => t.name == name.label);\n                if (template) {\n                  setDisplayedColumns(template.columns);\n                  setFilters(template.filters);\n                }\n              }}\n              name=\"presets\"\n              options={[\n                { label: \"local\", value: \"local\" },\n                ...templates.map((t) => {\n                  return { label: t.name, value: t.name };\n                }),\n              ]}\n            />\n          </Box>\n        </Stack>\n      </Box>\n      <Box\n        shadow=\"md\"\n        color=\"gray.600\"\n        backgroundColor=\"white\"\n        mb={10}\n        p={8}\n        pb={0}\n        rounded=\"md\"\n        w={\"100%\"}\n      >\n        <VStack spacing={8} fontSize=\"md\" align=\"stretch\" color={\"gray.500\"}>\n          <Box w={\"100%\"}>\n            <Box w={\"100%\"}>\n              {filters.map((filter, index) => {\n                var valuesField: JSX.Element = <div></div>;\n\n                switch (filter.type) {\n                  case \"string\":\n                    valuesField = (\n                      <Input\n                        onChange={(event) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues[0] = event.target.value;\n                          setFilters(temp);\n                        }}\n                        value={filter.selectedValues[0]}\n                      />\n                    );\n                    break;\n                  case \"number\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <NumberInput\n                            onChange={(_, value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues[0] = value;\n                              setFilters(temp);\n                            }}\n                            value={filter.selectedValues[0]}\n                            w=\"100%\"\n                          >\n                            <NumberInputField />\n                            <NumberInputStepper>\n                              <NumberIncrementStepper />\n                              <NumberDecrementStepper />\n                            </NumberInputStepper>\n                          </NumberInput>\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <Stack direction={{ base: \"column\", md: \"row\" }}>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[0] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[0]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                            <Box textAlign=\"center\" w=\"20px\">\n                              <ArrowForwardIcon\n                                alignSelf=\"center\"\n                                w={5}\n                                h=\"100%\"\n                              />\n                            </Box>\n                            <NumberInput\n                              w=\"100%\"\n                              onChange={(_, value) => {\n                                var temp = [...filters];\n                                temp[index].selectedValues[1] = value;\n                                setFilters(temp);\n                              }}\n                              value={filter.selectedValues[1]}\n                            >\n                              <NumberInputField />\n                              <NumberInputStepper>\n                                <NumberIncrementStepper />\n                                <NumberDecrementStepper />\n                              </NumberInputStepper>\n                            </NumberInput>\n                          </Stack>\n                        );\n                        break;\n                    }\n                    break;\n                  case \"dropdown\":\n                  case \"multiple-dropdown\":\n                    valuesField = (\n                      <TagPicker\n                        cleanable\n                        style={{\n                          minHeight: \"40px\",\n                          paddingTop: \"2px\",\n                        }}\n                        onChange={(value) => {\n                          var temp = [...filters];\n                          temp[index].selectedValues = value;\n                          setFilters(temp);\n                        }}\n                        value={filters[index].selectedValues}\n                        data={loadOptions(filter.columnValue)}\n                        block\n                      />\n                    );\n                    break;\n                  case \"date\":\n                    switch (filter.filter) {\n                      case \"exact\":\n                        valuesField = (\n                          <DateSingleInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onChange={(value) => {\n                              if (value !== filters[index].selectedValues[0]) {\n                                var temp = [...filters];\n                                temp[index].selectedValues = [value];\n                                setFilters(temp);\n                              }\n                            }}\n                          />\n                        );\n                        break;\n                      case \"range\":\n                        valuesField = (\n                          <DateRangeInput\n                            allowEditableInputs={true}\n                            displayFormat=\"dd.MM.yyyy\"\n                            onDatesChange={(value) => {\n                              var temp = [...filters];\n                              temp[index].selectedValues = [\n                                value.startDate,\n                                value.endDate,\n                              ];\n                              setFilters(temp);\n                            }}\n                          />\n                        );\n                        break;\n                    }\n                }\n\n                return (\n                  <Box\n                    w={\"100%\"}\n                    backgroundColor=\"white\"\n                    p={4}\n                    mb={5}\n                    border=\"1px\"\n                    rounded=\"md\"\n                    borderColor=\"gray.100\"\n                  >\n                    <CloseButton\n                      onClick={() => {\n                        var temp = [...filters];\n                        temp.splice(index, 1);\n                        setFilters(temp);\n                      }}\n                      float=\"right\"\n                    />\n                    <VStack\n                      mt={\"20px\"}\n                      spacing={8}\n                      fontSize=\"md\"\n                      align=\"stretch\"\n                      color={\"gray.500\"}\n                    >\n                      <Box>\n                        <Stack\n                          direction={{ base: \"column\", xl: \"row\" }}\n                          w=\"100%\"\n                          spacing={{ base: \"20px\", xl: \"50px\" }}\n                        >\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Column</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label: filter.columnLabel,\n                                value: filter.columnValue,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].columnValue = value.value;\n                                temp[index].columnLabel = value.label;\n                                temp[index].type = value.type;\n                                temp[index].filter = \"exact\";\n                                var tv: any = [];\n                                switch (value.type) {\n                                  case \"string\":\n                                    tv = [\"\"];\n                                    break;\n                                  case \"number\":\n                                    if (temp[index].filter === \"exact\") {\n                                      tv = [0];\n                                    } else {\n                                      tv = [0, 0];\n                                    }\n                                    break;\n                                }\n                                temp[index].selectedValues = tv;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"color\"\n                              options={DisplayedColumnsListOptions}\n                              // options={tableCells\n                              //   .filter((cell: any) => cell.dataKey[0] !== \"_\")\n                              //   .map((cell: any) => {\n                              //     console.log(cell.cellRenderer.arguments[0]);\n                              //     return {\n                              //       label: `${cell.title} (${cell.group})`,\n                              //       value: cell.dataKey,\n                              //       type: cell.type ? cell.type : \"text\",\n                              //     };\n                              //   })}\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Type</Text>\n                            <Input\n                              onChange={() => {}}\n                              value={filter.type}\n                              readOnly\n                            />\n                          </Box>\n                          <Box w=\"100%\">\n                            <Text mb=\"8px\">Filter</Text>\n                            <Select\n                              styles={{\n                                menu: (provided) => ({\n                                  ...provided,\n                                  zIndex: 1000000,\n                                }),\n                                singleValue: (provided) => ({\n                                  ...provided,\n                                  color: \"#718196\",\n                                }),\n                                control: (base, state) => ({\n                                  ...base,\n                                  minHeight: 40,\n                                  border: \"1px solid #E2E8F0\",\n                                  transition: \"0.3s\",\n                                  \"&:hover\": {\n                                    border: \"1px solid #CBD5E0\",\n                                  },\n                                }),\n                              }}\n                              theme={(theme) => ({\n                                ...theme,\n                                borderRadius: 6,\n                                colors: {\n                                  ...theme.colors,\n                                  primary: \"#3082CE\",\n                                },\n                              })}\n                              value={{\n                                label:\n                                  filter.filter.charAt(0).toUpperCase() +\n                                  filter.filter.slice(1),\n                                value: filter.filter,\n                              }}\n                              onChange={(value: any) => {\n                                var temp = [...filters];\n                                temp[index].filter = value.value;\n                                setFilters(temp);\n                              }}\n                              classNamePrefix=\"select\"\n                              isClearable={false}\n                              name=\"filter\"\n                              options={\n                                filterTypes[\n                                  filter.type as keyof typeof filterTypes\n                                ]\n                              }\n                            />\n                          </Box>\n                        </Stack>\n                      </Box>\n                      <Stack\n                        direction={{ base: \"column\", xl: \"row\" }}\n                        w=\"100%\"\n                        spacing={{ base: \"20px\", xl: \"50px\" }}\n                      >\n                        <Box w=\"100%\">\n                          <Text mb=\"8px\">Values</Text>\n                          {valuesField}\n                        </Box>\n                      </Stack>\n                    </VStack>\n                  </Box>\n                );\n              })}\n              <IconButton\n                onClick={() => {\n                  setFilters([\n                    ...filters,\n                    {\n                      columnValue: \"\",\n                      columnLabel: \"\",\n                      type: \"\",\n                      filter: \"exact\",\n                      values: [],\n                      selectedValues: [],\n                    } as FilterField,\n                  ]);\n                }}\n                my={5}\n                float=\"right\"\n                variant=\"outline\"\n                aria-label=\"add-port\"\n                icon={<BiPlusMedical />}\n              />\n            </Box>\n          </Box>\n        </VStack>\n      </Box>\n    </div>\n  );\n}\n\nexport default SubmissionsTable;\n","import { ArrowForwardIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Flex,\n  HStack,\n  Stack,\n  useBreakpointValue,\n  useColorModeValue,\n  useTheme,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  MonthType,\n  START_DATE,\n  useDatepicker,\n  UseDatepickerProps,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useImperativeHandle, useRef } from \"react\";\nimport {\n  ActionButton,\n  CloseButton,\n  Month,\n  ResetDatesButton,\n  SelectedDate,\n} from \"./components\";\nimport {\n  DatepickerFormatProps,\n  DatepickerProvider,\n} from \"./context/DatepickerContext\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { DatepickerPhrases, datepickerPhrases } from \"./phrases\";\nimport { DatepickerComponentStyles } from \"./types\";\nimport {\n  dayLabelFormatFn,\n  defaultDisplayFormat,\n  monthLabelFormatFn,\n  weekdayLabelFormatFn,\n} from \"./utils/formatters\";\n\nexport interface DatepickerElement {\n  onDateSelect?(date: Date): void;\n}\n\nexport interface DatepickerProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerFormatProps>,\n    Partial<UseDatepickerProps> {\n  displayFormat?: string;\n  onClose?(): void;\n  onDayRender?(date: Date): React.ReactNode;\n  phrases?: DatepickerPhrases;\n  showClose?: boolean;\n  showResetDates?: boolean;\n  showSelectedDates?: boolean;\n  vertical?: boolean;\n}\n\nexport const Datepicker = React.forwardRef(\n  (props: DatepickerProps, ref: Ref<DatepickerElement>) => {\n    const {\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      endDate = null,\n      exactMinBookingDays = false,\n      firstDayOfWeek,\n      focusedInput = null,\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays = 1,\n      monthLabelFormat,\n      numberOfMonths = 2,\n      onClose = () => {},\n      onDatesChange = () => {},\n      onDayRender,\n      overwriteDefaultStyles,\n      phrases = datepickerPhrases,\n      showClose = true,\n      showResetDates = true,\n      showSelectedDates = true,\n      startDate = null,\n      styles: customStyles,\n      unavailableDates = [],\n      weekdayLabelFormat,\n    } = props;\n\n    const dp = useDatepicker({\n      changeActiveMonthOnSelect,\n      endDate,\n      exactMinBookingDays,\n      firstDayOfWeek,\n      focusedInput,\n      initialVisibleMonth,\n      isDateBlocked,\n      maxBookingDate,\n      minBookingDate,\n      minBookingDays,\n      numberOfMonths,\n      onDatesChange,\n      startDate,\n      unavailableDates,\n    });\n\n    useImperativeHandle(ref, () => ({\n      onDateSelect: (date: Date) => {\n        dp.onDateSelect(date);\n      },\n    }));\n\n    const monthGridRef = useRef<HTMLDivElement>(null);\n\n    function scrollTopToMonthGrid() {\n      if (monthGridRef && monthGridRef.current && vertical) {\n        monthGridRef.current.scrollTop = 0;\n      }\n    }\n\n    function _goToNextMonths() {\n      dp.goToNextMonths();\n      scrollTopToMonthGrid();\n    }\n\n    function _goToPreviousMonths() {\n      dp.goToPreviousMonths();\n      scrollTopToMonthGrid();\n    }\n\n    const isMobile = useBreakpointValue({ base: true, md: false });\n    const vertical = props.vertical || isMobile;\n\n    const styleProps = useStyleProps<DatepickerComponentStyles>({\n      datepickerContainer: {\n        background: useColorModeValue(\"white\", \"gray.700\"),\n        borderRadius: \"md\",\n        position: \"relative\",\n        width: \"fit-content\",\n        shadow: \"md\",\n        px: [3, 5],\n        py: [5, 7],\n        zIndex: 1,\n      },\n      monthsWrapper: {\n        spacing: [0, 8],\n      },\n      buttonsWrapper: {\n        spacing: [1, 3],\n      },\n      arrowIcon: {\n        my: [5, 15],\n        color: \"gray.500\",\n      },\n      datepickerFooter: {\n        justifyContent: \"space-between\",\n        pt: [1, 3],\n      },\n    });\n\n    return (\n      <StylesProvider\n        styles={customStyles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <DatepickerProvider\n          activeMonths={dp.activeMonths}\n          dayLabelFormat={dayLabelFormat || dayLabelFormatFn}\n          displayFormat={displayFormat}\n          endDate={endDate}\n          firstDayOfWeek={dp.firstDayOfWeek}\n          focusedDate={dp.focusedDate}\n          focusedInput={focusedInput}\n          goToDate={dp.goToDate}\n          goToNextMonths={_goToNextMonths}\n          goToNextMonthsByOneMonth={dp.goToNextMonthsByOneMonth}\n          goToNextYear={dp.goToNextYear}\n          goToPreviousMonths={_goToPreviousMonths}\n          goToPreviousMonthsByOneMonth={dp.goToPreviousMonthsByOneMonth}\n          goToPreviousYear={dp.goToPreviousYear}\n          hoveredDate={dp.hoveredDate}\n          isDateBlocked={dp.isDateBlocked}\n          isDateFocused={dp.isDateFocused}\n          isDateHovered={dp.isDateHovered}\n          isDateSelected={dp.isDateSelected}\n          isEndDate={dp.isEndDate}\n          isFirstOrLastSelectedDate={dp.isFirstOrLastSelectedDate}\n          isStartDate={dp.isStartDate}\n          monthLabelFormat={monthLabelFormat || monthLabelFormatFn}\n          numberOfMonths={dp.numberOfMonths}\n          onDateFocus={dp.onDateFocus}\n          onDateHover={dp.onDateHover}\n          onDateSelect={dp.onDateSelect}\n          onDayRender={onDayRender}\n          onResetDates={dp.onResetDates}\n          phrases={phrases}\n          startDate={startDate}\n          weekdayLabelFormat={weekdayLabelFormat || weekdayLabelFormatFn}\n        >\n          <Box {...styleProps.datepickerContainer} zIndex={10} mt={\"8px\"}>\n            {showClose && <CloseButton onClick={onClose} />}\n\n            {showSelectedDates && (\n              <Box mb={6}>\n                <HStack data-testid=\"SelectedDatesGrid\">\n                  <SelectedDate\n                    date={startDate}\n                    isFocused={focusedInput === START_DATE}\n                  />\n                  <Flex justifyContent=\"center\" alignItems=\"center\">\n                    <ArrowForwardIcon {...styleProps.arrowIcon} />\n                  </Flex>\n                  <SelectedDate\n                    date={endDate}\n                    isFocused={focusedInput === END_DATE}\n                  />\n                </HStack>\n              </Box>\n            )}\n            <Box position=\"relative\">\n              <Stack\n                overflow={vertical ? \"auto\" : undefined}\n                data-testid=\"MonthGrid\"\n                isInline={!vertical}\n                ref={monthGridRef}\n                padding={1}\n                {...styleProps.monthsWrapper}\n                onMouseLeave={() => {\n                  if (dp.hoveredDate) {\n                    dp.onDateHover(null);\n                  }\n                }}\n              >\n                {dp.activeMonths.map((month: MonthType) => (\n                  <Month\n                    key={`month-${month.year}-${month.month}`}\n                    year={month.year}\n                    month={month.month}\n                  />\n                ))}\n              </Stack>\n\n              <Flex {...styleProps.datepickerFooter}>\n                <HStack {...styleProps.buttonsWrapper}>\n                  <ActionButton\n                    direction={vertical ? \"up\" : \"left\"}\n                    onClick={_goToPreviousMonths}\n                    aria-label=\"Previous month\"\n                  />\n                  <ActionButton\n                    direction={vertical ? \"down\" : \"right\"}\n                    onClick={_goToNextMonths}\n                    aria-label=\"Next month\"\n                  />\n                </HStack>\n                {showResetDates && (\n                  <ResetDatesButton\n                    onResetDates={dp.onResetDates}\n                    text={phrases.resetDates}\n                  />\n                )}\n              </Flex>\n            </Box>\n          </Box>\n        </DatepickerProvider>\n      </StylesProvider>\n    );\n  }\n);\n","import { ArrowForwardIcon, CalendarIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Stack,\n  StackDivider,\n  useBreakpointValue,\n  Icon,\n} from \"@chakra-ui/react\";\nimport {\n  END_DATE,\n  FocusedInput,\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { Ref, useEffect, useRef, useState } from \"react\";\nimport { FaArrowRight } from \"react-icons/all\";\nimport { Input, InputProps } from \"./components\";\nimport {\n  StylesProvider,\n  StylesProviderProps,\n  useStyleProps,\n} from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { dateRangeInputPhrases, DateRangeInputPhrases } from \"./phrases\";\nimport { DateRangeInputStyles, InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface DateRangeInputProps\n  extends Partial<StylesProviderProps>,\n    Partial<DatepickerProps> {\n  startDateInputProps?: Partial<InputProps>;\n  endDateInputProps?: Partial<InputProps>;\n  phrases?: DateRangeInputPhrases;\n  showDivider?: boolean;\n  placement?: \"top\" | \"bottom\";\n  onFocusChange?(focusedInput: FocusedInput): void;\n  endIcon?: typeof CalendarIcon;\n  endId?: string;\n  endName?: string;\n  endPlaceholder?: string;\n  endRef?: Ref<HTMLInputElement>;\n  endShowCalendarIcon?: boolean;\n  startIcon?: typeof CalendarIcon;\n  startId?: string;\n  startName?: string;\n  startPlaceholder?: string;\n  startRef?: Ref<HTMLInputElement>;\n  startShowCalendarIcon?: boolean;\n  allowEditableInputs?: boolean;\n}\n\nexport const DateRangeInput: React.FC<DateRangeInputProps> = (props) => {\n  const {\n    endDate: endDateProp = null,\n    startDate: startDateProp = null,\n    focusedInput: focusedInputProp = null,\n    displayFormat = defaultDisplayFormat,\n    endShowCalendarIcon = true,\n    isDateBlocked = () => false,\n    minBookingDays = 1,\n    phrases = dateRangeInputPhrases,\n    placement = \"bottom\",\n    showClose = true,\n    showDivider = false,\n    showResetDates = true,\n    showSelectedDates = true,\n    startShowCalendarIcon = true,\n    onClose = () => {},\n    onDatesChange = () => {},\n    onFocusChange = () => {},\n    styles: customStyles,\n    overwriteDefaultStyles,\n    startIcon,\n    startId,\n    startName,\n    startPlaceholder,\n    startRef,\n    endId,\n    endName,\n    endRef,\n    endIcon,\n    endPlaceholder,\n    changeActiveMonthOnSelect,\n    dayLabelFormat,\n    exactMinBookingDays,\n    firstDayOfWeek,\n    initialVisibleMonth,\n    maxBookingDate,\n    minBookingDate,\n    monthLabelFormat,\n    numberOfMonths,\n    onDayRender,\n    unavailableDates,\n    weekdayLabelFormat,\n    allowEditableInputs,\n  } = props;\n\n  const datepickerRef = useRef<DatepickerElement>(null);\n  const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n  const [startDate, setStartDate] = useState<InputDate>(startDateProp);\n  const [endDate, setEndDate] = useState<InputDate>(endDateProp);\n  const [focusedInput, setFocusedInput] =\n    useState<FocusedInput>(focusedInputProp);\n\n  useEffect(() => {\n    setStartDate(startDateProp);\n    setEndDate(endDateProp);\n  }, [startDateProp, endDateProp]);\n\n  const styleProps = useStyleProps<DateRangeInputStyles>({\n    dateRangeInputContainer: { spacing: 5 },\n    dateRangeInputDivider: {},\n  });\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"click\", onClickOutsideHandler);\n    }\n    return () => {\n      window.removeEventListener(\"click\", onClickOutsideHandler);\n    };\n  });\n\n  function handleOnFocusChange(_focusedInput: FocusedInput) {\n    setFocusedInput(_focusedInput);\n    onFocusChange(_focusedInput);\n  }\n\n  function handleOnDatesChange(data: OnDatesChangeProps) {\n    setStartDate(data.startDate);\n    setEndDate(data.endDate);\n    setFocusedInput(data.focusedInput);\n    onDatesChange(data);\n  }\n\n  function onClickOutsideHandler(event: Event) {\n    if (\n      focusedInput !== null &&\n      datepickerWrapperRef &&\n      datepickerWrapperRef.current &&\n      // @ts-ignore\n      !datepickerWrapperRef.current.contains(event.target)\n    ) {\n      handleOnFocusChange(null);\n    }\n  }\n\n  function handleOnClose() {\n    handleOnFocusChange(null);\n    onClose();\n  }\n\n  function handleInputChange(date: Date) {\n    if (\n      datepickerRef &&\n      datepickerRef.current &&\n      datepickerRef.current.onDateSelect\n    ) {\n      datepickerRef.current.onDateSelect(date);\n    }\n  }\n\n  const isMobile = useBreakpointValue({ base: true, md: false });\n  const vertical = props.vertical || isMobile;\n\n  return (\n    <StylesProvider\n      styles={customStyles}\n      overwriteDefaultStyles={overwriteDefaultStyles}\n    >\n      <Box position=\"relative\" ref={datepickerWrapperRef}>\n        <Stack\n          isInline={!isMobile}\n          {...styleProps.dateRangeInputContainer}\n          data-testid=\"DateRangeInputGrid\"\n          divider={\n            showDivider ? (\n              <StackDivider {...styleProps.dateRangeInputDivider} />\n            ) : undefined\n          }\n        >\n          <Input\n            iconComponent={startIcon}\n            id={startId || \"startDate\"}\n            name={startName || \"startDate\"}\n            placeholder={startPlaceholder || phrases.startDatePlaceholder}\n            ref={startRef}\n            showCalendarIcon={startShowCalendarIcon}\n            aria-label={phrases.startDateAriaLabel}\n            dateFormat={displayFormat}\n            isActive={focusedInput === START_DATE}\n            onChange={handleInputChange}\n            onClick={() => handleOnFocusChange(START_DATE)}\n            value={getInputValue(startDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box textAlign=\"center\" w=\"20px\">\n            <ArrowForwardIcon alignSelf=\"center\" w={5} h=\"100%\" />\n          </Box>\n          <Input\n            id={endId || \"endDate\"}\n            name={endName || \"endDate\"}\n            ref={endRef}\n            iconComponent={endIcon}\n            placeholder={endPlaceholder || phrases.endDatePlaceholder}\n            showCalendarIcon={endShowCalendarIcon}\n            aria-label={phrases.endDateAriaLabel}\n            dateFormat={displayFormat}\n            disableAccessibility={focusedInput === START_DATE}\n            isActive={focusedInput === END_DATE}\n            onChange={handleInputChange}\n            onClick={() =>\n              handleOnFocusChange(!startDate ? START_DATE : END_DATE)\n            }\n            value={getInputValue(endDate, displayFormat, \"\")}\n            allowEditableInputs={allowEditableInputs}\n          />\n        </Stack>\n        <Box\n          position=\"absolute\"\n          top={placement === \"top\" ? undefined : vertical ? \"100px\" : \"45px\"}\n          bottom={\n            placement === \"bottom\" ? undefined : vertical ? \"100px\" : \"45px\"\n          }\n        >\n          {focusedInput !== null && (\n            <Datepicker\n              ref={datepickerRef}\n              startDate={startDate}\n              endDate={endDate}\n              focusedInput={focusedInput}\n              onClose={handleOnClose}\n              onDatesChange={handleOnDatesChange}\n              changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n              dayLabelFormat={dayLabelFormat}\n              exactMinBookingDays={exactMinBookingDays}\n              firstDayOfWeek={firstDayOfWeek}\n              initialVisibleMonth={initialVisibleMonth}\n              isDateBlocked={isDateBlocked}\n              maxBookingDate={maxBookingDate}\n              minBookingDate={minBookingDate}\n              minBookingDays={minBookingDays}\n              monthLabelFormat={monthLabelFormat}\n              numberOfMonths={vertical ? 1 : numberOfMonths}\n              onDayRender={onDayRender}\n              phrases={phrases}\n              unavailableDates={unavailableDates}\n              displayFormat={displayFormat}\n              showClose={showClose}\n              showResetDates={showResetDates}\n              showSelectedDates={showSelectedDates}\n              vertical={vertical}\n              weekdayLabelFormat={weekdayLabelFormat}\n            />\n          )}\n        </Box>\n      </Box>\n    </StylesProvider>\n  );\n};\n","import { Box } from \"@chakra-ui/react\";\nimport {\n  getInputValue,\n  OnDatesChangeProps,\n  START_DATE,\n} from \"@datepicker-react/hooks\";\nimport React, { forwardRef, Ref, useEffect, useRef, useState } from \"react\";\nimport { Input, InputProps } from \"./components\";\nimport { StylesProvider } from \"./context/StylesContext\";\nimport { Datepicker, DatepickerElement, DatepickerProps } from \"./Datepicker\";\nimport { DateSingleInputPhrases, dateSingleInputPhrases } from \"./phrases\";\nimport { InputDate } from \"./types\";\nimport { defaultDisplayFormat } from \"./utils/formatters\";\n\nexport interface OnDateChangeProps {\n  date: InputDate;\n  showDatepicker: boolean;\n}\n\nexport interface DateSingleInputProps\n  extends Partial<InputProps>,\n    Partial<DatepickerProps> {\n  onFocusChange?(focusInput: boolean): void;\n  phrases?: DateSingleInputPhrases;\n  placement?: \"top\" | \"bottom\";\n  showDatepicker?: boolean;\n  date?: InputDate;\n  showResetDate?: boolean;\n}\n\nexport const DateSingleInput = forwardRef(\n  (\n    {\n      date: dateProp = null,\n      showDatepicker: showDatepickerProp = false,\n      changeActiveMonthOnSelect,\n      dayLabelFormat,\n      displayFormat = defaultDisplayFormat,\n      firstDayOfWeek,\n      iconComponent,\n      id = \"startDate\",\n      initialVisibleMonth,\n      isDateBlocked = () => false,\n      maxBookingDate,\n      minBookingDate,\n      monthLabelFormat,\n      name = \"startDate\",\n      numberOfMonths = 1,\n      onChange = () => {},\n      onClick = () => {},\n      onClose = () => {},\n      onDayRender,\n      onFocusChange = () => {},\n      overwriteDefaultStyles,\n      phrases = dateSingleInputPhrases,\n      placeholder,\n      placement = \"bottom\",\n      showCalendarIcon = true,\n      showClose = true,\n      showResetDate = true,\n      styles,\n      unavailableDates = [],\n      value,\n      vertical = false,\n      weekdayLabelFormat,\n      allowEditableInputs = false,\n    }: DateSingleInputProps,\n    ref: Ref<HTMLInputElement>\n  ) => {\n    const datepickerRef = useRef<DatepickerElement>(null);\n    const datepickerWrapperRef = useRef<HTMLDivElement>(null);\n\n    const [date, setDate] = useState<InputDate>(\n      value ? new Date(value) : dateProp\n    );\n    const [showDatepicker, setShowDatepicker] = useState(showDatepickerProp);\n\n    useEffect(() => {\n      onChange(date);\n    }, [date, onChange]);\n\n    useEffect(() => {\n      onFocusChange(showDatepicker);\n    }, [onFocusChange, showDatepicker]);\n\n    useEffect(() => {\n      if (typeof window !== \"undefined\") {\n        window.addEventListener(\"click\", onClickOutsideHandler);\n      }\n      return () => {\n        window.removeEventListener(\"click\", onClickOutsideHandler);\n      };\n    });\n\n    function handleOnFocusChange(show: boolean) {\n      setShowDatepicker(show);\n    }\n\n    function onClickOutsideHandler(event: Event) {\n      if (\n        showDatepicker &&\n        datepickerWrapperRef &&\n        datepickerWrapperRef.current &&\n        // @ts-ignore\n        !datepickerWrapperRef.current.contains(event.target)\n      ) {\n        handleOnFocusChange(false);\n      }\n    }\n\n    function handleDatepickerClose() {\n      handleOnFocusChange(false);\n      onClose();\n    }\n\n    function handleOnDatesChange(data: OnDatesChangeProps) {\n      handleOnFocusChange(data.focusedInput !== null);\n      setDate(data.startDate);\n    }\n\n    function handleInputChange(date: Date) {\n      if (\n        datepickerRef &&\n        datepickerRef.current &&\n        datepickerRef.current.onDateSelect\n      ) {\n        datepickerRef.current.onDateSelect(date);\n      }\n    }\n\n    return (\n      <StylesProvider\n        styles={styles}\n        overwriteDefaultStyles={overwriteDefaultStyles}\n      >\n        <Box position=\"relative\" ref={datepickerWrapperRef}>\n          <Input\n            ref={ref}\n            id={id}\n            name={name}\n            aria-label={phrases.dateAriaLabel}\n            value={getInputValue(date, displayFormat, \"\")}\n            placeholder={placeholder || phrases.datePlaceholder}\n            dateFormat={displayFormat}\n            showCalendarIcon={showCalendarIcon}\n            isActive={showDatepicker}\n            onChange={handleInputChange}\n            onClick={() => {\n              handleOnFocusChange(true);\n              onClick();\n            }}\n            disableAccessibility={false}\n            iconComponent={iconComponent}\n            allowEditableInputs={allowEditableInputs}\n          />\n\n          <Box\n            position=\"absolute\"\n            top={placement === \"bottom\" ? \"45px\" : undefined}\n            bottom={placement === \"top\" ? \"45px\" : undefined}\n          >\n            {showDatepicker && (\n              <Datepicker\n                changeActiveMonthOnSelect={changeActiveMonthOnSelect}\n                dayLabelFormat={dayLabelFormat}\n                displayFormat={displayFormat}\n                endDate={date}\n                exactMinBookingDays\n                firstDayOfWeek={firstDayOfWeek}\n                focusedInput={showDatepicker ? START_DATE : null}\n                initialVisibleMonth={initialVisibleMonth}\n                isDateBlocked={isDateBlocked}\n                maxBookingDate={maxBookingDate}\n                minBookingDate={minBookingDate}\n                minBookingDays={1}\n                monthLabelFormat={monthLabelFormat}\n                numberOfMonths={numberOfMonths}\n                onClose={handleDatepickerClose}\n                onDatesChange={handleOnDatesChange}\n                onDayRender={onDayRender}\n                phrases={phrases}\n                ref={datepickerRef}\n                showClose={showClose}\n                showResetDates={showResetDate}\n                showSelectedDates={false}\n                startDate={date}\n                unavailableDates={unavailableDates}\n                vertical={vertical}\n                weekdayLabelFormat={weekdayLabelFormat}\n              />\n            )}\n          </Box>\n        </Box>\n      </StylesProvider>\n    );\n  }\n);\n","import {\n  Box,\n  Text,\n  Stack,\n  Heading,\n  useColorModeValue,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport moment from \"moment\";\nimport Dropdown from \"../types/dropdown\";\n\ninterface Props {\n  history: any;\n  dropdown: Dropdown;\n}\n\nexport default function DropdownCard(props: Props) {\n  return (\n    <Box\n      key={props.dropdown.id}\n      onClick={() => {\n        props.history.push(`/dropdowns/edit/${props.dropdown.id}`);\n      }}\n      cursor={\"pointer\"}\n      _hover={{ boxShadow: \"2xl\" }}\n      w={\"350px\"}\n      h={\"360px\"}\n      bg={useColorModeValue(\"white\", \"#21252A\")}\n      boxShadow={\"xl\"}\n      rounded={\"md\"}\n      p={10}\n      transition={\"box-shadow 0.3s ease-in-out\"}\n      overflow={\"hidden\"}\n    >\n      <Stack spacing={8}>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.title}\n        >\n          <Heading\n            h={\"28px\"}\n            color={useColorModeValue(\"gray.700\", \"#c0c6d1\")}\n            fontSize={\"2xl\"}\n            fontFamily={\"body\"}\n            whiteSpace=\"nowrap\"\n            textOverflow=\"ellipsis\"\n            overflow=\"hidden\"\n          >\n            {props.dropdown.title}\n          </Heading>\n        </Tooltip>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={props.dropdown.description}\n        >\n          <Text overflow=\"hidden\" h=\"145px\" color={\"gray.500\"}>\n            {props.dropdown.description}\n          </Text>\n        </Tooltip>\n      </Stack>\n\n      <Stack\n        mt={\"45px\"}\n        direction={\"column\"}\n        textAlign=\"end\"\n        spacing={0}\n        fontSize={\"sm\"}\n        fontWeight={500}\n        color={\"gray.500\"}\n      >\n        <Text>\n          Total Records:{\" \"}\n          {props.dropdown.values !== null ? props.dropdown.values.length : 0}\n        </Text>\n        <Tooltip\n          bg={useColorModeValue(\"white\", \"#373c45\")}\n          color={useColorModeValue(\"gray.600\", \"#c0c6d1\")}\n          p={4}\n          hasArrow\n          label={moment(props.dropdown.created).format(\"DD.MM.YYYY HH:mm\")}\n        >\n          <Text>\n            Last Sync:{\" \"}\n            {props.dropdown.type === \"json\"\n              ? \"manual\"\n              : moment(props.dropdown.lastSync).fromNow()}\n          </Text>\n        </Tooltip>\n      </Stack>\n    </Box>\n  );\n}\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Box,\n  Button,\n  Center,\n  SimpleGrid,\n  Tag,\n  TagLabel,\n  TagLeftIcon,\n  Wrap,\n  WrapItem,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { RestAPI } from \"../../api/rest\";\nimport DropdownCard from \"../../components/DropdownCard\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\n\ninterface Props {\n  history: any;\n  isAdmin: boolean;\n}\n\nexport function Explorer(props: Props) {\n  const [dropdowns, setDropdowns] = useState<Dropdown[]>([]);\n\n  useEffect(() => {\n    RestAPI.getDropdowns().then((response) => setDropdowns(response.data));\n  }, []);\n\n  return (\n    <div>\n      <Wrap justify=\"center\" spacing={{ base: \"40px\", lg: \"3em\" }}>\n        {(dropdowns !== null ? dropdowns : []).map((dropdown) => {\n          return (\n            <WrapItem>\n              <DropdownCard history={props.history} dropdown={dropdown} />\n            </WrapItem>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n}\n\nexport default Explorer;\n","import { useEffect, useState } from \"react\";\nimport { Switch, Route, useHistory, Redirect } from \"react-router-dom\";\n\nimport { MsalAuthenticationTemplate, MsalProvider } from \"@azure/msal-react\";\nimport { InteractionType, IPublicClientApplication } from \"@azure/msal-browser\";\nimport { CustomNavigationClient } from \"./utils/NavigationClient\";\nimport Layout from \"./components/Layout\";\n\nimport ProjectExplorer from \"./pages/Projects/Explorer\";\nimport ProjectEditor from \"./pages/Projects/Editor\";\nimport ProjectViewer from \"./pages/Projects/Viewer\";\n\nimport DraftExplorer from \"./pages/Drafts/Explorer\";\n\nimport SubmissionViewer from \"./pages/Submissions/Viewer\";\n\nimport SubmissionsTable from \"./pages/Submissions/Table\";\n\nimport DropdownExplorer from \"./pages/Dropdowns/Explorer\";\nimport DropdownEditor from \"./pages/Dropdowns/Editor\";\nimport { RestAPI } from \"./api/rest\";\nimport { ToastContainer, Slide } from \"react-toastify\";\nimport { loginRequest } from \"./authConfig\";\n\ntype AppProps = {\n  pca: IPublicClientApplication;\n};\n\nfunction App({ pca }: AppProps) {\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  const [isAdmin, setAdminRole] = useState(false);\n  pca.setNavigationClient(navigationClient);\n\n  useEffect(() => {\n    RestAPI.getRoles().then((response) =>\n      setAdminRole(response.data.includes(\"administrator\"))\n    );\n  }, []);\n\n  return (\n    <MsalProvider instance={pca}>\n      <MsalAuthenticationTemplate\n        interactionType={InteractionType.Redirect}\n        authenticationRequest={loginRequest}\n      >\n        {\" \"}\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={5000}\n          hideProgressBar={true}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          closeButton={false}\n          transition={Slide}\n        />\n        <Switch>\n          <Layout>\n            {/* <Route exact path=\"/\" component={Dashboard} /> */}\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <ProjectExplorer isAdmin={isAdmin} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/explorer\"\n              render={(props) => (\n                <ProjectExplorer isAdmin={isAdmin} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/projects\"\n              render={(props) => (\n                <ProjectExplorer isAdmin={isAdmin} {...props} />\n              )}\n            />\n            <Route\n              path=\"/projects/create\"\n              render={(props) => <ProjectEditor create={true} {...props} />}\n            />\n            <Route\n              path=\"/projects/edit/:id\"\n              render={(props) => <ProjectEditor create={false} {...props} />}\n            />\n            <Route\n              path=\"/projects/view/:id\"\n              render={(props) => (\n                <ProjectViewer isAdmin={isAdmin} create={false} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/drafts\"\n              render={(props) => <DraftExplorer isAdmin={isAdmin} {...props} />}\n            />\n            <Route\n              path=\"/submissions/view/:id\"\n              render={(props) => (\n                <SubmissionViewer isAdmin={isAdmin} create={false} {...props} />\n              )}\n            />\n            <Route\n              path=\"/drafts/view/:id\"\n              render={(props) => (\n                <SubmissionViewer\n                  isDraft={true}\n                  isAdmin={isAdmin}\n                  create={true}\n                  {...props}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/submissions\"\n              render={(props) => <SubmissionsTable {...props} />}\n            />\n            <Route\n              exact\n              path=\"/dropdowns\"\n              render={(props) => (\n                <DropdownExplorer isAdmin={isAdmin} {...props} />\n              )}\n            />\n            <Route\n              path=\"/dropdowns/create\"\n              render={(props) => <DropdownEditor create={true} {...props} />}\n            />\n            <Route\n              path=\"/dropdowns/edit/:id\"\n              render={(props) => <DropdownEditor create={false} {...props} />}\n            />\n          </Layout>\n        </Switch>\n      </MsalAuthenticationTemplate>\n    </MsalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport {\n  ChakraProvider,\n  ColorModeProvider,\n  extendTheme,\n} from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport \"focus-visible/dist/focus-visible\";\nimport { Global, css } from \"@emotion/react\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"rsuite/dist/rsuite.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\n\n// MSAL imports\nimport {\n  PublicClientApplication,\n  EventType,\n  EventMessage,\n  AuthenticationResult,\n  InteractionType,\n} from \"@azure/msal-browser\";\nimport {\n  AuthenticatedTemplate,\n  MsalAuthenticationTemplate,\n  UnauthenticatedTemplate,\n} from \"@azure/msal-react\";\nimport { msalConfig, loginRequest } from \"./authConfig\";\n\nconst GlobalStyles = css`\n  /*\n    This will hide the focus indicator if the element receives focus    via the mouse,\n    but it will still show up on keyboard focus.\n  */\n  .js-focus-visible :focus:not([data-focus-visible-added]) {\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\nmsalInstance.addEventCallback((event: EventMessage) => {\n  if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n    const payload = event.payload as AuthenticationResult;\n    const account = payload.account;\n    msalInstance.setActiveAccount(account);\n  }\n});\n\naxios.interceptors.request.use(async (config: any) => {\n  const account = msalInstance.getActiveAccount();\n  if (account) {\n    const response = await msalInstance.acquireTokenSilent({\n      ...loginRequest,\n      account: account,\n    });\n    config.headers.Authorization = `Bearer ${response.idToken}`;\n  }\n  return config;\n});\n\nReactDOM.render(\n  <ChakraProvider\n    theme={extendTheme({\n      styles: {\n        global: (props: any) => ({\n          body: {\n            bg: mode(\"#f7fafc\", \"#282C34\")(props),\n            color: mode(\"gray.800\", \"#ABB2BF\")(props),\n          },\n        }),\n      },\n      config: {\n        initialColorMode: \"light\",\n      },\n    })}\n  >\n    <Global styles={GlobalStyles} />\n    <Router>\n      <App pca={msalInstance} />\n    </Router>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n","import axios, { AxiosResponse } from \"axios\";\nimport Bookmark from \"../../types/bookmark\";\nimport Dropdown from \"../../types/dropdown\";\nimport Project from \"../../types/project\";\nimport { Submission, SubmissionWithChildren } from \"../../types/submission\";\nimport { Template } from \"../../types/template\";\n\nexport class API {\n  public baseUrl =\n    process.env.NODE_ENV === \"production\"\n      ? \"/api\"\n      : \"http://localhost:7000/api\";\n  public usersUrl = `${this.baseUrl}/users/`;\n  public projectsUrl = `${this.baseUrl}/projects/`;\n  public bookmarksUrl = `${this.baseUrl}/bookmarks/`;\n  public submissionsUrl = `${this.baseUrl}/submissions/`;\n  public dropdownsUrl = `${this.baseUrl}/dropdowns/`;\n  public templatesUrl = `${this.baseUrl}/templates/`;\n  public draftsUrl = `${this.baseUrl}/drafts/`;\n  public viewsUrl = `${this.baseUrl}/views/`;\n\n  getRoles(): Promise<AxiosResponse<string[]>> {\n    return axios.get(`${this.usersUrl}roles`);\n  }\n  getProjects(): Promise<AxiosResponse<Project[]>> {\n    return axios.get<Project[]>(this.projectsUrl);\n  }\n  getProject(id: string): Promise<AxiosResponse<Project>> {\n    return axios.get<Project>(`${this.projectsUrl}${id}`);\n  }\n  createProject(project: Project): Promise<AxiosResponse<Project>> {\n    return axios.post<Project>(`${this.projectsUrl}`, JSON.stringify(project));\n  }\n  updateProject(project: Project): Promise<AxiosResponse> {\n    return axios.put<Project>(\n      `${this.projectsUrl}${project.id}`,\n      JSON.stringify(project)\n    );\n  }\n  deleteProject(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.projectsUrl}${id}`);\n  }\n\n  getBookmarks(): Promise<AxiosResponse<Bookmark[]>> {\n    return axios.get<Bookmark[]>(this.bookmarksUrl);\n  }\n  createBookmark(bookmark: Bookmark): Promise<AxiosResponse<Bookmark>> {\n    return axios.post<Bookmark>(this.bookmarksUrl, JSON.stringify(bookmark));\n  }\n  deleteBookmark(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.bookmarksUrl}${id}`);\n  }\n\n  getSubmissions(project?: string): Promise<AxiosResponse<Submission[]>> {\n    const params = new URLSearchParams([]);\n    if (project) {\n      params.set(\"project\", project);\n    }\n    return axios.get<Submission[]>(this.submissionsUrl, { params });\n  }\n  getSubmissionWithChildren(\n    id: string\n  ): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.get<SubmissionWithChildren>(`${this.submissionsUrl}${id}`);\n  }\n  createSubmission(submission: Submission): Promise<AxiosResponse<Submission>> {\n    return axios.post<Submission>(\n      `${this.submissionsUrl}`,\n      JSON.stringify(submission)\n    );\n  }\n  createSubmissionWithChildren(\n    submission: SubmissionWithChildren\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}children`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmission(submission: Submission): Promise<AxiosResponse> {\n    return axios.put<Submission>(\n      `${this.submissionsUrl}${submission.id}`,\n      JSON.stringify(submission)\n    );\n  }\n  updateSubmissionPartial(\n    submission: string,\n    path: string,\n    value: any\n  ): Promise<AxiosResponse> {\n    return axios.post(\n      `${this.submissionsUrl}partial`,\n      JSON.stringify({\n        submission,\n        path,\n        value,\n      })\n    );\n  }\n  callSapSubmission(submission: string): Promise<AxiosResponse> {\n    return axios.get(`${this.submissionsUrl}${submission}/sap`);\n  }\n  deleteSubmission(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.submissionsUrl}${id}`);\n  }\n\n  getDropdowns(): Promise<AxiosResponse<Dropdown[]>> {\n    return axios.get<Dropdown[]>(this.dropdownsUrl);\n  }\n  getDropdown(id: string): Promise<AxiosResponse<Dropdown>> {\n    return axios.get<Dropdown>(`${this.dropdownsUrl}${id}`);\n  }\n  getDropdownValues(id: string): Promise<AxiosResponse<any[]>> {\n    return axios.get<any[]>(`${this.dropdownsUrl}${id}/values`);\n  }\n  syncDropdown(id: string): Promise<AxiosResponse> {\n    return axios.get(`${this.dropdownsUrl}sync/${id}`);\n  }\n  createDropdown(dropdown: Dropdown): Promise<AxiosResponse<Dropdown>> {\n    return axios.post<Dropdown>(\n      `${this.dropdownsUrl}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  updateDropdown(dropdown: Dropdown): Promise<AxiosResponse> {\n    return axios.put<Dropdown>(\n      `${this.dropdownsUrl}${dropdown.id}`,\n      JSON.stringify(dropdown)\n    );\n  }\n  deleteDropdown(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.dropdownsUrl}${id}`);\n  }\n\n  getVendorTableDefaultConfig(): Promise<AxiosResponse<any>> {\n    return axios.get<any>(`${this.submissionsUrl}vendorTable`);\n  }\n\n  getTemplates(): Promise<AxiosResponse<Template[]>> {\n    return axios.get<Template[]>(this.templatesUrl);\n  }\n  updateTemplate(template: Template): Promise<AxiosResponse> {\n    return axios.put<Template>(\n      `${this.templatesUrl}${template.name}`,\n      JSON.stringify(template)\n    );\n  }\n\n  getDrafts(): Promise<AxiosResponse<Submission[]>> {\n    return axios.get<Submission[]>(this.draftsUrl);\n  }\n  getDraft(id: string): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.get<SubmissionWithChildren>(`${this.draftsUrl}${id}`);\n  }\n  createDraft(\n    draft: SubmissionWithChildren\n  ): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.post<SubmissionWithChildren>(\n      `${this.draftsUrl}`,\n      JSON.stringify(draft)\n    );\n  }\n  updateDraft(draft: SubmissionWithChildren): Promise<AxiosResponse> {\n    return axios.put<SubmissionWithChildren>(\n      `${this.draftsUrl}${draft.submission.id}`,\n      JSON.stringify(draft)\n    );\n  }\n  deleteDraft(id: string): Promise<AxiosResponse> {\n    return axios.delete(`${this.draftsUrl}${id}`);\n  }\n\n  getView(id: string): Promise<AxiosResponse<SubmissionWithChildren>> {\n    return axios.get<SubmissionWithChildren>(`${this.viewsUrl}${id}`);\n  }\n\n  updateVendorTableDefaultConfig(\n    displayedColumns: string[],\n    columnsWidth: any\n  ): Promise<AxiosResponse> {\n    return axios.put<any>(\n      `${this.submissionsUrl}vendorTable`,\n      JSON.stringify({\n        displayedColumns: displayedColumns,\n        columnsWidth: columnsWidth,\n      })\n    );\n  }\n\n  getEntityIdFromUrl(url: string): number {\n    const urlSegments = url.split(\"/\").filter((x) => x !== \"\");\n    return parseInt(urlSegments[urlSegments.length - 1]);\n  }\n}\n\nexport const RestAPI = new API();\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {\n  Text,\n  Box,\n  Button,\n  HStack,\n  Input,\n  Stack,\n  Textarea,\n  CloseButton,\n  IconButton,\n  useColorModeValue,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Center,\n} from \"@chakra-ui/react\";\nimport Select from \"react-select\";\nimport CreatableSelect from \"react-select/creatable\";\nimport { useEffect, useState } from \"react\";\nimport Project from \"../../types/project\";\nimport { API, RestAPI } from \"../../api/rest\";\nimport { FiTrash2, VscDebugStart } from \"react-icons/all\";\nimport { toast } from \"react-toastify\";\nimport Toast from \"../../components/Toast\";\n\nimport AceEditor from \"react-ace\";\n\nimport \"ace-builds/src-noconflict/mode-javascript\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/snippets/javascript\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-min-noconflict/ext-searchbox\";\nimport \"ace-builds/src-min-noconflict/ext-language_tools\";\nimport Dropdown from \"../../types/dropdown\";\n\ninterface Props {\n  history: any;\n  create: boolean;\n  match: any;\n}\n\nexport function Editor(props: Props) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [debug, setDebug] = useState(\"\");\n  const [rawValues, setRawValues] = useState(\"\");\n  const [dropdown, setDropdown] = useState<Dropdown>({\n    title: \"\",\n    created: new Date(),\n    description: \"\",\n    type: \"js\",\n    url: \"\",\n    processor: \"\",\n    values: [] as any[],\n    syncInterval: 60,\n    lastSync: new Date(),\n    private: false,\n  });\n  useEffect(() => {\n    if (!props.create && props.match.params.id) {\n      RestAPI.getDropdown(props.match.params.id).then((response) => {\n        setDropdown(response.data);\n        setRawValues(JSON.stringify(response.data.values, null, 2));\n      });\n    }\n  }, []);\n\n  return (\n    <Box mx={{ base: 0, xl: \"5em\" }}>\n      <HStack mb={5} w=\"100%\">\n        <Box w=\"70%\"></Box>\n\n        <Box w=\"30%\">\n          <CloseButton\n            onClick={() => {\n              props.history.goBack();\n            }}\n            float=\"right\"\n          />\n          <IconButton\n            display={!props.create ? \"grid\" : \"none\"}\n            onClick={() => {\n              // FIXME: delete project\n            }}\n            mr={2}\n            border=\"none\"\n            variant=\"outline\"\n            size=\"sm\"\n            aria-label=\"settings\"\n            float=\"right\"\n            color={\"#ed636e\"}\n            icon={<FiTrash2 />}\n          />\n        </Box>\n      </HStack>\n      <Box color={useColorModeValue(\"gray.600\", \"#ABB2BF\")} mb={10}>\n        <Stack spacing={4} mb={4} direction={{ base: \"column\", xl: \"row\" }}>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Title</Text>\n            <Input\n              value={dropdown.title}\n              onChange={(event) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  title: event.target.value,\n                }));\n              }}\n              bg={useColorModeValue(\"white\", \"#2C313C\")}\n              color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Type</Text>\n            <Select\n              styles={{\n                menu: (provided) => ({\n                  ...provided,\n                  zIndex: 1000000,\n                }),\n                singleValue: (provided) => ({\n                  ...provided,\n                  color: \"#718196\",\n                }),\n                control: (base, state) => ({\n                  ...base,\n                  minHeight: 40,\n                  border: \"1px solid #E2E8F0\",\n                  transition: \"0.3s\",\n                  \"&:hover\": {\n                    border: \"1px solid #CBD5E0\",\n                  },\n                }),\n              }}\n              theme={(theme) => ({\n                ...theme,\n                borderRadius: 6,\n                colors: {\n                  ...theme.colors,\n                  primary: \"#3082CE\",\n                },\n              })}\n              placeholder=\"\"\n              onChange={(value: any) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  type: value.value,\n                }));\n              }}\n              value={{ label: dropdown.type, value: dropdown.type }}\n              classNamePrefix=\"select\"\n              isClearable={false}\n              name=\"dropdownType\"\n              options={[\n                { label: \"js\", value: \"js\" },\n                { label: \"json\", value: \"json\" },\n              ]}\n            />\n          </Box>\n          <Box w=\"100%\">\n            <Text mb=\"8px\">Sync Interval (minutes)</Text>\n            <NumberInput\n              value={dropdown.syncInterval}\n              onChange={(_, value) => {\n                setDropdown((prev) => ({\n                  ...prev,\n                  syncInterval: value,\n                }));\n              }}\n              min={5}\n            >\n              <NumberInputField />\n              <NumberInputStepper>\n                <NumberIncrementStepper />\n                <NumberDecrementStepper />\n              </NumberInputStepper>\n            </NumberInput>\n          </Box>\n        </Stack>\n        <Box w=\"100%\">\n          <Text mb=\"8px\">Description</Text>\n          <Textarea\n            bg={useColorModeValue(\"white\", \"#2C313C\")}\n            color={useColorModeValue(\"gray.800\", \"#ABB2BF\")}\n            rows={5}\n            value={dropdown.description}\n            onChange={(event) => {\n              setDropdown((prev) => ({\n                ...prev,\n                description: event.target.value,\n              }));\n            }}\n          ></Textarea>\n        </Box>\n      </Box>\n      <Box mb={5} display={dropdown.type === \"json\" ? \"flex\" : \"none\"} w=\"100%\">\n        <AceEditor\n          width=\"100%\"\n          height=\"900px\"\n          style={{\n            borderRadius: \"5px\",\n          }}\n          mode=\"json\"\n          theme=\"tomorrow\"\n          name=\"json-editor\"\n          onChange={(value) => {\n            setRawValues(value);\n          }}\n          fontSize={14}\n          showPrintMargin={false}\n          showGutter={true}\n          highlightActiveLine={true}\n          value={rawValues}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            showLineNumbers: true,\n            tabSize: 2,\n          }}\n        />\n      </Box>\n      <Stack\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        spacing={4}\n        mb={4}\n        direction={{ base: \"column\", xl: \"row\" }}\n      >\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"javascript\"\n            theme=\"tomorrow\"\n            name=\"js-editor\"\n            onChange={(value) => {\n              setDropdown((prev) => ({\n                ...prev,\n                processor: value,\n              }));\n            }}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={true}\n            highlightActiveLine={true}\n            value={dropdown.processor}\n            setOptions={{\n              enableBasicAutocompletion: true,\n              enableLiveAutocompletion: true,\n              enableSnippets: true,\n              showLineNumbers: true,\n              tabSize: 2,\n            }}\n          />\n        </Box>\n        <Box w=\"100%\">\n          <AceEditor\n            width=\"100%\"\n            height=\"900px\"\n            style={{\n              borderRadius: \"5px\",\n            }}\n            mode=\"json\"\n            theme=\"tomorrow\"\n            name=\"console\"\n            fontSize={12}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={debug}\n            readOnly={true}\n            setOptions={{\n              tabSize: 2,\n            }}\n          />\n        </Box>\n      </Stack>\n      <Center\n        display={dropdown.type === \"js\" ? \"flex\" : \"none\"}\n        mt={\"10px\"}\n        mb=\"60px\"\n        h=\"60px\"\n        w=\"100%\"\n      >\n        <IconButton\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          aria-label=\"Debug\"\n          icon={<VscDebugStart />}\n          onClick={async () => {\n            setDebug(\"\");\n            var result = eval(dropdown.processor);\n            if (typeof result === \"object\") {\n              setDebug(JSON.stringify(result, null, 4));\n            } else {\n              setDebug(String(result));\n            }\n          }}\n        />\n      </Center>\n\n      <HStack mb={\"40px\"} spacing={4} float=\"right\">\n        <Button\n          variant=\"outline\"\n          color={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          borderColor={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          onClick={() => {\n            props.history.goBack();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          color={\"white\"}\n          bg={useColorModeValue(\"blue.400\", \"#4D97E2\")}\n          _hover={{\n            bg: useColorModeValue(\"blue.300\", \"#377bbf\"),\n          }}\n          isLoading={isSubmitting}\n          onClick={async () => {\n            if (dropdown.type === \"json\") {\n              dropdown.values = JSON.parse(rawValues);\n            }\n            setIsSubmitting(true);\n            if (props.create) {\n              var response = await RestAPI.createDropdown(dropdown);\n              if (response.data.id) {\n                props.history.push(`/dropdowns/edit/${response.data.id}`);\n              }\n            } else {\n              await RestAPI.updateDropdown(dropdown)\n                .then(() => {\n                  toast(\n                    <Toast\n                      title={\"Success\"}\n                      message={\n                        <div>Dropdown has been successfully updated</div>\n                      }\n                      type={\"success\"}\n                    />\n                  );\n                })\n                .catch(() => {\n                  toast(\n                    <Toast\n                      title={\"Error\"}\n                      message={\n                        <div>\n                          Failed to update dropdown\n                          <br />\n                          Try again after few seconds\n                        </div>\n                      }\n                      type={\"error\"}\n                    />\n                  );\n                });\n              setIsSubmitting(false);\n            }\n          }}\n        >\n          {props.create ? \"Create\" : \"Save\"}\n        </Button>\n      </HStack>\n    </Box>\n  );\n}\n\nexport default Editor;\n","import { Box, chakra, Flex, Icon, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport {\n  AiFillInfoCircle,\n  BsLightningFill,\n  IoMdCheckmarkCircle,\n  MdError,\n} from \"react-icons/all\";\n\nexport declare type ToastType = \"info\" | \"success\" | \"warning\" | \"error\";\n\ninterface Props {\n  title: string;\n  message: any;\n  type: ToastType;\n}\n\nconst Toast: React.FunctionComponent<Props> = (props) => {\n  return (\n    <Flex\n      w=\"350px\"\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      shadow=\"md\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n    >\n      <Flex\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        w={12}\n        bg={\n          props.type === \"success\"\n            ? \"green.500\"\n            : props.type === \"error\"\n            ? \"red.500\"\n            : props.type === \"warning\"\n            ? \"yellow.500\"\n            : \"blue.500\"\n        }\n      >\n        <Icon\n          as={\n            props.type === \"success\"\n              ? IoMdCheckmarkCircle\n              : props.type === \"error\"\n              ? BsLightningFill\n              : props.type === \"warning\"\n              ? MdError\n              : AiFillInfoCircle\n          }\n          color=\"white\"\n          boxSize={6}\n        />\n      </Flex>\n\n      <Box mx={-3} py={2} px={4}>\n        <Box mx={3}>\n          <chakra.span\n            color={\n              props.type === \"success\"\n                ? \"green.500\"\n                : props.type === \"error\"\n                ? \"red.500\"\n                : props.type === \"warning\"\n                ? \"yellow.500\"\n                : \"blue.500\"\n            }\n            fontWeight=\"bold\"\n            fontSize=\"md\"\n          >\n            {props.title}\n          </chakra.span>\n          <chakra.div color={\"gray.600\"} fontSize=\"sm\">\n            {props.message}\n          </chakra.div>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Toast;\n"],"sourceRoot":""}